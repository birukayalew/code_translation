warning: package `uucore` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata
  = note: `-W clippy::cargo-common-metadata` implied by `-W clippy::cargo`
  = help: to override `-W clippy::cargo` add `#[allow(clippy::cargo_common_metadata)]`

warning: package `uucore_procs` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uucore_procs` is missing `package.categories` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uuhelp_parser` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uuhelp_parser` is missing `package.keywords` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uuhelp_parser` is missing `package.categories` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uu_stdbuf_libstdbuf` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uutests` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: this function could have a `#[must_use]` attribute
  --> src/uuhelp_parser/src/lib.rs:31:1
   |
31 | pub fn parse_about(content: &str) -> String {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parse_about(content: &str) -> String`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
   = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: this function could have a `#[must_use]` attribute
  --> src/uuhelp_parser/src/lib.rs:50:1
   |
50 | pub fn parse_usage(content: &str) -> String {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parse_usage(content: &str) -> String`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
  --> src/uuhelp_parser/src/lib.rs:73:1
   |
73 | pub fn parse_section(section: &str, content: &str) -> Option<String> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parse_section(section: &str, content: &str) -> Option<String>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: `uuhelp_parser` (lib) generated 11 warnings (run `cargo clippy --fix --lib -p uuhelp_parser` to apply 3 suggestions)
warning: docs for function which may panic missing `# Panics` section
  --> src/uucore_procs/src/lib.rs:70:1
   |
70 | pub fn help_about(input: TokenStream) -> TokenStream {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uucore_procs/src/lib.rs:74:5
   |
74 | /     assert!(
75 | |         !text.is_empty(),
76 | |         "About text not found! Make sure the markdown format is correct"
77 | |     );
   | |_____^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: docs for function which may panic missing `# Panics` section
  --> src/uucore_procs/src/lib.rs:88:1
   |
88 | pub fn help_usage(input: TokenStream) -> TokenStream {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uucore_procs/src/lib.rs:92:5
   |
92 | /     assert!(
93 | |         !text.is_empty(),
94 | |         "Usage text not found! Make sure the markdown format is correct"
95 | |     );
   | |_____^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore_procs/src/lib.rs:124:1
    |
124 | pub fn help_section(input: TokenStream) -> TokenStream {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore_procs/src/lib.rs:133:9
    |
133 | /         panic!(
134 | |             "The section '{section}' could not be found in the help file. Maybe it is spelled wrong?"
135 | |         )
    | |_________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore_procs/src/lib.rs:129:5
    |
129 | /     if let Some(text) = uuhelp_parser::parse_section(&section, &read_help(&filename)) {
130 | |         let rendered = render_markdown(&text);
131 | |         TokenTree::Literal(Literal::string(&rendered)).into()
132 | |     } else {
...   |
136 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
129 ~     uuhelp_parser::parse_section(&section, &read_help(&filename)).map_or_else(|| panic!(
130 +             "The section '{section}' could not be found in the help file. Maybe it is spelled wrong?"
131 +         ), |text| {
132 +         let rendered = render_markdown(&text);
133 +         TokenTree::Literal(Literal::string(&rendered)).into()
134 +     })
    |

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore_procs/src/lib.rs:143:1
    |
143 | fn get_argument(input: &[TokenTree], index: usize, name: &str) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore_procs/src/lib.rs:147:20
    |
147 |         Some(_) => panic!("Argument {index} should be a string literal."),
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore_procs/src/lib.rs:162:1
    |
162 | fn read_help(filename: &str) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore_procs/src/lib.rs:165:34
    |
165 |     let mut path = PathBuf::from(std::env::var("CARGO_MANIFEST_DIR").unwrap());
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: `uucore_procs` (lib) generated 14 warnings (8 duplicates)
warning: multiple versions for dependency `thiserror`: 1.0.69, 2.0.12
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions
  = note: `-W clippy::multiple-crate-versions` implied by `-W clippy::cargo`
  = help: to override `-W clippy::cargo` add `#[allow(clippy::multiple_crate_versions)]`

warning: multiple versions for dependency `thiserror-impl`: 1.0.69, 2.0.12
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows-sys`: 0.48.0, 0.52.0, 0.59.0
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows-targets`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_aarch64_gnullvm`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_aarch64_msvc`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_i686_gnu`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_i686_msvc`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_x86_64_gnu`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_x86_64_gnullvm`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_x86_64_msvc`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: consider implementing `TryFrom` instead
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:82:1
    |
82  | / impl From<f64> for ExtendedBigDecimal {
83  | |     fn from(val: f64) -> Self {
84  | |         if val.is_nan() {
85  | |             if val.is_sign_negative() {
...   |
102 | | }
    | |_^
    |
    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail
note: potential failure(s)
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:99:44
    |
99  |             ExtendedBigDecimal::BigDecimal(BigDecimal::from_f64(val).unwrap())
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#fallible_impl_from
    = note: `-W clippy::fallible-impl-from` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::fallible_impl_from)]`

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:86:17
   |
86 |                 ExtendedBigDecimal::MinusNan
   |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self
   = note: `-W clippy::use-self` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::use_self)]`

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:88:17
   |
88 |                 ExtendedBigDecimal::Nan
   |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:92:17
   |
92 |                 ExtendedBigDecimal::MinusInfinity
   |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:94:17
   |
94 |                 ExtendedBigDecimal::Infinity
   |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:97:13
   |
97 |             ExtendedBigDecimal::MinusZero
   |             ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:99:13
   |
99 |             ExtendedBigDecimal::BigDecimal(BigDecimal::from_f64(val).unwrap())
   |             ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:105:5
    |
105 |     pub fn zero() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn zero() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:109:5
    |
109 |     pub fn one() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn one() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:113:5
    |
113 |     pub fn to_biguint(&self) -> Option<BigUint> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn to_biguint(&self) -> Option<BigUint>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:115:13
    |
115 |             ExtendedBigDecimal::BigDecimal(big_decimal) => {
    |             ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: casts from `u32` to `i64` can be expressed infallibly using `From`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:117:62
    |
117 |                 if bi.is_negative() || scale > 0 || scale < -(u32::MAX as i64) {
    |                                                              ^^^^^^^^^^^^^^^^^
    |
    = help: an `as` cast can become silently lossy if the types change in the future
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
    = note: `-W clippy::cast-lossless` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_lossless)]`
help: use `i64::from` instead
    |
117 -                 if bi.is_negative() || scale > 0 || scale < -(u32::MAX as i64) {
117 +                 if bi.is_negative() || scale > 0 || scale < -i64::from(u32::MAX) {
    |

warning: casting `i64` to `u32` may truncate the value
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:61
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                                                             ^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_truncation)]`
help: ... or use `try_from` and handle the error accordingly
    |
121 -                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
121 +                     .map(|bi| bi * BigUint::from(10u32).pow(u32::try_from(-scale)))
    |

warning: casting `i64` to `u32` may lose the sign of the value
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:61
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                                                             ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_sign_loss)]`

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:154:13
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
    = note: `-W clippy::match-same-arms` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_same_arms)]`
help: or try merging the arm patterns and removing the obsolete arm
    |
154 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
156 ~             (Self::Infinity, Self::Infinity) => Self::Infinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:154:13
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
154 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::Infinity) => Self::Infinity,
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
157 ~             (Self::Infinity, Self::MinusZero) => Self::Infinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:156:13
    |
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
156 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::Infinity) => Self::Infinity,
157 ~             (Self::Infinity, Self::MinusZero) => Self::Infinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:154:13
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
154 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::MinusZero) => Self::Infinity,
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
157 |             (Self::Infinity, Self::Infinity) => Self::Infinity,
158 ~             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:156:13
    |
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
156 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusZero) => Self::Infinity,
157 |             (Self::Infinity, Self::Infinity) => Self::Infinity,
158 ~             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:157:13
    |
157 |             (Self::Infinity, Self::Infinity) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
157 ~             (Self::Infinity, Self::Infinity) | (Self::Infinity, Self::MinusZero) => Self::Infinity,
158 ~             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:153:13
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
153 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
...
159 |             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
160 ~             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:153:13
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
153 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
...
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
161 ~             (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:160:13
    |
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
160 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
161 ~             (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:153:13
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
153 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
...
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
162 ~             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:160:13
    |
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
160 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
162 ~             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:161:13
    |
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
161 ~             (Self::MinusInfinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
162 ~             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:159:13
    |
159 |             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
159 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::Infinity) => Self::Nan,
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
162 |             (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
163 ~             (Self::Nan, _) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:159:13
    |
159 |             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
159 ~             (Self::Infinity, Self::MinusInfinity) | (Self::Nan, _) => Self::Nan,
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
...
163 |             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
164 ~             (_, Self::Nan) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:163:13
    |
163 |             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
163 ~             (Self::MinusInfinity, Self::Infinity) | (Self::Nan, _) => Self::Nan,
164 ~             (_, Self::Nan) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:165:13
    |
165 |             (_, Self::Nan) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
159 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
160 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
...
163 |             (Self::Nan, _) => Self::Nan,
164 ~             (_, Self::Nan) | (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:165:13
    |
165 |             (_, Self::Nan) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
163 ~             (Self::Nan, _) => Self::Nan,
164 ~             (_, Self::Nan) | (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:165:13
    |
165 |             (_, Self::Nan) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
164 -             (Self::Nan, _) => Self::Nan,
165 -             (_, Self::Nan) => Self::Nan,
164 +             (_, Self::Nan) | (Self::Nan, _) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:167:13
    |
167 |             (_, Self::MinusNan) => Self::MinusNan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
166 -             (Self::MinusNan, _) => Self::MinusNan,
167 -             (_, Self::MinusNan) => Self::MinusNan,
166 +             (_, Self::MinusNan) | (Self::MinusNan, _) => Self::MinusNan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::BigDecimal(_), Self::Infinity) => false,
178 ~             (Self::BigDecimal(_), Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::BigDecimal(_), Self::MinusZero) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
179 ~             (Self::Infinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::BigDecimal(_), Self::MinusZero) => false,
179 ~             (Self::Infinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::BigDecimal(_)) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
180 ~             (Self::Infinity, Self::Infinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::BigDecimal(_)) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
180 ~             (Self::Infinity, Self::Infinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::Infinity, Self::BigDecimal(_)) => false,
180 ~             (Self::Infinity, Self::Infinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::MinusZero) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
181 |             (Self::Infinity, Self::Infinity) => true,
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::MinusZero) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::Infinity, Self::MinusZero) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusZero) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::MinusInfinity) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
182 |             (Self::Infinity, Self::MinusZero) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::MinusInfinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
182 |             (Self::Infinity, Self::MinusZero) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::Infinity, Self::MinusInfinity) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusInfinity) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::Infinity, Self::MinusInfinity) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::Infinity) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::Infinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusInfinity, Self::Infinity) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::Infinity) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusInfinity, Self::Infinity) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::Infinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::Infinity) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusZero) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::MinusZero) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusInfinity, Self::MinusZero) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusZero) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusInfinity, Self::MinusZero) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusZero) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusZero) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusInfinity, Self::MinusZero) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:181:13
    |
181 |             (Self::Infinity, Self::Infinity) => true,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
181 ~             (Self::Infinity, Self::Infinity) | (Self::MinusInfinity, Self::MinusInfinity) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
...
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
187 ~             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusZero, Self::BigDecimal(_)) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusZero, Self::BigDecimal(_)) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusZero, Self::BigDecimal(_)) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusZero, Self::BigDecimal(_)) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusZero, Self::BigDecimal(_)) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::BigDecimal(_)) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusZero, Self::BigDecimal(_)) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusZero, Self::BigDecimal(_)) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusZero, Self::Infinity) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusZero, Self::Infinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusZero, Self::Infinity) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::Infinity) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusZero, Self::Infinity) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusZero, Self::Infinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::Infinity) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusZero, Self::Infinity) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusZero, Self::Infinity) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:13
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::BigDecimal(_)) | (Self::MinusZero, Self::Infinity) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:181:13
    |
181 |             (Self::Infinity, Self::Infinity) => true,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
181 ~             (Self::Infinity, Self::Infinity) | (Self::MinusZero, Self::MinusZero) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
...
189 |             (Self::MinusZero, Self::Infinity) => false,
190 ~             (Self::MinusZero, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:187:13
    |
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
187 ~             (Self::MinusInfinity, Self::MinusInfinity) | (Self::MinusZero, Self::MinusZero) => true,
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 |             (Self::MinusZero, Self::Infinity) => false,
190 ~             (Self::MinusZero, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusZero, Self::MinusInfinity) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusZero, Self::MinusInfinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusZero, Self::MinusInfinity) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::MinusInfinity) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusZero, Self::MinusInfinity) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusZero, Self::MinusInfinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::MinusInfinity) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusZero, Self::MinusInfinity) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusZero, Self::MinusInfinity) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:13
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::BigDecimal(_)) | (Self::MinusZero, Self::MinusInfinity) => false,
189 |             (Self::MinusZero, Self::Infinity) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:189:13
    |
189 |             (Self::MinusZero, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::Infinity) | (Self::MinusZero, Self::MinusInfinity) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Nan, _) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Nan, _) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::Nan, _) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Nan, _) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::Nan, _) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::Nan, _) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::Nan, _) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::Nan, _) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::Nan, _) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:13
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::BigDecimal(_)) | (Self::Nan, _) => false,
189 |             (Self::MinusZero, Self::Infinity) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:189:13
    |
189 |             (Self::MinusZero, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::Infinity) | (Self::Nan, _) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:191:13
    |
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
191 ~             (Self::MinusZero, Self::MinusInfinity) | (Self::Nan, _) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusNan, _) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusNan, _) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusNan, _) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusNan, _) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusNan, _) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusNan, _) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusNan, _) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusNan, _) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusNan, _) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:13
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::BigDecimal(_)) | (Self::MinusNan, _) => false,
189 |             (Self::MinusZero, Self::Infinity) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:189:13
    |
189 |             (Self::MinusZero, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::Infinity) | (Self::MinusNan, _) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:191:13
    |
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
191 ~             (Self::MinusZero, Self::MinusInfinity) | (Self::MinusNan, _) => false,
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:192:13
    |
192 |             (Self::Nan, _) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
192 ~             (Self::Nan, _) | (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::Infinity) => false,
178 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::MinusZero) => false,
179 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::BigDecimal(_), Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::Infinity, Self::BigDecimal(_)) => false,
180 |             (Self::Infinity, Self::Infinity) => true,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::BigDecimal(_), Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::Infinity) => true,
181 |             (Self::Infinity, Self::MinusZero) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::Infinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
183 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::Infinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
184 |             (Self::MinusInfinity, Self::Infinity) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
185 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
186 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
187 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::Infinity) => false,
189 |             (Self::MinusZero, Self::MinusZero) => true,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusZero, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::MinusZero) => true,
190 |             (Self::MinusZero, Self::MinusInfinity) => false,
191 |             (Self::Nan, _) => false,
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
191 ~             (Self::Nan, _) => false,
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusZero, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
192 ~             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
193 -             (Self::MinusNan, _) => false,
194 -             (_, Self::Nan) => false,
193 +             (_, Self::Nan) | (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::Infinity) => false,
178 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::MinusZero) => false,
179 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::BigDecimal(_), Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::Infinity, Self::BigDecimal(_)) => false,
180 |             (Self::Infinity, Self::Infinity) => true,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::BigDecimal(_), Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::Infinity) => true,
181 |             (Self::Infinity, Self::MinusZero) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::Infinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
183 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::Infinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
184 |             (Self::MinusInfinity, Self::Infinity) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
185 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
186 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
187 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::Infinity) => false,
189 |             (Self::MinusZero, Self::MinusZero) => true,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusZero, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::MinusZero) => true,
190 |             (Self::MinusZero, Self::MinusInfinity) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
191 ~             (Self::Nan, _) => false,
192 |             (Self::MinusNan, _) => false,
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusZero, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
193 ~             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
194 ~             (_, Self::Nan) | (_, Self::MinusNan) => false,
195 ~             }
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:13
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
204 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
207 ~             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:13
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
204 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
...
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
209 ~             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:207:13
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
207 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
209 ~             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:13
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
204 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
...
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
210 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:207:13
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
207 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
210 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:209:13
    |
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
209 ~             (Self::Infinity, Self::MinusZero) | (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
210 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:13
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
205 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
...
210 |             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
211 ~             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:13
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
205 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
...
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
212 ~             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:211:13
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
211 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
212 ~             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:13
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
205 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
...
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
213 ~             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:211:13
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
211 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
213 ~             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:212:13
    |
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
212 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
213 ~             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:208:13
    |
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
208 ~             (Self::Infinity, Self::Infinity) | (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
...
213 |             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
214 ~             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:13
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
205 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
...
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 ~             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:211:13
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
211 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
...
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 ~             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:212:13
    |
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
212 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
213 |             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
214 |             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 ~             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:213:13
    |
213 |             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
213 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
214 |             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 ~             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:208:13
    |
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
208 ~             (Self::Infinity, Self::Infinity) | (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
...
216 |             (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
217 ~             (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:214:13
    |
214 |             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
214 ~             (Self::MinusInfinity, Self::MinusInfinity) | (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 |             (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
217 ~             (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:13
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
204 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
...
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
218 ~             (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:207:13
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
207 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
...
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
218 ~             (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:209:13
    |
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
209 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
210 |             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
...
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
218 ~             (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:210:13
    |
210 |             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
210 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
...
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
218 ~             (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:219:13
    |
219 |             (Self::Nan, _) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
219 ~             (Self::Nan, _) | (Self::MinusNan, _) => None,
220 ~             (_, Self::Nan) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:221:13
    |
221 |             (_, Self::Nan) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
219 ~             (Self::MinusNan, _) => None,
220 ~             (_, Self::Nan) | (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:221:13
    |
221 |             (_, Self::Nan) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
220 -             (Self::MinusNan, _) => None,
221 -             (_, Self::Nan) => None,
220 +             (_, Self::Nan) | (Self::MinusNan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:222:13
    |
222 |             (_, Self::MinusNan) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
220 ~             (_, Self::Nan) => None,
221 ~             (_, Self::MinusNan) | (Self::MinusNan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:221:13
    |
221 |             (_, Self::Nan) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
221 ~             (_, Self::Nan) | (_, Self::MinusNan) => None,
222 ~             }
    |

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/features/fs.rs:55:5
   |
55 |     pub fn from_file(file: &impl AsFd) -> IOResult<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
   = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/features/fs.rs:71:5
   |
71 |     pub fn from_path(path: impl AsRef<Path>, dereference: bool) -> IOResult<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/fs.rs:98:5
    |
98  |     pub fn file_size(&self) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/fs.rs:101:13
    |
101 |             assert!(self.0.st_size >= 0, "File size is negative");
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: this method could have a `#[must_use]` attribute
  --> src/uucore/src/lib/features/fs.rs:98:5
   |
98 |     pub fn file_size(&self) -> u64 {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn file_size(&self) -> u64`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:115:5
    |
115 |     pub fn number_of_links(&self) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn number_of_links(&self) -> u64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/fs.rs:115:5
    |
115 | /     pub fn number_of_links(&self) -> u64 {
116 | |         #[cfg(all(
117 | |             unix,
118 | |             not(target_vendor = "apple"),
...   |
154 | |         return self.0.number_of_links();
155 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
    = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::missing_const_for_fn)]`
help: make the function `const`
    |
115 |     pub const fn number_of_links(&self) -> u64 {
    |         +++++

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:158:5
    |
158 |     pub fn inode(&self) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn inode(&self) -> u64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/fs.rs:158:5
    |
158 | /     pub fn inode(&self) -> u64 {
159 | |         #[cfg(all(
160 | |             not(any(target_os = "freebsd", target_os = "netbsd")),
161 | |             target_pointer_width = "64"
...   |
169 | |         return self.0.st_ino.into();
170 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
158 |     pub const fn inode(&self) -> u64 {
    |         +++++

warning: first doc comment paragraph is too long
   --> src/uucore/src/lib/features/fs.rs:231:1
    |
231 | / /// Normalize a path by removing relative information
232 | | /// For example, convert 'bar/../foo/bar.txt' => 'foo/bar.txt'
233 | | /// copied from `<https://github.com/rust-lang/cargo/blob/2e4cfc2b7d43328b207879228a2ca7d427d188bb/src/cargo/util/paths.rs#L65-L90>`
234 | | /// both projects are MIT `<https://github.com/rust-lang/cargo/blob/master/LICENSE-MIT>`
235 | | /// for std impl progress see rfc `<https://github.com/rust-lang/rfcs/issues/2208>`
236 | | /// replace this once that lands
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph
    = note: `-W clippy::too-long-first-doc-paragraph` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::too_long_first_doc_paragraph)]`

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:237:1
    |
237 | pub fn normalize_path(path: &Path) -> PathBuf {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn normalize_path(path: &Path) -> PathBuf`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/fs.rs:264:1
    |
264 | fn resolve_symlink<P: AsRef<Path>>(path: P) -> IOResult<Option<PathBuf>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/fs.rs:288:13
    |
288 |             Self::Normal(s) => s.as_os_str(),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
284 ~             Self::RootDir => Component::RootDir.as_os_str(),
285 |             Self::CurDir => Component::CurDir.as_os_str(),
286 |             Self::ParentDir => Component::ParentDir.as_os_str(),
287 ~             Self::Normal(s) | Self::Prefix(s) => s.as_os_str(),
    |

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/fs.rs:332:1
    |
332 | / pub fn canonicalize<P: AsRef<Path>>(
333 | |     original: P,
334 | |     miss_mode: MissingHandling,
335 | |     res_mode: ResolveMode,
336 | | ) -> IOResult<PathBuf> {
    | |______________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/fs.rs:385:25
    |
385 |                         FileInformation::from_path(result.parent().unwrap(), false).unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/fs.rs:332:1
    |
332 | / pub fn canonicalize<P: AsRef<Path>>(
333 | |     original: P,
334 | |     miss_mode: MissingHandling,
335 | |     res_mode: ResolveMode,
336 | | ) -> IOResult<PathBuf> {
    | |______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: redundant closure
   --> src/uucore/src/lib/features/fs.rs:355:70
    |
355 |     let mut parts: VecDeque<OwningComponent> = path.components().map(|part| part.into()).collect();
    |                                                                      ^^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::convert::Into::into`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:456:1
    |
456 | pub fn display_permissions(metadata: &fs::Metadata, display_file_type: bool) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn display_permissions(metadata: &fs::Metadata, display_file_type: bool) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/fs.rs:476:1
    |
476 | / fn get_file_display(mode: mode_t) -> char {
477 | |     match mode & S_IFMT {
478 | |         S_IFDIR => 'd',
479 | |         S_IFCHR => 'c',
...   |
488 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
476 | const fn get_file_display(mode: mode_t) -> char {
    | +++++

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:495:1
    |
495 | pub fn display_permissions_unix(mode: mode_t, display_file_type: bool) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn display_permissions_unix(mode: mode_t, display_file_type: bool) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/fs.rs:540:5
    |
540 | /// std::fs::create_dir("foo/."); fails in pure Rust
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
    = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
    |
540 - /// std::fs::create_dir("foo/."); fails in pure Rust
540 + /// `std::fs::create_dir("foo`/."); fails in pure Rust
    |

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:541:1
    |
541 | pub fn dir_strip_dot_for_creation(path: &Path) -> PathBuf {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn dir_strip_dot_for_creation(path: &Path) -> PathBuf`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:561:1
    |
561 | / pub fn infos_refer_to_same_file(
562 | |     info1: IOResult<FileInformation>,
563 | |     info2: IOResult<FileInformation>,
564 | | ) -> bool {
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
help: add the attribute
    |
561 | #[must_use] pub fn infos_refer_to_same_file(
    | +++++++++++

warning: redundant closure
   --> src/uucore/src/lib/features/fs.rs:585:14
    |
585 |         .map(|x| x.as_os_str());
    |              ^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::path::Component::as_os_str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:609:1
    |
609 | pub fn is_symlink_loop(path: &Path) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_symlink_loop(path: &Path) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:646:1
    |
646 | pub fn are_hardlinks_to_same_file(source: &Path, target: &Path) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn are_hardlinks_to_same_file(source: &Path, target: &Path) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:672:1
    |
672 | pub fn are_hardlinks_or_one_way_symlink_to_same_file(source: &Path, target: &Path) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn are_hardlinks_or_one_way_symlink_to_same_file(source: &Path, target: &Path) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:692:1
    |
692 | pub fn path_ends_with_terminator(path: &Path) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn path_ends_with_terminator(path: &Path) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/fs.rs:718:1
    |
718 | pub fn is_stdin_directory(stdin: &Stdin) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/fs.rs:722:20
    |
722 |         let mode = fstat(stdin.as_fd()).unwrap().st_mode as mode_t;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:718:1
    |
718 | pub fn is_stdin_directory(stdin: &Stdin) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_stdin_directory(stdin: &Stdin) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:750:5
    |
750 |     pub fn sane_blksize(st_blksize: u64) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn sane_blksize(st_blksize: u64) -> u64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/fs.rs:750:5
    |
750 | /     pub fn sane_blksize(st_blksize: u64) -> u64 {
751 | |         match st_blksize {
752 | |             0 => DEFAULT,
753 | |             1..=MAX => st_blksize,
...   |
756 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
750 |     pub const fn sane_blksize(st_blksize: u64) -> u64 {
    |         +++++

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:762:5
    |
762 |     pub fn sane_blksize_from_metadata(_metadata: &std::fs::Metadata) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn sane_blksize_from_metadata(_metadata: &std::fs::Metadata) -> u64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: used underscore-prefixed binding
   --> src/uucore/src/lib/features/fs.rs:765:26
    |
765 |             sane_blksize(_metadata.blksize())
    |                          ^^^^^^^^^
    |
note: binding is defined here
   --> src/uucore/src/lib/features/fs.rs:762:39
    |
762 |     pub fn sane_blksize_from_metadata(_metadata: &std::fs::Metadata) -> u64 {
    |                                       ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding
    = note: `-W clippy::used-underscore-binding` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::used_underscore_binding)]`

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:778:5
    |
778 |     pub fn sane_blksize_from_path(path: &Path) -> u64 {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn sane_blksize_from_path(path: &Path) -> u64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/fs.rs:779:9
    |
779 | /         match metadata(path) {
780 | |             Ok(metadata) => sane_blksize_from_metadata(&metadata),
781 | |             Err(_) => DEFAULT,
782 | |         }
    | |_________^ help: try: `metadata(path).map_or(DEFAULT, |metadata| sane_blksize_from_metadata(&metadata))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/fs.rs:801:1
    |
801 | pub fn get_filename(file: &Path) -> Option<&str> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_filename(file: &Path) -> Option<&str>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/fs.rs:826:1
    |
826 | pub fn make_fifo(path: &Path) -> std::io::Result<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/fs.rs:827:16
    |
827 |     let name = CString::new(path.to_str().unwrap()).unwrap();
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: possible intra-doc link using quotes instead of backticks
  --> src/uucore/src/lib/features/lines.rs:12:14
   |
12 | //! [`Vec`]<['u8']> instances that include the line ending
   |              ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_link_with_quotes
   = note: `-W clippy::doc-link-with-quotes` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_link_with_quotes)]`

warning: this could be a `const fn`
  --> src/uucore/src/lib/features/lines.rs:56:1
   |
56 | / pub fn lines<B>(reader: B, sep: u8) -> Lines<B>
57 | | where
58 | |     B: BufRead,
...  |
61 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
56 | pub const fn lines<B>(reader: B, sep: u8) -> Lines<B>
   |     +++++

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
  --> src/uucore/src/lib/features/parser/num_parser.rs:38:14
   |
38 |     fn digit(&self, c: char) -> Option<u64> {
   |              ^^^^^ help: consider passing by value instead: `self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref
   = note: `-W clippy::trivially-copy-pass-by-ref` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::trivially_copy_pass_by_ref)]`

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
  --> src/uucore/src/lib/features/parser/num_parser.rs:56:25
   |
56 |     fn parse_digits<'a>(&self, str: &'a str) -> (Option<BigUint>, &'a str) {
   |                         ^^^^^ help: consider passing by value instead: `self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
  --> src/uucore/src/lib/features/parser/num_parser.rs:65:9
   |
65 |         &self,
   |         ^^^^^ help: consider passing by value instead: `self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref

warning: you are deriving `PartialEq` and can implement `Eq`
  --> src/uucore/src/lib/features/parser/num_parser.rs:84:17
   |
84 | #[derive(Debug, PartialEq)]
   |                 ^^^^^^^^^ help: consider deriving `Eq` as well: `PartialEq, Eq`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq
   = note: `-W clippy::derive-partial-eq-without-eq` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::derive_partial_eq_without_eq)]`

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/num_parser.rs:108:13
    |
108 |             Self::PartialMatch(v, _) => v,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
108 ~             Self::PartialMatch(v, _) | Self::Overflow(v) => v,
109 ~             Self::Underflow(v) => v,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/num_parser.rs:108:13
    |
108 |             Self::PartialMatch(v, _) => v,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
108 ~             Self::PartialMatch(v, _) | Self::Underflow(v) => v,
109 |             Self::Overflow(v) => v,
110 ~             }
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/num_parser.rs:109:13
    |
109 |             Self::Overflow(v) => v,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
109 ~             Self::Overflow(v) | Self::Underflow(v) => v,
110 ~             }
    |

warning: redundant closure
   --> src/uucore/src/lib/features/parser/num_parser.rs:128:30
    |
128 |             v.unwrap_or_else(|e| e.extract())
    |                              ^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `ExtendedParserError::extract`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:148:5
    |
148 | /     fn extended_parse(input: &str) -> Result<Self, ExtendedParserError<'_, Self>>
149 | |     where
150 | |         Self: Sized;
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:155:46
    |
155 |     fn extended_parse(input: &str) -> Result<i64, ExtendedParserError<'_, i64>> {
    |                                              ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:155:75
    |
155 |     fn extended_parse(input: &str) -> Result<i64, ExtendedParserError<'_, i64>> {
    |                                                                           ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:156:9
    |
156 |         fn into_i64<'a>(ebd: ExtendedBigDecimal) -> Result<i64, ExtendedParserError<'a, i64>> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:162:25
    |
162 | /                         match i64::try_from(digits) {
163 | |                             Ok(i) => Ok(i),
164 | |                             _ => Err(ExtendedParserError::Overflow(if negative {
165 | |                                 i64::MIN
...   |
168 | |                             })),
169 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
162 ~                         i64::try_from(digits).map_or(Err(ExtendedParserError::Overflow(if negative {
163 +                                 i64::MIN
164 +                             } else {
165 +                                 i64::MAX
166 +                             })), |i| Ok(i))
    |

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:190:46
    |
190 |     fn extended_parse(input: &str) -> Result<u64, ExtendedParserError<'_, u64>> {
    |                                              ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:190:75
    |
190 |     fn extended_parse(input: &str) -> Result<u64, ExtendedParserError<'_, u64>> {
    |                                                                           ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:191:9
    |
191 |         fn into_u64<'a>(ebd: ExtendedBigDecimal) -> Result<u64, ExtendedParserError<'a, u64>> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:198:25
    |
198 | /                         match u64::try_from(digits) {
199 | |                             Ok(i) => {
200 | |                                 if sign == Sign::Minus {
201 | |                                     Ok(!i + 1)
...   |
206 | |                             _ => Err(ExtendedParserError::Overflow(u64::MAX)),
207 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
198 ~                         u64::try_from(digits).map_or(Err(ExtendedParserError::Overflow(u64::MAX)), |i| if sign == Sign::Minus {
199 +                                     Ok(!i + 1)
200 +                                 } else {
201 +                                     Ok(i)
202 +                                 })
    |

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:227:46
    |
227 |     fn extended_parse(input: &str) -> Result<f64, ExtendedParserError<'_, f64>> {
    |                                              ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:227:75
    |
227 |     fn extended_parse(input: &str) -> Result<f64, ExtendedParserError<'_, f64>> {
    |                                                                           ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:228:9
    |
228 |         fn into_f64<'a>(ebd: ExtendedBigDecimal) -> Result<f64, ExtendedParserError<'a, f64>> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/parser/num_parser.rs:232:29
    |
232 |                     let f = bd.to_f64().unwrap();
    |                             ^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:228:9
    |
228 |         fn into_f64<'a>(ebd: ExtendedBigDecimal) -> Result<f64, ExtendedParserError<'a, f64>> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/num_parser.rs:258:30
    |
258 |     /// Parse a number as an ExtendedBigDecimal
    |                              ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
258 -     /// Parse a number as an ExtendedBigDecimal
258 +     /// Parse a number as an `ExtendedBigDecimal`
    |

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:261:17
    |
261 |     ) -> Result<ExtendedBigDecimal, ExtendedParserError<'_, ExtendedBigDecimal>> {
    |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:261:61
    |
261 |     ) -> Result<ExtendedBigDecimal, ExtendedParserError<'_, ExtendedBigDecimal>> {
    |                                                             ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:291:28
    |
291 |           let (sign, rest) = if let Some(rest) = rest.strip_prefix('-') {
    |  ____________________________^
292 | |             (Sign::Minus, rest)
293 | |         } else if let Some(rest) = rest.strip_prefix('+') {
294 | |             (Sign::Plus, rest)
...   |
297 | |             (Sign::Plus, rest) // No explicit sign is equivalent to `+`.
298 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
291 ~         let (sign, rest) = rest.strip_prefix('-').map_or_else(|| if let Some(rest) = rest.strip_prefix('+') {
292 +             (Sign::Plus, rest)
293 +         } else {
294 +             // Something else, or nothing at all: keep going.
295 +             (Sign::Plus, rest) // No explicit sign is equivalent to `+`.
296 ~         }, |rest| (Sign::Minus, rest));
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:325:1
    |
325 | / fn parse_special_value<'a>(
326 | |     input: &'a str,
327 | |     negative: bool,
328 | |     allowed_suffixes: &[(char, u32)],
329 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> src/uucore/src/lib/features/parser/num_parser.rs:333:5
    |
333 | /     const MATCH_TABLE: &[(&str, ExtendedBigDecimal)] = &[
334 | |         ("infinity", ExtendedBigDecimal::Infinity),
335 | |         ("inf", ExtendedBigDecimal::Infinity),
336 | |         ("nan", ExtendedBigDecimal::Nan),
337 | |     ];
    | |______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: it is more concise to loop over references to containers instead of using explicit iteration methods
   --> src/uucore/src/lib/features/parser/num_parser.rs:339:23
    |
339 |     for (str, ebd) in MATCH_TABLE.iter() {
    |                       ^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `MATCH_TABLE`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop
    = note: `-W clippy::explicit-iter-loop` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::explicit_iter_loop)]`

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> src/uucore/src/lib/features/parser/num_parser.rs:387:5
    |
387 | /     fn trim_precision(bd: BigDecimal, ctx: &bigdecimal::Context) -> BigDecimal {
388 | |         if bd.digits() > ctx.precision().get() {
389 | |             bd.with_precision_round(ctx.precision(), ctx.rounding_mode())
390 | |         } else {
...   |
393 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:405:1
    |
405 | / fn construct_extended_big_decimal<'a>(
406 | |     digits: BigUint,
407 | |     negative: bool,
408 | |     base: Base,
409 | |     scale: u64,
410 | |     exponent: BigInt,
411 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/parser/num_parser.rs:436:48
    |
436 |         BigDecimal::from_bigint(signed_digits, new_scale.to_i64().unwrap())
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:405:1
    |
405 | / fn construct_extended_big_decimal<'a>(
406 | |     digits: BigUint,
407 | |     negative: bool,
408 | |     base: Base,
409 | |     scale: u64,
410 | |     exponent: BigInt,
411 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: casting `u64` to `u32` may truncate the value
   --> src/uucore/src/lib/features/parser/num_parser.rs:445:60
    |
445 |             / BigDecimal::from_bigint(BigInt::from(16).pow(scale as u32), 0);
    |                                                            ^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
445 -             / BigDecimal::from_bigint(BigInt::from(16).pow(scale as u32), 0);
445 +             / BigDecimal::from_bigint(BigInt::from(16).pow(u32::try_from(scale)), 0);
    |

warning: unnecessary boolean `not` operation
   --> src/uucore/src/lib/features/parser/num_parser.rs:457:32
    |
457 |           let base: BigDecimal = if !exponent.is_negative() {
    |  ________________________________^
458 | |             2.into()
459 | |         } else {
460 | |             BigDecimal::from(2).inverse()
461 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
    = note: `-W clippy::if-not-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::if_not_else)]`
help: try
    |
457 ~         let base: BigDecimal = if exponent.is_negative() {
458 +             BigDecimal::from(2).inverse()
459 +         } else {
460 +             2.into()
461 ~         };
    |

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:479:1
    |
479 | / pub(crate) fn parse<'a>(
480 | |     input: &'a str,
481 | |     target: ParseTarget,
482 | |     allowed_suffixes: &[(char, u32)],
483 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/parser/num_parser.rs:566:18
    |
566 |     let digits = digits.unwrap() * mul;
    |                  ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:479:1
    |
479 | / pub(crate) fn parse<'a>(
480 | |     input: &'a str,
481 | |     target: ParseTarget,
482 | |     allowed_suffixes: &[(char, u32)],
483 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:502:32
    |
502 |       let (negative, unsigned) = if let Some(trimmed_input) = trimmed_input.strip_prefix('-') {
    |  ________________________________^
503 | |         (true, trimmed_input)
504 | |     } else if let Some(trimmed_input) = trimmed_input.strip_prefix('+') {
505 | |         (false, trimmed_input)
506 | |     } else {
507 | |         (false, trimmed_input)
508 | |     };
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
502 ~     let (negative, unsigned) = trimmed_input.strip_prefix('-').map_or_else(|| if let Some(trimmed_input) = trimmed_input.strip_prefix('+') {
503 +         (false, trimmed_input)
504 +     } else {
505 +         (false, trimmed_input)
506 ~     }, |trimmed_input| (true, trimmed_input));
    |

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:514:24
    |
514 |       let (base, rest) = if let Some(rest) = unsigned.strip_prefix('0') {
    |  ________________________^
515 | |         if let Some(rest) = rest.strip_prefix(['x', 'X']) {
516 | |             (Base::Hexadecimal, rest)
517 | |         } else if target == ParseTarget::Integral {
...   |
528 | |         (Base::Decimal, unsigned)
529 | |     };
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
514 ~     let (base, rest) = unsigned.strip_prefix('0').map_or((Base::Decimal, unsigned), |rest| if let Some(rest) = rest.strip_prefix(['x', 'X']) {
515 +             (Base::Hexadecimal, rest)
516 +         } else if target == ParseTarget::Integral {
517 +             // Binary/Octal only allowed for integer parsing.
518 +             if let Some(rest) = rest.strip_prefix(['b', 'B']) {
519 +                 (Base::Binary, rest)
520 +             } else {
521 +                 (Base::Octal, unsigned)
522 +             }
523 +         } else {
524 +             (Base::Decimal, unsigned)
525 ~         });
    |

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:515:9
    |
515 | /         if let Some(rest) = rest.strip_prefix(['x', 'X']) {
516 | |             (Base::Hexadecimal, rest)
517 | |         } else if target == ParseTarget::Integral {
...   |
525 | |             (Base::Decimal, unsigned)
526 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
515 ~         rest.strip_prefix(['x', 'X']).map_or_else(|| if target == ParseTarget::Integral {
516 +             // Binary/Octal only allowed for integer parsing.
517 +             if let Some(rest) = rest.strip_prefix(['b', 'B']) {
518 +                 (Base::Binary, rest)
519 +             } else {
520 +                 (Base::Octal, unsigned)
521 +             }
522 +         } else {
523 +             (Base::Decimal, unsigned)
524 +         }, |rest| (Base::Hexadecimal, rest))
    |

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:519:13
    |
519 | /             if let Some(rest) = rest.strip_prefix(['b', 'B']) {
520 | |                 (Base::Binary, rest)
521 | |             } else {
522 | |                 (Base::Octal, unsigned)
523 | |             }
    | |_____________^ help: try: `rest.strip_prefix(['b', 'B']).map_or((Base::Octal, unsigned), |rest| (Base::Binary, rest))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: unnecessary boolean `not` operation
   --> src/uucore/src/lib/features/parser/num_parser.rs:573:5
    |
573 | /     if !rest.is_empty() {
574 | |         Err(ExtendedParserError::PartialMatch(
575 | |             ebd_result.unwrap_or_else(|e| e.extract()),
576 | |             rest,
...   |
579 | |         ebd_result
580 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
help: try
    |
573 ~     if rest.is_empty() {
574 +         ebd_result
575 +     } else {
576 +         Err(ExtendedParserError::PartialMatch(
577 +             ebd_result.unwrap_or_else(|e| e.extract()),
578 +             rest,
579 +         ))
580 +     }
    |

warning: redundant closure
   --> src/uucore/src/lib/features/parser/num_parser.rs:575:39
    |
575 |             ebd_result.unwrap_or_else(|e| e.extract()),
    |                                       ^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `ExtendedParserError::extract`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/features/parser/parse_glob.rs:55:1
   |
55 | pub fn from_str(glob: &str) -> Result<Pattern, PatternError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
  --> src/uucore/src/lib/features/parser/parse_size.rs:99:16
   |
99 |     /// Change allow_list of the parser - whitelist for the suffix
   |                ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
99 -     /// Change allow_list of the parser - whitelist for the suffix
99 +     /// Change `allow_list` of the parser - whitelist for the suffix
   |

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/parser/parse_size.rs:100:5
    |
100 | /     pub fn with_allow_list(&mut self, allow_list: &'parser [&str]) -> &mut Self {
101 | |         self.allow_list = Some(allow_list);
102 | |         self
103 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
100 |     pub const fn with_allow_list(&mut self, allow_list: &'parser [&str]) -> &mut Self {
    |         +++++

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/parse_size.rs:105:16
    |
105 |     /// Change default_unit of the parser - when no suffix is provided
    |                ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
105 -     /// Change default_unit of the parser - when no suffix is provided
105 +     /// Change `default_unit` of the parser - when no suffix is provided
    |

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/parser/parse_size.rs:106:5
    |
106 | /     pub fn with_default_unit(&mut self, default_unit: &'parser str) -> &mut Self {
107 | |         self.default_unit = Some(default_unit);
108 | |         self
109 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
106 |     pub const fn with_default_unit(&mut self, default_unit: &'parser str) -> &mut Self {
    |         +++++

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/parse_size.rs:111:16
    |
111 |     /// Change b_byte_count of the parser - to treat "b" as a "byte count" instead of "block"
    |                ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
111 -     /// Change b_byte_count of the parser - to treat "b" as a "byte count" instead of "block"
111 +     /// Change `b_byte_count` of the parser - to treat "b" as a "byte count" instead of "block"
    |

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/parser/parse_size.rs:112:5
    |
112 | /     pub fn with_b_byte_count(&mut self, value: bool) -> &mut Self {
113 | |         self.b_byte_count = value;
114 | |         self
115 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
112 |     pub const fn with_b_byte_count(&mut self, value: bool) -> &mut Self {
    |         +++++

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/parse_size.rs:117:16
    |
117 |     /// Change no_empty_numeric of the parser - to allow empty numeric strings
    |                ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
117 -     /// Change no_empty_numeric of the parser - to allow empty numeric strings
117 +     /// Change `no_empty_numeric` of the parser - to allow empty numeric strings
    |

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/parser/parse_size.rs:118:5
    |
118 | /     pub fn with_allow_empty_numeric(&mut self, value: bool) -> &mut Self {
119 | |         self.no_empty_numeric = value;
120 | |         self
121 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
118 |     pub const fn with_allow_empty_numeric(&mut self, value: bool) -> &mut Self {
    |         +++++

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/parse_size.rs:200:20
    |
200 |               return match total_physical_memory() {
    |  ____________________^
201 | |                 Ok(total) => Ok((number / 100) * total),
202 | |                 Err(_) => Err(ParseSizeError::PhysicalMem(size.to_string())),
203 | |             };
    | |_____________^ help: try: `total_physical_memory().map_or_else(|_| Err(ParseSizeError::PhysicalMem(size.to_string())), |total| Ok((number / 100) * total))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:266:5
    |
266 |     pub fn parse_u128(&self, size: &str) -> Result<u128, ParseSizeError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:271:5
    |
271 |     pub fn parse_u64(&self, size: &str) -> Result<u64, ParseSizeError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:280:5
    |
280 |     pub fn parse_u64_max(&self, size: &str) -> Result<u64, ParseSizeError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:295:5
    |
295 |     pub fn parse_u128_max(&self, size: &str) -> Result<u128, ParseSizeError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:331:5
    |
331 | /     fn parse_number(
332 | |         numeric_string: &str,
333 | |         radix: u32,
334 | |         original_size: &str,
335 | |     ) -> Result<u128, ParseSizeError> {
    | |_____________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:355:1
    |
355 | pub fn parse_size_u128(size: &str) -> Result<u128, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:360:1
    |
360 | pub fn parse_size_u64(size: &str) -> Result<u64, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:366:1
    |
366 | pub fn parse_size(size: &str) -> Result<u64, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:373:1
    |
373 | pub fn parse_size_u64_max(size: &str) -> Result<u64, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:378:1
    |
378 | pub fn parse_size_u128_max(size: &str) -> Result<u128, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/parse_size.rs:382:20
    |
382 | /// Error type for parse_size
    |                    ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
382 - /// Error type for parse_size
382 + /// Error type for `parse_size`
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:13
    |
402 |             Self::ParseFailure(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
401 -             Self::InvalidSuffix(ref s) => s,
402 -             Self::ParseFailure(ref s) => s,
401 +             Self::ParseFailure(ref s) | Self::InvalidSuffix(ref s) => s,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:403:13
    |
403 |             Self::SizeTooBig(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
401 ~             Self::ParseFailure(ref s) => s,
402 ~             Self::SizeTooBig(ref s) | Self::InvalidSuffix(ref s) => s,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:13
    |
402 |             Self::ParseFailure(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
402 ~             Self::ParseFailure(ref s) | Self::SizeTooBig(ref s) => s,
403 ~             Self::PhysicalMem(ref s) => s,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:404:13
    |
404 |             Self::PhysicalMem(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
401 ~             Self::ParseFailure(ref s) => s,
402 |             Self::SizeTooBig(ref s) => s,
403 ~             Self::PhysicalMem(ref s) | Self::InvalidSuffix(ref s) => s,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:13
    |
402 |             Self::ParseFailure(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
402 ~             Self::ParseFailure(ref s) | Self::PhysicalMem(ref s) => s,
403 |             Self::SizeTooBig(ref s) => s,
404 ~             }
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:403:13
    |
403 |             Self::SizeTooBig(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
403 ~             Self::SizeTooBig(ref s) | Self::PhysicalMem(ref s) => s,
404 ~             }
    |

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/parser/parse_time.rs:56:1
    |
56  | pub fn from_str(string: &str, allow_suffixes: bool) -> Result<Duration, String> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/parser/parse_time.rs:102:22
    |
102 |     let nanos: u32 = (&nanos_bi % NANOS_PER_SEC).to_u32().unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: adding items after statements is confusing, since items exist from the start of the scope
  --> src/uucore/src/lib/features/parser/parse_time.rs:97:5
   |
97 |     const NANOS_PER_SEC: u32 = 1_000_000_000;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: `format!(..)` appended to existing `String`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:72:9
   |
72 |         formatted_possible_values.push_str(&format!("'{}'", s.get_name()));
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using `write!` to avoid the extra allocation
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#format_push_string
   = note: `-W clippy::format-push-string` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::format_push_string)]`

warning: function call inside of `ok_or`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:99:14
   |
99 |             .ok_or(clap::Error::new(ErrorKind::InvalidUtf8))?;
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ok_or_else(|| clap::Error::new(ErrorKind::InvalidUtf8))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call
   = note: `-W clippy::or-fun-call` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::or_fun_call)]`

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:111:17
    |
111 | /                 if let Some(direct_match) = matched_values.iter().find(|x| x.get_name() == value) {
112 | |                     Ok(direct_match.get_name().to_string())
113 | |                 } else {
114 | |                     Err(self.generate_clap_error(cmd, arg, value, &matched_values))
115 | |                 }
    | |_________________^ help: try: `matched_values.iter().find(|x| x.get_name() == value).map_or_else(|| Err(self.generate_clap_error(cmd, arg, value, &matched_values)), |direct_match| Ok(direct_match.get_name().to_string()))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: redundant closure
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:131:37
    |
131 |         Self(values.into_iter().map(|t| t.into()).collect())
    |                                     ^^^^^^^^^^^^ help: replace the closure with the method itself: `std::convert::Into::into`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: this method could have a `#[must_use]` attribute
  --> src/uucore/src/lib/features/ringbuffer.rs:53:5
   |
53 |     pub fn new(size: usize) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(size: usize) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this could be a `const fn`
  --> src/uucore/src/lib/features/ringbuffer.rs:53:5
   |
53 | /     pub fn new(size: usize) -> Self {
54 | |         Self {
55 | |             data: VecDeque::new(),
56 | |             size,
57 | |         }
58 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
53 |     pub const fn new(size: usize) -> Self {
   |         +++++

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/mods/display.rs:49:1
   |
49 | pub fn println_verbatim<S: AsRef<OsStr>>(text: S) -> io::Result<()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/mods/display.rs:57:1
   |
57 | pub fn print_verbatim<S: AsRef<OsStr>>(text: S) -> io::Result<()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: usage of wildcard import for enum variants
   --> src/uucore/src/lib/mods/error.rs:408:13
    |
408 |         use std::io::ErrorKind::*;
    |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::io::ErrorKind::{AddrInUse, AddrNotAvailable, AlreadyExists, BrokenPipe, ConnectionAborted, ConnectionRefused, ConnectionReset, Interrupted, InvalidData, InvalidInput, NotConnected, NotFound, PermissionDenied, TimedOut, UnexpectedEof, WouldBlock, WriteZero}`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_glob_use
    = note: `-W clippy::enum-glob-use` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::enum_glob_use)]`

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/mods/error.rs:459:1
    |
459 | pub fn strip_errno(err: &std::io::Error) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn strip_errno(err: &std::io::Error) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/mods/error.rs:655:5
    |
655 |     pub fn new(code: i32) -> Box<dyn UError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(code: i32) -> Box<dyn UError>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/io.rs:40:5
   |
40 |     pub fn new(x: NativeType) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(x: NativeType) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this could be a `const fn`
  --> src/uucore/src/lib/mods/io.rs:40:5
   |
40 | /     pub fn new(x: NativeType) -> Self {
41 | |         Self { fx: x }
42 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
40 |     pub const fn new(x: NativeType) -> Self {
   |         +++++

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/mods/io.rs:45:5
   |
45 |     pub fn open_file(options: &OpenOptions, path: &Path) -> io::Result<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/mods/io.rs:64:5
   |
64 |     pub fn from<T: AsFd>(t: T) -> io::Result<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/io.rs:71:5
   |
71 |     pub fn into_file(self) -> File {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn into_file(self) -> File`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this method could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/io.rs:76:5
   |
76 |     pub fn into_stdio(self) -> Stdio {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn into_stdio(self) -> Stdio`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/mods/io.rs:82:5
   |
82 |     pub fn try_clone(&self) -> io::Result<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this method could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/io.rs:88:5
   |
88 |     pub fn as_raw(&self) -> &NativeType {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn as_raw(&self) -> &NativeType`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this could be a `const fn`
  --> src/uucore/src/lib/mods/io.rs:88:5
   |
88 | /     pub fn as_raw(&self) -> &NativeType {
89 | |         &self.fx
90 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
88 |     pub const fn as_raw(&self) -> &NativeType {
   |         +++++

warning: you are deriving `PartialEq` and can implement `Eq`
  --> src/uucore/src/lib/mods/line_ending.rs:19:39
   |
19 | #[derive(Clone, Copy, Debug, Default, PartialEq)]
   |                                       ^^^^^^^^^ help: consider deriving `Eq` as well: `PartialEq, Eq`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq

warning: this method could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/line_ending.rs:49:5
   |
49 |     pub fn from_zero_flag(is_zero_terminated: bool) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn from_zero_flag(is_zero_terminated: bool) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this could be a `const fn`
  --> src/uucore/src/lib/mods/line_ending.rs:49:5
   |
49 | /     pub fn from_zero_flag(is_zero_terminated: bool) -> Self {
50 | |         if is_zero_terminated {
51 | |             Self::Nul
52 | |         } else {
...  |
55 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
49 |     pub const fn from_zero_flag(is_zero_terminated: bool) -> Self {
   |         +++++

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/mods/locale.rs:36:9
   |
36 |         LocalizationError::Io {
   |         ^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: this could be a `const fn`
  --> src/uucore/src/lib/mods/locale.rs:59:5
   |
59 | /     fn new(primary_bundle: FluentBundle<FluentResource>) -> Self {
60 | |         Self {
61 | |             primary_bundle,
62 | |             fallback_bundle: None,
63 | |         }
64 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
59 |     const fn new(primary_bundle: FluentBundle<FluentResource>) -> Self {
   |     +++++

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/mods/locale.rs:102:1
    |
102 | / fn init_localization(
103 | |     locale: &LanguageIdentifier,
104 | |     locales_dir: &Path,
105 | | ) -> Result<(), LocalizationError> {
    | |__________________________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/mods/locale.rs:106:21
    |
106 |       let en_locale = LanguageIdentifier::from_str(DEFAULT_LOCALE)
    |  _____________________^
107 | |         .expect("Default locale should always be valid");
    | |________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/mods/locale.rs:102:1
    |
102 | / fn init_localization(
103 | |     locale: &LanguageIdentifier,
104 | |     locales_dir: &Path,
105 | | ) -> Result<(), LocalizationError> {
    | |__________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/mods/locale.rs:132:1
    |
132 | / fn create_bundle(
133 | |     locale: &LanguageIdentifier,
134 | |     locales_dir: &Path,
135 | | ) -> Result<FluentBundle<FluentResource>, LocalizationError> {
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> src/uucore/src/lib/mods/locale.rs:154:35
    |
154 |           LocalizationError::Bundle(format!(
    |  ___________________________________^
155 | |             "Failed to add resource to bundle for {}: {:?}",
156 | |             locale, errs
157 | |         ))
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`

warning: this argument is passed by value, but not consumed in the function body
   --> src/uucore/src/lib/mods/locale.rs:163:41
    |
163 | fn get_message_internal(id: &str, args: Option<FluentArgs>) -> String {
    |                                         ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
    = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`
help: consider taking a reference instead
    |
163 | fn get_message_internal(id: &str, args: Option<&FluentArgs>) -> String {
    |                                                +

warning: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value
   --> src/uucore/src/lib/mods/locale.rs:165:9
    |
165 | /         lock.get()
166 | |             .map(|loc| loc.format(id, args.as_ref()))
167 | |             .unwrap_or_else(|| id.to_string()) // Return the key ID if localizer not initialized
    | |______________________________________________^ help: try: `lock.get().map_or_else(|| id.to_string(), |loc| loc.format(id, args.as_ref()))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
    = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/mods/locale.rs:195:1
    |
195 | pub fn get_message(id: &str) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_message(id: &str) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/mods/locale.rs:230:1
    |
230 | pub fn get_message_with_args(id: &str, ftl_args: HashMap<String, String>) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_message_with_args(id: &str, ftl_args: HashMap<String, String>) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: parameter of type `HashMap` should be generalized over different hashers
   --> src/uucore/src/lib/mods/locale.rs:230:50
    |
230 | pub fn get_message_with_args(id: &str, ftl_args: HashMap<String, String>) -> String {
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_hasher
    = note: `-W clippy::implicit-hasher` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::implicit_hasher)]`
help: add a type parameter for `BuildHasher`
    |
230 | pub fn get_message_with_args<S: ::std::hash::BuildHasher>(id: &str, ftl_args: HashMap<String, String, S>) -> String {
    |                             +++++++++++++++++++++++++++++                                           +++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/mods/locale.rs:249:1
    |
249 | fn detect_system_locale() -> Result<LanguageIdentifier, LocalizationError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: variables can be used directly in the `format!` string
   --> src/uucore/src/lib/mods/locale.rs:258:47
    |
258 |         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
258 -         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
258 +         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {locale_str}")))
    |

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/mods/locale.rs:297:1
    |
297 | pub fn setup_localization(p: &str) -> Result<(), LocalizationError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore/src/lib/mods/locale.rs:299:9
    |
299 |         LanguageIdentifier::from_str(DEFAULT_LOCALE).expect("Default locale should always be valid")
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/mods/locale.rs:307:1
    |
307 | fn get_locales_dir(p: &str) -> Result<PathBuf, LocalizationError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/os.rs:11:1
   |
11 | pub fn is_wsl_1() -> bool {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_wsl_1() -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/os.rs:28:1
   |
28 | pub fn is_wsl_2() -> bool {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_wsl_2() -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/posix.rs:33:1
   |
33 | pub fn posix_version() -> Option<usize> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn posix_version() -> Option<usize>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: first doc comment paragraph is too long
   --> src/uucore/src/lib/lib.rs:129:1
    |
129 | / /// Disables the custom signal handlers installed by Rust for stack-overflow handling. With those custom signal handlers processes ignore...
130 | | /// See <https://github.com/rust-lang/rust/blob/8ac1525e091d3db28e67adcbbd6db1e1deaa37fb/src/libstd/sys/unix/stack_overflow.rs#L71-L92> f...
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph
help: add an empty line
    |
130 | /// Disables the custom signal handlers installed by Rust for stack-overflow handling. With those custom signal handlers processes ignore the first SIGBUS and SIGSEGV signal they receive.
131 + ///
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/lib.rs:132:1
    |
132 | pub fn disable_rust_signal_handlers() -> Result<(), Errno> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:197:1
    |
197 | pub fn format_usage(s: &str) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn format_usage(s: &str) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:227:1
    |
227 | pub fn util_name() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn util_name() -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:244:1
    |
244 | pub fn execution_phrase() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn execution_phrase() -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: first doc comment paragraph is too long
   --> src/uucore/src/lib/lib.rs:248:1
    |
248 | / /// Args contains arguments passed to the utility.
249 | | /// It is a trait that extends `Iterator<Item = OsString>`.
250 | | /// It provides utility functions to collect the arguments into a `Vec<String>`.
251 | | /// The collected `Vec<String>` can be lossy or ignore invalid encoding.
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph
help: add an empty line
    |
249 | /// Args contains arguments passed to the utility.
250 + ///
    |

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/lib.rs:267:5
    |
267 | /// args_os() can be expensive to call
    |     ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
267 - /// args_os() can be expensive to call
267 + /// `args_os()` can be expensive to call
    |

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:273:1
    |
273 | pub fn read_yes() -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn read_yes() -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/lib.rs:285:1
    |
285 | pub fn os_str_as_bytes(os_string: &OsStr) -> mods::error::UResult<&[u8]> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function's return value is unnecessarily wrapped by `Result`
   --> src/uucore/src/lib/lib.rs:285:1
    |
285 | / pub fn os_str_as_bytes(os_string: &OsStr) -> mods::error::UResult<&[u8]> {
286 | |     #[cfg(unix)]
287 | |     let bytes = os_string.as_bytes();
...   |
297 | |     Ok(bytes)
298 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
    = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Result` from the return type...
    |
285 - pub fn os_str_as_bytes(os_string: &OsStr) -> mods::error::UResult<&[u8]> {
285 + pub fn os_str_as_bytes(os_string: &OsStr) -> &[u8] {
    |
help: ...and then change returning expressions
    |
297 -     Ok(bytes)
297 +     bytes
    |

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:304:1
    |
304 | pub fn os_str_as_bytes_lossy(os_string: &OsStr) -> Cow<[u8]> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn os_str_as_bytes_lossy(os_string: &OsStr) -> Cow<[u8]>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/lib.rs:322:1
    |
322 | pub fn os_str_from_bytes(bytes: &[u8]) -> mods::error::UResult<Cow<'_, OsStr>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function's return value is unnecessarily wrapped by `Result`
   --> src/uucore/src/lib/lib.rs:322:1
    |
322 | / pub fn os_str_from_bytes(bytes: &[u8]) -> mods::error::UResult<Cow<'_, OsStr>> {
323 | |     #[cfg(unix)]
324 | |     let os_str = Cow::Borrowed(OsStr::from_bytes(bytes));
325 | |     #[cfg(not(unix))]
...   |
330 | |     Ok(os_str)
331 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
322 - pub fn os_str_from_bytes(bytes: &[u8]) -> mods::error::UResult<Cow<'_, OsStr>> {
322 + pub fn os_str_from_bytes(bytes: &[u8]) -> std::borrow::Cow<'_, std::ffi::OsStr> {
    |
help: ...and then change returning expressions
    |
330 -     Ok(os_str)
330 +     os_str
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/lib.rs:337:1
    |
337 | pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this function's return value is unnecessarily wrapped by `Result`
   --> src/uucore/src/lib/lib.rs:337:1
    |
337 | / pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
338 | |     #[cfg(unix)]
339 | |     let s = OsString::from_vec(vec);
340 | |     #[cfg(not(unix))]
...   |
345 | |     Ok(s)
346 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
337 - pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
337 + pub fn os_string_from_vec(vec: Vec<u8>) -> std::ffi::OsString {
    |
help: ...and then change returning expressions
    |
345 -     Ok(s)
345 +     s
    |

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/lib.rs:376:1
    |
376 | / pub fn read_os_string_lines<R: std::io::Read>(
377 | |     buf_reader: BufReader<R>,
378 | | ) -> impl Iterator<Item = OsString> {
    | |___________________________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/lib.rs:379:49
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: `uucore` (lib) generated 367 warnings (8 duplicates) (run `cargo clippy --fix --lib -p uucore` to apply 93 suggestions)
warning: this `continue` expression is redundant
  --> src/uu/head/src/parse.rs:29:17
   |
29 |                 continue;
   |                 ^^^^^^^^
   |
   = help: consider dropping the `continue` expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_continue
   = note: `-W clippy::needless-continue` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_continue)]`

warning: this `continue` expression is redundant
  --> src/uu/head/src/take.rs:34:65
   |
34 |                 Err(e) if e.kind() == ErrorKind::Interrupted => continue,
   |                                                                 ^^^^^^^^
   |
   = help: consider dropping the `continue` expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_continue

warning: this function's return value is unnecessarily wrapped by `Option`
   --> src/uu/head/src/parse.rs:47:1
    |
47  | / fn process_num_block(
48  | |     src: &str,
49  | |     last_char: char,
50  | |     chars: &mut std::str::CharIndices,
...   |
107 | |     Some(Ok(options))
108 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
    = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Option` from the return type...
    |
51  - ) -> Option<Result<Vec<OsString>, ParseError>> {
51  + ) -> std::result::Result<std::vec::Vec<std::ffi::OsString>, parse::ParseError> {
    |
help: ...and then change returning expressions
    |
55  ~         _ => return Err(ParseError),
56  |     };
...
80  |             '\0' => {}
81  ~             _ => return Err(ParseError),
82  |         }
...
106 |     }
107 ~     Ok(options)
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/parse.rs:112:1
    |
112 | pub fn parse_num(src: &str) -> Result<(u64, bool), ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
    = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: this could be a `const fn`
  --> src/uu/head/src/take.rs:18:5
   |
18 | /     fn new() -> Self {
19 | |         TakeAllBuffer {
20 | |             buffer: vec![],
21 | |             start_index: 0,
22 | |         }
23 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
   = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::missing_const_for_fn)]`
help: make the function `const`
   |
18 |     const fn new() -> Self {
   |     +++++

warning: unnecessary structure name repetition
  --> src/uu/head/src/take.rs:19:9
   |
19 |         TakeAllBuffer {
   |         ^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self
   = note: `-W clippy::use-self` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::use_self)]`

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uu/head/src/take.rs:25:5
   |
25 |     fn fill_buffer(&mut self, reader: &mut impl Read) -> std::io::Result<usize> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function which may panic missing `# Panics` section
  --> src/uu/head/src/take.rs:40:5
   |
40 |     fn write_bytes_exact(&mut self, writer: &mut impl Write, bytes: usize) -> std::io::Result<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uu/head/src/take.rs:44:9
   |
44 |         assert!(self.start_index <= self.buffer.len());
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uu/head/src/take.rs:40:5
   |
40 |     fn write_bytes_exact(&mut self, writer: &mut impl Write, bytes: usize) -> std::io::Result<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uu/head/src/take.rs:48:5
   |
48 |     fn write_all(&mut self, writer: &mut impl Write) -> std::io::Result<usize> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uu/head/src/take.rs:54:5
   |
54 | /     fn write_bytes_limit(
55 | |         &mut self,
56 | |         writer: &mut impl Write,
57 | |         max_bytes: usize,
58 | |     ) -> std::io::Result<usize> {
   | |_______________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function which may panic missing `# Panics` section
  --> src/uu/head/src/take.rs:72:5
   |
72 |     fn is_empty(&self) -> bool {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uu/head/src/take.rs:73:9
   |
73 |         assert!(self.start_index <= self.buffer.len());
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: item in documentation is missing backticks
  --> src/uu/head/src/take.rs:85:59
   |
85 | /// 1 - Chunks of the input file are read into a queue of TakeAllBuffer instances.
   |                                                           ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
   = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
   |
85 - /// 1 - Chunks of the input file are read into a queue of TakeAllBuffer instances.
85 + /// 1 - Chunks of the input file are read into a queue of `TakeAllBuffer` instances.
   |

warning: item in documentation is missing backticks
  --> src/uu/head/src/take.rs:87:15
   |
87 | ///     first TakeAllBuffer in the queue whilst still retaining at least `n` bytes in the queue.
   |               ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
87 - ///     first TakeAllBuffer in the queue whilst still retaining at least `n` bytes in the queue.
87 + ///     first `TakeAllBuffer` in the queue whilst still retaining at least `n` bytes in the queue.
   |

warning: item in documentation is missing backticks
  --> src/uu/head/src/take.rs:88:19
   |
88 | ///     If we hit EoF at any point, stop reading.
   |                   ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
88 - ///     If we hit EoF at any point, stop reading.
88 + ///     If we hit `EoF` at any point, stop reading.
   |

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/head/src/take.rs:94:1
    |
94  | / pub fn copy_all_but_n_bytes(
95  | |     reader: &mut impl Read,
96  | |     writer: &mut impl Write,
97  | |     n: usize,
98  | | ) -> std::io::Result<usize> {
    | |___________________________^
    |
note: first possible panic found here
   --> src/uu/head/src/take.rs:129:28
    |
129 |         let front_buffer = buffers.front_mut().unwrap();
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uu/head/src/take.rs:94:1
   |
94 | / pub fn copy_all_but_n_bytes(
95 | |     reader: &mut impl Read,
96 | |     writer: &mut impl Write,
97 | |     n: usize,
98 | | ) -> std::io::Result<usize> {
   | |___________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: unnecessary structure name repetition
   --> src/uu/head/src/take.rs:154:9
    |
154 |         TakeAllLinesBuffer {
    |         ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/take.rs:161:5
    |
161 | /     fn fill_buffer(
162 | |         &mut self,
163 | |         reader: &mut impl Read,
164 | |         separator: u8,
165 | |     ) -> std::io::Result<BytesAndLines> {
    | |_______________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/head/src/take.rs:180:5
    |
180 | /     fn write_lines(
181 | |         &mut self,
182 | |         writer: &mut impl Write,
183 | |         max_lines: usize,
184 | |         separator: u8,
185 | |     ) -> std::io::Result<BytesAndLines> {
    | |_______________________________________^
    |
note: first possible panic found here
   --> src/uu/head/src/take.rs:186:9
    |
186 |         assert!(max_lines > 0, "Must request at least 1 line.");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/take.rs:180:5
    |
180 | /     fn write_lines(
181 | |         &mut self,
182 | |         writer: &mut impl Write,
183 | |         max_lines: usize,
184 | |         separator: u8,
185 | |     ) -> std::io::Result<BytesAndLines> {
    | |_______________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this could be a `const fn`
   --> src/uu/head/src/take.rs:218:5
    |
218 | /     fn terminated_lines(&self) -> usize {
219 | |         self.terminated_lines
220 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
218 |     const fn terminated_lines(&self) -> usize {
    |     +++++

warning: this could be a `const fn`
   --> src/uu/head/src/take.rs:222:5
    |
222 | /     fn partial_line(&self) -> bool {
223 | |         self.partial_line
224 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
222 |     const fn partial_line(&self) -> bool {
    |     +++++

warning: item in documentation is missing backticks
   --> src/uu/head/src/take.rs:236:59
    |
236 | /// 1 - Chunks of the input file are read into a queue of TakeAllLinesBuffer instances.
    |                                                           ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
236 - /// 1 - Chunks of the input file are read into a queue of TakeAllLinesBuffer instances.
236 + /// 1 - Chunks of the input file are read into a queue of `TakeAllLinesBuffer` instances.
    |

warning: item in documentation is missing backticks
   --> src/uu/head/src/take.rs:238:31
    |
238 | ///     contents of the first TakeAllLinesBuffer in the queue whilst still retaining at least
    |                               ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
238 - ///     contents of the first TakeAllLinesBuffer in the queue whilst still retaining at least
238 + ///     contents of the first `TakeAllLinesBuffer` in the queue whilst still retaining at least
    |

warning: item in documentation is missing backticks
   --> src/uu/head/src/take.rs:240:19
    |
240 | ///     If we hit EoF at any point, stop reading.
    |                   ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
240 - ///     If we hit EoF at any point, stop reading.
240 + ///     If we hit `EoF` at any point, stop reading.
    |

warning: item in documentation is missing backticks
   --> src/uu/head/src/take.rs:247:54
    |
247 | /// Note that lines will regularly straddle multiple TakeAllLinesBuffer instances. The partial_line
    |                                                      ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
247 - /// Note that lines will regularly straddle multiple TakeAllLinesBuffer instances. The partial_line
247 + /// Note that lines will regularly straddle multiple `TakeAllLinesBuffer` instances. The partial_line
    |

warning: item in documentation is missing backticks
   --> src/uu/head/src/take.rs:247:88
    |
247 | /// Note that lines will regularly straddle multiple TakeAllLinesBuffer instances. The partial_line
    |                                                                                        ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
247 - /// Note that lines will regularly straddle multiple TakeAllLinesBuffer instances. The partial_line
247 + /// Note that lines will regularly straddle multiple TakeAllLinesBuffer instances. The `partial_line`
    |

warning: item in documentation is missing backticks
   --> src/uu/head/src/take.rs:248:13
    |
248 | /// flag on TakeAllLinesBuffer tracks this, and we use that to ensure that we write out enough
    |             ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
248 - /// flag on TakeAllLinesBuffer tracks this, and we use that to ensure that we write out enough
248 + /// flag on `TakeAllLinesBuffer` tracks this, and we use that to ensure that we write out enough
    |

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/head/src/take.rs:250:1
    |
250 | / pub fn copy_all_but_n_lines<R: Read, W: Write>(
251 | |     mut reader: R,
252 | |     writer: &mut W,
253 | |     n: usize,
254 | |     separator: u8,
255 | | ) -> std::io::Result<usize> {
    | |___________________________^
    |
note: first possible panic found here
   --> src/uu/head/src/take.rs:257:5
    |
257 |     assert!(n > 0);
    |     ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/take.rs:250:1
    |
250 | / pub fn copy_all_but_n_lines<R: Read, W: Write>(
251 | |     mut reader: R,
252 | |     writer: &mut W,
253 | |     n: usize,
254 | |     separator: u8,
255 | | ) -> std::io::Result<usize> {
    | |___________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: this could be a `const fn`
   --> src/uu/head/src/take.rs:351:1
    |
351 | / pub fn take_lines<R>(reader: R, limit: u64, separator: u8) -> TakeLines<R> {
352 | |     TakeLines {
353 | |         inner: reader,
354 | |         limit,
...   |
357 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
351 | pub const fn take_lines<R>(reader: R, limit: u64, separator: u8) -> TakeLines<R> {
    |     +++++

warning: this function could have a `#[must_use]` attribute
  --> src/uu/head/src/head.rs:72:1
   |
72 | pub fn uu_app() -> Command {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn uu_app() -> Command`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
   = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:162:5
    |
162 |     fn from(matches: &ArgMatches) -> Result<Self, String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/head/src/head.rs:185:1
    |
185 | / fn arg_iterate<'a>(
186 | |     mut args: impl uucore::Args + 'a,
187 | | ) -> HeadResult<Box<dyn Iterator<Item = OsString> + 'a>> {
    | |________________________________________________________^
    |
note: first possible panic found here
   --> src/uu/head/src/head.rs:189:17
    |
189 |     let first = args.next().unwrap();
    |                 ^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:185:1
    |
185 | / fn arg_iterate<'a>(
186 | |     mut args: impl uucore::Args + 'a,
187 | | ) -> HeadResult<Box<dyn Iterator<Item = OsString> + 'a>> {
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: use Option::map_or_else instead of an if let/else
   --> src/uu/head/src/head.rs:191:9
    |
191 | /         if let Some(s) = second.to_str() {
192 | |             match parse::parse_obsolete(s) {
193 | |                 Some(Ok(iter)) => Ok(Box::new(vec![first].into_iter().chain(iter).chain(args))),
194 | |                 Some(Err(parse::ParseError)) => Err(HeadError::ParseError(format!(
...   |
201 | |             Err(HeadError::BadEncoding)
202 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
191 ~         second.to_str().map_or_else(|| Err(HeadError::BadEncoding), |s| match parse::parse_obsolete(s) {
192 +                 Some(Ok(iter)) => Ok(Box::new(vec![first].into_iter().chain(iter).chain(args))),
193 +                 Some(Err(parse::ParseError)) => Err(HeadError::ParseError(format!(
194 +                     "bad argument format: {}",
195 +                     s.quote()
196 +                 ))),
197 +                 None => Ok(Box::new(vec![first, second].into_iter().chain(args))),
198 +             })
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:220:5
    |
220 |     pub fn get_from(matches: &ArgMatches) -> Result<Self, String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: use Option::map_or_else instead of an if let/else
   --> src/uu/head/src/head.rs:230:25
    |
230 |           options.files = match matches.get_many::<String>(options::FILES_NAME) {
    |  _________________________^
231 | |             Some(v) => v.cloned().collect(),
232 | |             None => vec!["-".to_owned()],
233 | |         };
    | |_________^ help: try: `matches.get_many::<String>(options::FILES_NAME).map_or_else(|| vec!["-".to_owned()], |v| v.cloned().collect())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: this argument is passed by value, but not consumed in the function body
   --> src/uu/head/src/head.rs:240:30
    |
240 | fn wrap_in_stdout_error(err: io::Error) -> io::Error {
    |                              ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
    = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`
help: consider taking a reference instead
    |
240 | fn wrap_in_stdout_error(err: &io::Error) -> io::Error {
    |                              +

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:247:1
    |
247 | fn read_n_bytes(input: impl Read, n: u64) -> io::Result<u64> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:265:1
    |
265 | fn read_n_lines(input: &mut impl io::BufRead, n: u64, separator: u8) -> io::Result<u64> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/head/src/head.rs:288:1
    |
288 | fn read_but_last_n_bytes(mut input: impl Read, n: u64) -> io::Result<u64> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/head/src/head.rs:294:25
    |
294 |           bytes_written = copy_all_but_n_bytes(&mut input, &mut stdout, n)
    |  _________________________^
295 | |             .map_err(wrap_in_stdout_error)?
296 | |             .try_into()
297 | |             .unwrap();
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:288:1
    |
288 | fn read_but_last_n_bytes(mut input: impl Read, n: u64) -> io::Result<u64> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/head/src/head.rs:307:1
    |
307 | fn read_but_last_n_lines(mut input: impl Read, n: u64, separator: u8) -> io::Result<u64> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/head/src/head.rs:315:25
    |
315 |           bytes_written = copy_all_but_n_lines(input, &mut stdout, n, separator)
    |  _________________________^
316 | |             .map_err(wrap_in_stdout_error)?
317 | |             .try_into()
318 | |             .unwrap();
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:307:1
    |
307 | fn read_but_last_n_lines(mut input: impl Read, n: u64, separator: u8) -> io::Result<u64> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/head/src/head.rs:360:1
    |
360 | / fn find_nth_line_from_end<R>(input: &mut R, n: u64, separator: u8) -> io::Result<u64>
361 | | where
362 | |     R: Read + Seek,
    | |___________________^
    |
note: first possible panic found here
   --> src/uu/head/src/head.rs:374:69
    |
374 |         let bytes_to_read_this_loop = bytes_remaining_to_search.min(BUF_SIZE.try_into().unwrap());
    |                                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: allocating a local array larger than 16384 bytes
   --> src/uu/head/src/head.rs:366:22
    |
366 |     let mut buffer = [0u8; BUF_SIZE];
    |                      ^^^^^^^^^^^^^^^
    |
    = help: consider allocating on the heap with `vec![0u8; BUF_SIZE].into_boxed_slice()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_stack_arrays
    = note: `-W clippy::large-stack-arrays` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::large_stack_arrays)]`

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/head/src/head.rs:398:1
    |
398 | fn is_seekable(input: &mut File) -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/head/src/head.rs:402:39
    |
402 |         && input.seek(SeekFrom::Start(current_pos.unwrap())).is_ok()
    |                                       ^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:405:1
    |
405 | fn head_backwards_file(input: &mut File, options: &HeadOptions) -> io::Result<u64> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:416:1
    |
416 | fn head_backwards_without_seek_file(input: &mut File, options: &HeadOptions) -> io::Result<u64> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:424:1
    |
424 | fn head_backwards_on_seekable_file(input: &mut File, options: &HeadOptions) -> io::Result<u64> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:442:1
    |
442 | fn head_file(input: &mut File, options: &HeadOptions) -> io::Result<u64> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:455:1
    |
455 | fn uu_head(options: &HeadOptions) -> UResult<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/head/src/head.rs:546:1
    |
546 | pub fn uumain(args: impl uucore::Args) -> UResult<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: `uu_head` (lib) generated 74 warnings (19 duplicates) (run `cargo clippy --fix --lib -p uu_head` to apply 16 suggestions)
warning: `uu_head` (bin "head") generated 8 warnings (8 duplicates)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 22.87s
