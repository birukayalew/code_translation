   Compiling libc v0.2.158
   Compiling rust v0.0.0 (/mnt/c/Users/sebir/Documents/summer/Research/c2saferrust/coreutils/src/pwd/rust_WIP)
warning: missing documentation for the crate
  --> build.rs:1:1
   |
1  | / #[cfg(all(unix, not(target_os = "macos")))]
2  | | fn main() {
3  | |     // add unix dependencies below
4  | |     // println!("cargo:rustc-flags=-l readline");
...  |
10 | |     // println!("cargo:rustc-flags=-l edit");
11 | | }
   | |_^
   |
   = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `rust` (build script) generated 1 warning
warning: use of `println!`
   --> src/version_etc.rs:233:5
    |
233 |     println!();
    |     ^^^^^^^^^^
    |
    = note: `-W clippy::print-stdout` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/version_etc.rs:234:5
    |
234 | /     println!(
235 | |         "{}",
236 | |         unsafe { CStr::from_ptr(gettext(b"Report bugs to: \0".as_ptr() as *const c_char)).to_string_lossy() }
237 | |     );
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/version_etc.rs:238:5
    |
238 | /     println!(
239 | |         "{} home page: <{}>",
240 | |         unsafe { CStr::from_ptr(gettext(b"GNU coreutils\0".as_ptr() as *const c_char)).to_string_lossy() },
241 | |         unsafe { CStr::from_ptr(b"https://www.gnu.org/software/coreutils/\0".as_ptr() as *const c_char).to_string_lossy() }
242 | |     );
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/version_etc.rs:243:5
    |
243 | /     println!(
244 | |         "General help using GNU software: <{}>",
245 | |         unsafe { CStr::from_ptr(b"https://www.gnu.org/gethelp/\0".as_ptr() as *const c_char).to_string_lossy() }
246 | |     );
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: unused import: `std::ops::RangeInclusive`
  --> src/c_ctype.rs:15:5
   |
15 | use std::ops::RangeInclusive;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::os::raw::c_char`
 --> src/closeout.rs:3:5
  |
3 | use std::os::raw::c_char;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `c_int`, `c_long`
 --> src/fclose.rs:1:12
  |
1 | use libc::{c_int, c_long};
  |            ^^^^^  ^^^^^^

warning: unused import: `std::os::raw::c_void`
 --> src/fclose.rs:2:5
  |
2 | use std::os::raw::c_void;
  |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::os::raw::c_int`
 --> src/fseeko.rs:1:5
  |
1 | use std::os::raw::c_int;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::mem`
 --> src/ialloc.rs:3:5
  |
3 | use std::mem;
  |     ^^^^^^^^

warning: unused import: `std::mem`
 --> src/mbszero.rs:1:5
  |
1 | use std::mem;
  |     ^^^^^^^^

warning: unused import: `std::os::raw::c_char`
  --> src/quotearg.rs:39:5
   |
39 | use std::os::raw::c_char;
   |     ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::mem`
  --> src/quotearg.rs:41:5
   |
41 | use std::mem;
   |     ^^^^^^^^

warning: unused import: `std::ffi::CString`
 --> src/root_dev_ino.rs:1:5
  |
1 | use std::ffi::CString;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `libc::stat as libc_stat`
 --> src/same_inode.rs:1:5
  |
1 | use libc::stat as libc_stat;
  |     ^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::slice`
 --> src/setlocale_null_unlocked.rs:1:5
  |
1 | use std::slice;
  |     ^^^^^^^^^^

warning: unused import: `std::process`
 --> src/xalloc_die.rs:1:5
  |
1 | use std::process;
  |     ^^^^^^^^^^^^

warning: unused import: `std::slice`
  --> src/xmalloc.rs:11:5
   |
11 | use std::slice;
   |     ^^^^^^^^^^

warning: using a potentially dangerous silent `as` conversion
  --> src/c_ctype.rs:45:10
   |
45 |     c == ' ' as i32 || c == '\t' as i32
   |          ^^^^^^^^^^
   |
   = note: `-W clippy::as-conversions` implied by `-W clippy::restriction`
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_ctype.rs:45:29
   |
45 |     c == ' ' as i32 || c == '\t' as i32
   |                             ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_ctype.rs:81:30
   |
81 |     (b'a'..=b'z').contains(&(c as u8))
   |                              ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/c_ctype.rs:126:13
    |
126 |     if c >= 'A' as i32 && c <= 'Z' as i32 {
    |             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/c_ctype.rs:126:32
    |
126 |     if c >= 'A' as i32 && c <= 'Z' as i32 {
    |                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/c_ctype.rs:127:21
    |
127 |         return c - ('A' as i32 - 'a' as i32);
    |                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/c_ctype.rs:127:34
    |
127 |         return c - ('A' as i32 - 'a' as i32);
    |                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/c_ctype.rs:137:16
    |
137 |         return (c as u8 - b'a' + b'A') as char;
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/c_ctype.rs:137:17
    |
137 |         return (c as u8 - b'a' + b'A') as char;
    |                 ^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
 --> src/c_strcasecmp.rs:7:24
  |
7 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |                        ^^^^^^^^^^
  |
  = help: consider using a safe wrapper for this conversion
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
 --> src/c_strcasecmp.rs:7:37
  |
7 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |                                     ^^^^^^^^^^
  |
  = help: consider using a safe wrapper for this conversion
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:14:42
   |
14 |     let c1: Vec<u8> = s1.bytes().map(|b| c_tolower(b as i32) as u8).collect();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:14:52
   |
14 |     let c1: Vec<u8> = s1.bytes().map(|b| c_tolower(b as i32) as u8).collect();
   |                                                    ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:15:42
   |
15 |     let c2: Vec<u8> = s2.bytes().map(|b| c_tolower(b as i32) as u8).collect();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:15:52
   |
15 |     let c2: Vec<u8> = s2.bytes().map(|b| c_tolower(b as i32) as u8).collect();
   |                                                    ^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:20:20
   |
20 |             return c1[i] as libc::c_int - c2[i] as libc::c_int;
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:20:43
   |
20 |             return c1[i] as libc::c_int - c2[i] as libc::c_int;
   |                                           ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:24:5
   |
24 |     c1.len() as libc::c_int - c2.len() as libc::c_int
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:24:31
   |
24 |     c1.len() as libc::c_int - c2.len() as libc::c_int
   |                               ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:65:45
   |
65 | static mut file_name: *const libc::c_char = 0 as *const libc::c_char;
   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:84:32
   |
84 |     if close_stream(stdout) != 0 as libc::c_int
   |                                ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:85:14
   |
85 |         && !(ignore_EPIPE as libc::c_int != 0
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:86:39
   |
86 |             && *__errno_location() == 32 as libc::c_int)
   |                                       ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:89:13
   |
89 |             b"write error\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:89:13
   |
89 |             b"write error\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/closeout.rs:133:16
    |
133 |           } else {
    |  ________________^
134 | |             if 0 != 0 {
135 | |                 error(
136 | |                     0 as libc::c_int,
...   |
171 | |             };
172 | |         }
    | |_________^
    |
    = note: `-W clippy::collapsible-else-if` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
133 ~         } else if 0 != 0 {
134 +             error(
135 +                 0 as libc::c_int,
136 +                 *__errno_location(),
137 +                 b"%s\0" as *const u8 as *const libc::c_char,
138 +                 write_error,
139 +             );
140 +             if 0 as libc::c_int != 0 as libc::c_int {
141 +                 unreachable!();
142 +             } else {};
143 +         } else {
144 +             ({
145 +                 let __errstatus: libc::c_int = 0 as libc::c_int;
146 +                 error(
147 +                     __errstatus,
148 +                     *__errno_location(),
149 +                     b"%s\0" as *const u8 as *const libc::c_char,
150 +                     write_error,
151 +                 );
152 +                 if __errstatus != 0 as libc::c_int {
153 +                     unreachable!();
154 +                 } else {};
155 +                 
156 +             });
157 +             ({
158 +                 let __errstatus: libc::c_int = 0 as libc::c_int;
159 +                 error(
160 +                     __errstatus,
161 +                     *__errno_location(),
162 +                     b"%s\0" as *const u8 as *const libc::c_char,
163 +                     write_error,
164 +                 );
165 +                 if __errstatus != 0 as libc::c_int {
166 +                     unreachable!();
167 +                 } else {};
168 +                 
169 +             });
170 +         }
    |

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:94:21
   |
94 |                     0 as libc::c_int,
   |                     ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:96:21
   |
96 |                     b"%s: %s\0" as *const u8 as *const libc::c_char,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:96:21
   |
96 |                     b"%s: %s\0" as *const u8 as *const libc::c_char,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:100:20
    |
100 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:100:40
    |
100 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:105:52
    |
105 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:109:25
    |
109 |                         b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:109:25
    |
109 |                         b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:113:39
    |
113 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:119:52
    |
119 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:123:25
    |
123 |                         b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:123:25
    |
123 |                         b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:127:39
    |
127 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:136:21
    |
136 |                     0 as libc::c_int,
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:138:21
    |
138 |                     b"%s\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:138:21
    |
138 |                     b"%s\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:141:20
    |
141 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:141:40
    |
141 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:146:52
    |
146 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:150:25
    |
150 |                         b"%s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:150:25
    |
150 |                         b"%s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:153:39
    |
153 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:159:52
    |
159 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:163:25
    |
163 |                         b"%s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:163:25
    |
163 |                         b"%s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:166:39
    |
166 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:175:8
    |
175 |     if SANITIZE_ADDRESS as libc::c_int == 0 && close_stream(stderr) != 0 as libc::c_int {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:175:72
    |
175 |     if SANITIZE_ADDRESS as libc::c_int == 0 && close_stream(stderr) != 0 as libc::c_int {
    |                                                                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
 --> src/exitfail.rs:3:44
  |
3 | pub static mut exit_failure: libc::c_int = 1 as libc::c_int;
  |                                            ^^^^^^^^^^^^^^^^
  |
  = help: consider using a safe wrapper for this conversion
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fflush.rs:50:23
   |
50 |     if (*fp)._flags & 0x100 as libc::c_int != 0 {
   |                       ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fflush.rs:51:24
   |
51 |         rpl_fseeko(fp, 0 as libc::c_int as off_t, 1 as libc::c_int);
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fflush.rs:51:24
   |
51 |         rpl_fseeko(fp, 0 as libc::c_int as off_t, 1 as libc::c_int);
   |                        ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fflush.rs:51:51
   |
51 |         rpl_fseeko(fp, 0 as libc::c_int as off_t, 1 as libc::c_int);
   |                                                   ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fflush.rs:56:52
   |
56 |     if stream.is_null() || !(__freading(stream) != 0 as libc::c_int) {
   |                                                    ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fseeko.rs:64:19
   |
64 |         if pos == -(1 as libc::c_int) as libc::c_long {
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fseeko.rs:64:21
   |
64 |         if pos == -(1 as libc::c_int) as libc::c_long {
   |                     ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fseeko.rs:65:22
   |
65 |             return -(1 as libc::c_int);
   |                      ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fseeko.rs:67:24
   |
67 |         fp._flags &= !(0x10 as libc::c_int);
   |                        ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fseeko.rs:69:16
   |
69 |         return 0 as libc::c_int;
   |                ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/hard_locale.rs:20:13
   |
20 |             locale.len() as libc::c_ulong,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/ialloc.rs:42:9
   |
42 |         vec.as_mut_ptr() as *mut libc::c_void
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: integer type suffix should be separated by an underscore
  --> src/ialloc.rs:65:15
   |
65 |     Some(vec![0u8; total_size]) // Allocate and initialize the Vec with zeroes
   |               ^^^ help: add an underscore: `0_u8`
   |
   = note: `-W clippy::unseparated-literal-suffix` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix

warning: using a potentially dangerous silent `as` conversion
  --> src/ialloc.rs:87:8
   |
87 |     if s as usize <= usize::MAX {
   |        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/ialloc.rs:88:38
   |
88 |         let vec = Vec::with_capacity(s as usize);
   |                                      ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/ialloc.rs:100:27
    |
100 |     *__errno_location() = 12 as libc::c_int;
    |                           ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/ialloc.rs:101:12
    |
101 |     return 0 as *mut libc::c_void;
    |            ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
  --> src/localcharset.rs:10:36
   |
10 | pub const _NL_NUM: C2RustUnnamed = 786449;
   |                                    ^^^^^^ help: consider: `786_449`
   |
   = note: `-W clippy::unreadable-literal` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:11:54
   |
11 | pub const _NL_NUM_LC_IDENTIFICATION: C2RustUnnamed = 786448;
   |                                                      ^^^^^^ help: consider: `786_448`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:12:55
   |
12 | pub const _NL_IDENTIFICATION_CODESET: C2RustUnnamed = 786447;
   |                                                       ^^^^^^ help: consider: `786_447`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:13:56
   |
13 | pub const _NL_IDENTIFICATION_CATEGORY: C2RustUnnamed = 786446;
   |                                                        ^^^^^^ help: consider: `786_446`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:14:52
   |
14 | pub const _NL_IDENTIFICATION_DATE: C2RustUnnamed = 786445;
   |                                                    ^^^^^^ help: consider: `786_445`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:15:56
   |
15 | pub const _NL_IDENTIFICATION_REVISION: C2RustUnnamed = 786444;
   |                                                        ^^^^^^ help: consider: `786_444`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:16:60
   |
16 | pub const _NL_IDENTIFICATION_ABBREVIATION: C2RustUnnamed = 786443;
   |                                                            ^^^^^^ help: consider: `786_443`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:17:59
   |
17 | pub const _NL_IDENTIFICATION_APPLICATION: C2RustUnnamed = 786442;
   |                                                           ^^^^^^ help: consider: `786_442`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:18:56
   |
18 | pub const _NL_IDENTIFICATION_AUDIENCE: C2RustUnnamed = 786441;
   |                                                        ^^^^^^ help: consider: `786_441`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:19:57
   |
19 | pub const _NL_IDENTIFICATION_TERRITORY: C2RustUnnamed = 786440;
   |                                                         ^^^^^^ help: consider: `786_440`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:20:56
   |
20 | pub const _NL_IDENTIFICATION_LANGUAGE: C2RustUnnamed = 786439;
   |                                                        ^^^^^^ help: consider: `786_439`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:21:51
   |
21 | pub const _NL_IDENTIFICATION_FAX: C2RustUnnamed = 786438;
   |                                                   ^^^^^^ help: consider: `786_438`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:22:51
   |
22 | pub const _NL_IDENTIFICATION_TEL: C2RustUnnamed = 786437;
   |                                                   ^^^^^^ help: consider: `786_437`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:23:53
   |
23 | pub const _NL_IDENTIFICATION_EMAIL: C2RustUnnamed = 786436;
   |                                                     ^^^^^^ help: consider: `786_436`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:24:55
   |
24 | pub const _NL_IDENTIFICATION_CONTACT: C2RustUnnamed = 786435;
   |                                                       ^^^^^^ help: consider: `786_435`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:25:55
   |
25 | pub const _NL_IDENTIFICATION_ADDRESS: C2RustUnnamed = 786434;
   |                                                       ^^^^^^ help: consider: `786_434`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:26:54
   |
26 | pub const _NL_IDENTIFICATION_SOURCE: C2RustUnnamed = 786433;
   |                                                      ^^^^^^ help: consider: `786_433`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:27:53
   |
27 | pub const _NL_IDENTIFICATION_TITLE: C2RustUnnamed = 786432;
   |                                                     ^^^^^^ help: consider: `786_432`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:28:51
   |
28 | pub const _NL_NUM_LC_MEASUREMENT: C2RustUnnamed = 720898;
   |                                                   ^^^^^^ help: consider: `720_898`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:29:52
   |
29 | pub const _NL_MEASUREMENT_CODESET: C2RustUnnamed = 720897;
   |                                                    ^^^^^^ help: consider: `720_897`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:30:56
   |
30 | pub const _NL_MEASUREMENT_MEASUREMENT: C2RustUnnamed = 720896;
   |                                                        ^^^^^^ help: consider: `720_896`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:31:49
   |
31 | pub const _NL_NUM_LC_TELEPHONE: C2RustUnnamed = 655365;
   |                                                 ^^^^^^ help: consider: `655_365`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:32:50
   |
32 | pub const _NL_TELEPHONE_CODESET: C2RustUnnamed = 655364;
   |                                                  ^^^^^^ help: consider: `655_364`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:33:53
   |
33 | pub const _NL_TELEPHONE_INT_PREFIX: C2RustUnnamed = 655363;
   |                                                     ^^^^^^ help: consider: `655_363`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:34:53
   |
34 | pub const _NL_TELEPHONE_INT_SELECT: C2RustUnnamed = 655362;
   |                                                     ^^^^^^ help: consider: `655_362`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:35:54
   |
35 | pub const _NL_TELEPHONE_TEL_DOM_FMT: C2RustUnnamed = 655361;
   |                                                      ^^^^^^ help: consider: `655_361`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:36:54
   |
36 | pub const _NL_TELEPHONE_TEL_INT_FMT: C2RustUnnamed = 655360;
   |                                                      ^^^^^^ help: consider: `655_360`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:37:47
   |
37 | pub const _NL_NUM_LC_ADDRESS: C2RustUnnamed = 589837;
   |                                               ^^^^^^ help: consider: `589_837`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:38:48
   |
38 | pub const _NL_ADDRESS_CODESET: C2RustUnnamed = 589836;
   |                                                ^^^^^^ help: consider: `589_836`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:39:49
   |
39 | pub const _NL_ADDRESS_LANG_LIB: C2RustUnnamed = 589835;
   |                                                 ^^^^^^ help: consider: `589_835`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:40:50
   |
40 | pub const _NL_ADDRESS_LANG_TERM: C2RustUnnamed = 589834;
   |                                                  ^^^^^^ help: consider: `589_834`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:41:48
   |
41 | pub const _NL_ADDRESS_LANG_AB: C2RustUnnamed = 589833;
   |                                                ^^^^^^ help: consider: `589_833`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:42:50
   |
42 | pub const _NL_ADDRESS_LANG_NAME: C2RustUnnamed = 589832;
   |                                                  ^^^^^^ help: consider: `589_832`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:43:53
   |
43 | pub const _NL_ADDRESS_COUNTRY_ISBN: C2RustUnnamed = 589831;
   |                                                     ^^^^^^ help: consider: `589_831`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:44:52
   |
44 | pub const _NL_ADDRESS_COUNTRY_NUM: C2RustUnnamed = 589830;
   |                                                    ^^^^^^ help: consider: `589_830`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:45:52
   |
45 | pub const _NL_ADDRESS_COUNTRY_CAR: C2RustUnnamed = 589829;
   |                                                    ^^^^^^ help: consider: `589_829`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:46:52
   |
46 | pub const _NL_ADDRESS_COUNTRY_AB3: C2RustUnnamed = 589828;
   |                                                    ^^^^^^ help: consider: `589_828`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:47:52
   |
47 | pub const _NL_ADDRESS_COUNTRY_AB2: C2RustUnnamed = 589827;
   |                                                    ^^^^^^ help: consider: `589_827`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:48:53
   |
48 | pub const _NL_ADDRESS_COUNTRY_POST: C2RustUnnamed = 589826;
   |                                                     ^^^^^^ help: consider: `589_826`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:49:53
   |
49 | pub const _NL_ADDRESS_COUNTRY_NAME: C2RustUnnamed = 589825;
   |                                                     ^^^^^^ help: consider: `589_825`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:50:51
   |
50 | pub const _NL_ADDRESS_POSTAL_FMT: C2RustUnnamed = 589824;
   |                                                   ^^^^^^ help: consider: `589_824`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:51:44
   |
51 | pub const _NL_NUM_LC_NAME: C2RustUnnamed = 524295;
   |                                            ^^^^^^ help: consider: `524_295`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:51:44
   |
51 | pub const _NL_NUM_LC_NAME: C2RustUnnamed = 524295;
   |                                            ^^^^^^ help: consider: `0x0008_0007`
   |
   = note: `-W clippy::decimal-literal-representation` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:52:45
   |
52 | pub const _NL_NAME_CODESET: C2RustUnnamed = 524294;
   |                                             ^^^^^^ help: consider: `524_294`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:52:45
   |
52 | pub const _NL_NAME_CODESET: C2RustUnnamed = 524294;
   |                                             ^^^^^^ help: consider: `0x0008_0006`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:53:45
   |
53 | pub const _NL_NAME_NAME_MS: C2RustUnnamed = 524293;
   |                                             ^^^^^^ help: consider: `524_293`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:53:45
   |
53 | pub const _NL_NAME_NAME_MS: C2RustUnnamed = 524293;
   |                                             ^^^^^^ help: consider: `0x0008_0005`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:54:47
   |
54 | pub const _NL_NAME_NAME_MISS: C2RustUnnamed = 524292;
   |                                               ^^^^^^ help: consider: `524_292`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:54:47
   |
54 | pub const _NL_NAME_NAME_MISS: C2RustUnnamed = 524292;
   |                                               ^^^^^^ help: consider: `0x0008_0004`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:55:46
   |
55 | pub const _NL_NAME_NAME_MRS: C2RustUnnamed = 524291;
   |                                              ^^^^^^ help: consider: `524_291`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:55:46
   |
55 | pub const _NL_NAME_NAME_MRS: C2RustUnnamed = 524291;
   |                                              ^^^^^^ help: consider: `0x0008_0003`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:56:45
   |
56 | pub const _NL_NAME_NAME_MR: C2RustUnnamed = 524290;
   |                                             ^^^^^^ help: consider: `524_290`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:56:45
   |
56 | pub const _NL_NAME_NAME_MR: C2RustUnnamed = 524290;
   |                                             ^^^^^^ help: consider: `0x0008_0002`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:57:46
   |
57 | pub const _NL_NAME_NAME_GEN: C2RustUnnamed = 524289;
   |                                              ^^^^^^ help: consider: `524_289`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:57:46
   |
57 | pub const _NL_NAME_NAME_GEN: C2RustUnnamed = 524289;
   |                                              ^^^^^^ help: consider: `0x0008_0001`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:58:46
   |
58 | pub const _NL_NAME_NAME_FMT: C2RustUnnamed = 524288;
   |                                              ^^^^^^ help: consider: `524_288`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:58:46
   |
58 | pub const _NL_NAME_NAME_FMT: C2RustUnnamed = 524288;
   |                                              ^^^^^^ help: consider: `0x0008_0000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:59:45
   |
59 | pub const _NL_NUM_LC_PAPER: C2RustUnnamed = 458755;
   |                                             ^^^^^^ help: consider: `458_755`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:60:46
   |
60 | pub const _NL_PAPER_CODESET: C2RustUnnamed = 458754;
   |                                              ^^^^^^ help: consider: `458_754`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:61:44
   |
61 | pub const _NL_PAPER_WIDTH: C2RustUnnamed = 458753;
   |                                            ^^^^^^ help: consider: `458_753`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:62:45
   |
62 | pub const _NL_PAPER_HEIGHT: C2RustUnnamed = 458752;
   |                                             ^^^^^^ help: consider: `458_752`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:62:45
   |
62 | pub const _NL_PAPER_HEIGHT: C2RustUnnamed = 458752;
   |                                             ^^^^^^ help: consider: `0x0007_0000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:63:48
   |
63 | pub const _NL_NUM_LC_MESSAGES: C2RustUnnamed = 327685;
   |                                                ^^^^^^ help: consider: `327_685`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:64:49
   |
64 | pub const _NL_MESSAGES_CODESET: C2RustUnnamed = 327684;
   |                                                 ^^^^^^ help: consider: `327_684`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:65:36
   |
65 | pub const __NOSTR: C2RustUnnamed = 327683;
   |                                    ^^^^^^ help: consider: `327_683`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:66:37
   |
66 | pub const __YESSTR: C2RustUnnamed = 327682;
   |                                     ^^^^^^ help: consider: `327_682`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:67:37
   |
67 | pub const __NOEXPR: C2RustUnnamed = 327681;
   |                                     ^^^^^^ help: consider: `327_681`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:68:38
   |
68 | pub const __YESEXPR: C2RustUnnamed = 327680;
   |                                      ^^^^^^ help: consider: `327_680`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:69:47
   |
69 | pub const _NL_NUM_LC_NUMERIC: C2RustUnnamed = 65542;
   |                                               ^^^^^ help: consider: `0x0001_0006`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:70:48
   |
70 | pub const _NL_NUMERIC_CODESET: C2RustUnnamed = 65541;
   |                                                ^^^^^ help: consider: `0x0001_0005`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:71:57
   |
71 | pub const _NL_NUMERIC_THOUSANDS_SEP_WC: C2RustUnnamed = 65540;
   |                                                         ^^^^^ help: consider: `0x0001_0004`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:72:57
   |
72 | pub const _NL_NUMERIC_DECIMAL_POINT_WC: C2RustUnnamed = 65539;
   |                                                         ^^^^^ help: consider: `0x0001_0003`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:73:39
   |
73 | pub const __GROUPING: C2RustUnnamed = 65538;
   |                                       ^^^^^ help: consider: `0x0001_0002`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:74:36
   |
74 | pub const THOUSEP: C2RustUnnamed = 65537;
   |                                    ^^^^^ help: consider: `0x0001_0001`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:75:44
   |
75 | pub const __THOUSANDS_SEP: C2RustUnnamed = 65537;
   |                                            ^^^^^ help: consider: `0x0001_0001`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:76:38
   |
76 | pub const RADIXCHAR: C2RustUnnamed = 65536;
   |                                      ^^^^^ help: consider: `0x0001_0000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:77:44
   |
77 | pub const __DECIMAL_POINT: C2RustUnnamed = 65536;
   |                                            ^^^^^ help: consider: `0x0001_0000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:78:48
   |
78 | pub const _NL_NUM_LC_MONETARY: C2RustUnnamed = 262190;
   |                                                ^^^^^^ help: consider: `262_190`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:79:49
   |
79 | pub const _NL_MONETARY_CODESET: C2RustUnnamed = 262189;
   |                                                 ^^^^^^ help: consider: `262_189`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:80:58
   |
80 | pub const _NL_MONETARY_THOUSANDS_SEP_WC: C2RustUnnamed = 262188;
   |                                                          ^^^^^^ help: consider: `262_188`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:81:58
   |
81 | pub const _NL_MONETARY_DECIMAL_POINT_WC: C2RustUnnamed = 262187;
   |                                                          ^^^^^^ help: consider: `262_187`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:82:57
   |
82 | pub const _NL_MONETARY_CONVERSION_RATE: C2RustUnnamed = 262186;
   |                                                         ^^^^^^ help: consider: `262_186`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:83:54
   |
83 | pub const _NL_MONETARY_DUO_VALID_TO: C2RustUnnamed = 262185;
   |                                                      ^^^^^^ help: consider: `262_185`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:84:56
   |
84 | pub const _NL_MONETARY_DUO_VALID_FROM: C2RustUnnamed = 262184;
   |                                                        ^^^^^^ help: consider: `262_184`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:85:54
   |
85 | pub const _NL_MONETARY_UNO_VALID_TO: C2RustUnnamed = 262183;
   |                                                      ^^^^^^ help: consider: `262_183`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:86:56
   |
86 | pub const _NL_MONETARY_UNO_VALID_FROM: C2RustUnnamed = 262182;
   |                                                        ^^^^^^ help: consider: `262_182`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:87:61
   |
87 | pub const _NL_MONETARY_DUO_INT_N_SIGN_POSN: C2RustUnnamed = 262181;
   |                                                             ^^^^^^ help: consider: `262_181`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:88:61
   |
88 | pub const _NL_MONETARY_DUO_INT_P_SIGN_POSN: C2RustUnnamed = 262180;
   |                                                             ^^^^^^ help: consider: `262_180`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:89:57
   |
89 | pub const _NL_MONETARY_DUO_N_SIGN_POSN: C2RustUnnamed = 262179;
   |                                                         ^^^^^^ help: consider: `262_179`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:90:57
   |
90 | pub const _NL_MONETARY_DUO_P_SIGN_POSN: C2RustUnnamed = 262178;
   |                                                         ^^^^^^ help: consider: `262_178`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:91:64
   |
91 | pub const _NL_MONETARY_DUO_INT_N_SEP_BY_SPACE: C2RustUnnamed = 262177;
   |                                                                ^^^^^^ help: consider: `262_177`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:92:63
   |
92 | pub const _NL_MONETARY_DUO_INT_N_CS_PRECEDES: C2RustUnnamed = 262176;
   |                                                               ^^^^^^ help: consider: `262_176`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:93:64
   |
93 | pub const _NL_MONETARY_DUO_INT_P_SEP_BY_SPACE: C2RustUnnamed = 262175;
   |                                                                ^^^^^^ help: consider: `262_175`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:94:63
   |
94 | pub const _NL_MONETARY_DUO_INT_P_CS_PRECEDES: C2RustUnnamed = 262174;
   |                                                               ^^^^^^ help: consider: `262_174`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:95:60
   |
95 | pub const _NL_MONETARY_DUO_N_SEP_BY_SPACE: C2RustUnnamed = 262173;
   |                                                            ^^^^^^ help: consider: `262_173`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:96:59
   |
96 | pub const _NL_MONETARY_DUO_N_CS_PRECEDES: C2RustUnnamed = 262172;
   |                                                           ^^^^^^ help: consider: `262_172`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:97:60
   |
97 | pub const _NL_MONETARY_DUO_P_SEP_BY_SPACE: C2RustUnnamed = 262171;
   |                                                            ^^^^^^ help: consider: `262_171`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:98:59
   |
98 | pub const _NL_MONETARY_DUO_P_CS_PRECEDES: C2RustUnnamed = 262170;
   |                                                           ^^^^^^ help: consider: `262_170`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:99:57
   |
99 | pub const _NL_MONETARY_DUO_FRAC_DIGITS: C2RustUnnamed = 262169;
   |                                                         ^^^^^^ help: consider: `262_169`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:100:61
    |
100 | pub const _NL_MONETARY_DUO_INT_FRAC_DIGITS: C2RustUnnamed = 262168;
    |                                                             ^^^^^^ help: consider: `262_168`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:101:61
    |
101 | pub const _NL_MONETARY_DUO_CURRENCY_SYMBOL: C2RustUnnamed = 262167;
    |                                                             ^^^^^^ help: consider: `262_167`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:102:61
    |
102 | pub const _NL_MONETARY_DUO_INT_CURR_SYMBOL: C2RustUnnamed = 262166;
    |                                                             ^^^^^^ help: consider: `262_166`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:103:46
    |
103 | pub const __INT_N_SIGN_POSN: C2RustUnnamed = 262165;
    |                                              ^^^^^^ help: consider: `262_165`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:104:46
    |
104 | pub const __INT_P_SIGN_POSN: C2RustUnnamed = 262164;
    |                                              ^^^^^^ help: consider: `262_164`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:105:49
    |
105 | pub const __INT_N_SEP_BY_SPACE: C2RustUnnamed = 262163;
    |                                                 ^^^^^^ help: consider: `262_163`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:106:48
    |
106 | pub const __INT_N_CS_PRECEDES: C2RustUnnamed = 262162;
    |                                                ^^^^^^ help: consider: `262_162`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:107:49
    |
107 | pub const __INT_P_SEP_BY_SPACE: C2RustUnnamed = 262161;
    |                                                 ^^^^^^ help: consider: `262_161`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:108:48
    |
108 | pub const __INT_P_CS_PRECEDES: C2RustUnnamed = 262160;
    |                                                ^^^^^^ help: consider: `262_160`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:109:50
    |
109 | pub const _NL_MONETARY_CRNCYSTR: C2RustUnnamed = 262159;
    |                                                  ^^^^^^ help: consider: `262_159`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:109:50
    |
109 | pub const _NL_MONETARY_CRNCYSTR: C2RustUnnamed = 262159;
    |                                                  ^^^^^^ help: consider: `0x0004_000F`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:110:42
    |
110 | pub const __N_SIGN_POSN: C2RustUnnamed = 262158;
    |                                          ^^^^^^ help: consider: `262_158`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:110:42
    |
110 | pub const __N_SIGN_POSN: C2RustUnnamed = 262158;
    |                                          ^^^^^^ help: consider: `0x0004_000E`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:111:42
    |
111 | pub const __P_SIGN_POSN: C2RustUnnamed = 262157;
    |                                          ^^^^^^ help: consider: `262_157`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:111:42
    |
111 | pub const __P_SIGN_POSN: C2RustUnnamed = 262157;
    |                                          ^^^^^^ help: consider: `0x0004_000D`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:112:45
    |
112 | pub const __N_SEP_BY_SPACE: C2RustUnnamed = 262156;
    |                                             ^^^^^^ help: consider: `262_156`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:112:45
    |
112 | pub const __N_SEP_BY_SPACE: C2RustUnnamed = 262156;
    |                                             ^^^^^^ help: consider: `0x0004_000C`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:113:44
    |
113 | pub const __N_CS_PRECEDES: C2RustUnnamed = 262155;
    |                                            ^^^^^^ help: consider: `262_155`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:113:44
    |
113 | pub const __N_CS_PRECEDES: C2RustUnnamed = 262155;
    |                                            ^^^^^^ help: consider: `0x0004_000B`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:114:45
    |
114 | pub const __P_SEP_BY_SPACE: C2RustUnnamed = 262154;
    |                                             ^^^^^^ help: consider: `262_154`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:114:45
    |
114 | pub const __P_SEP_BY_SPACE: C2RustUnnamed = 262154;
    |                                             ^^^^^^ help: consider: `0x0004_000A`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:115:44
    |
115 | pub const __P_CS_PRECEDES: C2RustUnnamed = 262153;
    |                                            ^^^^^^ help: consider: `262_153`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:115:44
    |
115 | pub const __P_CS_PRECEDES: C2RustUnnamed = 262153;
    |                                            ^^^^^^ help: consider: `0x0004_0009`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:116:42
    |
116 | pub const __FRAC_DIGITS: C2RustUnnamed = 262152;
    |                                          ^^^^^^ help: consider: `262_152`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:116:42
    |
116 | pub const __FRAC_DIGITS: C2RustUnnamed = 262152;
    |                                          ^^^^^^ help: consider: `0x0004_0008`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:117:46
    |
117 | pub const __INT_FRAC_DIGITS: C2RustUnnamed = 262151;
    |                                              ^^^^^^ help: consider: `262_151`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:117:46
    |
117 | pub const __INT_FRAC_DIGITS: C2RustUnnamed = 262151;
    |                                              ^^^^^^ help: consider: `0x0004_0007`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:118:44
    |
118 | pub const __NEGATIVE_SIGN: C2RustUnnamed = 262150;
    |                                            ^^^^^^ help: consider: `262_150`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:118:44
    |
118 | pub const __NEGATIVE_SIGN: C2RustUnnamed = 262150;
    |                                            ^^^^^^ help: consider: `0x0004_0006`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:119:44
    |
119 | pub const __POSITIVE_SIGN: C2RustUnnamed = 262149;
    |                                            ^^^^^^ help: consider: `262_149`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:119:44
    |
119 | pub const __POSITIVE_SIGN: C2RustUnnamed = 262149;
    |                                            ^^^^^^ help: consider: `0x0004_0005`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:120:43
    |
120 | pub const __MON_GROUPING: C2RustUnnamed = 262148;
    |                                           ^^^^^^ help: consider: `262_148`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:120:43
    |
120 | pub const __MON_GROUPING: C2RustUnnamed = 262148;
    |                                           ^^^^^^ help: consider: `0x0004_0004`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:121:48
    |
121 | pub const __MON_THOUSANDS_SEP: C2RustUnnamed = 262147;
    |                                                ^^^^^^ help: consider: `262_147`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:121:48
    |
121 | pub const __MON_THOUSANDS_SEP: C2RustUnnamed = 262147;
    |                                                ^^^^^^ help: consider: `0x0004_0003`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:122:48
    |
122 | pub const __MON_DECIMAL_POINT: C2RustUnnamed = 262146;
    |                                                ^^^^^^ help: consider: `262_146`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:122:48
    |
122 | pub const __MON_DECIMAL_POINT: C2RustUnnamed = 262146;
    |                                                ^^^^^^ help: consider: `0x0004_0002`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:123:46
    |
123 | pub const __CURRENCY_SYMBOL: C2RustUnnamed = 262145;
    |                                              ^^^^^^ help: consider: `262_145`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:123:46
    |
123 | pub const __CURRENCY_SYMBOL: C2RustUnnamed = 262145;
    |                                              ^^^^^^ help: consider: `0x0004_0001`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:124:46
    |
124 | pub const __INT_CURR_SYMBOL: C2RustUnnamed = 262144;
    |                                              ^^^^^^ help: consider: `262_144`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:124:46
    |
124 | pub const __INT_CURR_SYMBOL: C2RustUnnamed = 262144;
    |                                              ^^^^^^ help: consider: `0x0004_0000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:212:47
    |
212 | pub const _NL_NUM_LC_COLLATE: C2RustUnnamed = 196627;
    |                                               ^^^^^^ help: consider: `196_627`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:213:48
    |
213 | pub const _NL_COLLATE_CODESET: C2RustUnnamed = 196626;
    |                                                ^^^^^^ help: consider: `196_626`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:214:50
    |
214 | pub const _NL_COLLATE_COLLSEQWC: C2RustUnnamed = 196625;
    |                                                  ^^^^^^ help: consider: `196_625`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:215:50
    |
215 | pub const _NL_COLLATE_COLLSEQMB: C2RustUnnamed = 196624;
    |                                                  ^^^^^^ help: consider: `196_624`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:216:53
    |
216 | pub const _NL_COLLATE_SYMB_EXTRAMB: C2RustUnnamed = 196623;
    |                                                     ^^^^^^ help: consider: `196_623`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:217:53
    |
217 | pub const _NL_COLLATE_SYMB_TABLEMB: C2RustUnnamed = 196622;
    |                                                     ^^^^^^ help: consider: `196_622`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:218:57
    |
218 | pub const _NL_COLLATE_SYMB_HASH_SIZEMB: C2RustUnnamed = 196621;
    |                                                         ^^^^^^ help: consider: `196_621`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:219:51
    |
219 | pub const _NL_COLLATE_INDIRECTWC: C2RustUnnamed = 196620;
    |                                                   ^^^^^^ help: consider: `196_620`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:220:48
    |
220 | pub const _NL_COLLATE_EXTRAWC: C2RustUnnamed = 196619;
    |                                                ^^^^^^ help: consider: `196_619`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:221:49
    |
221 | pub const _NL_COLLATE_WEIGHTWC: C2RustUnnamed = 196618;
    |                                                 ^^^^^^ help: consider: `196_618`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:222:48
    |
222 | pub const _NL_COLLATE_TABLEWC: C2RustUnnamed = 196617;
    |                                                ^^^^^^ help: consider: `196_617`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:223:45
    |
223 | pub const _NL_COLLATE_GAP3: C2RustUnnamed = 196616;
    |                                             ^^^^^^ help: consider: `196_616`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:224:45
    |
224 | pub const _NL_COLLATE_GAP2: C2RustUnnamed = 196615;
    |                                             ^^^^^^ help: consider: `196_615`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:225:45
    |
225 | pub const _NL_COLLATE_GAP1: C2RustUnnamed = 196614;
    |                                             ^^^^^^ help: consider: `196_614`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:226:51
    |
226 | pub const _NL_COLLATE_INDIRECTMB: C2RustUnnamed = 196613;
    |                                                   ^^^^^^ help: consider: `196_613`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:227:48
    |
227 | pub const _NL_COLLATE_EXTRAMB: C2RustUnnamed = 196612;
    |                                                ^^^^^^ help: consider: `196_612`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:228:49
    |
228 | pub const _NL_COLLATE_WEIGHTMB: C2RustUnnamed = 196611;
    |                                                 ^^^^^^ help: consider: `196_611`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:229:48
    |
229 | pub const _NL_COLLATE_TABLEMB: C2RustUnnamed = 196610;
    |                                                ^^^^^^ help: consider: `196_610`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:230:49
    |
230 | pub const _NL_COLLATE_RULESETS: C2RustUnnamed = 196609;
    |                                                 ^^^^^^ help: consider: `196_609`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:231:47
    |
231 | pub const _NL_COLLATE_NRULES: C2RustUnnamed = 196608;
    |                                               ^^^^^^ help: consider: `196_608`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:232:44
    |
232 | pub const _NL_NUM_LC_TIME: C2RustUnnamed = 131231;
    |                                            ^^^^^^ help: consider: `131_231`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:233:45
    |
233 | pub const _NL_WABALTMON_12: C2RustUnnamed = 131230;
    |                                             ^^^^^^ help: consider: `131_230`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:234:45
    |
234 | pub const _NL_WABALTMON_11: C2RustUnnamed = 131229;
    |                                             ^^^^^^ help: consider: `131_229`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:235:45
    |
235 | pub const _NL_WABALTMON_10: C2RustUnnamed = 131228;
    |                                             ^^^^^^ help: consider: `131_228`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:236:44
    |
236 | pub const _NL_WABALTMON_9: C2RustUnnamed = 131227;
    |                                            ^^^^^^ help: consider: `131_227`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:237:44
    |
237 | pub const _NL_WABALTMON_8: C2RustUnnamed = 131226;
    |                                            ^^^^^^ help: consider: `131_226`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:238:44
    |
238 | pub const _NL_WABALTMON_7: C2RustUnnamed = 131225;
    |                                            ^^^^^^ help: consider: `131_225`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:239:44
    |
239 | pub const _NL_WABALTMON_6: C2RustUnnamed = 131224;
    |                                            ^^^^^^ help: consider: `131_224`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:240:44
    |
240 | pub const _NL_WABALTMON_5: C2RustUnnamed = 131223;
    |                                            ^^^^^^ help: consider: `131_223`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:241:44
    |
241 | pub const _NL_WABALTMON_4: C2RustUnnamed = 131222;
    |                                            ^^^^^^ help: consider: `131_222`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:242:44
    |
242 | pub const _NL_WABALTMON_3: C2RustUnnamed = 131221;
    |                                            ^^^^^^ help: consider: `131_221`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:243:44
    |
243 | pub const _NL_WABALTMON_2: C2RustUnnamed = 131220;
    |                                            ^^^^^^ help: consider: `131_220`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:244:44
    |
244 | pub const _NL_WABALTMON_1: C2RustUnnamed = 131219;
    |                                            ^^^^^^ help: consider: `131_219`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:245:44
    |
245 | pub const _NL_ABALTMON_12: C2RustUnnamed = 131218;
    |                                            ^^^^^^ help: consider: `131_218`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:246:44
    |
246 | pub const _NL_ABALTMON_11: C2RustUnnamed = 131217;
    |                                            ^^^^^^ help: consider: `131_217`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:247:44
    |
247 | pub const _NL_ABALTMON_10: C2RustUnnamed = 131216;
    |                                            ^^^^^^ help: consider: `131_216`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:248:43
    |
248 | pub const _NL_ABALTMON_9: C2RustUnnamed = 131215;
    |                                           ^^^^^^ help: consider: `131_215`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:249:43
    |
249 | pub const _NL_ABALTMON_8: C2RustUnnamed = 131214;
    |                                           ^^^^^^ help: consider: `131_214`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:250:43
    |
250 | pub const _NL_ABALTMON_7: C2RustUnnamed = 131213;
    |                                           ^^^^^^ help: consider: `131_213`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:251:43
    |
251 | pub const _NL_ABALTMON_6: C2RustUnnamed = 131212;
    |                                           ^^^^^^ help: consider: `131_212`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:252:43
    |
252 | pub const _NL_ABALTMON_5: C2RustUnnamed = 131211;
    |                                           ^^^^^^ help: consider: `131_211`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:253:43
    |
253 | pub const _NL_ABALTMON_4: C2RustUnnamed = 131210;
    |                                           ^^^^^^ help: consider: `131_210`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:254:43
    |
254 | pub const _NL_ABALTMON_3: C2RustUnnamed = 131209;
    |                                           ^^^^^^ help: consider: `131_209`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:255:43
    |
255 | pub const _NL_ABALTMON_2: C2RustUnnamed = 131208;
    |                                           ^^^^^^ help: consider: `131_208`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:256:43
    |
256 | pub const _NL_ABALTMON_1: C2RustUnnamed = 131207;
    |                                           ^^^^^^ help: consider: `131_207`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:257:43
    |
257 | pub const _NL_WALTMON_12: C2RustUnnamed = 131206;
    |                                           ^^^^^^ help: consider: `131_206`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:258:43
    |
258 | pub const _NL_WALTMON_11: C2RustUnnamed = 131205;
    |                                           ^^^^^^ help: consider: `131_205`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:259:43
    |
259 | pub const _NL_WALTMON_10: C2RustUnnamed = 131204;
    |                                           ^^^^^^ help: consider: `131_204`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:260:42
    |
260 | pub const _NL_WALTMON_9: C2RustUnnamed = 131203;
    |                                          ^^^^^^ help: consider: `131_203`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:261:42
    |
261 | pub const _NL_WALTMON_8: C2RustUnnamed = 131202;
    |                                          ^^^^^^ help: consider: `131_202`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:262:42
    |
262 | pub const _NL_WALTMON_7: C2RustUnnamed = 131201;
    |                                          ^^^^^^ help: consider: `131_201`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:263:42
    |
263 | pub const _NL_WALTMON_6: C2RustUnnamed = 131200;
    |                                          ^^^^^^ help: consider: `131_200`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:264:42
    |
264 | pub const _NL_WALTMON_5: C2RustUnnamed = 131199;
    |                                          ^^^^^^ help: consider: `131_199`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:265:42
    |
265 | pub const _NL_WALTMON_4: C2RustUnnamed = 131198;
    |                                          ^^^^^^ help: consider: `131_198`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:266:42
    |
266 | pub const _NL_WALTMON_3: C2RustUnnamed = 131197;
    |                                          ^^^^^^ help: consider: `131_197`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:267:42
    |
267 | pub const _NL_WALTMON_2: C2RustUnnamed = 131196;
    |                                          ^^^^^^ help: consider: `131_196`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:268:42
    |
268 | pub const _NL_WALTMON_1: C2RustUnnamed = 131195;
    |                                          ^^^^^^ help: consider: `131_195`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:269:40
    |
269 | pub const __ALTMON_12: C2RustUnnamed = 131194;
    |                                        ^^^^^^ help: consider: `131_194`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:270:40
    |
270 | pub const __ALTMON_11: C2RustUnnamed = 131193;
    |                                        ^^^^^^ help: consider: `131_193`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:271:40
    |
271 | pub const __ALTMON_10: C2RustUnnamed = 131192;
    |                                        ^^^^^^ help: consider: `131_192`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:272:39
    |
272 | pub const __ALTMON_9: C2RustUnnamed = 131191;
    |                                       ^^^^^^ help: consider: `131_191`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:273:39
    |
273 | pub const __ALTMON_8: C2RustUnnamed = 131190;
    |                                       ^^^^^^ help: consider: `131_190`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:274:39
    |
274 | pub const __ALTMON_7: C2RustUnnamed = 131189;
    |                                       ^^^^^^ help: consider: `131_189`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:275:39
    |
275 | pub const __ALTMON_6: C2RustUnnamed = 131188;
    |                                       ^^^^^^ help: consider: `131_188`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:276:39
    |
276 | pub const __ALTMON_5: C2RustUnnamed = 131187;
    |                                       ^^^^^^ help: consider: `131_187`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:277:39
    |
277 | pub const __ALTMON_4: C2RustUnnamed = 131186;
    |                                       ^^^^^^ help: consider: `131_186`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:278:39
    |
278 | pub const __ALTMON_3: C2RustUnnamed = 131185;
    |                                       ^^^^^^ help: consider: `131_185`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:279:39
    |
279 | pub const __ALTMON_2: C2RustUnnamed = 131184;
    |                                       ^^^^^^ help: consider: `131_184`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:280:39
    |
280 | pub const __ALTMON_1: C2RustUnnamed = 131183;
    |                                       ^^^^^^ help: consider: `131_183`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:281:45
    |
281 | pub const _NL_TIME_CODESET: C2RustUnnamed = 131182;
    |                                             ^^^^^^ help: consider: `131_182`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:282:43
    |
282 | pub const _NL_W_DATE_FMT: C2RustUnnamed = 131181;
    |                                           ^^^^^^ help: consider: `131_181`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:283:38
    |
283 | pub const _DATE_FMT: C2RustUnnamed = 131180;
    |                                      ^^^^^^ help: consider: `131_180`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:284:46
    |
284 | pub const _NL_TIME_TIMEZONE: C2RustUnnamed = 131179;
    |                                              ^^^^^^ help: consider: `131_179`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:285:51
    |
285 | pub const _NL_TIME_CAL_DIRECTION: C2RustUnnamed = 131178;
    |                                                   ^^^^^^ help: consider: `131_178`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:286:51
    |
286 | pub const _NL_TIME_FIRST_WORKDAY: C2RustUnnamed = 131177;
    |                                                   ^^^^^^ help: consider: `131_177`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:287:51
    |
287 | pub const _NL_TIME_FIRST_WEEKDAY: C2RustUnnamed = 131176;
    |                                                   ^^^^^^ help: consider: `131_176`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:288:50
    |
288 | pub const _NL_TIME_WEEK_1STWEEK: C2RustUnnamed = 131175;
    |                                                  ^^^^^^ help: consider: `131_175`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:289:49
    |
289 | pub const _NL_TIME_WEEK_1STDAY: C2RustUnnamed = 131174;
    |                                                 ^^^^^^ help: consider: `131_174`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:290:48
    |
290 | pub const _NL_TIME_WEEK_NDAYS: C2RustUnnamed = 131173;
    |                                                ^^^^^^ help: consider: `131_173`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:291:43
    |
291 | pub const _NL_WERA_T_FMT: C2RustUnnamed = 131172;
    |                                           ^^^^^^ help: consider: `131_172`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:292:45
    |
292 | pub const _NL_WERA_D_T_FMT: C2RustUnnamed = 131171;
    |                                             ^^^^^^ help: consider: `131_171`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:293:44
    |
293 | pub const _NL_WALT_DIGITS: C2RustUnnamed = 131170;
    |                                            ^^^^^^ help: consider: `131_170`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:294:43
    |
294 | pub const _NL_WERA_D_FMT: C2RustUnnamed = 131169;
    |                                           ^^^^^^ help: consider: `131_169`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:295:42
    |
295 | pub const _NL_WERA_YEAR: C2RustUnnamed = 131168;
    |                                          ^^^^^^ help: consider: `131_168`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:296:44
    |
296 | pub const _NL_WT_FMT_AMPM: C2RustUnnamed = 131167;
    |                                            ^^^^^^ help: consider: `131_167`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:297:39
    |
297 | pub const _NL_WT_FMT: C2RustUnnamed = 131166;
    |                                       ^^^^^^ help: consider: `131_166`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:298:39
    |
298 | pub const _NL_WD_FMT: C2RustUnnamed = 131165;
    |                                       ^^^^^^ help: consider: `131_165`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:299:41
    |
299 | pub const _NL_WD_T_FMT: C2RustUnnamed = 131164;
    |                                         ^^^^^^ help: consider: `131_164`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:300:40
    |
300 | pub const _NL_WPM_STR: C2RustUnnamed = 131163;
    |                                        ^^^^^^ help: consider: `131_163`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:301:40
    |
301 | pub const _NL_WAM_STR: C2RustUnnamed = 131162;
    |                                        ^^^^^^ help: consider: `131_162`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:302:40
    |
302 | pub const _NL_WMON_12: C2RustUnnamed = 131161;
    |                                        ^^^^^^ help: consider: `131_161`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:303:40
    |
303 | pub const _NL_WMON_11: C2RustUnnamed = 131160;
    |                                        ^^^^^^ help: consider: `131_160`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:304:40
    |
304 | pub const _NL_WMON_10: C2RustUnnamed = 131159;
    |                                        ^^^^^^ help: consider: `131_159`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:305:39
    |
305 | pub const _NL_WMON_9: C2RustUnnamed = 131158;
    |                                       ^^^^^^ help: consider: `131_158`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:306:39
    |
306 | pub const _NL_WMON_8: C2RustUnnamed = 131157;
    |                                       ^^^^^^ help: consider: `131_157`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:307:39
    |
307 | pub const _NL_WMON_7: C2RustUnnamed = 131156;
    |                                       ^^^^^^ help: consider: `131_156`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:308:39
    |
308 | pub const _NL_WMON_6: C2RustUnnamed = 131155;
    |                                       ^^^^^^ help: consider: `131_155`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:309:39
    |
309 | pub const _NL_WMON_5: C2RustUnnamed = 131154;
    |                                       ^^^^^^ help: consider: `131_154`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:310:39
    |
310 | pub const _NL_WMON_4: C2RustUnnamed = 131153;
    |                                       ^^^^^^ help: consider: `131_153`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:311:39
    |
311 | pub const _NL_WMON_3: C2RustUnnamed = 131152;
    |                                       ^^^^^^ help: consider: `131_152`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:312:39
    |
312 | pub const _NL_WMON_2: C2RustUnnamed = 131151;
    |                                       ^^^^^^ help: consider: `131_151`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:313:39
    |
313 | pub const _NL_WMON_1: C2RustUnnamed = 131150;
    |                                       ^^^^^^ help: consider: `131_150`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:314:42
    |
314 | pub const _NL_WABMON_12: C2RustUnnamed = 131149;
    |                                          ^^^^^^ help: consider: `131_149`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:315:42
    |
315 | pub const _NL_WABMON_11: C2RustUnnamed = 131148;
    |                                          ^^^^^^ help: consider: `131_148`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:316:42
    |
316 | pub const _NL_WABMON_10: C2RustUnnamed = 131147;
    |                                          ^^^^^^ help: consider: `131_147`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:317:41
    |
317 | pub const _NL_WABMON_9: C2RustUnnamed = 131146;
    |                                         ^^^^^^ help: consider: `131_146`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:318:41
    |
318 | pub const _NL_WABMON_8: C2RustUnnamed = 131145;
    |                                         ^^^^^^ help: consider: `131_145`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:319:41
    |
319 | pub const _NL_WABMON_7: C2RustUnnamed = 131144;
    |                                         ^^^^^^ help: consider: `131_144`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:320:41
    |
320 | pub const _NL_WABMON_6: C2RustUnnamed = 131143;
    |                                         ^^^^^^ help: consider: `131_143`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:321:41
    |
321 | pub const _NL_WABMON_5: C2RustUnnamed = 131142;
    |                                         ^^^^^^ help: consider: `131_142`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:322:41
    |
322 | pub const _NL_WABMON_4: C2RustUnnamed = 131141;
    |                                         ^^^^^^ help: consider: `131_141`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:323:41
    |
323 | pub const _NL_WABMON_3: C2RustUnnamed = 131140;
    |                                         ^^^^^^ help: consider: `131_140`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:324:41
    |
324 | pub const _NL_WABMON_2: C2RustUnnamed = 131139;
    |                                         ^^^^^^ help: consider: `131_139`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:325:41
    |
325 | pub const _NL_WABMON_1: C2RustUnnamed = 131138;
    |                                         ^^^^^^ help: consider: `131_138`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:326:39
    |
326 | pub const _NL_WDAY_7: C2RustUnnamed = 131137;
    |                                       ^^^^^^ help: consider: `131_137`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:327:39
    |
327 | pub const _NL_WDAY_6: C2RustUnnamed = 131136;
    |                                       ^^^^^^ help: consider: `131_136`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:328:39
    |
328 | pub const _NL_WDAY_5: C2RustUnnamed = 131135;
    |                                       ^^^^^^ help: consider: `131_135`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:329:39
    |
329 | pub const _NL_WDAY_4: C2RustUnnamed = 131134;
    |                                       ^^^^^^ help: consider: `131_134`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:330:39
    |
330 | pub const _NL_WDAY_3: C2RustUnnamed = 131133;
    |                                       ^^^^^^ help: consider: `131_133`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:331:39
    |
331 | pub const _NL_WDAY_2: C2RustUnnamed = 131132;
    |                                       ^^^^^^ help: consider: `131_132`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:332:39
    |
332 | pub const _NL_WDAY_1: C2RustUnnamed = 131131;
    |                                       ^^^^^^ help: consider: `131_131`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:333:41
    |
333 | pub const _NL_WABDAY_7: C2RustUnnamed = 131130;
    |                                         ^^^^^^ help: consider: `131_130`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:334:41
    |
334 | pub const _NL_WABDAY_6: C2RustUnnamed = 131129;
    |                                         ^^^^^^ help: consider: `131_129`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:335:41
    |
335 | pub const _NL_WABDAY_5: C2RustUnnamed = 131128;
    |                                         ^^^^^^ help: consider: `131_128`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:336:41
    |
336 | pub const _NL_WABDAY_4: C2RustUnnamed = 131127;
    |                                         ^^^^^^ help: consider: `131_127`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:337:41
    |
337 | pub const _NL_WABDAY_3: C2RustUnnamed = 131126;
    |                                         ^^^^^^ help: consider: `131_126`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:338:41
    |
338 | pub const _NL_WABDAY_2: C2RustUnnamed = 131125;
    |                                         ^^^^^^ help: consider: `131_125`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:339:41
    |
339 | pub const _NL_WABDAY_1: C2RustUnnamed = 131124;
    |                                         ^^^^^^ help: consider: `131_124`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:340:49
    |
340 | pub const _NL_TIME_ERA_ENTRIES: C2RustUnnamed = 131123;
    |                                                 ^^^^^^ help: consider: `131_123`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:341:53
    |
341 | pub const _NL_TIME_ERA_NUM_ENTRIES: C2RustUnnamed = 131122;
    |                                                     ^^^^^^ help: consider: `131_122`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:342:38
    |
342 | pub const ERA_T_FMT: C2RustUnnamed = 131121;
    |                                      ^^^^^^ help: consider: `131_121`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:343:40
    |
343 | pub const ERA_D_T_FMT: C2RustUnnamed = 131120;
    |                                        ^^^^^^ help: consider: `131_120`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:344:39
    |
344 | pub const ALT_DIGITS: C2RustUnnamed = 131119;
    |                                       ^^^^^^ help: consider: `131_119`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:345:38
    |
345 | pub const ERA_D_FMT: C2RustUnnamed = 131118;
    |                                      ^^^^^^ help: consider: `131_118`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:346:39
    |
346 | pub const __ERA_YEAR: C2RustUnnamed = 131117;
    |                                       ^^^^^^ help: consider: `131_117`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:347:32
    |
347 | pub const ERA: C2RustUnnamed = 131116;
    |                                ^^^^^^ help: consider: `131_116`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:348:39
    |
348 | pub const T_FMT_AMPM: C2RustUnnamed = 131115;
    |                                       ^^^^^^ help: consider: `131_115`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:349:34
    |
349 | pub const T_FMT: C2RustUnnamed = 131114;
    |                                  ^^^^^^ help: consider: `131_114`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:350:34
    |
350 | pub const D_FMT: C2RustUnnamed = 131113;
    |                                  ^^^^^^ help: consider: `131_113`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:351:36
    |
351 | pub const D_T_FMT: C2RustUnnamed = 131112;
    |                                    ^^^^^^ help: consider: `131_112`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:352:35
    |
352 | pub const PM_STR: C2RustUnnamed = 131111;
    |                                   ^^^^^^ help: consider: `131_111`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:353:35
    |
353 | pub const AM_STR: C2RustUnnamed = 131110;
    |                                   ^^^^^^ help: consider: `131_110`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:354:35
    |
354 | pub const MON_12: C2RustUnnamed = 131109;
    |                                   ^^^^^^ help: consider: `131_109`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:355:35
    |
355 | pub const MON_11: C2RustUnnamed = 131108;
    |                                   ^^^^^^ help: consider: `131_108`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:356:35
    |
356 | pub const MON_10: C2RustUnnamed = 131107;
    |                                   ^^^^^^ help: consider: `131_107`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:357:34
    |
357 | pub const MON_9: C2RustUnnamed = 131106;
    |                                  ^^^^^^ help: consider: `131_106`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:358:34
    |
358 | pub const MON_8: C2RustUnnamed = 131105;
    |                                  ^^^^^^ help: consider: `131_105`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:359:34
    |
359 | pub const MON_7: C2RustUnnamed = 131104;
    |                                  ^^^^^^ help: consider: `131_104`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:360:34
    |
360 | pub const MON_6: C2RustUnnamed = 131103;
    |                                  ^^^^^^ help: consider: `131_103`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:361:34
    |
361 | pub const MON_5: C2RustUnnamed = 131102;
    |                                  ^^^^^^ help: consider: `131_102`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:362:34
    |
362 | pub const MON_4: C2RustUnnamed = 131101;
    |                                  ^^^^^^ help: consider: `131_101`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:363:34
    |
363 | pub const MON_3: C2RustUnnamed = 131100;
    |                                  ^^^^^^ help: consider: `131_100`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:364:34
    |
364 | pub const MON_2: C2RustUnnamed = 131099;
    |                                  ^^^^^^ help: consider: `131_099`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:365:34
    |
365 | pub const MON_1: C2RustUnnamed = 131098;
    |                                  ^^^^^^ help: consider: `131_098`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:366:37
    |
366 | pub const ABMON_12: C2RustUnnamed = 131097;
    |                                     ^^^^^^ help: consider: `131_097`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:367:37
    |
367 | pub const ABMON_11: C2RustUnnamed = 131096;
    |                                     ^^^^^^ help: consider: `131_096`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:368:37
    |
368 | pub const ABMON_10: C2RustUnnamed = 131095;
    |                                     ^^^^^^ help: consider: `131_095`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:369:36
    |
369 | pub const ABMON_9: C2RustUnnamed = 131094;
    |                                    ^^^^^^ help: consider: `131_094`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:370:36
    |
370 | pub const ABMON_8: C2RustUnnamed = 131093;
    |                                    ^^^^^^ help: consider: `131_093`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:371:36
    |
371 | pub const ABMON_7: C2RustUnnamed = 131092;
    |                                    ^^^^^^ help: consider: `131_092`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:372:36
    |
372 | pub const ABMON_6: C2RustUnnamed = 131091;
    |                                    ^^^^^^ help: consider: `131_091`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:373:36
    |
373 | pub const ABMON_5: C2RustUnnamed = 131090;
    |                                    ^^^^^^ help: consider: `131_090`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:374:36
    |
374 | pub const ABMON_4: C2RustUnnamed = 131089;
    |                                    ^^^^^^ help: consider: `131_089`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:375:36
    |
375 | pub const ABMON_3: C2RustUnnamed = 131088;
    |                                    ^^^^^^ help: consider: `131_088`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:376:36
    |
376 | pub const ABMON_2: C2RustUnnamed = 131087;
    |                                    ^^^^^^ help: consider: `131_087`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:376:36
    |
376 | pub const ABMON_2: C2RustUnnamed = 131087;
    |                                    ^^^^^^ help: consider: `0x0002_000F`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:377:36
    |
377 | pub const ABMON_1: C2RustUnnamed = 131086;
    |                                    ^^^^^^ help: consider: `131_086`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:377:36
    |
377 | pub const ABMON_1: C2RustUnnamed = 131086;
    |                                    ^^^^^^ help: consider: `0x0002_000E`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:378:34
    |
378 | pub const DAY_7: C2RustUnnamed = 131085;
    |                                  ^^^^^^ help: consider: `131_085`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:378:34
    |
378 | pub const DAY_7: C2RustUnnamed = 131085;
    |                                  ^^^^^^ help: consider: `0x0002_000D`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:379:34
    |
379 | pub const DAY_6: C2RustUnnamed = 131084;
    |                                  ^^^^^^ help: consider: `131_084`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:379:34
    |
379 | pub const DAY_6: C2RustUnnamed = 131084;
    |                                  ^^^^^^ help: consider: `0x0002_000C`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:380:34
    |
380 | pub const DAY_5: C2RustUnnamed = 131083;
    |                                  ^^^^^^ help: consider: `131_083`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:380:34
    |
380 | pub const DAY_5: C2RustUnnamed = 131083;
    |                                  ^^^^^^ help: consider: `0x0002_000B`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:381:34
    |
381 | pub const DAY_4: C2RustUnnamed = 131082;
    |                                  ^^^^^^ help: consider: `131_082`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:381:34
    |
381 | pub const DAY_4: C2RustUnnamed = 131082;
    |                                  ^^^^^^ help: consider: `0x0002_000A`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:382:34
    |
382 | pub const DAY_3: C2RustUnnamed = 131081;
    |                                  ^^^^^^ help: consider: `131_081`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:382:34
    |
382 | pub const DAY_3: C2RustUnnamed = 131081;
    |                                  ^^^^^^ help: consider: `0x0002_0009`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:383:34
    |
383 | pub const DAY_2: C2RustUnnamed = 131080;
    |                                  ^^^^^^ help: consider: `131_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:383:34
    |
383 | pub const DAY_2: C2RustUnnamed = 131080;
    |                                  ^^^^^^ help: consider: `0x0002_0008`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:384:34
    |
384 | pub const DAY_1: C2RustUnnamed = 131079;
    |                                  ^^^^^^ help: consider: `131_079`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:384:34
    |
384 | pub const DAY_1: C2RustUnnamed = 131079;
    |                                  ^^^^^^ help: consider: `0x0002_0007`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:385:36
    |
385 | pub const ABDAY_7: C2RustUnnamed = 131078;
    |                                    ^^^^^^ help: consider: `131_078`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:385:36
    |
385 | pub const ABDAY_7: C2RustUnnamed = 131078;
    |                                    ^^^^^^ help: consider: `0x0002_0006`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:386:36
    |
386 | pub const ABDAY_6: C2RustUnnamed = 131077;
    |                                    ^^^^^^ help: consider: `131_077`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:386:36
    |
386 | pub const ABDAY_6: C2RustUnnamed = 131077;
    |                                    ^^^^^^ help: consider: `0x0002_0005`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:387:36
    |
387 | pub const ABDAY_5: C2RustUnnamed = 131076;
    |                                    ^^^^^^ help: consider: `131_076`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:387:36
    |
387 | pub const ABDAY_5: C2RustUnnamed = 131076;
    |                                    ^^^^^^ help: consider: `0x0002_0004`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:388:36
    |
388 | pub const ABDAY_4: C2RustUnnamed = 131075;
    |                                    ^^^^^^ help: consider: `131_075`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:388:36
    |
388 | pub const ABDAY_4: C2RustUnnamed = 131075;
    |                                    ^^^^^^ help: consider: `0x0002_0003`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:389:36
    |
389 | pub const ABDAY_3: C2RustUnnamed = 131074;
    |                                    ^^^^^^ help: consider: `131_074`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:389:36
    |
389 | pub const ABDAY_3: C2RustUnnamed = 131074;
    |                                    ^^^^^^ help: consider: `0x0002_0002`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:390:36
    |
390 | pub const ABDAY_2: C2RustUnnamed = 131073;
    |                                    ^^^^^^ help: consider: `131_073`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:390:36
    |
390 | pub const ABDAY_2: C2RustUnnamed = 131073;
    |                                    ^^^^^^ help: consider: `0x0002_0001`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:391:36
    |
391 | pub const ABDAY_1: C2RustUnnamed = 131072;
    |                                    ^^^^^^ help: consider: `131_072`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:391:36
    |
391 | pub const ABDAY_1: C2RustUnnamed = 131072;
    |                                    ^^^^^^ help: consider: `0x0002_0000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/localcharset.rs:394:65
    |
394 |     let codeset_ptr: *const libc::c_char = unsafe { nl_langinfo(CODESET as libc::c_int) };
    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:39:68
   |
39 |     let bytes: &mut [u8] = unsafe { std::slice::from_raw_parts_mut(ps as *mut _ as *mut u8, size) };
   |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:39:68
   |
39 |     let bytes: &mut [u8] = unsafe { std::slice::from_raw_parts_mut(ps as *mut _ as *mut u8, size) };
   |                                                                    ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:55:15
   |
55 |         pwc = 0 as *mut char32_t;
   |               ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:56:13
   |
56 |         s = b"\0" as *const u8 as *const libc::c_char;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:56:13
   |
56 |         s = b"\0" as *const u8 as *const libc::c_char;
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:57:13
   |
57 |         n = 1 as libc::c_int as size_t;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:57:13
   |
57 |         n = 1 as libc::c_int as size_t;
   |             ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:63:14
   |
63 |     if ret < -(3 as libc::c_int) as size_t && mbsinit(ps) == 0 {
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:63:16
   |
63 |     if ret < -(3 as libc::c_int) as size_t && mbsinit(ps) == 0 {
   |                ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:66:15
   |
66 |     if ret == -(3 as libc::c_int) as size_t {
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:66:17
   |
66 |     if ret == -(3 as libc::c_int) as size_t {
   |                 ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:69:8
   |
69 |     if -(2 as libc::c_int) as size_t <= ret && n != 0 as libc::c_int as libc::c_ulong
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:69:10
   |
69 |     if -(2 as libc::c_int) as size_t <= ret && n != 0 as libc::c_int as libc::c_ulong
   |          ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:69:53
   |
69 |     if -(2 as libc::c_int) as size_t <= ret && n != 0 as libc::c_int as libc::c_ulong
   |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:69:53
   |
69 |     if -(2 as libc::c_int) as size_t <= ret && n != 0 as libc::c_int as libc::c_ulong
   |                                                     ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:70:25
   |
70 |         && !hard_locale(0 as libc::c_int)
   |                         ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:73:20
   |
73 |             *pwc = *s as libc::c_uchar as char32_t;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:73:20
   |
73 |             *pwc = *s as libc::c_uchar as char32_t;
   |                    ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:75:16
   |
75 |         return 1 as libc::c_int as size_t;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:75:16
   |
75 |         return 1 as libc::c_int as size_t;
   |                ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:57:52
   |
57 | pub static mut program_name: *const libc::c_char = 0 as *const libc::c_char;
   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:60:42
   |
60 |     let mut slash: *const libc::c_char = 0 as *const libc::c_char;
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:61:41
   |
61 |     let mut base: *const libc::c_char = 0 as *const libc::c_char;
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:64:13
   |
64 | /             b"A NULL argv[0] was passed through an exec system call.\n\0" as *const u8
65 | |                 as *const libc::c_char,
   | |______________________________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:64:13
   |
64 |             b"A NULL argv[0] was passed through an exec system call.\n\0" as *const u8
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:70:28
   |
70 |     slash = strrchr(argv0, '/' as i32);
   |                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:72:22
   |
72 |         slash.offset(1 as libc::c_int as isize)
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:72:22
   |
72 |         slash.offset(1 as libc::c_int as isize)
   |                      ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:76:8
   |
76 |     if base.offset_from(argv0) as libc::c_long >= 7 as libc::c_int as libc::c_long
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:76:51
   |
76 |     if base.offset_from(argv0) as libc::c_long >= 7 as libc::c_int as libc::c_long
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:76:51
   |
76 |     if base.offset_from(argv0) as libc::c_long >= 7 as libc::c_int as libc::c_long
   |                                                   ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:78:27
   |
78 |             base.offset(-(7 as libc::c_int as isize)),
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:78:27
   |
78 |             base.offset(-(7 as libc::c_int as isize)),
   |                           ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:79:13
   |
79 |             b"/.libs/\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:79:13
   |
79 |             b"/.libs/\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:80:13
   |
80 |             7 as libc::c_int as libc::c_ulong,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:80:13
   |
80 |             7 as libc::c_int as libc::c_ulong,
   |             ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:81:14
   |
81 |         ) == 0 as libc::c_int
   |              ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:86:13
   |
86 |             b"lt-\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:86:13
   |
86 |             b"lt-\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:87:13
   |
87 |             3 as libc::c_int as libc::c_ulong,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:87:13
   |
87 |             3 as libc::c_int as libc::c_ulong,
   |             ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:88:14
   |
88 |         ) == 0 as libc::c_int
   |              ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:90:33
   |
90 |             argv0 = base.offset(3 as libc::c_int as isize);
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:90:33
   |
90 |             argv0 = base.offset(3 as libc::c_int as isize);
   |                                 ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:91:45
   |
91 |             program_invocation_short_name = argv0 as *mut libc::c_char;
   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:95:31
   |
95 |     program_invocation_name = argv0 as *mut libc::c_char;
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/propername_lite.rs:17:9
   |
17 |         b"UTF-8\0" as *const u8 as *const libc::c_char,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/propername_lite.rs:17:9
   |
17 |         b"UTF-8\0" as *const u8 as *const libc::c_char,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/propername_lite.rs:18:10
   |
18 |     ) == 0 as libc::c_int
   |          ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: integer literal has a better hexadecimal representation
   --> src/quotearg.rs:127:39
    |
127 | pub const _ISprint: C2RustUnnamed_0 = 16384;
    |                                       ^^^^^ help: consider: `0x4000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
   --> src/quotearg.rs:140:39
    |
140 | pub const _ISgraph: C2RustUnnamed_0 = 32768;
    |                                       ^^^^^ help: consider: `0x8000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:161:5
    |
161 |     b"literal\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:161:5
    |
161 |     b"literal\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:162:5
    |
162 |     b"shell\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:162:5
    |
162 |     b"shell\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:163:5
    |
163 |     b"shell-always\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:163:5
    |
163 |     b"shell-always\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:164:5
    |
164 |     b"shell-escape\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:164:5
    |
164 |     b"shell-escape\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:165:5
    |
165 |     b"shell-escape-always\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:165:5
    |
165 |     b"shell-escape-always\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:166:5
    |
166 |     b"c\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:166:5
    |
166 |     b"c\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:167:5
    |
167 |     b"c-maybe\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:167:5
    |
167 |     b"c-maybe\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:168:5
    |
168 |     b"escape\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:168:5
    |
168 |     b"escape\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:169:5
    |
169 |     b"locale\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:169:5
    |
169 |     b"locale\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:170:5
    |
170 |     b"clocale\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:170:5
    |
170 |     b"clocale\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:171:5
    |
171 |     0 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:190:17
    |
190 |     left_quote: 0 as *const libc::c_char,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:191:18
    |
191 |     right_quote: 0 as *const libc::c_char,
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: 5 bindings with single-character names in scope
   --> src/quotearg.rs:223:5
    |
223 |     o: Option<&mut quoting_options>,
    |     ^
224 |     c: u8,
    |     ^
225 |     i: i32,
    |     ^
...
230 |     let p: &mut u32 = match o {
    |         ^
...
238 |     let r: i32 = ((*p >> shift) & 1) as i32;
    |         ^
    |
    = note: `-W clippy::many-single-char-names` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#many_single_char_names

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:227:18
    |
227 |     let index = (c as usize) / (std::mem::size_of::<u32>() * 8);
    |                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:228:18
    |
228 |     let shift = (c as usize) % (std::mem::size_of::<u32>() * 8);
    |                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:238:18
    |
238 |     let r: i32 = ((*p >> shift) & 1) as i32;
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:239:11
    |
239 |     *p ^= ((i & 1 ^ r) << shift) as u32;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:281:8
    |
281 |     if style as u32 == custom_quoting_style as i32 as u32 {
    |        ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:281:24
    |
281 |     if style as u32 == custom_quoting_style as i32 as u32 {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:281:24
    |
281 |     if style as u32 == custom_quoting_style as i32 as u32 {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:290:65
    |
290 |     let translation = unsafe { std::ffi::CStr::from_ptr(gettext(msgid.as_ptr() as *const libc::c_char)) }
    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:302:25
    |
302 |         if c_strcasecmp(locale_code.as_ptr() as *const libc::c_char, b"UTF-8\0".as_ptr() as *const libc::c_char) == 0 {
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:302:70
    |
302 |         if c_strcasecmp(locale_code.as_ptr() as *const libc::c_char, b"UTF-8\0".as_ptr() as *const libc::c_char) == 0 {
    |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:310:25
    |
310 |         if c_strcasecmp(locale_code.as_ptr() as *const libc::c_char, b"GB18030\0".as_ptr() as *const libc::c_char) == 0 {
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:310:70
    |
310 |         if c_strcasecmp(locale_code.as_ptr() as *const libc::c_char, b"GB18030\0".as_ptr() as *const libc::c_char) == 0 {
    |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: redundant else block
   --> src/quotearg.rs:321:12
    |
321 |       } else {
    |  ____________^
322 | |         return "'".to_string();
323 | |     }
    | |_____^
    |
    = note: `-W clippy::redundant-else` implied by `-W clippy::pedantic`
    = help: remove the `else` block and move the contents out
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:319:8
    |
319 |     if s as u32 == clocale_quoting_style as i32 as u32 {
    |        ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:319:20
    |
319 |     if s as u32 == clocale_quoting_style as i32 as u32 {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:319:20
    |
319 |     if s as u32 == clocale_quoting_style as i32 as u32 {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: 5 bindings with single-character names in scope
   --> src/quotearg.rs:339:13
    |
339 |     let mut i: size_t = 0;
    |             ^
...
464 |             let mut c: libc::c_uchar = 0;
    |                     ^
...
802 |                     let mut m: size_t = 0;
    |                             ^
...
821 |                         let mut w: char32_t = 0;
    |                                 ^
...
846 |                                     let mut j: size_t = 0;
    |                                             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#many_single_char_names

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:340:27
    |
340 |     let mut len: size_t = 0 as libc::c_int as size_t;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:340:27
    |
340 |     let mut len: size_t = 0 as libc::c_int as size_t;
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:341:39
    |
341 |     let mut orig_buffersize: size_t = 0 as libc::c_int as size_t;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:341:39
    |
341 |     let mut orig_buffersize: size_t = 0 as libc::c_int as size_t;
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:342:49
    |
342 |     let mut quote_string: *const libc::c_char = 0 as *const libc::c_char;
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:343:40
    |
343 |     let mut quote_string_len: size_t = 0 as libc::c_int as size_t;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:343:40
    |
343 |     let mut quote_string_len: size_t = 0 as libc::c_int as size_t;
    |                                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:344:39
    |
344 |     let mut backslash_escapes: bool = 0 as libc::c_int != 0;
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:346:12
    |
346 |         == 1 as libc::c_int as libc::c_ulong;
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:346:12
    |
346 |         == 1 as libc::c_int as libc::c_ulong;
    |            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:347:48
    |
347 |     let mut elide_outer_quotes: bool = flags & QA_ELIDE_OUTER_QUOTES as libc::c_int
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:348:12
    |
348 |         != 0 as libc::c_int;
    |            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:349:46
    |
349 |     let mut encountered_single_quote: bool = 0 as libc::c_int != 0;
    |                                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:350:50
    |
350 |     let mut all_c_and_shell_quote_compat: bool = 1 as libc::c_int != 0;
    |                                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:352:36
    |
352 |         pending_shell_escape_end = 0 as libc::c_int != 0;
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:354:15
    |
354 |         match quoting_style as libc::c_uint {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:357:38
    |
357 |                 elide_outer_quotes = 1 as libc::c_int != 0;
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:358:36
    |
358 |                 current_block_48 = 1283995450065962895;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `1_283_995_450_065_962_895`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:361:36
    |
361 |                 current_block_48 = 1283995450065962895;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `1_283_995_450_065_962_895`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:364:37
    |
364 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:365:38
    |
365 |                 elide_outer_quotes = 0 as libc::c_int != 0;
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:366:36
    |
366 |                 current_block_48 = 2989495919056355252;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_989_495_919_056_355_252`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:369:20
    |
369 |                 if quoting_style as libc::c_uint
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:370:24
    |
370 |                     != custom_quoting_style as libc::c_int as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:370:24
    |
370 |                     != custom_quoting_style as libc::c_int as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:379:44
    |
379 | ...                   *buffer.offset(len as isize) = *quote_string;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:387:37
    |
387 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:390:36
    |
390 |                 current_block_48 = 2989495919056355252;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_989_495_919_056_355_252`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:393:37
    |
393 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:394:36
    |
394 |                 current_block_48 = 2694013637280298776;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_694_013_637_280_298_776`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:397:36
    |
397 |                 current_block_48 = 2694013637280298776;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_694_013_637_280_298_776`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:400:36
    |
400 |                 current_block_48 = 2266290538919981374;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_266_290_538_919_981_374`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:403:36
    |
403 |                 current_block_48 = 14141891332124833771;
    |                                    ^^^^^^^^^^^^^^^^^^^^ help: consider: `14_141_891_332_124_833_771`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:406:38
    |
406 |                 elide_outer_quotes = 0 as libc::c_int != 0;
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:407:36
    |
407 |                 current_block_48 = 2989495919056355252;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_989_495_919_056_355_252`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:414:13
    |
414 |             1283995450065962895 => {
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `1_283_995_450_065_962_895`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:417:40
    |
417 |                         *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                        ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:417:56
    |
417 |                         *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:417:56
    |
417 |                         *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:422:37
    |
422 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:423:32
    |
423 |                 quote_string = b"\"\0" as *const u8 as *const libc::c_char;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:423:32
    |
423 |                 quote_string = b"\"\0" as *const u8 as *const libc::c_char;
    |                                ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:424:36
    |
424 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:424:36
    |
424 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:425:36
    |
425 |                 current_block_48 = 2989495919056355252;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_989_495_919_056_355_252`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:427:13
    |
427 |             2694013637280298776 => {
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `2_694_013_637_280_298_776`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:428:38
    |
428 |                 elide_outer_quotes = 1 as libc::c_int != 0;
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:429:36
    |
429 |                 current_block_48 = 2266290538919981374;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_266_290_538_919_981_374`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:434:13
    |
434 |             2266290538919981374 => {
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `2_266_290_538_919_981_374`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:436:41
    |
436 |                     backslash_escapes = 1 as libc::c_int != 0;
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:438:36
    |
438 |                 current_block_48 = 14141891332124833771;
    |                                    ^^^^^^^^^^^^^^^^^^^^ help: consider: `14_141_891_332_124_833_771`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:443:13
    |
443 |             14141891332124833771 => {
    |             ^^^^^^^^^^^^^^^^^^^^ help: consider: `14_141_891_332_124_833_771`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:447:40
    |
447 |                         *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
    |                                        ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:447:56
    |
447 |                         *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:447:56
    |
447 |                         *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
    |                                                        ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:452:32
    |
452 |                 quote_string = b"'\0" as *const u8 as *const libc::c_char;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:452:32
    |
452 |                 quote_string = b"'\0" as *const u8 as *const libc::c_char;
    |                                ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:453:36
    |
453 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:453:36
    |
453 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:457:13
    |
457 |         i = 0 as libc::c_int as size_t;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:457:13
    |
457 |         i = 0 as libc::c_int as size_t;
    |             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:458:29
    |
458 |         while if argsize == 18446744073709551615 as libc::c_ulong {
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:458:29
    |
458 |         while if argsize == 18446744073709551615 as libc::c_ulong {
    |                             ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/quotearg.rs:458:29
    |
458 |         while if argsize == 18446744073709551615 as libc::c_ulong {
    |                             ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:459:13
    |
459 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:459:14
    |
459 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:459:26
    |
459 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:459:56
    |
459 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |                                                        ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:461:13
    |
461 |             (i == argsize) as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:466:44
    |
466 |             let mut is_right_quote: bool = 0 as libc::c_int != 0;
    |                                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:467:38
    |
467 |             let mut escaping: bool = 0 as libc::c_int != 0;
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:468:54
    |
468 |             let mut c_and_shell_quote_compat: bool = 0 as libc::c_int != 0;
    |                                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:469:16
    |
469 |             if backslash_escapes as libc::c_int != 0
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:470:20
    |
470 |                 && quoting_style as libc::c_uint
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:471:24
    |
471 |                     != shell_always_quoting_style as libc::c_int as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:471:24
    |
471 |                     != shell_always_quoting_style as libc::c_int as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:474:39
    |
474 |                     <= (if argsize == 18446744073709551615 as libc::c_ulong
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:474:39
    |
474 |                     <= (if argsize == 18446744073709551615 as libc::c_ulong
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/quotearg.rs:474:39
    |
474 |                     <= (if argsize == 18446744073709551615 as libc::c_ulong
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:475:29
    |
475 |                         && (1 as libc::c_int as libc::c_ulong) < quote_string_len
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:475:29
    |
475 |                         && (1 as libc::c_int as libc::c_ulong) < quote_string_len
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:483:21
    |
483 |                     arg.offset(i as isize) as *const libc::c_void,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:483:32
    |
483 |                     arg.offset(i as isize) as *const libc::c_void,
    |                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:484:21
    |
484 |                     quote_string as *const libc::c_void,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:486:22
    |
486 |                 ) == 0 as libc::c_int
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:489:37
    |
489 |                     current_block = 7928555609993211441;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:492:34
    |
492 |                 is_right_quote = 1 as libc::c_int != 0;
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:494:17
    |
494 |             c = *arg.offset(i as isize) as libc::c_uchar;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:494:29
    |
494 |             c = *arg.offset(i as isize) as libc::c_uchar;
    |                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:495:19
    |
495 |             match c as libc::c_int {
    |                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:499:25
    |
499 |         current_block = 7928555609993211441;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:505:37
    |
505 |             unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:505:53
    |
505 |             unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |                                                     ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:509:37
    |
509 |             unsafe { *buffer.offset(len as isize) = b'$' as i8 }; // Add dollar sign
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:509:53
    |
509 |             unsafe { *buffer.offset(len as isize) = b'$' as i8 }; // Add dollar sign
    |                                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:513:37
    |
513 |             unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:513:53
    |
513 |             unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |                                                     ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:519:33
    |
519 |         unsafe { *buffer.offset(len as isize) = b'\\' as i8 }; // Add backslash
    |                                 ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:519:49
    |
519 |         unsafe { *buffer.offset(len as isize) = b'\\' as i8 }; // Add backslash
    |                                                 ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:525:13
    |
525 |         && (unsafe { *arg.offset((i + 1) as isize) } as u8).is_ascii_digit()
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:525:34
    |
525 |         && (unsafe { *arg.offset((i + 1) as isize) } as u8).is_ascii_digit()
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:528:37
    |
528 |             unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:528:53
    |
528 |             unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |                                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:532:37
    |
532 |             unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:532:53
    |
532 |             unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |                                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:537:21
    |
537 |     current_block = 253337042034819032;
    |                     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:538:19
    |
538 | } else if flags & QA_ELIDE_NULL_BYTES as i32 != 0 {
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:539:21
    |
539 |     current_block = 13619784596304402172;
    |                     ^^^^^^^^^^^^^^^^^^^^ help: consider: `13_619_784_596_304_402_172`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:541:21
    |
541 |     current_block = 253337042034819032;
    |                     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:546:27
    |
546 |                     match quoting_style as libc::c_uint {
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:548:45
    |
548 | ...                   current_block = 17954593875197965021;
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `17_954_593_875_197_965_021`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:550:33
    |
550 | ...                   17954593875197965021 => {
    |                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `17_954_593_875_197_965_021`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:552:57
    |
552 | ...                   current_block = 7928555609993211441;
    |                                       ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:557:48
    |
557 | ...                   if flags & QA_SPLIT_TRIGRAPHS as libc::c_int != 0
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:558:59
    |
558 | ...                   && i.wrapping_add(2 as libc::c_int as libc::c_ulong)
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:558:59
    |
558 | ...                   && i.wrapping_add(2 as libc::c_int as libc::c_ulong)
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:560:44
    |
560 |   ...                   && *arg
    |  __________________________^
561 | | ...                       .offset(
562 | | ...                           i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
563 | | ...                       ) as libc::c_int == '?' as i32
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:562:49
    |
562 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:562:64
    |
562 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:562:64
    |
562 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:563:65
    |
563 | ...                   ) as libc::c_int == '?' as i32
    |                                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:565:47
    |
565 |   ...                   match *arg
    |  _____________________________^
566 | | ...                       .offset(
567 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
568 | | ...                       ) as libc::c_int
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:567:49
    |
567 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:567:64
    |
567 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:567:64
    |
567 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:572:69
    |
572 | ...                   current_block = 7928555609993211441;
    |                                       ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:575:53
    |
575 |   ...                   c = *arg
    |  ___________________________^
576 | | ...                       .offset(
577 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
578 | | ...                       ) as libc::c_uchar;
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:577:57
    |
577 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:577:72
    |
577 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:577:72
    |
577 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:579:53
    |
579 |   ...                   i = (i as libc::c_ulong)
    |  ___________________________^
580 | | ...                       .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
581 | | ...                       as size_t;
    | |___________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:579:53
    |
579 |   ...                   i = (i as libc::c_ulong)
    |  ___________________________^
580 | | ...                       .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    | |____________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:579:54
    |
579 | ...                   i = (i as libc::c_ulong)
    |                            ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:580:67
    |
580 | ...                   .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:580:67
    |
580 | ...                   .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:583:68
    |
583 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:583:84
    |
583 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:583:84
    |
583 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:588:68
    |
588 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:588:84
    |
588 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:588:84
    |
588 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:593:68
    |
593 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:593:84
    |
593 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:593:84
    |
593 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:598:68
    |
598 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:598:84
    |
598 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:598:84
    |
598 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:608:45
    |
608 | ...                   current_block = 253337042034819032;
    |                                       ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:611:45
    |
611 | ...                   current_block = 14514781131754033399;
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `14_514_781_131_754_033_399`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:613:33
    |
613 | ...                   17954593875197965021 => {
    |                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `17_954_593_875_197_965_021`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:615:57
    |
615 | ...                   current_block = 7928555609993211441;
    |                                       ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:620:48
    |
620 | ...                   if flags & QA_SPLIT_TRIGRAPHS as libc::c_int != 0
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:621:59
    |
621 | ...                   && i.wrapping_add(2 as libc::c_int as libc::c_ulong)
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:621:59
    |
621 | ...                   && i.wrapping_add(2 as libc::c_int as libc::c_ulong)
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:623:44
    |
623 |   ...                   && *arg
    |  __________________________^
624 | | ...                       .offset(
625 | | ...                           i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
626 | | ...                       ) as libc::c_int == '?' as i32
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:625:49
    |
625 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:625:64
    |
625 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:625:64
    |
625 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:626:65
    |
626 | ...                   ) as libc::c_int == '?' as i32
    |                                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:628:47
    |
628 |   ...                   match *arg
    |  _____________________________^
629 | | ...                       .offset(
630 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
631 | | ...                       ) as libc::c_int
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:630:49
    |
630 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:630:64
    |
630 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:630:64
    |
630 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:635:69
    |
635 | ...                   current_block = 7928555609993211441;
    |                                       ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:638:53
    |
638 |   ...                   c = *arg
    |  ___________________________^
639 | | ...                       .offset(
640 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
641 | | ...                       ) as libc::c_uchar;
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:640:57
    |
640 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:640:72
    |
640 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:640:72
    |
640 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:642:53
    |
642 |   ...                   i = (i as libc::c_ulong)
    |  ___________________________^
643 | | ...                       .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
644 | | ...                       as size_t;
    | |___________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:642:53
    |
642 |   ...                   i = (i as libc::c_ulong)
    |  ___________________________^
643 | | ...                       .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    | |____________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:642:54
    |
642 | ...                   i = (i as libc::c_ulong)
    |                            ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:643:67
    |
643 | ...                   .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:643:67
    |
643 | ...                   .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:646:68
    |
646 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:646:84
    |
646 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:646:84
    |
646 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:651:68
    |
651 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:651:84
    |
651 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:651:84
    |
651 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:656:68
    |
656 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:656:84
    |
656 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:656:84
    |
656 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:661:68
    |
661 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:661:84
    |
661 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:661:84
    |
661 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:671:45
    |
671 | ...                   current_block = 253337042034819032;
    |                                       ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:674:45
    |
674 | ...                   current_block = 253337042034819032;
    |                                       ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:679:27
    |
679 |                     esc = 'a' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:679:27
    |
679 |                     esc = 'a' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:680:37
    |
680 |                     current_block = 1190876092451756080;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: consider: `1_190_876_092_451_756_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:683:27
    |
683 |                     esc = 'b' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:683:27
    |
683 |                     esc = 'b' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:684:37
    |
684 |                     current_block = 1190876092451756080;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: consider: `1_190_876_092_451_756_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:687:27
    |
687 |                     esc = 'f' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:687:27
    |
687 |                     esc = 'f' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:688:37
    |
688 |                     current_block = 1190876092451756080;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: consider: `1_190_876_092_451_756_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:691:27
    |
691 |                     esc = 'n' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:691:27
    |
691 |                     esc = 'n' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:692:37
    |
692 |                     current_block = 9215498979640025612;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: consider: `9_215_498_979_640_025_612`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:695:27
    |
695 |                     esc = 'r' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:695:27
    |
695 |                     esc = 'r' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:696:37
    |
696 |                     current_block = 9215498979640025612;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: consider: `9_215_498_979_640_025_612`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:699:27
    |
699 |                     esc = 't' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:699:27
    |
699 |                     esc = 't' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:700:37
    |
700 |                     current_block = 9215498979640025612;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: consider: `9_215_498_979_640_025_612`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:703:27
    |
703 |                     esc = 'v' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:703:27
    |
703 |                     esc = 'v' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:704:37
    |
704 |                     current_block = 1190876092451756080;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: consider: `1_190_876_092_451_756_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:710:25
    |
710 |         current_block = 7928555609993211441;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:713:21
    |
713 |     current_block = 4476262310586904498;
    |                     ^^^^^^^^^^^^^^^^^^^ help: consider: `4_476_262_310_586_904_498`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:715:21
    |
715 |     current_block = 4476262310586904498;
    |                     ^^^^^^^^^^^^^^^^^^^ help: consider: `4_476_262_310_586_904_498`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:717:21
    |
717 |     current_block = 9215498979640025612;
    |                     ^^^^^^^^^^^^^^^^^^^ help: consider: `9_215_498_979_640_025_612`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:730:5
    |
730 |     253337042034819032
    |     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:732:5
    |
732 |     16442922512115311366
    |     ^^^^^^^^^^^^^^^^^^^^ help: consider: `16_442_922_512_115_311_366`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:737:37
    |
737 |                     current_block = 16442922512115311366;
    |                                     ^^^^^^^^^^^^^^^^^^^^ help: consider: `16_442_922_512_115_311_366`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:740:37
    |
740 |                     current_block = 4634307283396172174;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: consider: `4_634_307_283_396_172_174`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:743:37
    |
743 |                     current_block = 7549413860336125482;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: consider: `7_549_413_860_336_125_482`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:746:37
    |
746 |                     current_block = 13059411171234995867;
    |                                     ^^^^^^^^^^^^^^^^^^^^ help: consider: `13_059_411_171_234_995_867`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:749:37
    |
749 |                     current_block = 16620298045565028098;
    |                                     ^^^^^^^^^^^^^^^^^^^^ help: consider: `16_620_298_045_565_028_098`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:752:37
    |
752 |                     current_block = 15155215915847730705;
    |                                     ^^^^^^^^^^^^^^^^^^^^ help: consider: `15_155_215_915_847_730_705`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:760:25
    |
760 |         current_block = 7928555609993211441;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:769:28
    |
769 |             *buffer.offset(len as isize) = '\'' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:769:44
    |
769 |             *buffer.offset(len as isize) = '\'' as i8;
    |                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:775:28
    |
775 |             *buffer.offset(len as isize) = '\\' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:775:44
    |
775 |             *buffer.offset(len as isize) = '\\' as i8;
    |                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:781:28
    |
781 |             *buffer.offset(len as isize) = '\'' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:781:44
    |
781 |             *buffer.offset(len as isize) = '\'' as i8;
    |                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:786:21
    |
786 |     current_block = 253337042034819032;
    |                     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:788:21
    |
788 |     current_block = 253337042034819032;
    |                     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:798:48
    |
798 |                     c_and_shell_quote_compat = 1 as libc::c_int != 0;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:799:37
    |
799 |                     current_block = 253337042034819032;
    |                                     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:805:29
    |
805 |                         m = 1 as libc::c_int as size_t;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:805:29
    |
805 |                         m = 1 as libc::c_int as size_t;
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:806:37
    |
806 |                           printable = *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
    |  _____________________________________^
807 | |                             as libc::c_int
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:806:64
    |
806 |                         printable = *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:806:64
    |
806 |                         printable = *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
    |                                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:808:31
    |
808 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:808:31
    |
808 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:808:31
    |
808 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:809:32
    |
809 | ...                   != 0 as libc::c_int;
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:816:29
    |
816 |                         m = 0 as libc::c_int as size_t;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:816:29
    |
816 |                         m = 0 as libc::c_int as size_t;
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:817:37
    |
817 |                         printable = 1 as libc::c_int != 0;
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:818:39
    |
818 |                         if argsize == 18446744073709551615 as libc::c_ulong {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:818:39
    |
818 |                         if argsize == 18446744073709551615 as libc::c_ulong {
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/quotearg.rs:818:39
    |
818 |                         if argsize == 18446744073709551615 as libc::c_ulong {
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:824:42
    |
824 | ...                   &*arg.offset(i.wrapping_add(m) as isize),
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:828:39
    |
828 |                         if !(bytes == 0 as libc::c_int as libc::c_ulong) {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:828:39
    |
828 |                         if !(bytes == 0 as libc::c_int as libc::c_ulong) {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:829:41
    |
829 | ...                   if bytes == -(1 as libc::c_int) as size_t {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:829:43
    |
829 | ...                   if bytes == -(1 as libc::c_int) as size_t {
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:830:45
    |
830 | ...                   printable = 0 as libc::c_int != 0;
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:831:48
    |
831 | ...                   } else if bytes == -(2 as libc::c_int) as size_t {
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:831:50
    |
831 | ...                   } else if bytes == -(2 as libc::c_int) as size_t {
    |                                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:832:45
    |
832 | ...                   printable = 0 as libc::c_int != 0;
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:834:40
    |
834 | ...                   && *arg.offset(i.wrapping_add(m) as isize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:834:52
    |
834 | ...                   && *arg.offset(i.wrapping_add(m) as isize) as libc::c_int
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:841:36
    |
841 | ...                   if '[' as i32 == 0x5b as libc::c_int
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:841:50
    |
841 | ...                   if '[' as i32 == 0x5b as libc::c_int
    |                                        ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:842:40
    |
842 | ...                   && elide_outer_quotes as libc::c_int != 0
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:843:40
    |
843 | ...                   && quoting_style as libc::c_uint
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:844:44
    |
844 | ...                   == shell_always_quoting_style as libc::c_int as libc::c_uint
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:844:44
    |
844 | ...                   == shell_always_quoting_style as libc::c_int as libc::c_uint
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:847:41
    |
847 | ...                   j = 1 as libc::c_int as size_t;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:847:41
    |
847 | ...                   j = 1 as libc::c_int as size_t;
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:849:47
    |
849 |   ...                   match *arg
    |  _____________________________^
850 | | ...                       .offset(i.wrapping_add(m).wrapping_add(j) as isize)
851 | | ...                       as libc::c_int
    | |________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:850:53
    |
850 | ...                   .offset(i.wrapping_add(m).wrapping_add(j) as isize)
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:854:65
    |
854 | ...                   current_block = 7928555609993211441;
    |                                       ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:864:49
    |
864 | ...                   printable = 0 as libc::c_int != 0;
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:866:37
    |
866 |   ...                   m = (m as libc::c_ulong).wrapping_add(bytes) as size_t
    |  ___________________________^
867 | | ...                       as size_t;
    | |___________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:866:37
    |
866 | ...                   m = (m as libc::c_ulong).wrapping_add(bytes) as size_t
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:866:38
    |
866 | ...                   m = (m as libc::c_ulong).wrapping_add(bytes) as size_t
    |                            ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:874:72
    |
874 |     let buffer_slice = unsafe { std::slice::from_raw_parts_mut(buffer, buffersize as usize) };
    |                                                                        ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `if` expression with an `else if`, but without a final `else`
   --> src/quotearg.rs:910:16
    |
910 |           } else if is_right_quote {
    |  ________________^
911 | |             if len < buffersize {
912 | |                 buffer_slice[len as usize] = b'\\' as i8; // Add backslash
913 | |             }
914 | |             len += 1;
915 | |             is_right_quote = false;
916 | |         }
    | |_________^
    |
    = note: `-W clippy::else-if-without-else` implied by `-W clippy::restriction`
    = help: add an `else` block here
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else

warning: long literal lacking separators
   --> src/quotearg.rs:878:33
    |
878 |                 current_block = 7928555609993211441;
    |                                 ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:884:34
    |
884 |                     buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                                  ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:884:50
    |
884 |                     buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                                                  ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:888:34
    |
888 |                     buffer_slice[len as usize] = b'$' as i8; // Add dollar sign
    |                                  ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:888:50
    |
888 |                     buffer_slice[len as usize] = b'$' as i8; // Add dollar sign
    |                                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:892:34
    |
892 |                     buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                                  ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:892:50
    |
892 |                     buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                                                  ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:898:30
    |
898 |                 buffer_slice[len as usize] = b'\\' as i8; // Add backslash
    |                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:898:46
    |
898 |                 buffer_slice[len as usize] = b'\\' as i8; // Add backslash
    |                                              ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:902:30
    |
902 |                 buffer_slice[len as usize] = ('0' as u8 + (c >> 6)) as i8; // Add first octet
    |                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:902:46
    |
902 |                 buffer_slice[len as usize] = ('0' as u8 + (c >> 6)) as i8; // Add first octet
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:902:47
    |
902 |                 buffer_slice[len as usize] = ('0' as u8 + (c >> 6)) as i8; // Add first octet
    |                                               ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:906:30
    |
906 |                 buffer_slice[len as usize] = ('0' as u8 + ((c >> 3) & 7)) as i8; // Add second octet
    |                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:906:46
    |
906 |                 buffer_slice[len as usize] = ('0' as u8 + ((c >> 3) & 7)) as i8; // Add second octet
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:906:47
    |
906 |                 buffer_slice[len as usize] = ('0' as u8 + ((c >> 3) & 7)) as i8; // Add second octet
    |                                               ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:909:17
    |
909 |             c = ('0' as u8 + (c & 7)) as u8; // Update c to last octet
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:909:18
    |
909 |             c = ('0' as u8 + (c & 7)) as u8; // Update c to last octet
    |                  ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:912:30
    |
912 |                 buffer_slice[len as usize] = b'\\' as i8; // Add backslash
    |                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:912:46
    |
912 |                 buffer_slice[len as usize] = b'\\' as i8; // Add backslash
    |                                              ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:922:30
    |
922 |                 buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:922:46
    |
922 |                 buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                                              ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:926:30
    |
926 |                 buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:926:46
    |
926 |                 buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                                              ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:932:26
    |
932 |             buffer_slice[len as usize] = c as i8; // Add current character
    |                          ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:932:42
    |
932 |             buffer_slice[len as usize] = c as i8; // Add current character
    |                                          ^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:936:13
    |
936 |         c = *arg.offset(i as isize) as u8; // Update c to next character
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:936:25
    |
936 |         c = *arg.offset(i as isize) as u8; // Update c to next character
    |                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:938:21
    |
938 |     current_block = 4476262310586904498;
    |                     ^^^^^^^^^^^^^^^^^^^ help: consider: `4_476_262_310_586_904_498`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:940:21
    |
940 |     current_block = 253337042034819032;
    |                     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:946:17
    |
946 |                 16442922512115311366 => {
    |                 ^^^^^^^^^^^^^^^^^^^^ help: consider: `16_442_922_512_115_311_366`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:947:29
    |
947 |                     if i != 0 as libc::c_int as libc::c_ulong {
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:947:29
    |
947 |                     if i != 0 as libc::c_int as libc::c_ulong {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:948:41
    |
948 |                         current_block = 253337042034819032;
    |                                         ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:950:41
    |
950 |                         current_block = 4634307283396172174;
    |                                         ^^^^^^^^^^^^^^^^^^^ help: consider: `4_634_307_283_396_172_174`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:953:17
    |
953 |                 9215498979640025612 => {
    |                 ^^^^^^^^^^^^^^^^^^^ help: consider: `9_215_498_979_640_025_612`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:954:24
    |
954 |                     if quoting_style as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:955:28
    |
955 |                         == shell_always_quoting_style as libc::c_int as libc::c_uint
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:955:28
    |
955 |                         == shell_always_quoting_style as libc::c_int as libc::c_uint
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:956:28
    |
956 |                         && elide_outer_quotes as libc::c_int != 0
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:958:41
    |
958 |                         current_block = 7928555609993211441;
    |                                         ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:961:37
    |
961 |                     current_block = 1190876092451756080;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: consider: `1_190_876_092_451_756_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:966:17
    |
966 |                 1190876092451756080 => {
    |                 ^^^^^^^^^^^^^^^^^^^ help: consider: `1_190_876_092_451_756_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:969:41
    |
969 |                         current_block = 3173013908131212616;
    |                                         ^^^^^^^^^^^^^^^^^^^ help: consider: `3_173_013_908_131_212_616`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:971:41
    |
971 |                         current_block = 253337042034819032;
    |                                         ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:974:17
    |
974 |                 4634307283396172174 => {
    |                 ^^^^^^^^^^^^^^^^^^^ help: consider: `4_634_307_283_396_172_174`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:975:48
    |
975 |                     c_and_shell_quote_compat = 1 as libc::c_int != 0;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:976:37
    |
976 |                     current_block = 7549413860336125482;
    |                                     ^^^^^^^^^^^^^^^^^^^ help: consider: `7_549_413_860_336_125_482`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:981:17
    |
981 |                 7549413860336125482 => {
    |                 ^^^^^^^^^^^^^^^^^^^ help: consider: `7_549_413_860_336_125_482`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:982:37
    |
982 |                     current_block = 13059411171234995867;
    |                                     ^^^^^^^^^^^^^^^^^^^^ help: consider: `13_059_411_171_234_995_867`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:987:17
    |
987 |                 13059411171234995867 => {
    |                 ^^^^^^^^^^^^^^^^^^^^ help: consider: `13_059_411_171_234_995_867`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:988:37
    |
988 |                     current_block = 16620298045565028098;
    |                                     ^^^^^^^^^^^^^^^^^^^^ help: consider: `16_620_298_045_565_028_098`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:993:5
    |
993 |     16620298045565028098 => {
    |     ^^^^^^^^^^^^^^^^^^^^ help: consider: `16_620_298_045_565_028_098`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:994:9
    |
994 |         15155215915847730705
    |         ^^^^^^^^^^^^^^^^^^^^ help: consider: `15_155_215_915_847_730_705`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1000:5
     |
1000 |     15155215915847730705 => {
     |     ^^^^^^^^^^^^^^^^^^^^ help: consider: `15_155_215_915_847_730_705`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1004:9
     |
1004 |         253337042034819032
     |         ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1010:5
     |
1010 |     253337042034819032 => {
     |     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1013:50
     |
1013 | ...   && (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std::mem::...
     |                                            ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1013:63
     |
1013 | ...   && (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std::mem::...
     |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1013:120
     |
1013 | ...   && (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std::mem::...
     |                                                                                                                  ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1015:13
     |
1015 |             4476262310586904498
     |             ^^^^^^^^^^^^^^^^^^^ help: consider: `4_476_262_310_586_904_498`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1017:13
     |
1017 |             3173013908131212616
     |             ^^^^^^^^^^^^^^^^^^^ help: consider: `3_173_013_908_131_212_616`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1024:5
     |
1024 |     3173013908131212616 => {
     |     ^^^^^^^^^^^^^^^^^^^ help: consider: `3_173_013_908_131_212_616`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1031:41
     |
1031 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1031:57
     |
1031 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                                         ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1035:41
     |
1035 |                 unsafe { *buffer.offset(len as isize) = '$' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1035:57
     |
1035 |                 unsafe { *buffer.offset(len as isize) = '$' as i8; }
     |                                                         ^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1039:41
     |
1039 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1039:57
     |
1039 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                                         ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1045:37
     |
1045 |             unsafe { *buffer.offset(len as isize) = '\\' as i8; }
     |                                     ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1045:53
     |
1045 |             unsafe { *buffer.offset(len as isize) = '\\' as i8; }
     |                                                     ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1048:9
     |
1048 |         4476262310586904498
     |         ^^^^^^^^^^^^^^^^^^^ help: consider: `4_476_262_310_586_904_498`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1054:5
     |
1054 |     4476262310586904498 => {
     |     ^^^^^^^^^^^^^^^^^^^ help: consider: `4_476_262_310_586_904_498`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1057:41
     |
1057 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1057:57
     |
1057 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                                         ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1061:41
     |
1061 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1061:57
     |
1061 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                                         ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1067:37
     |
1067 |             unsafe { *buffer.offset(len as isize) = c as i8; }
     |                                     ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1067:53
     |
1067 |             unsafe { *buffer.offset(len as isize) = c as i8; }
     |                                                     ^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1081:19
     |
1081 |         if len == 0 as libc::c_int as libc::c_ulong
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1081:19
     |
1081 |         if len == 0 as libc::c_int as libc::c_ulong
     |                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1082:16
     |
1082 |             && quoting_style as libc::c_uint
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1083:20
     |
1083 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1083:20
     |
1083 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1084:16
     |
1084 |             && elide_outer_quotes as libc::c_int != 0
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1086:29
     |
1086 |             current_block = 7928555609993211441;
     |                             ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1089:14
     |
1089 |         if !(quoting_style as libc::c_uint
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1090:16
     |
1090 |             == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1090:16
     |
1090 |             == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1091:39
     |
1091 |             && !elide_outer_quotes && encountered_single_quote as libc::c_int != 0)
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1093:29
     |
1093 |             current_block = 6412618891452676311;
     |                             ^^^^^^^^^^^^^^^^^^^ help: consider: `6_412_618_891_452_676_311`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: redundant else block
    --> src/quotearg.rs:1108:8
     |
1108 |   } else {
     |  ________^
1109 | |     if !(buffersize == 0 && orig_buffersize != 0) {
1110 | |         current_block = 6412618891452676311;
1111 | |         break;
...    |
1114 | |     len = 0;
1115 | | }
     | |_^
     |
     = help: remove the `else` block and move the contents out
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: long literal lacking separators
    --> src/quotearg.rs:1110:25
     |
1110 |         current_block = 6412618891452676311;
     |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `6_412_618_891_452_676_311`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1119:9
     |
1119 |         7928555609993211441 => {
     |         ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1120:16
     |
1120 |             if quoting_style as libc::c_uint
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1121:20
     |
1121 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1121:20
     |
1121 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1122:20
     |
1122 |                 && backslash_escapes as libc::c_int != 0
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1132:27
     |
1132 |                 flags & !(QA_ELIDE_OUTER_QUOTES as libc::c_int),
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1133:17
     |
1133 |                 0 as *const libc::c_uint,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1142:40
     |
1142 |                         *buffer.offset(len as isize) = *quote_string;
     |                                        ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1151:32
     |
1151 |                 *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
     |                                ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1151:48
     |
1151 |                 *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1151:48
     |
1151 |                 *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
     |                                                ^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1167:13
     |
1167 |             buffer.as_mut_ptr() as *mut libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1169:13
     |
1169 |             arg.as_ptr() as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1193:79
     |
1193 |         result_ptr = quotearg_alloc_mem(arg_ptr, argsize.try_into().unwrap(), &mut size as *mut u64, o);
     |                                                                               ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1209:9
     |
1209 |         &mut default_quoting_options as *mut quoting_options as *const quoting_options
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1209:9
     |
1209 |         &mut default_quoting_options as *mut quoting_options as *const quoting_options
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1214:13
     |
1214 |             0 as libc::c_int
     |             ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1216:13
     |
1216 |             QA_ELIDE_NULL_BYTES as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1219:9
     |
1219 |         0 as *mut libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1220:9
     |
1220 |         0 as libc::c_int as size_t,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1220:9
     |
1220 |         0 as libc::c_int as size_t,
     |         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1229:23
     |
1229 |         .wrapping_add(1 as libc::c_int as libc::c_ulong);
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1229:23
     |
1229 |         .wrapping_add(1 as libc::c_int as libc::c_ulong);
     |                       ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1244:38
     |
1244 |         *size = bufsize.wrapping_sub(1 as libc::c_int as libc::c_ulong);
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1244:38
     |
1244 |         *size = bufsize.wrapping_sub(1 as libc::c_int as libc::c_ulong);
     |                                      ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1249:34
     |
1249 | static mut nslots: libc::c_int = 1 as libc::c_int;
     |                                  ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1253:19
     |
1253 |             size: ::core::mem::size_of::<[libc::c_char; 256]>() as libc::c_ulong,
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1254:18
     |
1254 |             val: slot0.as_ptr() as *mut _,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1260:5
     |
1260 |     &slotvec0 as *const slotvec as *mut slotvec
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1260:5
     |
1260 |     &slotvec0 as *const slotvec as *mut slotvec
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1266:9
     |
1266 |     i = 1 as libc::c_int;
     |         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1268:14
     |
1268 |         free((*sv.offset(i as isize)).val as *mut libc::c_void);
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1268:26
     |
1268 |         free((*sv.offset(i as isize)).val as *mut libc::c_void);
     |                          ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1272:20
     |
1272 |     if (*sv.offset(0 as libc::c_int as isize)).val != slot0.as_mut_ptr() {
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1272:20
     |
1272 |     if (*sv.offset(0 as libc::c_int as isize)).val != slot0.as_mut_ptr() {
     |                    ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1273:14
     |
1273 |         free((*sv.offset(0 as libc::c_int as isize)).val as *mut libc::c_void);
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1273:26
     |
1273 |         free((*sv.offset(0 as libc::c_int as isize)).val as *mut libc::c_void);
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1273:26
     |
1273 |         free((*sv.offset(0 as libc::c_int as isize)).val as *mut libc::c_void);
     |                          ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1274:25
     |
1274 |         slotvec0.size = ::core::mem::size_of::<[libc::c_char; 256]>() as libc::c_ulong;
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1277:14
     |
1277 |     if sv != &mut slotvec0 as *mut slotvec {
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1278:14
     |
1278 |         free(sv as *mut libc::c_void);
     |              ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1281:14
     |
1281 |     nslots = 1 as libc::c_int;
     |              ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: binding's name is too similar to existing binding
    --> src/quotearg.rs:1327:13
     |
1327 |     let mut qsize: size_t = quotearg_buffer_restyled(
     |             ^^^^^
     |
     = note: `-W clippy::similar-names` implied by `-W clippy::pedantic`
note: existing binding defined here
    --> src/quotearg.rs:1324:13
     |
1324 |     let mut size: size_t = (*sv.offset(n as isize)).size;
     |             ^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1291:39
     |
1291 |       let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |  _______________________________________^
1292 | |         < 9223372036854775807 as libc::c_long
1293 | |     {
1294 | |         2147483647 as libc::c_int as libc::c_long
1295 | |     } else {
1296 | |         9223372036854775807 as libc::c_long
1297 | |     }) as libc::c_int;
     | |_____________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1291:44
     |
1291 |     let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1291:44
     |
1291 |     let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1291:44
     |
1291 |     let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |                                            ^^^^^^^^^^ help: consider: `2_147_483_647`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
    --> src/quotearg.rs:1291:44
     |
1291 |     let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |                                            ^^^^^^^^^^ help: consider: `0x7FFF_FFFF`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1292:11
     |
1292 |         < 9223372036854775807 as libc::c_long
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1292:11
     |
1292 |         < 9223372036854775807 as libc::c_long
     |           ^^^^^^^^^^^^^^^^^^^ help: consider: `9_223_372_036_854_775_807`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
    --> src/quotearg.rs:1292:11
     |
1292 |         < 9223372036854775807 as libc::c_long
     |           ^^^^^^^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF_FFFF_FFFF`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1294:9
     |
1294 |         2147483647 as libc::c_int as libc::c_long
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1294:9
     |
1294 |         2147483647 as libc::c_int as libc::c_long
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1294:9
     |
1294 |         2147483647 as libc::c_int as libc::c_long
     |         ^^^^^^^^^^ help: consider: `2_147_483_647`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
    --> src/quotearg.rs:1294:9
     |
1294 |         2147483647 as libc::c_int as libc::c_long
     |         ^^^^^^^^^^ help: consider: `0x7FFF_FFFF`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1296:9
     |
1296 |         9223372036854775807 as libc::c_long
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1296:9
     |
1296 |         9223372036854775807 as libc::c_long
     |         ^^^^^^^^^^^^^^^^^^^ help: consider: `9_223_372_036_854_775_807`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
    --> src/quotearg.rs:1296:9
     |
1296 |         9223372036854775807 as libc::c_long
     |         ^^^^^^^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF_FFFF_FFFF`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1298:10
     |
1298 |     if !(0 as libc::c_int <= n && n < nslots_max) {
     |          ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1302:44
     |
1302 |         let mut preallocated: bool = sv == &mut slotvec0 as *mut slotvec;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1303:37
     |
1303 |         let mut new_nslots: idx_t = nslots as idx_t;
     |                                     ^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1304:14
     |
1304 |           sv = xpalloc(
     |  ______________^
1305 | |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
1306 | |                 as *mut libc::c_void,
1307 | |             &mut new_nslots,
...    |
1310 | |             ::core::mem::size_of::<slotvec>() as libc::c_ulong as idx_t,
1311 | |         ) as *mut slotvec;
     | |_________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1305:13
     |
1305 | /             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
1306 | |                 as *mut libc::c_void,
     | |____________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1305:17
     |
1305 |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1305:52
     |
1305 |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
     |                                                    ^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1308:13
     |
1308 |             (n - nslots + 1 as libc::c_int) as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1308:27
     |
1308 |             (n - nslots + 1 as libc::c_int) as idx_t,
     |                           ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1309:13
     |
1309 |             nslots_max as ptrdiff_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1310:13
     |
1310 |             ::core::mem::size_of::<slotvec>() as libc::c_ulong as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1310:13
     |
1310 |             ::core::mem::size_of::<slotvec>() as libc::c_ulong as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1317:13
     |
1317 |             sv.offset(nslots as isize) as *mut libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1317:23
     |
1317 |             sv.offset(nslots as isize) as *mut libc::c_void,
     |                       ^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1318:13
     |
1318 |             0 as libc::c_int,
     |             ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1319:14
     |
1319 |             ((new_nslots - nslots as libc::c_long) as libc::c_ulong)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1319:28
     |
1319 |             ((new_nslots - nslots as libc::c_long) as libc::c_ulong)
     |                            ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1320:31
     |
1320 |                 .wrapping_mul(::core::mem::size_of::<slotvec>() as libc::c_ulong),
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1322:18
     |
1322 |         nslots = new_nslots as libc::c_int;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1324:40
     |
1324 |     let mut size: size_t = (*sv.offset(n as isize)).size;
     |                                        ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1325:50
     |
1325 |     let mut val: *mut libc::c_char = (*sv.offset(n as isize)).val;
     |                                                  ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1326:53
     |
1326 |     let mut flags: libc::c_int = (*options).flags | QA_ELIDE_NULL_BYTES as libc::c_int;
     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1339:35
     |
1339 |         size = qsize.wrapping_add(1 as libc::c_int as libc::c_ulong);
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1339:35
     |
1339 |         size = qsize.wrapping_add(1 as libc::c_int as libc::c_ulong);
     |                                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1340:21
     |
1340 |         (*sv.offset(n as isize)).size = size;
     |                     ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1342:18
     |
1342 |             free(val as *mut libc::c_void);
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1345:42
     |
1345 |         let ref mut fresh0 = (*sv.offset(n as isize)).val;
     |                                          ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1418:19
     |
1418 |     let argsize = arg.to_bytes().len() as u64; // Convert to u64
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1452:21
     |
1452 |         left_quote: 0 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1453:22
     |
1453 |         right_quote: 0 as *const libc::c_char,
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1456:55
     |
1456 |     let result = set_char_quoting(Some(&mut options), ch as u8, 1);
     |                                                       ^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1457:31
     |
1457 |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
     |                               ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1461:24
     |
1461 |     let ch_as_c_char = ch as u8 as libc::c_char;
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1461:24
     |
1461 |     let ch_as_c_char = ch as u8 as libc::c_char;
     |                        ^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1463:41
     |
1463 |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1463:41
     |
1463 |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
     |                                         ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
    --> src/quotearg.rs:1463:41
     |
1463 |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
     |                                         ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1476:19
     |
1476 |     let argsize = arg.to_bytes().len() as u64;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1477:91
     |
1477 |     let result_ptr: *mut libc::c_char = unsafe { quotearg_char_mem(arg.as_ptr(), argsize, ':' as i32 as libc::c_char) };
     |                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1477:91
     |
1477 |     let result_ptr: *mut libc::c_char = unsafe { quotearg_char_mem(arg.as_ptr(), argsize, ':' as i32 as libc::c_char) };
     |                                                                                           ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1495:42
     |
1495 |     set_char_quoting(Some(&mut options), ':' as u8, 1);
     |                                          ^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1560:19
     |
1560 |     let argsize = arg.to_bytes().len() as u64;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1579:16
     |
1579 |         flags: 0 as libc::c_int,
     |                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1580:27
     |
1580 |         quote_these_too: [0 as libc::c_int as libc::c_uint, 0, 0, 0, 0, 0, 0, 0],
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1580:27
     |
1580 |         quote_these_too: [0 as libc::c_int as libc::c_uint, 0, 0, 0, 0, 0, 0, 0],
     |                           ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1581:21
     |
1581 |         left_quote: 0 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1582:22
     |
1582 |         right_quote: 0 as *const libc::c_char,
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/setlocale_null.rs:19:19
   |
19 |     let bufsize = buf.len() as u64; // Convert usize to u64
   |                   ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/setlocale_null.rs:20:19
   |
20 |     let buf_ptr = buf.as_mut_ptr() as *mut libc::c_char;
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/setlocale_null_unlocked.rs:21:63
   |
21 |     let mut result: *const libc::c_char = setlocale(category, 0 as *const libc::c_char);
   |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: redundant else block
  --> src/setlocale_null_unlocked.rs:35:12
   |
35 |       } else {
   |  ____________^
36 | |         let length: usize = unsafe { strlen(result) } as usize; // Cast to usize
37 | |         if length < buf.len() {
38 | |             buf[..length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, length) });
...  |
48 | |         }
49 | |     }
   | |_____^
   |
   = help: remove the `else` block and move the contents out
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: using a potentially dangerous silent `as` conversion
  --> src/setlocale_null_unlocked.rs:36:29
   |
36 |         let length: usize = unsafe { strlen(result) } as usize; // Cast to usize
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: redundant else block
  --> src/setlocale_null_unlocked.rs:41:16
   |
41 |           } else {
   |  ________________^
42 | |             let copy_length = buf.len() - 1;
43 | |             if !buf.is_empty() {
44 | |                 buf[..copy_length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, copy_length) });
...  |
47 | |             return 34; // ERANGE
48 | |         }
   | |_________^
   |
   = help: remove the `else` block and move the contents out
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: using a potentially dangerous silent `as` conversion
  --> src/setlocale_null_unlocked.rs:38:79
   |
38 |             buf[..length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, length) });
   |                                                                               ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/setlocale_null_unlocked.rs:44:88
   |
44 |                 buf[..copy_length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, copy_length) });
   |                                                                                        ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
 --> src/version.rs:3:47
  |
3 |   pub static mut Version: *const libc::c_char = b"9.5.42-bbc97\0" as *const u8
  |  _______________________________________________^
4 | |     as *const libc::c_char;
  | |__________________________^
  |
  = help: consider using a safe wrapper for this conversion
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
 --> src/version.rs:3:47
  |
3 | pub static mut Version: *const libc::c_char = b"9.5.42-bbc97\0" as *const u8
  |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a safe wrapper for this conversion
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:80:13
   |
80 |             b"%s (%s) %s\n\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:80:13
   |
80 |             b"%s (%s) %s\n\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:88:13
   |
88 |             b"%s %s\n\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:88:13
   |
88 |             b"%s %s\n\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:96:17
   |
96 |         gettext(b"(C)\0" as *const u8 as *const libc::c_char),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:96:17
   |
96 |         gettext(b"(C)\0" as *const u8 as *const libc::c_char),
   |                 ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:97:9
   |
97 |         COPYRIGHT_YEAR as libc::c_int,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:99:20
   |
99 |     fputs_unlocked(b"\n\0" as *const u8 as *const libc::c_char, stream);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:99:20
   |
99 |     fputs_unlocked(b"\n\0" as *const u8 as *const libc::c_char, stream);
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:103:13
    |
103 | / ...   b"License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere is NO...
104 | | ...       as *const u8 as *const libc::c_char,
    | |_____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:103:13
    |
103 | / ...   b"License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere is NO...
104 | | ...       as *const u8 as *const libc::c_char,
    | |______________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:106:9
    |
106 |         b"https://gnu.org/licenses/gpl.html\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:106:9
    |
106 |         b"https://gnu.org/licenses/gpl.html\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:108:20
    |
108 |     fputs_unlocked(b"\n\0" as *const u8 as *const libc::c_char, stream);
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:108:20
    |
108 |     fputs_unlocked(b"\n\0" as *const u8 as *const libc::c_char, stream);
    |                    ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:112:27
    |
112 |         let msg = gettext(b"Written by %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:118:27
    |
118 |         let msg = gettext(b"Written by %s and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:124:27
    |
124 |         let msg = gettext(b"Written by %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:130:27
    |
130 |         let msg = gettext(b"Written by %s, %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:136:27
    |
136 |         let msg = gettext(b"Written by %s, %s, %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:142:27
    |
142 |         let msg = gettext(b"Written by %s, %s, %s, %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:148:27
    |
148 |         let msg = gettext(b"Written by %s, %s, %s, %s, %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:154:27
    |
154 |         let msg = gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:160:27
    |
160 |         let msg = gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:166:27
    |
166 |         let msg = gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and others.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:183:17
    |
183 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:183:17
    |
183 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:184:29
    |
184 |     while !(*authors.offset(n_authors as isize)).is_null() {
    |                             ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:199:51
    |
199 |     let mut authtab: [*const libc::c_char; 10] = [0 as *const libc::c_char; 10];
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:200:17
    |
200 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:200:17
    |
200 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:201:23
    |
201 |     while n_authors < 10 as libc::c_int as libc::c_ulong
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:201:23
    |
201 |     while n_authors < 10 as libc::c_int as libc::c_ulong
    |                       ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:203:21
    |
203 |             authtab[n_authors as usize] = authors.arg::<*const libc::c_char>();
    |                     ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:204:23
    |
204 |             !(authtab[n_authors as usize]).is_null()
    |                       ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:236:41
    |
236 |         unsafe { CStr::from_ptr(gettext(b"Report bugs to: \0".as_ptr() as *const c_char)).to_string_lossy() }
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:240:41
    |
240 |         unsafe { CStr::from_ptr(gettext(b"GNU coreutils\0".as_ptr() as *const c_char)).to_string_lossy() },
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:241:33
    |
241 |         unsafe { CStr::from_ptr(b"https://www.gnu.org/software/coreutils/\0".as_ptr() as *const c_char).to_string_lossy() }
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:245:33
    |
245 |         unsafe { CStr::from_ptr(b"https://www.gnu.org/gethelp/\0".as_ptr() as *const c_char).to_string_lossy() }
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:22:17
   |
22 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:22:17
   |
22 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:23:25
   |
23 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:23:25
   |
23 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:33:17
   |
33 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:33:17
   |
33 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:34:25
   |
34 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:34:25
   |
34 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:44:17
   |
44 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:44:17
   |
44 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:45:25
   |
45 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:45:25
   |
45 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xgetcwd.rs:11:9
   |
11 |         0 as *mut libc::c_char,
   |         ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xgetcwd.rs:12:9
   |
12 |         0 as libc::c_int as size_t,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xgetcwd.rs:12:9
   |
12 |         0 as libc::c_int as size_t,
   |         ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xgetcwd.rs:14:48
   |
14 |     if cwd.is_null() && *__errno_location() == 12 as libc::c_int {
   |                                                ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: redundant else block
  --> src/xmalloc.rs:57:12
   |
57 |       } else {
   |  ____________^
58 | |         return _gl_alloc_nomem()
59 | |     };
   | |_____^
   |
   = help: remove the `else` block and move the contents out
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:54:8
   |
54 |     if s as libc::c_ulong <= 18446744073709551615 as libc::c_ulong {
   |        ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:54:30
   |
54 |     if s as libc::c_ulong <= 18446744073709551615 as libc::c_ulong {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
  --> src/xmalloc.rs:54:30
   |
54 |     if s as libc::c_ulong <= 18446744073709551615 as libc::c_ulong {
   |                              ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/xmalloc.rs:54:30
   |
54 |     if s as libc::c_ulong <= 18446744073709551615 as libc::c_ulong {
   |                              ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:55:24
   |
55 |         p = realloc(p, (s | (s == 0) as libc::c_int as libc::c_long) as libc::c_ulong);
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:55:29
   |
55 |         p = realloc(p, (s | (s == 0) as libc::c_int as libc::c_long) as libc::c_ulong);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:55:29
   |
55 |         p = realloc(p, (s | (s == 0) as libc::c_int as libc::c_long) as libc::c_ulong);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: integer type suffix should be separated by an underscore
  --> src/xmalloc.rs:79:20
   |
79 |     let vec = vec![0u8; total_size];
   |                    ^^^ help: add an underscore: `0_u8`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:81:5
   |
81 |     Box::into_raw(boxed_slice) as *mut libc::c_void
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: redundant else block
  --> src/xmalloc.rs:95:12
   |
95 |       } else {
   |  ____________^
96 | |         return std::ptr::null_mut(); // Handle out of memory or invalid allocation
97 | |     }
   | |_____^
   |
   = help: remove the `else` block and move the contents out
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:103:27
    |
103 |     *__errno_location() = 12 as libc::c_int;
    |                           ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:104:12
    |
104 |     return 0 as *mut libc::c_void;
    |            ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:114:13
    |
114 |             ptr as *mut libc::c_void
    |             ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: integer type suffix should be separated by an underscore
   --> src/xmalloc.rs:139:23
    |
139 |     let buffer = vec![0u8; n];
    |                       ^^^ help: add an underscore: `0_u8`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:193:26
    |
193 |     return xreallocarray(0 as *mut libc::c_void, n, s);
    |                          ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:198:34
    |
198 |     let vec = Vec::with_capacity(size as usize);
    |                                  ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:207:30
    |
207 |     return x2nrealloc(p, ps, 1 as libc::c_int as size_t);
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:207:30
    |
207 |     return x2nrealloc(p, ps, 1 as libc::c_int as size_t);
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:218:18
    |
218 |             n = (DEFAULT_MXFAST as libc::c_int as libc::c_ulong).wrapping_div(s);
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:218:18
    |
218 |             n = (DEFAULT_MXFAST as libc::c_int as libc::c_ulong).wrapping_div(s);
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:219:17
    |
219 |               n = (n as libc::c_ulong)
    |  _________________^
220 | |                 .wrapping_add((n == 0) as libc::c_int as libc::c_ulong) as size_t
221 | |                 as size_t;
    | |_________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:219:17
    |
219 |               n = (n as libc::c_ulong)
    |  _________________^
220 | |                 .wrapping_add((n == 0) as libc::c_int as libc::c_ulong) as size_t
    | |_________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:219:18
    |
219 |             n = (n as libc::c_ulong)
    |                  ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:220:31
    |
220 |                 .wrapping_add((n == 0) as libc::c_int as libc::c_ulong) as size_t
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:220:31
    |
220 |                 .wrapping_add((n == 0) as libc::c_int as libc::c_ulong) as size_t
    |                               ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:226:23
    |
226 |                 (n >> 1 as libc::c_int).wrapping_add(1 as libc::c_int as libc::c_ulong),
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:226:54
    |
226 |                 (n >> 1 as libc::c_int).wrapping_add(1 as libc::c_int as libc::c_ulong),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:226:54
    |
226 |                 (n >> 1 as libc::c_int).wrapping_add(1 as libc::c_int as libc::c_ulong),
    |                                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:228:11
    |
228 |         *(&mut n as *mut size_t) = fresh0;
    |           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: binding's name is too similar to existing binding
   --> src/xmalloc.rs:601:18
    |
601 |             let (fresh12, fresh13) = n0.overflowing_add(n_incr_min);
    |                  ^^^^^^^
    |
note: existing binding defined here
   --> src/xmalloc.rs:247:10
    |
247 |     let (fresh2, fresh3) = n0.overflowing_add(n0 >> 1 as libc::c_int);
    |          ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: binding's name is too similar to existing binding
   --> src/xmalloc.rs:601:27
    |
601 |             let (fresh12, fresh13) = n0.overflowing_add(n_incr_min);
    |                           ^^^^^^^
    |
note: existing binding defined here
   --> src/xmalloc.rs:247:18
    |
247 |     let (fresh2, fresh3) = n0.overflowing_add(n0 >> 1 as libc::c_int);
    |                  ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:247:53
    |
247 |     let (fresh2, fresh3) = n0.overflowing_add(n0 >> 1 as libc::c_int);
    |                                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:248:7
    |
248 |     *(&mut n as *mut idx_t) = fresh2;
    |       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:250:13
    |
250 |         n = 9223372036854775807 as libc::c_long;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/xmalloc.rs:250:13
    |
250 |         n = 9223372036854775807 as libc::c_long;
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `9_223_372_036_854_775_807`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/xmalloc.rs:250:13
    |
250 |         n = 9223372036854775807 as libc::c_long;
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:252:8
    |
252 |     if 0 as libc::c_int as libc::c_long <= n_max && n_max < n {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:252:8
    |
252 |     if 0 as libc::c_int as libc::c_long <= n_max && n_max < n {
    |        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:256:38
    |
256 |       let mut adjusted_nbytes: idx_t = (if if (0 as libc::c_int as idx_t)
    |  ______________________________________^
257 | |         < -(1 as libc::c_int) as idx_t
258 | |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
259 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
...   |
590 | |         }) as libc::c_ulong
591 | |     }) as idx_t;
    | |_______________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:256:46
    |
256 |     let mut adjusted_nbytes: idx_t = (if if (0 as libc::c_int as idx_t)
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:256:46
    |
256 |     let mut adjusted_nbytes: idx_t = (if if (0 as libc::c_int as idx_t)
    |                                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:257:11
    |
257 |         < -(1 as libc::c_int) as idx_t
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:257:13
    |
257 |         < -(1 as libc::c_int) as idx_t
    |             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:258:17
    |
258 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:258:41
    |
258 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:258:41
    |
258 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:259:15
    |
259 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:259:15
    |
259 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:259:51
    |
259 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:259:51
    |
259 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:260:17
    |
260 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:260:41
    |
260 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:260:41
    |
260 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:261:15
    |
261 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:261:15
    |
261 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:261:51
    |
261 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:261:51
    |
261 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xmalloc.rs:452:16
    |
452 |           } else {
    |  ________________^
453 | |             if s == 0 as libc::c_int as libc::c_long {
454 | |                 0 as libc::c_int
455 | |             } else {
...   |
566 | |             }
567 | |         }) != 0
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
452 ~         } else if s == 0 as libc::c_int as libc::c_long {
453 +             0 as libc::c_int
454 +         } else {
455 +             if n < 0 as libc::c_int as libc::c_long {
456 +                 if (if (if ((if 1 as libc::c_int != 0 {
457 +                     0 as libc::c_int as libc::c_long
458 +                 } else {
459 +                     (if 1 as libc::c_int != 0 {
460 +                         0 as libc::c_int as libc::c_long
461 +                     } else {
462 +                         n
463 +                     }) + 0 as libc::c_int as idx_t
464 +                 }) - 1 as libc::c_int as libc::c_long)
465 +                     < 0 as libc::c_int as libc::c_long
466 +                 {
467 +                     !(((((if 1 as libc::c_int != 0 {
468 +                         0 as libc::c_int as libc::c_long
469 +                     } else {
470 +                         (if 1 as libc::c_int != 0 {
471 +                             0 as libc::c_int as libc::c_long
472 +                         } else {
473 +                             n
474 +                         }) + 0 as libc::c_int as idx_t
475 +                     }) + 1 as libc::c_int as libc::c_long)
476 +                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
477 +                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
478 +                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
479 +                         - 1 as libc::c_int as libc::c_long)
480 +                         * 2 as libc::c_int as libc::c_long
481 +                         + 1 as libc::c_int as libc::c_long)
482 +                 } else {
483 +                     (if 1 as libc::c_int != 0 {
484 +                         0 as libc::c_int as libc::c_long
485 +                     } else {
486 +                         (if 1 as libc::c_int != 0 {
487 +                             0 as libc::c_int as libc::c_long
488 +                         } else {
489 +                             n
490 +                         }) + 0 as libc::c_int as idx_t
491 +                     }) + 0 as libc::c_int as libc::c_long
492 +                 }) < 0 as libc::c_int as libc::c_long
493 +                 {
494 +                     (((if 1 as libc::c_int != 0 {
495 +                         0 as libc::c_int as libc::c_long
496 +                     } else {
497 +                         n
498 +                     }) + 0 as libc::c_int as idx_t)
499 +                         < -(if ((if 1 as libc::c_int != 0 {
500 +                             0 as libc::c_int as libc::c_long
501 +                         } else {
502 +                             (if 1 as libc::c_int != 0 {
503 +                                 0 as libc::c_int as libc::c_long
504 +                             } else {
505 +                                 n
506 +                             }) + 0 as libc::c_int as idx_t
507 +                         }) - 1 as libc::c_int as libc::c_long)
508 +                             < 0 as libc::c_int as libc::c_long
509 +                         {
510 +                             ((((if 1 as libc::c_int != 0 {
511 +                                 0 as libc::c_int as libc::c_long
512 +                             } else {
513 +                                 (if 1 as libc::c_int != 0 {
514 +                                     0 as libc::c_int as libc::c_long
515 +                                 } else {
516 +                                     n
517 +                                 }) + 0 as libc::c_int as idx_t
518 +                             }) + 1 as libc::c_int as libc::c_long)
519 +                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
520 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
521 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
522 +                                 - 1 as libc::c_int as libc::c_long)
523 +                                 * 2 as libc::c_int as libc::c_long
524 +                                 + 1 as libc::c_int as libc::c_long
525 +                         } else {
526 +                             (if 1 as libc::c_int != 0 {
527 +                                 0 as libc::c_int as libc::c_long
528 +                             } else {
529 +                                 (if 1 as libc::c_int != 0 {
530 +                                     0 as libc::c_int as libc::c_long
531 +                                 } else {
532 +                                     n
533 +                                 }) + 0 as libc::c_int as idx_t
534 +                             }) - 1 as libc::c_int as libc::c_long
535 +                         })) as libc::c_int
536 +                 } else {
537 +                     ((0 as libc::c_int as libc::c_long)
538 +                         < (if 1 as libc::c_int != 0 {
539 +                             0 as libc::c_int as libc::c_long
540 +                         } else {
541 +                             n
542 +                         }) + 0 as libc::c_int as idx_t) as libc::c_int
543 +                 }) != 0 && n == -(1 as libc::c_int) as libc::c_long
544 +                 {
545 +                     if ((if 1 as libc::c_int != 0 {
546 +                         0 as libc::c_int as libc::c_long
547 +                     } else {
548 +                         s
549 +                     }) - 1 as libc::c_int as libc::c_long)
550 +                         < 0 as libc::c_int as libc::c_long
551 +                     {
552 +                         ((0 as libc::c_int as libc::c_long)
553 +                             < s + 0 as libc::c_int as idx_t) as libc::c_int
554 +                     } else {
555 +                         ((-(1 as libc::c_int) as libc::c_long
556 +                             - 0 as libc::c_int as idx_t)
557 +                             < s - 1 as libc::c_int as libc::c_long) as libc::c_int
558 +                     }
559 +                 } else {
560 +                     (0 as libc::c_int as idx_t / n < s) as libc::c_int
561 +                 }
562 +             } else {
563 +                 (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
564 +             }
565 ~         }) != 0
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:262:20
    |
262 |         && (if s < 0 as libc::c_int as libc::c_long {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:262:20
    |
262 |         && (if s < 0 as libc::c_int as libc::c_long {
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xmalloc.rs:344:20
    |
344 |               } else {
    |  ____________________^
345 | |                 if (if (if ((if 1 as libc::c_int != 0 {
346 | |                     0 as libc::c_int as libc::c_long
347 | |                 } else {
...   |
450 | |                 }
451 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
344 ~             } else if (if (if ((if 1 as libc::c_int != 0 {
345 +                 0 as libc::c_int as libc::c_long
346 +             } else {
347 +                 (if 1 as libc::c_int != 0 {
348 +                     0 as libc::c_int as libc::c_long
349 +                 } else {
350 +                     s
351 +                 }) + 0 as libc::c_int as idx_t
352 +             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
353 +             {
354 +                 !(((((if 1 as libc::c_int != 0 {
355 +                     0 as libc::c_int as libc::c_long
356 +                 } else {
357 +                     (if 1 as libc::c_int != 0 {
358 +                         0 as libc::c_int as libc::c_long
359 +                     } else {
360 +                         s
361 +                     }) + 0 as libc::c_int as idx_t
362 +                 }) + 1 as libc::c_int as libc::c_long)
363 +                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
364 +                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
365 +                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
366 +                     - 1 as libc::c_int as libc::c_long)
367 +                     * 2 as libc::c_int as libc::c_long
368 +                     + 1 as libc::c_int as libc::c_long)
369 +             } else {
370 +                 (if 1 as libc::c_int != 0 {
371 +                     0 as libc::c_int as libc::c_long
372 +                 } else {
373 +                     (if 1 as libc::c_int != 0 {
374 +                         0 as libc::c_int as libc::c_long
375 +                     } else {
376 +                         s
377 +                     }) + 0 as libc::c_int as idx_t
378 +                 }) + 0 as libc::c_int as libc::c_long
379 +             }) < 0 as libc::c_int as libc::c_long
380 +             {
381 +                 (((if 1 as libc::c_int != 0 {
382 +                     0 as libc::c_int as libc::c_long
383 +                 } else {
384 +                     s
385 +                 }) + 0 as libc::c_int as idx_t)
386 +                     < -(if ((if 1 as libc::c_int != 0 {
387 +                         0 as libc::c_int as libc::c_long
388 +                     } else {
389 +                         (if 1 as libc::c_int != 0 {
390 +                             0 as libc::c_int as libc::c_long
391 +                         } else {
392 +                             s
393 +                         }) + 0 as libc::c_int as idx_t
394 +                     }) - 1 as libc::c_int as libc::c_long)
395 +                         < 0 as libc::c_int as libc::c_long
396 +                     {
397 +                         ((((if 1 as libc::c_int != 0 {
398 +                             0 as libc::c_int as libc::c_long
399 +                         } else {
400 +                             (if 1 as libc::c_int != 0 {
401 +                                 0 as libc::c_int as libc::c_long
402 +                             } else {
403 +                                 s
404 +                             }) + 0 as libc::c_int as idx_t
405 +                         }) + 1 as libc::c_int as libc::c_long)
406 +                             << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
407 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
408 +                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
409 +                             - 1 as libc::c_int as libc::c_long)
410 +                             * 2 as libc::c_int as libc::c_long
411 +                             + 1 as libc::c_int as libc::c_long
412 +                     } else {
413 +                         (if 1 as libc::c_int != 0 {
414 +                             0 as libc::c_int as libc::c_long
415 +                         } else {
416 +                             (if 1 as libc::c_int != 0 {
417 +                                 0 as libc::c_int as libc::c_long
418 +                             } else {
419 +                                 s
420 +                             }) + 0 as libc::c_int as idx_t
421 +                         }) - 1 as libc::c_int as libc::c_long
422 +                     })) as libc::c_int
423 +             } else {
424 +                 ((0 as libc::c_int as libc::c_long)
425 +                     < (if 1 as libc::c_int != 0 {
426 +                         0 as libc::c_int as libc::c_long
427 +                     } else {
428 +                         s
429 +                     }) + 0 as libc::c_int as idx_t) as libc::c_int
430 +             }) != 0 && s == -(1 as libc::c_int) as libc::c_long
431 +             {
432 +                 if ((if 1 as libc::c_int != 0 {
433 +                     0 as libc::c_int as libc::c_long
434 +                 } else {
435 +                     n
436 +                 }) - 1 as libc::c_int as libc::c_long)
437 +                     < 0 as libc::c_int as libc::c_long
438 +                 {
439 +                     ((0 as libc::c_int as libc::c_long)
440 +                         < n + 0 as libc::c_int as idx_t) as libc::c_int
441 +                 } else {
442 +                     ((0 as libc::c_int as libc::c_long) < n
443 +                         && (-(1 as libc::c_int) as libc::c_long
444 +                             - 0 as libc::c_int as idx_t)
445 +                             < n - 1 as libc::c_int as libc::c_long) as libc::c_int
446 +                 }
447 +             } else {
448 +                 (0 as libc::c_int as idx_t / s < n) as libc::c_int
449 +             }
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:263:20
    |
263 |             if n < 0 as libc::c_int as libc::c_long {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:263:20
    |
263 |             if n < 0 as libc::c_int as libc::c_long {
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:264:25
    |
264 |                 if ((if 1 as libc::c_int != 0 {
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:265:21
    |
265 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:265:21
    |
265 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:267:25
    |
267 |                     (if 1 as libc::c_int != 0 {
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:268:25
    |
268 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:268:25
    |
268 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:270:25
    |
270 |                         -(1 as libc::c_int) as idx_t
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:270:27
    |
270 |                         -(1 as libc::c_int) as idx_t
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:272:22
    |
272 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:272:22
    |
272 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:272:58
    |
272 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:272:58
    |
272 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:274:21
    |
274 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:274:26
    |
274 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:274:28
    |
274 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:276:21
    |
276 | /                     ((if (if (if ((if 1 as libc::c_int != 0 {
277 | |                         0 as libc::c_int as libc::c_long
278 | |                     } else {
279 | |                         s
...   |
341 | |                         -(1 as libc::c_int) as idx_t / -s
342 | |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    | |_________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:276:39
    |
276 |                     ((if (if (if ((if 1 as libc::c_int != 0 {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:277:25
    |
277 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:277:25
    |
277 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:280:26
    |
280 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:280:26
    |
280 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:281:27
    |
281 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:281:27
    |
281 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:283:34
    |
283 |                         !(((((if 1 as libc::c_int != 0 {
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:284:29
    |
284 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:284:29
    |
284 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:287:30
    |
287 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:287:30
    |
287 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:288:33
    |
288 | ...                   << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:289:47
    |
289 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:289:47
    |
289 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:290:47
    |
290 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:290:47
    |
290 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:291:31
    |
291 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:291:31
    |
291 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:292:31
    |
292 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:292:31
    |
292 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:293:31
    |
293 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:293:31
    |
293 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:295:29
    |
295 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:296:29
    |
296 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:296:29
    |
296 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:299:30
    |
299 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:299:30
    |
299 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:300:26
    |
300 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:300:26
    |
300 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:302:25
    |
302 | /                         (s
303 | |                             < -(if ((if 1 as libc::c_int != 0 {
304 | |                                 0 as libc::c_int as libc::c_long
305 | |                             } else {
...   |
326 | |                                 }) - 1 as libc::c_int as libc::c_long
327 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:303:41
    |
303 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:304:33
    |
304 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:304:33
    |
304 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:307:34
    |
307 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:307:34
    |
307 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:308:35
    |
308 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:308:35
    |
308 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:310:40
    |
310 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:311:37
    |
311 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:311:37
    |
311 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:314:38
    |
314 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:314:38
    |
314 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:315:41
    |
315 | ...                   << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:316:55
    |
316 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:316:55
    |
316 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:317:55
    |
317 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:317:55
    |
317 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:318:39
    |
318 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:318:39
    |
318 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:319:39
    |
319 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:319:39
    |
319 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:320:39
    |
320 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:320:39
    |
320 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:322:37
    |
322 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:323:37
    |
323 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:323:37
    |
323 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:326:38
    |
326 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:326:38
    |
326 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:329:25
    |
329 |                         ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:329:27
    |
329 |                         ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:329:27
    |
329 |                         ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: operator precedence can trip the unwary
   --> src/xmalloc.rs:332:25
    |
332 | /                         (if 1 as libc::c_int != 0 {
333 | |                             0 as libc::c_int as libc::c_long
334 | |                         } else {
335 | |                             s
...   |
338 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
339 | |                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |________________________________________________________________________________^
    |
    = note: `-W clippy::precedence` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
332 ~                         ((if 1 as libc::c_int != 0 {
333 +                             0 as libc::c_int as libc::c_long
334 +                         } else {
335 +                             s
336 +                         }) + -(1 as libc::c_int) as idx_t) >> (::core::mem::size_of::<idx_t>() as libc::c_ulong)
337 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
338 +                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:332:29
    |
332 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:333:29
    |
333 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:333:29
    |
333 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:336:30
    |
336 |                         }) + -(1 as libc::c_int) as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:336:32
    |
336 |                         }) + -(1 as libc::c_int) as idx_t
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:337:33
    |
337 | ...                   >> (::core::mem::size_of::<idx_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:338:47
    |
338 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:338:47
    |
338 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:339:47
    |
339 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:339:47
    |
339 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:341:25
    |
341 |                         -(1 as libc::c_int) as idx_t / -s
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:341:27
    |
341 |                         -(1 as libc::c_int) as idx_t / -s
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:342:27
    |
342 |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:342:29
    |
342 |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:345:33
    |
345 |                 if (if (if ((if 1 as libc::c_int != 0 {
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:346:21
    |
346 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:346:21
    |
346 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:348:25
    |
348 |                     (if 1 as libc::c_int != 0 {
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:349:25
    |
349 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:349:25
    |
349 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:352:26
    |
352 |                     }) + 0 as libc::c_int as idx_t
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:352:26
    |
352 |                     }) + 0 as libc::c_int as idx_t
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:353:22
    |
353 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:353:22
    |
353 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:353:58
    |
353 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:353:58
    |
353 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:355:30
    |
355 |                     !(((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:356:25
    |
356 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:356:25
    |
356 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:358:29
    |
358 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:359:29
    |
359 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:359:29
    |
359 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:362:30
    |
362 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:362:30
    |
362 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:363:26
    |
363 |                     }) + 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:363:26
    |
363 |                     }) + 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:364:29
    |
364 |                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:365:43
    |
365 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:365:43
    |
365 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:366:43
    |
366 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:366:43
    |
366 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:367:27
    |
367 |                         - 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:367:27
    |
367 |                         - 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:368:27
    |
368 |                         * 2 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:368:27
    |
368 |                         * 2 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:369:27
    |
369 |                         + 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:369:27
    |
369 |                         + 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:371:25
    |
371 |                     (if 1 as libc::c_int != 0 {
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:372:25
    |
372 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:372:25
    |
372 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:374:29
    |
374 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:375:29
    |
375 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:375:29
    |
375 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:378:30
    |
378 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:378:30
    |
378 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:379:26
    |
379 |                     }) + 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:379:26
    |
379 |                     }) + 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:380:22
    |
380 |                 }) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:380:22
    |
380 |                 }) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:382:21
    |
382 | /                     (((if 1 as libc::c_int != 0 {
383 | |                         0 as libc::c_int as libc::c_long
384 | |                     } else {
385 | |                         s
...   |
422 | |                             }) - 1 as libc::c_int as libc::c_long
423 | |                         })) as libc::c_int
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:382:27
    |
382 |                     (((if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:383:25
    |
383 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:383:25
    |
383 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:386:26
    |
386 |                     }) + 0 as libc::c_int as idx_t)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:386:26
    |
386 |                     }) + 0 as libc::c_int as idx_t)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:387:37
    |
387 |                         < -(if ((if 1 as libc::c_int != 0 {
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:388:29
    |
388 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:388:29
    |
388 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:390:33
    |
390 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:391:33
    |
391 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:391:33
    |
391 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:394:34
    |
394 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:394:34
    |
394 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:395:30
    |
395 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:395:30
    |
395 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:396:31
    |
396 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:396:31
    |
396 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:398:36
    |
398 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:399:33
    |
399 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:399:33
    |
399 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:401:37
    |
401 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:402:37
    |
402 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:402:37
    |
402 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:405:38
    |
405 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:405:38
    |
405 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:406:34
    |
406 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:406:34
    |
406 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:407:37
    |
407 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:408:51
    |
408 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:408:51
    |
408 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:409:51
    |
409 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:409:51
    |
409 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:410:35
    |
410 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:410:35
    |
410 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:411:35
    |
411 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:411:35
    |
411 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:412:35
    |
412 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:412:35
    |
412 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:414:33
    |
414 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:415:33
    |
415 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:415:33
    |
415 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:417:37
    |
417 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:418:37
    |
418 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:418:37
    |
418 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:421:38
    |
421 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:421:38
    |
421 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:422:34
    |
422 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:422:34
    |
422 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:425:21
    |
425 | /                     ((0 as libc::c_int as libc::c_long)
426 | |                         < (if 1 as libc::c_int != 0 {
427 | |                             0 as libc::c_int as libc::c_long
428 | |                         } else {
429 | |                             s
430 | |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |______________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:425:23
    |
425 |                     ((0 as libc::c_int as libc::c_long)
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:425:23
    |
425 |                     ((0 as libc::c_int as libc::c_long)
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:426:31
    |
426 |                         < (if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:427:29
    |
427 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:427:29
    |
427 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:430:30
    |
430 |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:430:30
    |
430 |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:431:33
    |
431 |                 }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:431:35
    |
431 |                 }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:433:29
    |
433 |                     if ((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:434:25
    |
434 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:434:25
    |
434 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:437:26
    |
437 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:437:26
    |
437 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:438:27
    |
438 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:438:27
    |
438 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:440:25
    |
440 | /                         ((0 as libc::c_int as libc::c_long)
441 | |                             < n + 0 as libc::c_int as idx_t) as libc::c_int
    | |___________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:440:27
    |
440 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:440:27
    |
440 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:441:35
    |
441 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:441:35
    |
441 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:443:25
    |
443 | /                         ((0 as libc::c_int as libc::c_long) < n
444 | |                             && (-(1 as libc::c_int) as libc::c_long
445 | |                                 - 0 as libc::c_int as idx_t)
446 | |                                 < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |______________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:443:27
    |
443 |                         ((0 as libc::c_int as libc::c_long) < n
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:443:27
    |
443 |                         ((0 as libc::c_int as libc::c_long) < n
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:444:33
    |
444 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:444:35
    |
444 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:445:35
    |
445 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:445:35
    |
445 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:446:39
    |
446 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:446:39
    |
446 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:449:21
    |
449 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:449:22
    |
449 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:449:22
    |
449 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xmalloc.rs:455:20
    |
455 |               } else {
    |  ____________________^
456 | |                 if n < 0 as libc::c_int as libc::c_long {
457 | |                     if (if (if ((if 1 as libc::c_int != 0 {
458 | |                         0 as libc::c_int as libc::c_long
...   |
565 | |                 }
566 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
455 ~             } else if n < 0 as libc::c_int as libc::c_long {
456 +                 if (if (if ((if 1 as libc::c_int != 0 {
457 +                     0 as libc::c_int as libc::c_long
458 +                 } else {
459 +                     (if 1 as libc::c_int != 0 {
460 +                         0 as libc::c_int as libc::c_long
461 +                     } else {
462 +                         n
463 +                     }) + 0 as libc::c_int as idx_t
464 +                 }) - 1 as libc::c_int as libc::c_long)
465 +                     < 0 as libc::c_int as libc::c_long
466 +                 {
467 +                     !(((((if 1 as libc::c_int != 0 {
468 +                         0 as libc::c_int as libc::c_long
469 +                     } else {
470 +                         (if 1 as libc::c_int != 0 {
471 +                             0 as libc::c_int as libc::c_long
472 +                         } else {
473 +                             n
474 +                         }) + 0 as libc::c_int as idx_t
475 +                     }) + 1 as libc::c_int as libc::c_long)
476 +                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
477 +                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
478 +                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
479 +                         - 1 as libc::c_int as libc::c_long)
480 +                         * 2 as libc::c_int as libc::c_long
481 +                         + 1 as libc::c_int as libc::c_long)
482 +                 } else {
483 +                     (if 1 as libc::c_int != 0 {
484 +                         0 as libc::c_int as libc::c_long
485 +                     } else {
486 +                         (if 1 as libc::c_int != 0 {
487 +                             0 as libc::c_int as libc::c_long
488 +                         } else {
489 +                             n
490 +                         }) + 0 as libc::c_int as idx_t
491 +                     }) + 0 as libc::c_int as libc::c_long
492 +                 }) < 0 as libc::c_int as libc::c_long
493 +                 {
494 +                     (((if 1 as libc::c_int != 0 {
495 +                         0 as libc::c_int as libc::c_long
496 +                     } else {
497 +                         n
498 +                     }) + 0 as libc::c_int as idx_t)
499 +                         < -(if ((if 1 as libc::c_int != 0 {
500 +                             0 as libc::c_int as libc::c_long
501 +                         } else {
502 +                             (if 1 as libc::c_int != 0 {
503 +                                 0 as libc::c_int as libc::c_long
504 +                             } else {
505 +                                 n
506 +                             }) + 0 as libc::c_int as idx_t
507 +                         }) - 1 as libc::c_int as libc::c_long)
508 +                             < 0 as libc::c_int as libc::c_long
509 +                         {
510 +                             ((((if 1 as libc::c_int != 0 {
511 +                                 0 as libc::c_int as libc::c_long
512 +                             } else {
513 +                                 (if 1 as libc::c_int != 0 {
514 +                                     0 as libc::c_int as libc::c_long
515 +                                 } else {
516 +                                     n
517 +                                 }) + 0 as libc::c_int as idx_t
518 +                             }) + 1 as libc::c_int as libc::c_long)
519 +                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
520 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
521 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
522 +                                 - 1 as libc::c_int as libc::c_long)
523 +                                 * 2 as libc::c_int as libc::c_long
524 +                                 + 1 as libc::c_int as libc::c_long
525 +                         } else {
526 +                             (if 1 as libc::c_int != 0 {
527 +                                 0 as libc::c_int as libc::c_long
528 +                             } else {
529 +                                 (if 1 as libc::c_int != 0 {
530 +                                     0 as libc::c_int as libc::c_long
531 +                                 } else {
532 +                                     n
533 +                                 }) + 0 as libc::c_int as idx_t
534 +                             }) - 1 as libc::c_int as libc::c_long
535 +                         })) as libc::c_int
536 +                 } else {
537 +                     ((0 as libc::c_int as libc::c_long)
538 +                         < (if 1 as libc::c_int != 0 {
539 +                             0 as libc::c_int as libc::c_long
540 +                         } else {
541 +                             n
542 +                         }) + 0 as libc::c_int as idx_t) as libc::c_int
543 +                 }) != 0 && n == -(1 as libc::c_int) as libc::c_long
544 +                 {
545 +                     if ((if 1 as libc::c_int != 0 {
546 +                         0 as libc::c_int as libc::c_long
547 +                     } else {
548 +                         s
549 +                     }) - 1 as libc::c_int as libc::c_long)
550 +                         < 0 as libc::c_int as libc::c_long
551 +                     {
552 +                         ((0 as libc::c_int as libc::c_long)
553 +                             < s + 0 as libc::c_int as idx_t) as libc::c_int
554 +                     } else {
555 +                         ((-(1 as libc::c_int) as libc::c_long
556 +                             - 0 as libc::c_int as idx_t)
557 +                             < s - 1 as libc::c_int as libc::c_long) as libc::c_int
558 +                     }
559 +                 } else {
560 +                     (0 as libc::c_int as idx_t / n < s) as libc::c_int
561 +                 }
562 +             } else {
563 +                 (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
564 +             }
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:453:21
    |
453 |             if s == 0 as libc::c_int as libc::c_long {
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:453:21
    |
453 |             if s == 0 as libc::c_int as libc::c_long {
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:454:17
    |
454 |                 0 as libc::c_int
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:456:24
    |
456 |                 if n < 0 as libc::c_int as libc::c_long {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:456:24
    |
456 |                 if n < 0 as libc::c_int as libc::c_long {
    |                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:457:37
    |
457 |                     if (if (if ((if 1 as libc::c_int != 0 {
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:458:25
    |
458 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:458:25
    |
458 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:460:29
    |
460 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:461:29
    |
461 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:461:29
    |
461 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:464:30
    |
464 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:464:30
    |
464 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:465:26
    |
465 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:465:26
    |
465 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:466:27
    |
466 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:466:27
    |
466 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:468:34
    |
468 |                         !(((((if 1 as libc::c_int != 0 {
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:469:29
    |
469 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:469:29
    |
469 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:471:33
    |
471 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:472:33
    |
472 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:472:33
    |
472 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:475:34
    |
475 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:475:34
    |
475 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:476:30
    |
476 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:476:30
    |
476 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:477:33
    |
477 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:478:47
    |
478 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:478:47
    |
478 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:479:47
    |
479 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:479:47
    |
479 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:480:31
    |
480 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:480:31
    |
480 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:481:31
    |
481 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:481:31
    |
481 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:482:31
    |
482 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:482:31
    |
482 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:484:29
    |
484 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:485:29
    |
485 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:485:29
    |
485 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:487:33
    |
487 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:488:33
    |
488 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:488:33
    |
488 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:491:34
    |
491 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:491:34
    |
491 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:492:30
    |
492 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:492:30
    |
492 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:493:26
    |
493 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:493:26
    |
493 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:495:25
    |
495 | /                         (((if 1 as libc::c_int != 0 {
496 | |                             0 as libc::c_int as libc::c_long
497 | |                         } else {
498 | |                             n
...   |
535 | |                                 }) - 1 as libc::c_int as libc::c_long
536 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:495:31
    |
495 |                         (((if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:496:29
    |
496 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:496:29
    |
496 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:499:30
    |
499 |                         }) + 0 as libc::c_int as idx_t)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:499:30
    |
499 |                         }) + 0 as libc::c_int as idx_t)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:500:41
    |
500 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:501:33
    |
501 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:501:33
    |
501 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:503:37
    |
503 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:504:37
    |
504 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:504:37
    |
504 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:507:38
    |
507 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:507:38
    |
507 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:508:34
    |
508 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:508:34
    |
508 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:509:35
    |
509 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:509:35
    |
509 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:511:40
    |
511 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:512:37
    |
512 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:512:37
    |
512 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:514:41
    |
514 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:515:41
    |
515 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:515:41
    |
515 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:518:42
    |
518 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:518:42
    |
518 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:519:38
    |
519 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:519:38
    |
519 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:520:41
    |
520 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:521:55
    |
521 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:521:55
    |
521 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:522:55
    |
522 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:522:55
    |
522 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:523:39
    |
523 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:523:39
    |
523 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:524:39
    |
524 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:524:39
    |
524 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:525:39
    |
525 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:525:39
    |
525 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:527:37
    |
527 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:528:37
    |
528 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:528:37
    |
528 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:530:41
    |
530 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:531:41
    |
531 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:531:41
    |
531 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:534:42
    |
534 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:534:42
    |
534 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:535:38
    |
535 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:535:38
    |
535 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:538:25
    |
538 | /                         ((0 as libc::c_int as libc::c_long)
539 | |                             < (if 1 as libc::c_int != 0 {
540 | |                                 0 as libc::c_int as libc::c_long
541 | |                             } else {
542 | |                                 n
543 | |                             }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |__________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:538:27
    |
538 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:538:27
    |
538 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:539:35
    |
539 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:540:33
    |
540 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:540:33
    |
540 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:543:34
    |
543 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:543:34
    |
543 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:544:37
    |
544 |                     }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:544:39
    |
544 |                     }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:546:33
    |
546 |                         if ((if 1 as libc::c_int != 0 {
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:547:29
    |
547 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:547:29
    |
547 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:550:30
    |
550 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:550:30
    |
550 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:551:31
    |
551 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:551:31
    |
551 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:553:29
    |
553 | / ...                   ((0 as libc::c_int as libc::c_long)
554 | | ...                       < s + 0 as libc::c_int as idx_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:553:31
    |
553 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:553:31
    |
553 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:554:39
    |
554 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:554:39
    |
554 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:556:29
    |
556 | / ...                   ((-(1 as libc::c_int) as libc::c_long
557 | | ...                       - 0 as libc::c_int as idx_t)
558 | | ...                       < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:556:31
    |
556 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:556:33
    |
556 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:557:35
    |
557 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:557:35
    |
557 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:558:39
    |
558 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:558:39
    |
558 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:561:25
    |
561 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:561:26
    |
561 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:561:26
    |
561 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:564:21
    |
564 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:564:22
    |
564 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:564:24
    |
564 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:570:11
    |
570 |         *(&mut nbytes as *mut idx_t) = fresh8;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:571:9
    |
571 |         1 as libc::c_int
    |         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:574:11
    |
574 |         *(&mut nbytes as *mut idx_t) = fresh10;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:575:9
    |
575 |         fresh11 as libc::c_int
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:578:13
    |
578 |         if (9223372036854775807 as libc::c_long as libc::c_ulong)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:578:13
    |
578 |         if (9223372036854775807 as libc::c_long as libc::c_ulong)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/xmalloc.rs:578:13
    |
578 |         if (9223372036854775807 as libc::c_long as libc::c_ulong)
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `9_223_372_036_854_775_807`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/xmalloc.rs:578:13
    |
578 |         if (9223372036854775807 as libc::c_long as libc::c_ulong)
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:579:15
    |
579 |             < 18446744073709551615 as libc::c_ulong
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/xmalloc.rs:579:15
    |
579 |             < 18446744073709551615 as libc::c_ulong
    |               ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/xmalloc.rs:579:15
    |
579 |             < 18446744073709551615 as libc::c_ulong
    |               ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:581:13
    |
581 |             9223372036854775807 as libc::c_long as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:581:13
    |
581 |             9223372036854775807 as libc::c_long as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/xmalloc.rs:581:13
    |
581 |             9223372036854775807 as libc::c_long as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `9_223_372_036_854_775_807`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/xmalloc.rs:581:13
    |
581 |             9223372036854775807 as libc::c_long as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:583:13
    |
583 |             18446744073709551615 as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/xmalloc.rs:583:13
    |
583 |             18446744073709551615 as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/xmalloc.rs:583:13
    |
583 |             18446744073709551615 as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:586:9
    |
586 | /         (if nbytes < DEFAULT_MXFAST_0 as libc::c_int as libc::c_long {
587 | |             DEFAULT_MXFAST_0 as libc::c_int
588 | |         } else {
589 | |             0 as libc::c_int
590 | |         }) as libc::c_ulong
    | |___________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:586:22
    |
586 |         (if nbytes < DEFAULT_MXFAST_0 as libc::c_int as libc::c_long {
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:586:22
    |
586 |         (if nbytes < DEFAULT_MXFAST_0 as libc::c_int as libc::c_long {
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:587:13
    |
587 |             DEFAULT_MXFAST_0 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:589:13
    |
589 |             0 as libc::c_int
    |             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:597:15
    |
597 |         *pn = 0 as libc::c_int as idx_t;
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:597:15
    |
597 |         *pn = 0 as libc::c_int as idx_t;
    |               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:602:15
    |
602 |             *(&mut n as *mut idx_t) = fresh12;
    |               ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:603:13
    |
603 |             fresh13 as libc::c_int != 0
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:604:20
    |
604 |                 || 0 as libc::c_int as libc::c_long <= n_max && n_max < n
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:604:20
    |
604 |                 || 0 as libc::c_int as libc::c_long <= n_max && n_max < n
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:605:25
    |
605 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:605:25
    |
605 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:605:54
    |
605 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:605:56
    |
605 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                                                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:606:29
    |
606 |                     && ((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:607:25
    |
607 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:607:25
    |
607 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:610:26
    |
610 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:610:26
    |
610 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:611:27
    |
611 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:611:27
    |
611 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:612:29
    |
612 |                     && ((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:613:25
    |
613 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:613:25
    |
613 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:616:26
    |
616 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:616:26
    |
616 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:617:27
    |
617 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:617:27
    |
617 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xmalloc.rs:811:28
    |
811 |                       } else {
    |  ____________________________^
812 | |                         if s == 0 as libc::c_int as libc::c_long {
813 | |                             0 as libc::c_int
814 | |                         } else {
...   |
925 | |                         }
926 | |                     }) != 0
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
811 ~                     } else if s == 0 as libc::c_int as libc::c_long {
812 +                         0 as libc::c_int
813 +                     } else {
814 +                         if n < 0 as libc::c_int as libc::c_long {
815 +                             if (if (if ((if 1 as libc::c_int != 0 {
816 +                                 0 as libc::c_int as libc::c_long
817 +                             } else {
818 +                                 (if 1 as libc::c_int != 0 {
819 +                                     0 as libc::c_int as libc::c_long
820 +                                 } else {
821 +                                     n
822 +                                 }) + 0 as libc::c_int as idx_t
823 +                             }) - 1 as libc::c_int as libc::c_long)
824 +                                 < 0 as libc::c_int as libc::c_long
825 +                             {
826 +                                 !(((((if 1 as libc::c_int != 0 {
827 +                                     0 as libc::c_int as libc::c_long
828 +                                 } else {
829 +                                     (if 1 as libc::c_int != 0 {
830 +                                         0 as libc::c_int as libc::c_long
831 +                                     } else {
832 +                                         n
833 +                                     }) + 0 as libc::c_int as idx_t
834 +                                 }) + 1 as libc::c_int as libc::c_long)
835 +                                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
836 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
837 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
838 +                                     - 1 as libc::c_int as libc::c_long)
839 +                                     * 2 as libc::c_int as libc::c_long
840 +                                     + 1 as libc::c_int as libc::c_long)
841 +                             } else {
842 +                                 (if 1 as libc::c_int != 0 {
843 +                                     0 as libc::c_int as libc::c_long
844 +                                 } else {
845 +                                     (if 1 as libc::c_int != 0 {
846 +                                         0 as libc::c_int as libc::c_long
847 +                                     } else {
848 +                                         n
849 +                                     }) + 0 as libc::c_int as idx_t
850 +                                 }) + 0 as libc::c_int as libc::c_long
851 +                             }) < 0 as libc::c_int as libc::c_long
852 +                             {
853 +                                 (((if 1 as libc::c_int != 0 {
854 +                                     0 as libc::c_int as libc::c_long
855 +                                 } else {
856 +                                     n
857 +                                 }) + 0 as libc::c_int as idx_t)
858 +                                     < -(if ((if 1 as libc::c_int != 0 {
859 +                                         0 as libc::c_int as libc::c_long
860 +                                     } else {
861 +                                         (if 1 as libc::c_int != 0 {
862 +                                             0 as libc::c_int as libc::c_long
863 +                                         } else {
864 +                                             n
865 +                                         }) + 0 as libc::c_int as idx_t
866 +                                     }) - 1 as libc::c_int as libc::c_long)
867 +                                         < 0 as libc::c_int as libc::c_long
868 +                                     {
869 +                                         ((((if 1 as libc::c_int != 0 {
870 +                                             0 as libc::c_int as libc::c_long
871 +                                         } else {
872 +                                             (if 1 as libc::c_int != 0 {
873 +                                                 0 as libc::c_int as libc::c_long
874 +                                             } else {
875 +                                                 n
876 +                                             }) + 0 as libc::c_int as idx_t
877 +                                         }) + 1 as libc::c_int as libc::c_long)
878 +                                             << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
879 +                                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
880 +                                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
881 +                                             - 1 as libc::c_int as libc::c_long)
882 +                                             * 2 as libc::c_int as libc::c_long
883 +                                             + 1 as libc::c_int as libc::c_long
884 +                                     } else {
885 +                                         (if 1 as libc::c_int != 0 {
886 +                                             0 as libc::c_int as libc::c_long
887 +                                         } else {
888 +                                             (if 1 as libc::c_int != 0 {
889 +                                                 0 as libc::c_int as libc::c_long
890 +                                             } else {
891 +                                                 n
892 +                                             }) + 0 as libc::c_int as idx_t
893 +                                         }) - 1 as libc::c_int as libc::c_long
894 +                                     })) as libc::c_int
895 +                             } else {
896 +                                 ((0 as libc::c_int as libc::c_long)
897 +                                     < (if 1 as libc::c_int != 0 {
898 +                                         0 as libc::c_int as libc::c_long
899 +                                     } else {
900 +                                         n
901 +                                     }) + 0 as libc::c_int as idx_t) as libc::c_int
902 +                             }) != 0 && n == -(1 as libc::c_int) as libc::c_long
903 +                             {
904 +                                 if ((if 1 as libc::c_int != 0 {
905 +                                     0 as libc::c_int as libc::c_long
906 +                                 } else {
907 +                                     s
908 +                                 }) - 1 as libc::c_int as libc::c_long)
909 +                                     < 0 as libc::c_int as libc::c_long
910 +                                 {
911 +                                     ((0 as libc::c_int as libc::c_long)
912 +                                         < s + 0 as libc::c_int as idx_t) as libc::c_int
913 +                                 } else {
914 +                                     ((-(1 as libc::c_int) as libc::c_long
915 +                                         - 0 as libc::c_int as idx_t)
916 +                                         < s - 1 as libc::c_int as libc::c_long) as libc::c_int
917 +                                 }
918 +                             } else {
919 +                                 (0 as libc::c_int as idx_t / n < s) as libc::c_int
920 +                             }
921 +                         } else {
922 +                             (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
923 +                         }
924 ~                     }) != 0
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:618:32
    |
618 |                     && (if s < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:618:32
    |
618 |                     && (if s < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xmalloc.rs:702:32
    |
702 |                           } else {
    |  ________________________________^
703 | |                             if (if (if ((if 1 as libc::c_int != 0 {
704 | |                                 0 as libc::c_int as libc::c_long
705 | |                             } else {
...   |
809 | |                             }
810 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
702 ~                         } else if (if (if ((if 1 as libc::c_int != 0 {
703 +                             0 as libc::c_int as libc::c_long
704 +                         } else {
705 +                             (if 1 as libc::c_int != 0 {
706 +                                 0 as libc::c_int as libc::c_long
707 +                             } else {
708 +                                 s
709 +                             }) + 0 as libc::c_int as idx_t
710 +                         }) - 1 as libc::c_int as libc::c_long)
711 +                             < 0 as libc::c_int as libc::c_long
712 +                         {
713 +                             !(((((if 1 as libc::c_int != 0 {
714 +                                 0 as libc::c_int as libc::c_long
715 +                             } else {
716 +                                 (if 1 as libc::c_int != 0 {
717 +                                     0 as libc::c_int as libc::c_long
718 +                                 } else {
719 +                                     s
720 +                                 }) + 0 as libc::c_int as idx_t
721 +                             }) + 1 as libc::c_int as libc::c_long)
722 +                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
723 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
724 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
725 +                                 - 1 as libc::c_int as libc::c_long)
726 +                                 * 2 as libc::c_int as libc::c_long
727 +                                 + 1 as libc::c_int as libc::c_long)
728 +                         } else {
729 +                             (if 1 as libc::c_int != 0 {
730 +                                 0 as libc::c_int as libc::c_long
731 +                             } else {
732 +                                 (if 1 as libc::c_int != 0 {
733 +                                     0 as libc::c_int as libc::c_long
734 +                                 } else {
735 +                                     s
736 +                                 }) + 0 as libc::c_int as idx_t
737 +                             }) + 0 as libc::c_int as libc::c_long
738 +                         }) < 0 as libc::c_int as libc::c_long
739 +                         {
740 +                             (((if 1 as libc::c_int != 0 {
741 +                                 0 as libc::c_int as libc::c_long
742 +                             } else {
743 +                                 s
744 +                             }) + 0 as libc::c_int as idx_t)
745 +                                 < -(if ((if 1 as libc::c_int != 0 {
746 +                                     0 as libc::c_int as libc::c_long
747 +                                 } else {
748 +                                     (if 1 as libc::c_int != 0 {
749 +                                         0 as libc::c_int as libc::c_long
750 +                                     } else {
751 +                                         s
752 +                                     }) + 0 as libc::c_int as idx_t
753 +                                 }) - 1 as libc::c_int as libc::c_long)
754 +                                     < 0 as libc::c_int as libc::c_long
755 +                                 {
756 +                                     ((((if 1 as libc::c_int != 0 {
757 +                                         0 as libc::c_int as libc::c_long
758 +                                     } else {
759 +                                         (if 1 as libc::c_int != 0 {
760 +                                             0 as libc::c_int as libc::c_long
761 +                                         } else {
762 +                                             s
763 +                                         }) + 0 as libc::c_int as idx_t
764 +                                     }) + 1 as libc::c_int as libc::c_long)
765 +                                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
766 +                                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
767 +                                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
768 +                                         - 1 as libc::c_int as libc::c_long)
769 +                                         * 2 as libc::c_int as libc::c_long
770 +                                         + 1 as libc::c_int as libc::c_long
771 +                                 } else {
772 +                                     (if 1 as libc::c_int != 0 {
773 +                                         0 as libc::c_int as libc::c_long
774 +                                     } else {
775 +                                         (if 1 as libc::c_int != 0 {
776 +                                             0 as libc::c_int as libc::c_long
777 +                                         } else {
778 +                                             s
779 +                                         }) + 0 as libc::c_int as idx_t
780 +                                     }) - 1 as libc::c_int as libc::c_long
781 +                                 })) as libc::c_int
782 +                         } else {
783 +                             ((0 as libc::c_int as libc::c_long)
784 +                                 < (if 1 as libc::c_int != 0 {
785 +                                     0 as libc::c_int as libc::c_long
786 +                                 } else {
787 +                                     s
788 +                                 }) + 0 as libc::c_int as idx_t) as libc::c_int
789 +                         }) != 0 && s == -(1 as libc::c_int) as libc::c_long
790 +                         {
791 +                             if ((if 1 as libc::c_int != 0 {
792 +                                 0 as libc::c_int as libc::c_long
793 +                             } else {
794 +                                 n
795 +                             }) - 1 as libc::c_int as libc::c_long)
796 +                                 < 0 as libc::c_int as libc::c_long
797 +                             {
798 +                                 ((0 as libc::c_int as libc::c_long)
799 +                                     < n + 0 as libc::c_int as idx_t) as libc::c_int
800 +                             } else {
801 +                                 ((0 as libc::c_int as libc::c_long) < n
802 +                                     && (-(1 as libc::c_int) as libc::c_long
803 +                                         - 0 as libc::c_int as idx_t)
804 +                                         < n - 1 as libc::c_int as libc::c_long) as libc::c_int
805 +                             }
806 +                         } else {
807 +                             (0 as libc::c_int as idx_t / s < n) as libc::c_int
808 +                         }
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:619:32
    |
619 |                         if n < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:619:32
    |
619 |                         if n < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:620:37
    |
620 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:621:33
    |
621 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:621:33
    |
621 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:623:37
    |
623 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:624:37
    |
624 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:624:37
    |
624 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:626:37
    |
626 | ...                   -(1 as libc::c_int) as idx_t
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:626:39
    |
626 | ...                   -(1 as libc::c_int) as idx_t
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:628:34
    |
628 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:628:34
    |
628 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:629:35
    |
629 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:629:35
    |
629 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:631:33
    |
631 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:631:38
    |
631 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:631:40
    |
631 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:633:33
    |
633 | / ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
634 | | ...                       0 as libc::c_int as libc::c_long
635 | | ...                   } else {
636 | | ...                       s
...   |
699 | | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
700 | | ...                       as libc::c_int
    | |________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:633:51
    |
633 | ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:634:37
    |
634 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:634:37
    |
634 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:637:38
    |
637 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:637:38
    |
637 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:638:39
    |
638 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:638:39
    |
638 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:640:46
    |
640 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:641:41
    |
641 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:641:41
    |
641 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:644:42
    |
644 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:644:42
    |
644 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:645:45
    |
645 | ...                   << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:646:59
    |
646 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:646:59
    |
646 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:647:59
    |
647 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:647:59
    |
647 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:648:43
    |
648 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:648:43
    |
648 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:649:43
    |
649 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:649:43
    |
649 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:650:43
    |
650 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:650:43
    |
650 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:652:41
    |
652 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:653:41
    |
653 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:653:41
    |
653 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:656:42
    |
656 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:656:42
    |
656 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:657:38
    |
657 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:657:38
    |
657 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:659:37
    |
659 | / ...                   (s
660 | | ...                       < -(if ((if 1 as libc::c_int != 0 {
661 | | ...                           0 as libc::c_int as libc::c_long
662 | | ...                       } else {
...   |
683 | | ...                           }) - 1 as libc::c_int as libc::c_long
684 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:660:53
    |
660 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:661:45
    |
661 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:661:45
    |
661 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:664:46
    |
664 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:664:46
    |
664 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:665:47
    |
665 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:665:47
    |
665 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:667:52
    |
667 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:668:49
    |
668 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:668:49
    |
668 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:671:50
    |
671 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:671:50
    |
671 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:672:53
    |
672 | ...                   << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:673:67
    |
673 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:673:67
    |
673 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:674:67
    |
674 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:674:67
    |
674 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:675:51
    |
675 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:675:51
    |
675 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:676:51
    |
676 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:676:51
    |
676 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:677:51
    |
677 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:677:51
    |
677 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:679:49
    |
679 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:680:49
    |
680 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:680:49
    |
680 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:683:50
    |
683 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:683:50
    |
683 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:686:37
    |
686 | ...                   ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:686:39
    |
686 | ...                   ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:686:39
    |
686 | ...                   ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: operator precedence can trip the unwary
   --> src/xmalloc.rs:689:37
    |
689 | / ...                   (if 1 as libc::c_int != 0 {
690 | | ...                       0 as libc::c_int as libc::c_long
691 | | ...                   } else {
692 | | ...                       s
...   |
695 | | ...                           .wrapping_mul(8 as libc::c_int as libc::c_ulong)
696 | | ...                           .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
689 ~                                     ((if 1 as libc::c_int != 0 {
690 +                                         0 as libc::c_int as libc::c_long
691 +                                     } else {
692 +                                         s
693 +                                     }) + -(1 as libc::c_int) as idx_t) >> (::core::mem::size_of::<idx_t>() as libc::c_ulong)
694 +                                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
695 +                                             .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:689:41
    |
689 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:690:41
    |
690 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:690:41
    |
690 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:693:42
    |
693 | ...                   }) + -(1 as libc::c_int) as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:693:44
    |
693 | ...                   }) + -(1 as libc::c_int) as idx_t
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:694:45
    |
694 | ...                   >> (::core::mem::size_of::<idx_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:695:59
    |
695 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:695:59
    |
695 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:696:59
    |
696 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:696:59
    |
696 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:698:37
    |
698 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:698:39
    |
698 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:699:39
    |
699 | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:699:41
    |
699 | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:703:45
    |
703 | ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:704:33
    |
704 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:704:33
    |
704 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:706:37
    |
706 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:707:37
    |
707 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:707:37
    |
707 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:710:38
    |
710 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:710:38
    |
710 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:711:34
    |
711 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:711:34
    |
711 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:712:35
    |
712 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:712:35
    |
712 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:714:42
    |
714 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:715:37
    |
715 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:715:37
    |
715 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:717:41
    |
717 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:718:41
    |
718 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:718:41
    |
718 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:721:42
    |
721 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:721:42
    |
721 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:722:38
    |
722 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:722:38
    |
722 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:723:41
    |
723 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:724:55
    |
724 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:724:55
    |
724 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:725:55
    |
725 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:725:55
    |
725 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:726:39
    |
726 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:726:39
    |
726 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:727:39
    |
727 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:727:39
    |
727 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:728:39
    |
728 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:728:39
    |
728 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:730:37
    |
730 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:731:37
    |
731 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:731:37
    |
731 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:733:41
    |
733 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:734:41
    |
734 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:734:41
    |
734 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:737:42
    |
737 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:737:42
    |
737 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:738:38
    |
738 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:738:38
    |
738 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:739:34
    |
739 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:739:34
    |
739 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:741:33
    |
741 | / ...                   (((if 1 as libc::c_int != 0 {
742 | | ...                       0 as libc::c_int as libc::c_long
743 | | ...                   } else {
744 | | ...                       s
...   |
781 | | ...                           }) - 1 as libc::c_int as libc::c_long
782 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:741:39
    |
741 | ...                   (((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:742:37
    |
742 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:742:37
    |
742 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:745:38
    |
745 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:745:38
    |
745 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:746:49
    |
746 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:747:41
    |
747 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:747:41
    |
747 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:749:45
    |
749 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:750:45
    |
750 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:750:45
    |
750 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:753:46
    |
753 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:753:46
    |
753 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:754:42
    |
754 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:754:42
    |
754 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:755:43
    |
755 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:755:43
    |
755 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:757:48
    |
757 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:758:45
    |
758 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:758:45
    |
758 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:760:49
    |
760 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:761:49
    |
761 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:761:49
    |
761 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:764:50
    |
764 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:764:50
    |
764 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:765:46
    |
765 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:765:46
    |
765 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:766:49
    |
766 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:767:63
    |
767 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:767:63
    |
767 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:768:63
    |
768 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:768:63
    |
768 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:769:47
    |
769 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:769:47
    |
769 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:770:47
    |
770 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:770:47
    |
770 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:771:47
    |
771 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:771:47
    |
771 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:773:45
    |
773 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:774:45
    |
774 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:774:45
    |
774 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:776:49
    |
776 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:777:49
    |
777 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:777:49
    |
777 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:780:50
    |
780 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:780:50
    |
780 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:781:46
    |
781 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:781:46
    |
781 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:784:33
    |
784 | / ...                   ((0 as libc::c_int as libc::c_long)
785 | | ...                       < (if 1 as libc::c_int != 0 {
786 | | ...                           0 as libc::c_int as libc::c_long
787 | | ...                       } else {
788 | | ...                           s
789 | | ...                       }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:784:35
    |
784 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:784:35
    |
784 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:785:43
    |
785 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:786:41
    |
786 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:786:41
    |
786 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:789:42
    |
789 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:789:42
    |
789 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:790:45
    |
790 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:790:47
    |
790 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:792:41
    |
792 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:793:37
    |
793 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:793:37
    |
793 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:796:38
    |
796 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:796:38
    |
796 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:797:39
    |
797 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:797:39
    |
797 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:799:37
    |
799 | / ...                   ((0 as libc::c_int as libc::c_long)
800 | | ...                       < n + 0 as libc::c_int as idx_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:799:39
    |
799 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:799:39
    |
799 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:800:47
    |
800 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:800:47
    |
800 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:802:37
    |
802 | / ...                   ((0 as libc::c_int as libc::c_long) < n
803 | | ...                       && (-(1 as libc::c_int) as libc::c_long
804 | | ...                           - 0 as libc::c_int as idx_t)
805 | | ...                           < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |____________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:802:39
    |
802 | ...                   ((0 as libc::c_int as libc::c_long) < n
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:802:39
    |
802 | ...                   ((0 as libc::c_int as libc::c_long) < n
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:803:45
    |
803 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:803:47
    |
803 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:804:47
    |
804 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:804:47
    |
804 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:805:51
    |
805 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:805:51
    |
805 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:808:33
    |
808 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:808:34
    |
808 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:808:34
    |
808 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xmalloc.rs:814:32
    |
814 |                           } else {
    |  ________________________________^
815 | |                             if n < 0 as libc::c_int as libc::c_long {
816 | |                                 if (if (if ((if 1 as libc::c_int != 0 {
817 | |                                     0 as libc::c_int as libc::c_long
...   |
924 | |                             }
925 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
814 ~                         } else if n < 0 as libc::c_int as libc::c_long {
815 +                             if (if (if ((if 1 as libc::c_int != 0 {
816 +                                 0 as libc::c_int as libc::c_long
817 +                             } else {
818 +                                 (if 1 as libc::c_int != 0 {
819 +                                     0 as libc::c_int as libc::c_long
820 +                                 } else {
821 +                                     n
822 +                                 }) + 0 as libc::c_int as idx_t
823 +                             }) - 1 as libc::c_int as libc::c_long)
824 +                                 < 0 as libc::c_int as libc::c_long
825 +                             {
826 +                                 !(((((if 1 as libc::c_int != 0 {
827 +                                     0 as libc::c_int as libc::c_long
828 +                                 } else {
829 +                                     (if 1 as libc::c_int != 0 {
830 +                                         0 as libc::c_int as libc::c_long
831 +                                     } else {
832 +                                         n
833 +                                     }) + 0 as libc::c_int as idx_t
834 +                                 }) + 1 as libc::c_int as libc::c_long)
835 +                                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
836 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
837 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
838 +                                     - 1 as libc::c_int as libc::c_long)
839 +                                     * 2 as libc::c_int as libc::c_long
840 +                                     + 1 as libc::c_int as libc::c_long)
841 +                             } else {
842 +                                 (if 1 as libc::c_int != 0 {
843 +                                     0 as libc::c_int as libc::c_long
844 +                                 } else {
845 +                                     (if 1 as libc::c_int != 0 {
846 +                                         0 as libc::c_int as libc::c_long
847 +                                     } else {
848 +                                         n
849 +                                     }) + 0 as libc::c_int as idx_t
850 +                                 }) + 0 as libc::c_int as libc::c_long
851 +                             }) < 0 as libc::c_int as libc::c_long
852 +                             {
853 +                                 (((if 1 as libc::c_int != 0 {
854 +                                     0 as libc::c_int as libc::c_long
855 +                                 } else {
856 +                                     n
857 +                                 }) + 0 as libc::c_int as idx_t)
858 +                                     < -(if ((if 1 as libc::c_int != 0 {
859 +                                         0 as libc::c_int as libc::c_long
860 +                                     } else {
861 +                                         (if 1 as libc::c_int != 0 {
862 +                                             0 as libc::c_int as libc::c_long
863 +                                         } else {
864 +                                             n
865 +                                         }) + 0 as libc::c_int as idx_t
866 +                                     }) - 1 as libc::c_int as libc::c_long)
867 +                                         < 0 as libc::c_int as libc::c_long
868 +                                     {
869 +                                         ((((if 1 as libc::c_int != 0 {
870 +                                             0 as libc::c_int as libc::c_long
871 +                                         } else {
872 +                                             (if 1 as libc::c_int != 0 {
873 +                                                 0 as libc::c_int as libc::c_long
874 +                                             } else {
875 +                                                 n
876 +                                             }) + 0 as libc::c_int as idx_t
877 +                                         }) + 1 as libc::c_int as libc::c_long)
878 +                                             << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
879 +                                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
880 +                                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
881 +                                             - 1 as libc::c_int as libc::c_long)
882 +                                             * 2 as libc::c_int as libc::c_long
883 +                                             + 1 as libc::c_int as libc::c_long
884 +                                     } else {
885 +                                         (if 1 as libc::c_int != 0 {
886 +                                             0 as libc::c_int as libc::c_long
887 +                                         } else {
888 +                                             (if 1 as libc::c_int != 0 {
889 +                                                 0 as libc::c_int as libc::c_long
890 +                                             } else {
891 +                                                 n
892 +                                             }) + 0 as libc::c_int as idx_t
893 +                                         }) - 1 as libc::c_int as libc::c_long
894 +                                     })) as libc::c_int
895 +                             } else {
896 +                                 ((0 as libc::c_int as libc::c_long)
897 +                                     < (if 1 as libc::c_int != 0 {
898 +                                         0 as libc::c_int as libc::c_long
899 +                                     } else {
900 +                                         n
901 +                                     }) + 0 as libc::c_int as idx_t) as libc::c_int
902 +                             }) != 0 && n == -(1 as libc::c_int) as libc::c_long
903 +                             {
904 +                                 if ((if 1 as libc::c_int != 0 {
905 +                                     0 as libc::c_int as libc::c_long
906 +                                 } else {
907 +                                     s
908 +                                 }) - 1 as libc::c_int as libc::c_long)
909 +                                     < 0 as libc::c_int as libc::c_long
910 +                                 {
911 +                                     ((0 as libc::c_int as libc::c_long)
912 +                                         < s + 0 as libc::c_int as idx_t) as libc::c_int
913 +                                 } else {
914 +                                     ((-(1 as libc::c_int) as libc::c_long
915 +                                         - 0 as libc::c_int as idx_t)
916 +                                         < s - 1 as libc::c_int as libc::c_long) as libc::c_int
917 +                                 }
918 +                             } else {
919 +                                 (0 as libc::c_int as idx_t / n < s) as libc::c_int
920 +                             }
921 +                         } else {
922 +                             (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
923 +                         }
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:812:33
    |
812 |                         if s == 0 as libc::c_int as libc::c_long {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:812:33
    |
812 |                         if s == 0 as libc::c_int as libc::c_long {
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:813:29
    |
813 | ...                   0 as libc::c_int
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:815:36
    |
815 | ...                   if n < 0 as libc::c_int as libc::c_long {
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:815:36
    |
815 | ...                   if n < 0 as libc::c_int as libc::c_long {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:816:49
    |
816 | ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:817:37
    |
817 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:817:37
    |
817 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:819:41
    |
819 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:820:41
    |
820 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:820:41
    |
820 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:823:42
    |
823 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:823:42
    |
823 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:824:38
    |
824 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:824:38
    |
824 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:825:39
    |
825 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:825:39
    |
825 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:827:46
    |
827 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:828:41
    |
828 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:828:41
    |
828 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:830:45
    |
830 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:831:45
    |
831 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:831:45
    |
831 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:834:46
    |
834 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:834:46
    |
834 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:835:42
    |
835 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:835:42
    |
835 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:836:45
    |
836 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:837:59
    |
837 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:837:59
    |
837 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:838:59
    |
838 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:838:59
    |
838 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:839:43
    |
839 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:839:43
    |
839 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:840:43
    |
840 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:840:43
    |
840 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:841:43
    |
841 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:841:43
    |
841 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:843:41
    |
843 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:844:41
    |
844 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:844:41
    |
844 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:846:45
    |
846 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:847:45
    |
847 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:847:45
    |
847 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:850:46
    |
850 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:850:46
    |
850 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:851:42
    |
851 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:851:42
    |
851 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:852:38
    |
852 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:852:38
    |
852 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:854:37
    |
854 | / ...                   (((if 1 as libc::c_int != 0 {
855 | | ...                       0 as libc::c_int as libc::c_long
856 | | ...                   } else {
857 | | ...                       n
...   |
894 | | ...                           }) - 1 as libc::c_int as libc::c_long
895 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:854:43
    |
854 | ...                   (((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:855:41
    |
855 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:855:41
    |
855 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:858:42
    |
858 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:858:42
    |
858 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:859:53
    |
859 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:860:45
    |
860 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:860:45
    |
860 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:862:49
    |
862 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:863:49
    |
863 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:863:49
    |
863 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:866:50
    |
866 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:866:50
    |
866 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:867:46
    |
867 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:867:46
    |
867 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:868:47
    |
868 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:868:47
    |
868 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:870:52
    |
870 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:871:49
    |
871 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:871:49
    |
871 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:873:53
    |
873 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:874:53
    |
874 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:874:53
    |
874 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:877:54
    |
877 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:877:54
    |
877 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:878:50
    |
878 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:878:50
    |
878 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:879:53
    |
879 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:880:67
    |
880 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:880:67
    |
880 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:881:67
    |
881 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:881:67
    |
881 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:882:51
    |
882 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:882:51
    |
882 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:883:51
    |
883 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:883:51
    |
883 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:884:51
    |
884 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:884:51
    |
884 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:886:49
    |
886 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:887:49
    |
887 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:887:49
    |
887 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:889:53
    |
889 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:890:53
    |
890 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:890:53
    |
890 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:893:54
    |
893 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:893:54
    |
893 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:894:50
    |
894 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:894:50
    |
894 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:897:37
    |
897 | / ...                   ((0 as libc::c_int as libc::c_long)
898 | | ...                       < (if 1 as libc::c_int != 0 {
899 | | ...                           0 as libc::c_int as libc::c_long
900 | | ...                       } else {
901 | | ...                           n
902 | | ...                       }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:897:39
    |
897 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:897:39
    |
897 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:898:47
    |
898 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:899:45
    |
899 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:899:45
    |
899 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:902:46
    |
902 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:902:46
    |
902 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:903:49
    |
903 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:903:51
    |
903 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:905:45
    |
905 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:906:41
    |
906 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:906:41
    |
906 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:909:42
    |
909 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:909:42
    |
909 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:910:43
    |
910 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:910:43
    |
910 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:912:41
    |
912 | / ...                   ((0 as libc::c_int as libc::c_long)
913 | | ...                       < s + 0 as libc::c_int as idx_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:912:43
    |
912 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:912:43
    |
912 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:913:51
    |
913 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:913:51
    |
913 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:915:41
    |
915 | / ...                   ((-(1 as libc::c_int) as libc::c_long
916 | | ...                       - 0 as libc::c_int as idx_t)
917 | | ...                       < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:915:43
    |
915 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:915:45
    |
915 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:916:47
    |
916 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:916:47
    |
916 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:917:51
    |
917 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:917:51
    |
917 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:920:37
    |
920 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:920:38
    |
920 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:920:38
    |
920 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:923:33
    |
923 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:923:34
    |
923 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:923:36
    |
923 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:929:23
    |
929 |                     *(&mut nbytes as *mut idx_t) = fresh18;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:930:21
    |
930 |                     1 as libc::c_int
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:933:23
    |
933 |                     *(&mut nbytes as *mut idx_t) = fresh20;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:934:21
    |
934 |                     fresh21 as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:940:23
    |
940 |     pa = xrealloc(pa, nbytes as size_t);
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:951:16
    |
951 |     let size = s as usize; // Assuming idx_t can be safely cast to usize
    |                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: integer type suffix should be separated by an underscore
   --> src/xmalloc.rs:952:20
    |
952 |     let vec = vec![0u8; size]; // Allocate a vector of the specified size initialized to zero
    |                    ^^^ help: add an underscore: `0_u8`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix

warning: integer type suffix should be separated by an underscore
   --> src/xmalloc.rs:959:20
    |
959 |     let vec = vec![0u8; total_size];
    |                    ^^^ help: add an underscore: `0_u8`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix

warning: integer type suffix should be separated by an underscore
   --> src/xmalloc.rs:966:27
    |
966 |     let allocation = vec![0u8; total_size].into_boxed_slice();
    |                           ^^^ help: add an underscore: `0_u8`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:967:5
    |
967 |     Box::into_raw(allocation) as *mut libc::c_void
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: integer type suffix should be separated by an underscore
   --> src/xmalloc.rs:979:27
    |
979 |     let mut result = vec![0u8; p.len()];
    |                           ^^^ help: add an underscore: `0_u8`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix

warning: unused variable: `left_quote`
   --> src/quotearg.rs:372:25
    |
372 |                     let left_quote = gettext_quote("`", quoting_style);
    |                         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_left_quote`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `right_quote`
   --> src/quotearg.rs:373:25
    |
373 |                     let right_quote = gettext_quote("'", quoting_style);
    |                         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_right_quote`

warning: unused variable: `encountered_single_quote`
   --> src/quotearg.rs:755:29
    |
755 |                     let mut encountered_single_quote = true;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_encountered_single_quote`

warning: unused variable: `c_and_shell_quote_compat`
   --> src/quotearg.rs:756:9
    |
756 | let mut c_and_shell_quote_compat = true;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_c_and_shell_quote_compat`

warning: unused variable: `result`
    --> src/quotearg.rs:1456:9
     |
1456 |     let result = set_char_quoting(Some(&mut options), ch as u8, 1);
     |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:505:13
    |
326 | / unsafe extern "C" fn quotearg_buffer_restyled(
327 | |     mut buffer: *mut libc::c_char,
328 | |     mut buffersize: size_t,
329 | |     mut arg: *const libc::c_char,
...   |
335 | |     mut right_quote: *const libc::c_char,
336 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
505 |               unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |               ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`
    = note: `#[allow(unsafe_op_in_unsafe_fn)]` on by default

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:509:13
    |
326 | / unsafe extern "C" fn quotearg_buffer_restyled(
327 | |     mut buffer: *mut libc::c_char,
328 | |     mut buffersize: size_t,
329 | |     mut arg: *const libc::c_char,
...   |
335 | |     mut right_quote: *const libc::c_char,
336 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
509 |               unsafe { *buffer.offset(len as isize) = b'$' as i8 }; // Add dollar sign
    |               ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:513:13
    |
326 | / unsafe extern "C" fn quotearg_buffer_restyled(
327 | |     mut buffer: *mut libc::c_char,
328 | |     mut buffersize: size_t,
329 | |     mut arg: *const libc::c_char,
...   |
335 | |     mut right_quote: *const libc::c_char,
336 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
513 |               unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |               ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:519:9
    |
326 | / unsafe extern "C" fn quotearg_buffer_restyled(
327 | |     mut buffer: *mut libc::c_char,
328 | |     mut buffersize: size_t,
329 | |     mut arg: *const libc::c_char,
...   |
335 | |     mut right_quote: *const libc::c_char,
336 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
519 |           unsafe { *buffer.offset(len as isize) = b'\\' as i8 }; // Add backslash
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:525:13
    |
326 | / unsafe extern "C" fn quotearg_buffer_restyled(
327 | |     mut buffer: *mut libc::c_char,
328 | |     mut buffersize: size_t,
329 | |     mut arg: *const libc::c_char,
...   |
335 | |     mut right_quote: *const libc::c_char,
336 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
525 |           && (unsafe { *arg.offset((i + 1) as isize) } as u8).is_ascii_digit()
    |               ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:528:13
    |
326 | / unsafe extern "C" fn quotearg_buffer_restyled(
327 | |     mut buffer: *mut libc::c_char,
328 | |     mut buffersize: size_t,
329 | |     mut arg: *const libc::c_char,
...   |
335 | |     mut right_quote: *const libc::c_char,
336 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
528 |               unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |               ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:532:13
    |
326 | / unsafe extern "C" fn quotearg_buffer_restyled(
327 | |     mut buffer: *mut libc::c_char,
328 | |     mut buffersize: size_t,
329 | |     mut arg: *const libc::c_char,
...   |
335 | |     mut right_quote: *const libc::c_char,
336 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
532 |               unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |               ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:723:21
    |
326 | / unsafe extern "C" fn quotearg_buffer_restyled(
327 | |     mut buffer: *mut libc::c_char,
328 | |     mut buffersize: size_t,
329 | |     mut arg: *const libc::c_char,
...   |
335 | |     mut right_quote: *const libc::c_char,
336 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
723 |       let arg_slice = unsafe { std::ffi::CStr::from_ptr(arg) };
    |                       ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:768:9
    |
326 | / unsafe extern "C" fn quotearg_buffer_restyled(
327 | |     mut buffer: *mut libc::c_char,
328 | |     mut buffersize: size_t,
329 | |     mut arg: *const libc::c_char,
...   |
335 | |     mut right_quote: *const libc::c_char,
336 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
768 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:774:9
    |
326 | / unsafe extern "C" fn quotearg_buffer_restyled(
327 | |     mut buffer: *mut libc::c_char,
328 | |     mut buffersize: size_t,
329 | |     mut arg: *const libc::c_char,
...   |
335 | |     mut right_quote: *const libc::c_char,
336 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
774 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:780:9
    |
326 | / unsafe extern "C" fn quotearg_buffer_restyled(
327 | |     mut buffer: *mut libc::c_char,
328 | |     mut buffersize: size_t,
329 | |     mut arg: *const libc::c_char,
...   |
335 | |     mut right_quote: *const libc::c_char,
336 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
780 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:874:24
    |
326 | / unsafe extern "C" fn quotearg_buffer_restyled(
327 | |     mut buffer: *mut libc::c_char,
328 | |     mut buffersize: size_t,
329 | |     mut arg: *const libc::c_char,
...   |
335 | |     mut right_quote: *const libc::c_char,
336 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
874 |       let buffer_slice = unsafe { std::slice::from_raw_parts_mut(buffer, buffersize as usize) };
    |                          ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1013:17
     |
326  | / unsafe extern "C" fn quotearg_buffer_restyled(
327  | |     mut buffer: *mut libc::c_char,
328  | |     mut buffersize: size_t,
329  | |     mut arg: *const libc::c_char,
...    |
335  | |     mut right_quote: *const libc::c_char,
336  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1013 |               && (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std:...
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1031:17
     |
326  | / unsafe extern "C" fn quotearg_buffer_restyled(
327  | |     mut buffer: *mut libc::c_char,
328  | |     mut buffersize: size_t,
329  | |     mut arg: *const libc::c_char,
...    |
335  | |     mut right_quote: *const libc::c_char,
336  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1031 |                   unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1035:17
     |
326  | / unsafe extern "C" fn quotearg_buffer_restyled(
327  | |     mut buffer: *mut libc::c_char,
328  | |     mut buffersize: size_t,
329  | |     mut arg: *const libc::c_char,
...    |
335  | |     mut right_quote: *const libc::c_char,
336  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1035 |                   unsafe { *buffer.offset(len as isize) = '$' as i8; }
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1039:17
     |
326  | / unsafe extern "C" fn quotearg_buffer_restyled(
327  | |     mut buffer: *mut libc::c_char,
328  | |     mut buffersize: size_t,
329  | |     mut arg: *const libc::c_char,
...    |
335  | |     mut right_quote: *const libc::c_char,
336  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1039 |                   unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1045:13
     |
326  | / unsafe extern "C" fn quotearg_buffer_restyled(
327  | |     mut buffer: *mut libc::c_char,
328  | |     mut buffersize: size_t,
329  | |     mut arg: *const libc::c_char,
...    |
335  | |     mut right_quote: *const libc::c_char,
336  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1045 |               unsafe { *buffer.offset(len as isize) = '\\' as i8; }
     |               ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1057:17
     |
326  | / unsafe extern "C" fn quotearg_buffer_restyled(
327  | |     mut buffer: *mut libc::c_char,
328  | |     mut buffersize: size_t,
329  | |     mut arg: *const libc::c_char,
...    |
335  | |     mut right_quote: *const libc::c_char,
336  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1057 |                   unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1061:17
     |
326  | / unsafe extern "C" fn quotearg_buffer_restyled(
327  | |     mut buffer: *mut libc::c_char,
328  | |     mut buffersize: size_t,
329  | |     mut arg: *const libc::c_char,
...    |
335  | |     mut right_quote: *const libc::c_char,
336  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1061 |                   unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1067:13
     |
326  | / unsafe extern "C" fn quotearg_buffer_restyled(
327  | |     mut buffer: *mut libc::c_char,
328  | |     mut buffersize: size_t,
329  | |     mut arg: *const libc::c_char,
...    |
335  | |     mut right_quote: *const libc::c_char,
336  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1067 |               unsafe { *buffer.offset(len as isize) = c as i8; }
     |               ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1612:18
     |
1612 |     let result = unsafe { quote_n(0, arg) };
     |                  ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:113:9
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
75  | |     mut n_authors: size_t,
76  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
113 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:119:9
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
75  | |     mut n_authors: size_t,
76  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
119 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:125:9
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
75  | |     mut n_authors: size_t,
76  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
125 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:131:9
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
75  | |     mut n_authors: size_t,
76  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
131 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:137:9
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
75  | |     mut n_authors: size_t,
76  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
137 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:143:9
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
75  | |     mut n_authors: size_t,
76  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
143 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:149:9
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
75  | |     mut n_authors: size_t,
76  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
149 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:155:9
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
75  | |     mut n_authors: size_t,
76  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
155 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:161:9
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
75  | |     mut n_authors: size_t,
76  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
161 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:167:9
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
75  | |     mut n_authors: size_t,
76  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
167 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: missing documentation for the crate
  --> lib.rs:1:1
   |
1  | / #![allow(dead_code)]
2  | | #![allow(mutable_transmutes)]
3  | | #![allow(non_camel_case_types)]
4  | | #![allow(non_snake_case)]
...  |
41 | | pub mod xmalloc;
42 | | } // mod src
   | |_^
   |
   = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a module
  --> lib.rs:14:1
   |
14 | / pub mod src {
15 | | pub mod c32isprint;
16 | | pub mod c_ctype;
17 | | pub mod c_strcasecmp;
...  |
41 | | pub mod xmalloc;
42 | | } // mod src
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a module
  --> lib.rs:15:1
   |
15 | pub mod c32isprint;
   | ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a module
  --> lib.rs:16:1
   |
16 | pub mod c_ctype;
   | ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/c_ctype.rs:15:5
   |
15 | use std::ops::RangeInclusive;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::std-instead-of-core` implied by `-W clippy::restriction`
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
  --> src/c_ctype.rs:17:5
   |
17 | use std::char;
   |     ^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a function
  --> src/c_ctype.rs:23:1
   |
23 | / pub fn c_isalnum(c: libc::c_int) -> bool {
24 | |     (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:24:5
   |
24 |     (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)`
   |
   = note: `-W clippy::implicit-return` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:23:1
   |
23 | / pub fn c_isalnum(c: libc::c_int) -> bool {
24 | |     (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)
25 | | }
   | |_^
   |
   = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
  --> src/c_ctype.rs:24:11
   |
24 |     (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)
   |           ^^ help: consider adding suffix: `48_i32`
   |
   = note: `-W clippy::default-numeric-fallback` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:24:22
   |
24 |     (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)
   |                      ^^ help: consider adding suffix: `57_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:24:35
   |
24 |     (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)
   |                                   ^^ help: consider adding suffix: `65_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:24:46
   |
24 |     (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)
   |                                              ^^ help: consider adding suffix: `90_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:24:59
   |
24 |     (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)
   |                                                           ^^ help: consider adding suffix: `97_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:24:70
   |
24 |     (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)
   |                                                                      ^^^ help: consider adding suffix: `122_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: manual `RangeInclusive::contains` implementation
  --> src/c_ctype.rs:24:5
   |
24 |     (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)
   |     ^^^^^^^^^^^^^^^^^^^^ help: use: `(48..=57).contains(&c)`
   |
   = note: `-W clippy::manual-range-contains` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains

warning: manual `RangeInclusive::contains` implementation
  --> src/c_ctype.rs:24:29
   |
24 |     (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)
   |                             ^^^^^^^^^^^^^^^^^^^^ help: use: `(65..=90).contains(&c)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains

warning: manual `RangeInclusive::contains` implementation
  --> src/c_ctype.rs:24:53
   |
24 |     (c >= 48 && c <= 57) || (c >= 65 && c <= 90) || (c >= 97 && c <= 122)
   |                                                     ^^^^^^^^^^^^^^^^^^^^^ help: use: `(97..=122).contains(&c)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains

warning: missing documentation for a function
  --> src/c_ctype.rs:30:1
   |
30 | / pub fn c_isalpha(c: i32) -> bool {
31 | |     matches!(c, 97..=122 | 65..=90)
32 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:31:5
   |
31 |     matches!(c, 97..=122 | 65..=90)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return matches!(c, 97..=122 | 65..=90)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:30:1
   |
30 | / pub fn c_isalpha(c: i32) -> bool {
31 | |     matches!(c, 97..=122 | 65..=90)
32 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
  --> src/c_ctype.rs:31:17
   |
31 |     matches!(c, 97..=122 | 65..=90)
   |                 ^^ help: consider adding suffix: `97_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:31:22
   |
31 |     matches!(c, 97..=122 | 65..=90)
   |                      ^^^ help: consider adding suffix: `122_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:31:28
   |
31 |     matches!(c, 97..=122 | 65..=90)
   |                            ^^ help: consider adding suffix: `65_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:31:33
   |
31 |     matches!(c, 97..=122 | 65..=90)
   |                                 ^^ help: consider adding suffix: `90_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/c_ctype.rs:37:1
   |
37 | / pub fn c_isascii(c: i32) -> bool {
38 | |     (0..=127).contains(&c)
39 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:38:5
   |
38 |     (0..=127).contains(&c)
   |     ^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return (0..=127).contains(&c)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:6
   |
38 |     (0..=127).contains(&c)
   |      ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:10
   |
38 |     (0..=127).contains(&c)
   |          ^^^ help: consider adding suffix: `127_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/c_ctype.rs:44:1
   |
44 | / pub fn c_isblank(c: i32) -> bool {
45 | |     c == ' ' as i32 || c == '\t' as i32
46 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:45:5
   |
45 |     c == ' ' as i32 || c == '\t' as i32
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return c == ' ' as i32 || c == '\t' as i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:44:1
   |
44 | / pub fn c_isblank(c: i32) -> bool {
45 | |     c == ' ' as i32 || c == '\t' as i32
46 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: missing documentation for a function
  --> src/c_ctype.rs:51:1
   |
51 | / pub fn c_iscntrl(c: i32) -> bool {
52 | |     match c {
53 | |         0..=31 | 127 => true,
54 | |         _ => false,
55 | |     }
56 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:53:25
   |
53 |         0..=31 | 127 => true,
   |                         ^^^^ help: add `return` as shown: `return true`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
  --> src/c_ctype.rs:54:14
   |
54 |         _ => false,
   |              ^^^^^ help: add `return` as shown: `return false`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:51:1
   |
51 | / pub fn c_iscntrl(c: i32) -> bool {
52 | |     match c {
53 | |         0..=31 | 127 => true,
54 | |         _ => false,
55 | |     }
56 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
  --> src/c_ctype.rs:53:9
   |
53 |         0..=31 | 127 => true,
   |         ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:53:13
   |
53 |         0..=31 | 127 => true,
   |             ^^ help: consider adding suffix: `31_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:53:18
   |
53 |         0..=31 | 127 => true,
   |                  ^^^ help: consider adding suffix: `127_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: match expression looks like `matches!` macro
  --> src/c_ctype.rs:52:5
   |
52 | /     match c {
53 | |         0..=31 | 127 => true,
54 | |         _ => false,
55 | |     }
   | |_____^ help: try this: `matches!(c, 0..=31 | 127)`
   |
   = note: `-W clippy::match-like-matches-macro` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro

warning: missing documentation for a function
  --> src/c_ctype.rs:61:1
   |
61 | / pub fn c_isdigit(c: i32) -> bool {
62 | |     c >= 48 && c <= 57
63 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:62:5
   |
62 |     c >= 48 && c <= 57
   |     ^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return c >= 48 && c <= 57`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:61:1
   |
61 | / pub fn c_isdigit(c: i32) -> bool {
62 | |     c >= 48 && c <= 57
63 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:10
   |
62 |     c >= 48 && c <= 57
   |          ^^ help: consider adding suffix: `48_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:21
   |
62 |     c >= 48 && c <= 57
   |                     ^^ help: consider adding suffix: `57_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: manual `RangeInclusive::contains` implementation
  --> src/c_ctype.rs:62:5
   |
62 |     c >= 48 && c <= 57
   |     ^^^^^^^^^^^^^^^^^^ help: use: `(48..=57).contains(&c)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains

warning: missing documentation for a function
  --> src/c_ctype.rs:68:1
   |
68 | / pub fn c_isgraph(c: i32) -> bool {
69 | |     match c {
70 | |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
71 | |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
...  |
74 | |     }
75 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:72:22
   |
72 |         | 65..=90 => true,
   |                      ^^^^ help: add `return` as shown: `return true`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
  --> src/c_ctype.rs:73:14
   |
73 |         _ => false,
   |              ^^^^^ help: add `return` as shown: `return false`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:68:1
   |
68 | / pub fn c_isgraph(c: i32) -> bool {
69 | |     match c {
70 | |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
71 | |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
...  |
74 | |     }
75 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:9
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |         ^^ help: consider adding suffix: `48_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:14
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |              ^^ help: consider adding suffix: `57_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:19
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                   ^^ help: consider adding suffix: `97_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:24
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                        ^^^ help: consider adding suffix: `122_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:30
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                              ^^ help: consider adding suffix: `33_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:35
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                   ^^ help: consider adding suffix: `34_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:40
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                        ^^ help: consider adding suffix: `35_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:45
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                             ^^ help: consider adding suffix: `36_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:50
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                                  ^^ help: consider adding suffix: `37_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:55
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                                       ^^ help: consider adding suffix: `38_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:60
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                                            ^^ help: consider adding suffix: `39_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:65
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                                                 ^^ help: consider adding suffix: `40_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:70
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                                                      ^^ help: consider adding suffix: `41_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:75
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                                                           ^^ help: consider adding suffix: `42_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:80
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                                                                ^^ help: consider adding suffix: `43_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:85
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                                                                     ^^ help: consider adding suffix: `44_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:90
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                                                                          ^^ help: consider adding suffix: `45_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:95
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                                                                               ^^ help: consider adding suffix: `46_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:70:100
   |
70 |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
   |                                                                                                    ^^ help: consider adding suffix: `47_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:11
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |           ^^ help: consider adding suffix: `58_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:16
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                ^^ help: consider adding suffix: `59_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:21
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                     ^^ help: consider adding suffix: `60_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:26
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                          ^^ help: consider adding suffix: `61_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:31
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                               ^^ help: consider adding suffix: `62_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:36
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                                    ^^ help: consider adding suffix: `63_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:41
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                                         ^^ help: consider adding suffix: `64_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:46
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                                              ^^ help: consider adding suffix: `91_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:51
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                                                   ^^ help: consider adding suffix: `92_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:56
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                                                        ^^ help: consider adding suffix: `93_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:61
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                                                             ^^ help: consider adding suffix: `94_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:66
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                                                                  ^^ help: consider adding suffix: `95_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:71
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                                                                       ^^ help: consider adding suffix: `96_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:76
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                                                                            ^^^ help: consider adding suffix: `123_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:82
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                                                                                  ^^^ help: consider adding suffix: `124_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:88
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                                                                                        ^^^ help: consider adding suffix: `125_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:71:94
   |
71 |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
   |                                                                                              ^^^ help: consider adding suffix: `126_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:72:11
   |
72 |         | 65..=90 => true,
   |           ^^ help: consider adding suffix: `65_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:72:16
   |
72 |         | 65..=90 => true,
   |                ^^ help: consider adding suffix: `90_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: match expression looks like `matches!` macro
  --> src/c_ctype.rs:69:5
   |
69 | /     match c {
70 | |         48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
71 | |         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
72 | |         | 65..=90 => true,
73 | |         _ => false,
74 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro
help: try this
   |
69 ~     matches!(c, 48..=57 | 97..=122 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 
70 +         | 58 | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 
71 +         | 65..=90)
   |

warning: missing documentation for a function
  --> src/c_ctype.rs:80:1
   |
80 | / pub fn c_islower(c: i32) -> bool {
81 | |     (b'a'..=b'z').contains(&(c as u8))
82 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:81:5
   |
81 |     (b'a'..=b'z').contains(&(c as u8))
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return (b'a'..=b'z').contains(&(c as u8))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: casting `i32` to `u8` may truncate the value
  --> src/c_ctype.rs:81:29
   |
81 |     (b'a'..=b'z').contains(&(c as u8))
   |                             ^^^^^^^^^
   |
   = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/c_ctype.rs:81:29
   |
81 |     (b'a'..=b'z').contains(&(c as u8))
   |                             ^^^^^^^^^
   |
   = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a function
  --> src/c_ctype.rs:87:1
   |
87 | / pub fn c_isprint(c: c_int) -> bool {
88 | |     (32..=126).contains(&c) // ASCII printable characters range
89 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:88:5
   |
88 |     (32..=126).contains(&c) // ASCII printable characters range
   |     ^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return (32..=126).contains(&c)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: default numeric fallback might occur
  --> src/c_ctype.rs:88:6
   |
88 |     (32..=126).contains(&c) // ASCII printable characters range
   |      ^^ help: consider adding suffix: `32_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:88:11
   |
88 |     (32..=126).contains(&c) // ASCII printable characters range
   |           ^^^ help: consider adding suffix: `126_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/c_ctype.rs:94:1
   |
94 | / pub fn c_ispunct(c: char) -> bool {
95 | |     c.is_ascii_punctuation()
96 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:95:5
   |
95 |     c.is_ascii_punctuation()
   |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return c.is_ascii_punctuation()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:94:1
   |
94 | / pub fn c_ispunct(c: char) -> bool {
95 | |     c.is_ascii_punctuation()
96 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: missing documentation for a function
   --> src/c_ctype.rs:101:1
    |
101 | / pub fn c_isspace(c: i32) -> bool {
102 | |     match c {
103 | |         32 | 9 | 10 | 11 | 12 | 13 => true,
104 | |         _ => false,
105 | |     }
106 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/c_ctype.rs:103:39
    |
103 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |                                       ^^^^ help: add `return` as shown: `return true`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/c_ctype.rs:104:14
    |
104 |         _ => false,
    |              ^^^^^ help: add `return` as shown: `return false`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
   --> src/c_ctype.rs:101:1
    |
101 | / pub fn c_isspace(c: i32) -> bool {
102 | |     match c {
103 | |         32 | 9 | 10 | 11 | 12 | 13 => true,
104 | |         _ => false,
105 | |     }
106 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:9
    |
103 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |         ^^ help: consider adding suffix: `32_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:14
    |
103 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |              ^ help: consider adding suffix: `9_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:18
    |
103 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |                  ^^ help: consider adding suffix: `10_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:23
    |
103 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |                       ^^ help: consider adding suffix: `11_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:28
    |
103 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |                            ^^ help: consider adding suffix: `12_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:33
    |
103 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |                                 ^^ help: consider adding suffix: `13_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: match expression looks like `matches!` macro
   --> src/c_ctype.rs:102:5
    |
102 | /     match c {
103 | |         32 | 9 | 10 | 11 | 12 | 13 => true,
104 | |         _ => false,
105 | |     }
    | |_____^ help: try this: `matches!(c, 32 | 9 | 10 | 11 | 12 | 13)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro

warning: missing documentation for a function
   --> src/c_ctype.rs:111:1
    |
111 | / pub fn c_isupper(c: i32) -> bool {
112 | |     matches!(c, 65..=90)
113 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/c_ctype.rs:112:5
    |
112 |     matches!(c, 65..=90)
    |     ^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return matches!(c, 65..=90)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
   --> src/c_ctype.rs:111:1
    |
111 | / pub fn c_isupper(c: i32) -> bool {
112 | |     matches!(c, 65..=90)
113 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
   --> src/c_ctype.rs:112:17
    |
112 |     matches!(c, 65..=90)
    |                 ^^ help: consider adding suffix: `65_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:112:22
    |
112 |     matches!(c, 65..=90)
    |                      ^^ help: consider adding suffix: `90_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/c_ctype.rs:118:1
    |
118 | / pub fn c_isxdigit(c: i32) -> bool {
119 | |     matches!(c, 48..=57 | 97..=102 | 65..=70)
120 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/c_ctype.rs:119:5
    |
119 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return matches!(c, 48..=57 | 97..=102 | 65..=70)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
   --> src/c_ctype.rs:118:1
    |
118 | / pub fn c_isxdigit(c: i32) -> bool {
119 | |     matches!(c, 48..=57 | 97..=102 | 65..=70)
120 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
   --> src/c_ctype.rs:119:17
    |
119 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |                 ^^ help: consider adding suffix: `48_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:119:22
    |
119 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |                      ^^ help: consider adding suffix: `57_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:119:27
    |
119 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |                           ^^ help: consider adding suffix: `97_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:119:32
    |
119 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |                                ^^^ help: consider adding suffix: `102_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:119:38
    |
119 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |                                      ^^ help: consider adding suffix: `65_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:119:43
    |
119 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |                                           ^^ help: consider adding suffix: `70_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/c_ctype.rs:125:1
    |
125 | / pub fn c_tolower(c: i32) -> i32 {
126 | |     if c >= 'A' as i32 && c <= 'Z' as i32 {
127 | |         return c - ('A' as i32 - 'a' as i32);
128 | |     }
129 | |     c
130 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/c_ctype.rs:129:5
    |
129 |     c
    |     ^ help: add `return` as shown: `return c`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
   --> src/c_ctype.rs:125:1
    |
125 | / pub fn c_tolower(c: i32) -> i32 {
126 | |     if c >= 'A' as i32 && c <= 'Z' as i32 {
127 | |         return c - ('A' as i32 - 'a' as i32);
128 | |     }
129 | |     c
130 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: arithmetic detected
   --> src/c_ctype.rs:127:16
    |
127 |         return c - ('A' as i32 - 'a' as i32);
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::arithmetic` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/c_ctype.rs:127:16
    |
127 |         return c - ('A' as i32 - 'a' as i32);
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::integer-arithmetic` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
   --> src/c_ctype.rs:135:1
    |
135 | / pub fn c_toupper(c: char) -> char {
136 | |     if c.is_ascii_lowercase() {
137 | |         return (c as u8 - b'a' + b'A') as char;
138 | |     }
139 | |     c
140 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/c_ctype.rs:139:5
    |
139 |     c
    |     ^ help: add `return` as shown: `return c`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
   --> src/c_ctype.rs:135:1
    |
135 | / pub fn c_toupper(c: char) -> char {
136 | |     if c.is_ascii_lowercase() {
137 | |         return (c as u8 - b'a' + b'A') as char;
138 | |     }
139 | |     c
140 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: arithmetic detected
   --> src/c_ctype.rs:137:16
    |
137 |         return (c as u8 - b'a' + b'A') as char;
    |                ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/c_ctype.rs:137:16
    |
137 |         return (c as u8 - b'a' + b'A') as char;
    |                ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a module
  --> lib.rs:17:1
   |
17 | pub mod c_strcasecmp;
   | ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a function
  --> src/c_strcasecmp.rs:5:1
   |
5  | / fn c_tolower(c: i32) -> i32 {
6  | |     match c {
7  | |         65..=90 => c - 'A' as i32 + 'a' as i32,
8  | |         _ => c,
9  | |     }
10 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
 --> src/c_strcasecmp.rs:7:20
  |
7 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return c - 'A' as i32 + 'a' as i32`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
 --> src/c_strcasecmp.rs:8:14
  |
8 |         _ => c,
  |              ^ help: add `return` as shown: `return c`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_strcasecmp.rs:5:1
   |
5  | / fn c_tolower(c: i32) -> i32 {
6  | |     match c {
7  | |         65..=90 => c - 'A' as i32 + 'a' as i32,
8  | |         _ => c,
9  | |     }
10 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
 --> src/c_strcasecmp.rs:7:9
  |
7 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |         ^^ help: consider adding suffix: `65_i32`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
 --> src/c_strcasecmp.rs:7:14
  |
7 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |              ^^ help: consider adding suffix: `90_i32`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: arithmetic detected
 --> src/c_strcasecmp.rs:7:20
  |
7 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
 --> src/c_strcasecmp.rs:7:20
  |
7 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
  --> src/c_strcasecmp.rs:13:1
   |
13 | / pub fn c_strcasecmp(s1: &str, s2: &str) -> libc::c_int {
14 | |     let c1: Vec<u8> = s1.bytes().map(|b| c_tolower(b as i32) as u8).collect();
15 | |     let c2: Vec<u8> = s2.bytes().map(|b| c_tolower(b as i32) as u8).collect();
16 | |
...  |
24 | |     c1.len() as libc::c_int - c2.len() as libc::c_int
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
  --> src/c_strcasecmp.rs:13:1
   |
13 | / pub fn c_strcasecmp(s1: &str, s2: &str) -> libc::c_int {
14 | |     let c1: Vec<u8> = s1.bytes().map(|b| c_tolower(b as i32) as u8).collect();
15 | |     let c2: Vec<u8> = s2.bytes().map(|b| c_tolower(b as i32) as u8).collect();
16 | |
...  |
24 | |     c1.len() as libc::c_int - c2.len() as libc::c_int
25 | | }
   | |_^
   |
   = note: `-W clippy::missing-inline-in-public-items` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/c_strcasecmp.rs:24:5
   |
24 |     c1.len() as libc::c_int - c2.len() as libc::c_int
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return c1.len() as libc::c_int - c2.len() as libc::c_int`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
  --> src/c_strcasecmp.rs:14:42
   |
14 |     let c1: Vec<u8> = s1.bytes().map(|b| c_tolower(b as i32) as u8).collect();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return c_tolower(b as i32) as u8`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: casting `i32` to `u8` may truncate the value
  --> src/c_strcasecmp.rs:14:42
   |
14 |     let c1: Vec<u8> = s1.bytes().map(|b| c_tolower(b as i32) as u8).collect();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/c_strcasecmp.rs:14:42
   |
14 |     let c1: Vec<u8> = s1.bytes().map(|b| c_tolower(b as i32) as u8).collect();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:14:52
   |
14 |     let c1: Vec<u8> = s1.bytes().map(|b| c_tolower(b as i32) as u8).collect();
   |                                                    ^^^^^^^^ help: try: `i32::from(b)`
   |
   = note: `-W clippy::cast-lossless` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `return` statement
  --> src/c_strcasecmp.rs:15:42
   |
15 |     let c2: Vec<u8> = s2.bytes().map(|b| c_tolower(b as i32) as u8).collect();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return c_tolower(b as i32) as u8`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: casting `i32` to `u8` may truncate the value
  --> src/c_strcasecmp.rs:15:42
   |
15 |     let c2: Vec<u8> = s2.bytes().map(|b| c_tolower(b as i32) as u8).collect();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/c_strcasecmp.rs:15:42
   |
15 |     let c2: Vec<u8> = s2.bytes().map(|b| c_tolower(b as i32) as u8).collect();
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:15:52
   |
15 |     let c2: Vec<u8> = s2.bytes().map(|b| c_tolower(b as i32) as u8).collect();
   |                                                    ^^^^^^^^ help: try: `i32::from(b)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: indexing may panic
  --> src/c_strcasecmp.rs:19:12
   |
19 |         if c1[i] != c2[i] {
   |            ^^^^^
   |
   = note: `-W clippy::indexing-slicing` implied by `-W clippy::restriction`
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: indexing may panic
  --> src/c_strcasecmp.rs:19:21
   |
19 |         if c1[i] != c2[i] {
   |                     ^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic detected
  --> src/c_strcasecmp.rs:20:20
   |
20 |             return c1[i] as libc::c_int - c2[i] as libc::c_int;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/c_strcasecmp.rs:20:20
   |
20 |             return c1[i] as libc::c_int - c2[i] as libc::c_int;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:20:20
   |
20 |             return c1[i] as libc::c_int - c2[i] as libc::c_int;
   |                    ^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(c1[i])`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: indexing may panic
  --> src/c_strcasecmp.rs:20:20
   |
20 |             return c1[i] as libc::c_int - c2[i] as libc::c_int;
   |                    ^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:20:43
   |
20 |             return c1[i] as libc::c_int - c2[i] as libc::c_int;
   |                                           ^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(c2[i])`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: indexing may panic
  --> src/c_strcasecmp.rs:20:43
   |
20 |             return c1[i] as libc::c_int - c2[i] as libc::c_int;
   |                                           ^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic detected
  --> src/c_strcasecmp.rs:24:5
   |
24 |     c1.len() as libc::c_int - c2.len() as libc::c_int
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/c_strcasecmp.rs:24:5
   |
24 |     c1.len() as libc::c_int - c2.len() as libc::c_int
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/c_strcasecmp.rs:24:5
   |
24 |     c1.len() as libc::c_int - c2.len() as libc::c_int
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/c_strcasecmp.rs:24:5
   |
24 |     c1.len() as libc::c_int - c2.len() as libc::c_int
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::cast-possible-wrap` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
  --> src/c_strcasecmp.rs:24:31
   |
24 |     c1.len() as libc::c_int - c2.len() as libc::c_int
   |                               ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
  --> src/c_strcasecmp.rs:24:31
   |
24 |     c1.len() as libc::c_int - c2.len() as libc::c_int
   |                               ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a module
  --> lib.rs:18:1
   |
18 | pub mod close_stream;
   | ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/close_stream.rs:12:1
   |
12 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/close_stream.rs:13:1
   |
13 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/close_stream.rs:14:1
   |
14 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct
  --> src/close_stream.rs:17:1
   |
17 | / pub struct _IO_FILE {
18 | |     pub _flags: libc::c_int,
19 | |     pub _IO_read_ptr: *mut libc::c_char,
20 | |     pub _IO_read_end: *mut libc::c_char,
...  |
46 | |     pub _unused2: [libc::c_char; 20],
47 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
  --> src/close_stream.rs:17:1
   |
17 | / pub struct _IO_FILE {
18 | |     pub _flags: libc::c_int,
19 | |     pub _IO_read_ptr: *mut libc::c_char,
20 | |     pub _IO_read_end: *mut libc::c_char,
...  |
46 | |     pub _unused2: [libc::c_char; 20],
47 | | }
   | |_^
   |
   = note: `-W clippy::exhaustive-structs` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
17 | #[non_exhaustive]
   |

warning: missing documentation for a struct field
  --> src/close_stream.rs:18:5
   |
18 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:19:5
   |
19 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:20:5
   |
20 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:21:5
   |
21 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:22:5
   |
22 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:23:5
   |
23 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:24:5
   |
24 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:25:5
   |
25 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:26:5
   |
26 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:27:5
   |
27 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:28:5
   |
28 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:29:5
   |
29 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:30:5
   |
30 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:31:5
   |
31 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:32:5
   |
32 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:33:5
   |
33 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:34:5
   |
34 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:35:5
   |
35 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:36:5
   |
36 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:37:5
   |
37 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:38:5
   |
38 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:39:5
   |
39 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:40:5
   |
40 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:41:5
   |
41 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:42:5
   |
42 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:43:5
   |
43 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:44:5
   |
44 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:45:5
   |
45 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:46:5
   |
46 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
  --> src/close_stream.rs:31:22
   |
31 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = note: `-W clippy::use-self` implied by `-W clippy::nursery`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/close_stream.rs:42:29
   |
42 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a type alias
  --> src/close_stream.rs:48:1
   |
48 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/close_stream.rs:49:1
   |
49 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a function
  --> src/close_stream.rs:51:1
   |
51 | / pub fn close_stream(stream: *mut _IO_FILE) -> libc::c_int {
52 | |     let some_pending: bool = unsafe { __fpending(stream) != 0 };
53 | |     let prev_fail: bool = unsafe { ferror_unlocked(stream) != 0 };
54 | |     let fclose_fail: bool = unsafe { rpl_fclose(stream) != 0 };
...  |
64 | |     return 0;
65 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/close_stream.rs:52:50
   |
52 |     let some_pending: bool = unsafe { __fpending(stream) != 0 };
   |                                                  ^^^^^^
   |
   = note: `-W clippy::not-unsafe-ptr-arg-deref` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: missing `#[inline]` for a function
  --> src/close_stream.rs:51:1
   |
51 | / pub fn close_stream(stream: *mut _IO_FILE) -> libc::c_int {
52 | |     let some_pending: bool = unsafe { __fpending(stream) != 0 };
53 | |     let prev_fail: bool = unsafe { ferror_unlocked(stream) != 0 };
54 | |     let fclose_fail: bool = unsafe { rpl_fclose(stream) != 0 };
...  |
64 | |     return 0;
65 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/close_stream.rs:53:52
   |
53 |     let prev_fail: bool = unsafe { ferror_unlocked(stream) != 0 };
   |                                                    ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/close_stream.rs:54:49
   |
54 |     let fclose_fail: bool = unsafe { rpl_fclose(stream) != 0 };
   |                                                 ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: unneeded `return` statement
  --> src/close_stream.rs:64:5
   |
64 |     return 0;
   |     ^^^^^^^^^ help: remove `return`: `0`
   |
   = note: `-W clippy::needless-return` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
  --> src/close_stream.rs:57:76
   |
57 |         || fclose_fail && (some_pending || unsafe { *__errno_location() != 9 })
   |                                                                            ^ help: consider adding suffix: `9_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/close_stream.rs:60:44
   |
60 |             unsafe { *__errno_location() = 0 };
   |                                            ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/close_stream.rs:62:17
   |
62 |         return -1;
   |                 ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/close_stream.rs:64:12
   |
64 |     return 0;
   |            ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: unsafe block missing a safety comment
  --> src/close_stream.rs:52:30
   |
52 |     let some_pending: bool = unsafe { __fpending(stream) != 0 };
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::undocumented-unsafe-blocks` implied by `-W clippy::restriction`
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/close_stream.rs:53:27
   |
53 |     let prev_fail: bool = unsafe { ferror_unlocked(stream) != 0 };
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/close_stream.rs:54:29
   |
54 |     let fclose_fail: bool = unsafe { rpl_fclose(stream) != 0 };
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/close_stream.rs:57:44
   |
57 |         || fclose_fail && (some_pending || unsafe { *__errno_location() != 9 })
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/close_stream.rs:60:13
   |
60 |             unsafe { *__errno_location() = 0 };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `alloc`
 --> src/closeout.rs:2:5
  |
2 | use std::ffi::CString;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: `-W clippy::std-instead-of-alloc` implied by `-W clippy::restriction`
  = help: consider importing the item from `alloc`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: exported structs should not be exhaustive
  --> src/closeout.rs:28:1
   |
28 | / pub struct _IO_FILE {
29 | |     pub _flags: libc::c_int,
30 | |     pub _IO_read_ptr: *mut libc::c_char,
31 | |     pub _IO_read_end: *mut libc::c_char,
...  |
57 | |     pub _unused2: [libc::c_char; 20],
58 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
28 | #[non_exhaustive]
   |

warning: missing documentation for a module
  --> lib.rs:19:1
   |
19 | pub mod closeout;
   | ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
  --> src/closeout.rs:42:22
   |
42 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a type alias
  --> src/closeout.rs:25:1
   |
25 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
  --> src/closeout.rs:53:29
   |
53 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a struct
  --> src/closeout.rs:28:1
   |
28 | / pub struct _IO_FILE {
29 | |     pub _flags: libc::c_int,
30 | |     pub _IO_read_ptr: *mut libc::c_char,
31 | |     pub _IO_read_end: *mut libc::c_char,
...  |
57 | |     pub _unused2: [libc::c_char; 20],
58 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `expect()` on `a Result` value
  --> src/closeout.rs:68:20
   |
68 |     let c_string = CString::new(file).expect("CString::new failed");
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::expect-used` implied by `-W clippy::restriction`
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: unsafe block missing a safety comment
  --> src/closeout.rs:69:5
   |
69 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/closeout.rs:77:5
   |
77 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/closeout.rs:29:5
   |
29 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
   --> src/closeout.rs:83:1
    |
83  | / pub unsafe extern "C" fn close_stdout() {
84  | |     if close_stream(stdout) != 0 as libc::c_int
85  | |         && !(ignore_EPIPE as libc::c_int != 0
86  | |             && *__errno_location() == 32 as libc::c_int)
...   |
177 | |     }
178 | | }
    | |_^
    |
    = note: `-W clippy::missing-safety-doc` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a struct field
  --> src/closeout.rs:30:5
   |
30 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/closeout.rs:31:5
   |
31 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/closeout.rs:84:32
   |
84 |     if close_stream(stdout) != 0 as libc::c_int
   |                                ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:32:5
   |
32 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/closeout.rs:85:45
   |
85 |         && !(ignore_EPIPE as libc::c_int != 0
   |                                             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:33:5
   |
33 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/closeout.rs:86:39
   |
86 |             && *__errno_location() == 32 as libc::c_int)
   |                                       ^^ help: consider adding suffix: `32_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:34:5
   |
34 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/closeout.rs:92:16
   |
92 |             if 0 != 0 {
   |                ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:35:5
   |
35 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/closeout.rs:92:21
   |
92 |             if 0 != 0 {
   |                     ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/closeout.rs:100:20
    |
100 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:36:5
   |
36 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/closeout.rs:37:5
   |
37 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:100:40
    |
100 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:38:5
   |
38 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:113:39
    |
113 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:39:5
   |
39 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:127:39
    |
127 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:40:5
   |
40 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:134:16
    |
134 |             if 0 != 0 {
    |                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:41:5
   |
41 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:134:21
    |
134 |             if 0 != 0 {
    |                     ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:42:5
   |
42 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:141:20
    |
141 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:43:5
   |
43 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:141:40
    |
141 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:44:5
   |
44 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:153:39
    |
153 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:45:5
   |
45 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:166:39
    |
166 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:46:5
   |
46 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:175:43
    |
175 |     if SANITIZE_ADDRESS as libc::c_int == 0 && close_stream(stderr) != 0 as libc::c_int {
    |                                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:47:5
   |
47 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:175:72
    |
175 |     if SANITIZE_ADDRESS as libc::c_int == 0 && close_stream(stderr) != 0 as libc::c_int {
    |                                                                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:48:5
   |
48 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/closeout.rs:49:5
   |
49 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
  --> src/closeout.rs:85:14
   |
85 |         && !(ignore_EPIPE as libc::c_int != 0
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(ignore_EPIPE)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/closeout.rs:50:5
   |
50 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/closeout.rs:89:13
   |
89 |             b"write error\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"write error\0" as *const u8).cast::<i8>()`
   |
   = note: `-W clippy::ptr-as-ptr` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/closeout.rs:51:5
   |
51 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary boolean `not` operation
   --> src/closeout.rs:91:9
    |
91  | /         if !file_name.is_null() {
92  | |             if 0 != 0 {
93  | |                 error(
94  | |                     0 as libc::c_int,
...   |
171 | |             };
172 | |         }
    | |_________^
    |
    = note: `-W clippy::if-not-else` implied by `-W clippy::pedantic`
    = help: remove the `!` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: unnecessary `!=` operation
   --> src/closeout.rs:92:13
    |
92  | /             if 0 != 0 {
93  | |                 error(
94  | |                     0 as libc::c_int,
95  | |                     *__errno_location(),
...   |
131 | |                 });
132 | |             };
    | |_____________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/closeout.rs:52:5
   |
52 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: equal expressions as operands to `!=`
  --> src/closeout.rs:92:16
   |
92 |             if 0 != 0 {
   |                ^^^^^^
   |
   = note: `-W clippy::eq-op` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: missing documentation for a struct field
  --> src/closeout.rs:53:5
   |
53 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/closeout.rs:96:21
   |
96 |                     b"%s: %s\0" as *const u8 as *const libc::c_char,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s: %s\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/closeout.rs:54:5
   |
54 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/closeout.rs:100:17
    |
100 | /                 if 0 as libc::c_int != 0 as libc::c_int {
101 | |                     unreachable!();
102 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/closeout.rs:55:5
   |
55 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: equal expressions as operands to `!=`
   --> src/closeout.rs:100:20
    |
100 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: missing documentation for a struct field
  --> src/closeout.rs:56:5
   |
56 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: usage of the `unreachable!` macro
   --> src/closeout.rs:101:21
    |
101 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = note: `-W clippy::unreachable` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: missing documentation for a struct field
  --> src/closeout.rs:57:5
   |
57 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: binding to `_` prefixed variable with no side-effect
   --> src/closeout.rs:105:21
    |
105 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::no-effect-underscore-binding` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/closeout.rs:109:25
    |
109 |                         b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s: %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/closeout.rs:113:21
    |
113 | /                     if __errstatus != 0 as libc::c_int {
114 | |                         unreachable!();
115 | |                     } else {};
    | |_____________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/closeout.rs:114:25
    |
114 |                         unreachable!();
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: missing documentation for a type alias
  --> src/closeout.rs:59:1
   |
59 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/closeout.rs:60:1
   |
60 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: binding to `_` prefixed variable with no side-effect
   --> src/closeout.rs:119:21
    |
119 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: missing documentation for a type alias
  --> src/closeout.rs:61:1
   |
61 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/closeout.rs:123:25
    |
123 |                         b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s: %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a type alias
  --> src/closeout.rs:62:1
   |
62 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/closeout.rs:127:21
    |
127 | /                     if __errstatus != 0 as libc::c_int {
128 | |                         unreachable!();
129 | |                     } else {};
    | |_____________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a constant
  --> src/closeout.rs:63:1
   |
63 | pub const SANITIZE_ADDRESS: C2RustUnnamed = 0;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: usage of the `unreachable!` macro
   --> src/closeout.rs:128:25
    |
128 |                         unreachable!();
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: missing documentation for a type alias
  --> src/closeout.rs:64:1
   |
64 | pub type C2RustUnnamed = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/closeout.rs:134:13
    |
134 | /             if 0 != 0 {
135 | |                 error(
136 | |                     0 as libc::c_int,
137 | |                     *__errno_location(),
...   |
170 | |                 });
171 | |             };
    | |_____________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a static
  --> src/closeout.rs:65:1
   |
65 | static mut file_name: *const libc::c_char = 0 as *const libc::c_char;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: equal expressions as operands to `!=`
   --> src/closeout.rs:134:16
    |
134 |             if 0 != 0 {
    |                ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: missing documentation for a function
  --> src/closeout.rs:67:1
   |
67 | / pub fn close_stdout_set_file_name(file: &str) {
68 | |     let c_string = CString::new(file).expect("CString::new failed");
69 | |     unsafe {
70 | |         file_name = c_string.as_ptr();
71 | |     }
72 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/closeout.rs:138:21
    |
138 |                     b"%s\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing `#[inline]` for a function
  --> src/closeout.rs:67:1
   |
67 | / pub fn close_stdout_set_file_name(file: &str) {
68 | |     let c_string = CString::new(file).expect("CString::new failed");
69 | |     unsafe {
70 | |         file_name = c_string.as_ptr();
71 | |     }
72 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/closeout.rs:141:17
    |
141 | /                 if 0 as libc::c_int != 0 as libc::c_int {
142 | |                     unreachable!();
143 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/closeout.rs:141:20
    |
141 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: usage of the `unreachable!` macro
   --> src/closeout.rs:142:21
    |
142 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: missing documentation for a static
  --> src/closeout.rs:74:1
   |
74 | static mut ignore_EPIPE: bool = false;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: binding to `_` prefixed variable with no side-effect
   --> src/closeout.rs:146:21
    |
146 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: missing documentation for a function
  --> src/closeout.rs:76:1
   |
76 | / pub fn close_stdout_set_ignore_EPIPE(ignore: bool) {
77 | |     unsafe {
78 | |         ignore_EPIPE = ignore;
79 | |     }
80 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/closeout.rs:150:25
    |
150 |                         b"%s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing `#[inline]` for a function
  --> src/closeout.rs:76:1
   |
76 | / pub fn close_stdout_set_ignore_EPIPE(ignore: bool) {
77 | |     unsafe {
78 | |         ignore_EPIPE = ignore;
79 | |     }
80 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/closeout.rs:153:21
    |
153 | /                     if __errstatus != 0 as libc::c_int {
154 | |                         unreachable!();
155 | |                     } else {};
    | |_____________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/closeout.rs:154:25
    |
154 |                         unreachable!();
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/closeout.rs:159:21
    |
159 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: missing documentation for a function
   --> src/closeout.rs:83:1
    |
83  | / pub unsafe extern "C" fn close_stdout() {
84  | |     if close_stream(stdout) != 0 as libc::c_int
85  | |         && !(ignore_EPIPE as libc::c_int != 0
86  | |             && *__errno_location() == 32 as libc::c_int)
...   |
177 | |     }
178 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/closeout.rs:163:25
    |
163 |                         b"%s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing `#[inline]` for a function
   --> src/closeout.rs:83:1
    |
83  | / pub unsafe extern "C" fn close_stdout() {
84  | |     if close_stream(stdout) != 0 as libc::c_int
85  | |         && !(ignore_EPIPE as libc::c_int != 0
86  | |             && *__errno_location() == 32 as libc::c_int)
...   |
177 | |     }
178 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/closeout.rs:166:21
    |
166 | /                     if __errstatus != 0 as libc::c_int {
167 | |                         unreachable!();
168 | |                     } else {};
    | |_____________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/closeout.rs:167:25
    |
167 |                         unreachable!();
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: casting `u32` to `i32` may wrap around the value
   --> src/closeout.rs:175:8
    |
175 |     if SANITIZE_ADDRESS as libc::c_int == 0 && close_stream(stderr) != 0 as libc::c_int {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: default numeric fallback might occur
 --> src/exitfail.rs:3:44
  |
3 | pub static mut exit_failure: libc::c_int = 1 as libc::c_int;
  |                                            ^ help: consider adding suffix: `1_i32`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: exported structs should not be exhaustive
  --> src/fclose.rs:21:1
   |
21 | / pub struct _IO_FILE {
22 | |     pub _flags: libc::c_int,
23 | |     pub _IO_read_ptr: *mut libc::c_char,
24 | |     pub _IO_read_end: *mut libc::c_char,
...  |
50 | |     pub _unused2: [libc::c_char; 20],
51 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
21 | #[non_exhaustive]
   |

warning: unnecessary structure name repetition
  --> src/fclose.rs:35:22
   |
35 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/fclose.rs:46:29
   |
46 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: item name ends with its containing module's name
  --> src/fclose.rs:55:1
   |
55 | / pub fn rpl_fclose(fp: *mut FILE) -> libc::c_int {
56 | |     let mut saved_errno: libc::c_int = 0;
57 | |     let fd = unsafe { fileno(fp) };
58 | |     
...  |
74 | |     result
75 | | }
   | |_^
   |
   = note: `-W clippy::module-name-repetitions` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
  --> src/fclose.rs:74:5
   |
74 |     result
   |     ^^^^^^ help: add `return` as shown: `return result`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/fclose.rs:57:30
   |
57 |     let fd = unsafe { fileno(fp) };
   |                              ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/fclose.rs:60:32
   |
60 |         return unsafe { fclose(fp) };
   |                                ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/fclose.rs:63:29
   |
63 |     if (unsafe { __freading(fp) } == 0 || unsafe { lseek(fd, 0, 1) } == -1) && unsafe { rpl_fflush(fp) } != 0 {
   |                             ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/fclose.rs:63:100
   |
63 |     if (unsafe { __freading(fp) } == 0 || unsafe { lseek(fd, 0, 1) } == -1) && unsafe { rpl_fflush(fp) } != 0 {
   |                                                                                                    ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/fclose.rs:67:34
   |
67 |     let result = unsafe { fclose(fp) };
   |                                  ^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: default numeric fallback might occur
  --> src/fclose.rs:59:13
   |
59 |     if fd < 0 {
   |             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/fclose.rs:63:38
   |
63 |     if (unsafe { __freading(fp) } == 0 || unsafe { lseek(fd, 0, 1) } == -1) && unsafe { rpl_fflush(fp) } != 0 {
   |                                      ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/fclose.rs:63:109
   |
63 |     if (unsafe { __freading(fp) } == 0 || unsafe { lseek(fd, 0, 1) } == -1) && unsafe { rpl_fflush(fp) } != 0 {
   |                                                                                                             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/fclose.rs:69:23
   |
69 |     if saved_errno != 0 {
   |                       ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/fclose.rs:71:17
   |
71 |         return -1;
   |                 ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: unsafe block missing a safety comment
  --> src/fclose.rs:57:14
   |
57 |     let fd = unsafe { fileno(fp) };
   |              ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/fclose.rs:60:16
   |
60 |         return unsafe { fclose(fp) };
   |                ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/fclose.rs:63:9
   |
63 |     if (unsafe { __freading(fp) } == 0 || unsafe { lseek(fd, 0, 1) } == -1) && unsafe { rpl_fflush(fp) } != 0 {
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/fclose.rs:63:43
   |
63 |     if (unsafe { __freading(fp) } == 0 || unsafe { lseek(fd, 0, 1) } == -1) && unsafe { rpl_fflush(fp) } != 0 {
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/fclose.rs:63:80
   |
63 |     if (unsafe { __freading(fp) } == 0 || unsafe { lseek(fd, 0, 1) } == -1) && unsafe { rpl_fflush(fp) } != 0 {
   |                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/fclose.rs:64:23
   |
64 |         saved_errno = unsafe { *__errno_location() };
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/fclose.rs:67:18
   |
67 |     let result = unsafe { fclose(fp) };
   |                  ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/fclose.rs:70:9
   |
70 |         unsafe { *__errno_location() = saved_errno };
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: exported structs should not be exhaustive
  --> src/fflush.rs:15:1
   |
15 | / pub struct _IO_FILE {
16 | |     pub _flags: libc::c_int,
17 | |     pub _IO_read_ptr: *mut libc::c_char,
18 | |     pub _IO_read_end: *mut libc::c_char,
...  |
44 | |     pub _unused2: [libc::c_char; 20],
45 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
15 | #[non_exhaustive]
   |

warning: unnecessary structure name repetition
  --> src/fflush.rs:29:22
   |
29 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/fflush.rs:40:29
   |
40 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: default numeric fallback might occur
  --> src/fflush.rs:50:23
   |
50 |     if (*fp)._flags & 0x100 as libc::c_int != 0 {
   |                       ^^^^^ help: consider adding suffix: `0x0100_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/fflush.rs:50:47
   |
50 |     if (*fp)._flags & 0x100 as libc::c_int != 0 {
   |                                               ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: used binding `_flags` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fflush.rs:50:8
   |
50 |     if (*fp)._flags & 0x100 as libc::c_int != 0 {
   |        ^^^^^^^^^^^^
   |
   = note: `-W clippy::used-underscore-binding` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/fflush.rs:51:24
   |
51 |         rpl_fseeko(fp, 0 as libc::c_int as off_t, 1 as libc::c_int);
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unsafe function's docs miss `# Safety` section
  --> src/fflush.rs:55:1
   |
55 | / pub unsafe extern "C" fn rpl_fflush(mut stream: *mut FILE) -> libc::c_int {
56 | |     if stream.is_null() || !(__freading(stream) != 0 as libc::c_int) {
57 | |         return fflush(stream);
58 | |     }
59 | |     clear_ungetc_buffer_preserving_position(stream);
60 | |     return fflush(stream);
61 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: item name ends with its containing module's name
  --> src/fflush.rs:55:1
   |
55 | / pub unsafe extern "C" fn rpl_fflush(mut stream: *mut FILE) -> libc::c_int {
56 | |     if stream.is_null() || !(__freading(stream) != 0 as libc::c_int) {
57 | |         return fflush(stream);
58 | |     }
59 | |     clear_ungetc_buffer_preserving_position(stream);
60 | |     return fflush(stream);
61 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: this boolean expression can be simplified
  --> src/fflush.rs:56:28
   |
56 |     if stream.is_null() || !(__freading(stream) != 0 as libc::c_int) {
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `__freading(stream) == 0 as libc::c_int`
   |
   = note: `-W clippy::nonminimal-bool` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
  --> src/fflush.rs:60:5
   |
60 |     return fflush(stream);
   |     ^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `fflush(stream)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
  --> src/fflush.rs:56:52
   |
56 |     if stream.is_null() || !(__freading(stream) != 0 as libc::c_int) {
   |                                                    ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: exported structs should not be exhaustive
  --> src/fseeko.rs:17:1
   |
17 | / pub struct _IO_FILE {
18 | |     pub _flags: libc::c_int,
19 | |     pub _IO_read_ptr: *mut libc::c_char,
20 | |     pub _IO_read_end: *mut libc::c_char,
...  |
46 | |     pub _unused2: [libc::c_char; 20],
47 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
17 | #[non_exhaustive]
   |

warning: unnecessary structure name repetition
  --> src/fseeko.rs:31:22
   |
31 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/fseeko.rs:42:29
   |
42 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: item name ends with its containing module's name
  --> src/fseeko.rs:52:1
   |
52 | / pub fn rpl_fseeko(
53 | |     fp: &mut FILE,
54 | |     offset: off_t,
55 | |     whence: libc::c_int,
...  |
73 | |     }
74 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: unneeded `return` statement
  --> src/fseeko.rs:72:9
   |
72 |         return fseeko(fp, offset, whence);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `fseeko(fp, offset, whence)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
  --> src/fseeko.rs:64:21
   |
64 |         if pos == -(1 as libc::c_int) as libc::c_long {
   |                     ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/fseeko.rs:65:22
   |
65 |             return -(1 as libc::c_int);
   |                      ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/fseeko.rs:67:24
   |
67 |         fp._flags &= !(0x10 as libc::c_int);
   |                        ^^^^ help: consider adding suffix: `0x0010_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/fseeko.rs:69:16
   |
69 |         return 0 as libc::c_int;
   |                ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: used binding `_IO_read_end` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:57:8
   |
57 |     if fp._IO_read_end == fp._IO_read_ptr
   |        ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: used binding `_IO_read_ptr` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:57:27
   |
57 |     if fp._IO_read_end == fp._IO_read_ptr
   |                           ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: missing documentation for a module
  --> lib.rs:20:1
   |
20 | pub mod exitfail;
   | ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used binding `_IO_write_ptr` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:58:12
   |
58 |         && fp._IO_write_ptr == fp._IO_write_base && fp._IO_save_base.is_null()
   |            ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: missing documentation for a static
 --> src/exitfail.rs:3:1
  |
3 | pub static mut exit_failure: libc::c_int = 1 as libc::c_int;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used binding `_IO_write_base` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:58:32
   |
58 |         && fp._IO_write_ptr == fp._IO_write_base && fp._IO_save_base.is_null()
   |                                ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: used binding `_IO_save_base` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:58:53
   |
58 |         && fp._IO_write_ptr == fp._IO_write_base && fp._IO_save_base.is_null()
   |                                                     ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: missing documentation for a module
  --> lib.rs:21:1
   |
21 | pub mod fclose;
   | ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/fseeko.rs:61:9
   |
61 |         unsafe {
   |         ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
  --> src/fclose.rs:16:1
   |
16 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/fseeko.rs:64:19
   |
64 |         if pos == -(1 as libc::c_int) as libc::c_long {
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/fclose.rs:17:1
   |
17 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/fclose.rs:18:1
   |
18 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
  --> src/fseeko.rs:64:19
   |
64 |         if pos == -(1 as libc::c_int) as libc::c_long {
   |                   ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/fseeko.rs:64:19
   |
64 |         if pos == -(1 as libc::c_int) as libc::c_long {
   |                   ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct
  --> src/fclose.rs:21:1
   |
21 | / pub struct _IO_FILE {
22 | |     pub _flags: libc::c_int,
23 | |     pub _IO_read_ptr: *mut libc::c_char,
24 | |     pub _IO_read_end: *mut libc::c_char,
...  |
50 | |     pub _unused2: [libc::c_char; 20],
51 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
  --> src/fseeko.rs:65:20
   |
65 |             return -(1 as libc::c_int);
   |                    ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/fseeko.rs:65:20
   |
65 |             return -(1 as libc::c_int);
   |                    ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/fclose.rs:22:5
   |
22 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used binding `_flags` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:67:9
   |
67 |         fp._flags &= !(0x10 as libc::c_int);
   |         ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: missing documentation for a struct field
  --> src/fclose.rs:23:5
   |
23 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used binding `_offset` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:68:9
   |
68 |         fp._offset = pos;
   |         ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: missing documentation for a struct field
  --> src/fclose.rs:24:5
   |
24 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/fseeko.rs:71:5
   |
71 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fclose.rs:25:5
   |
25 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fclose.rs:26:5
   |
26 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
 --> src/hard_locale.rs:1:5
  |
1 | use std::ffi::CStr;
  |     ^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fclose.rs:27:5
   |
27 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
  --> src/hard_locale.rs:29:5
   |
29 |     return true;
   |     ^^^^^^^^^^^^ help: remove `return`: `true`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
  --> src/hard_locale.rs:21:14
   |
21 |         ) != 0 {
   |              ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fclose.rs:28:5
   |
28 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/hard_locale.rs:16:5
   |
16 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fclose.rs:29:5
   |
29 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/hard_locale.rs:25:22
   |
25 |     let locale_str = unsafe { CStr::from_ptr(locale.as_ptr()).to_string_lossy() };
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fclose.rs:30:5
   |
30 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
 --> src/ialloc.rs:1:5
  |
1 | use std::usize;
  |     ^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fclose.rs:31:5
   |
31 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
 --> src/ialloc.rs:3:5
  |
3 | use std::mem;
  |     ^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fclose.rs:32:5
   |
32 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fclose.rs:33:5
   |
33 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
 --> src/ialloc.rs:5:5
  |
5 | use std::option::Option;
  |     ^^^^^^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `alloc`
 --> src/ialloc.rs:7:5
  |
7 | use std::vec::Vec;
  |     ^^^^^^^^^^^^^
  |
  = help: consider importing the item from `alloc`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: missing documentation for a struct field
  --> src/fclose.rs:34:5
   |
34 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fclose.rs:35:5
   |
35 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/ialloc.rs:42:9
   |
42 |         vec.as_mut_ptr() as *mut libc::c_void
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return vec.as_mut_ptr() as *mut libc::c_void`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fclose.rs:36:5
   |
36 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/ialloc.rs:44:18
   |
44 |         unsafe { _gl_alloc_nomem() }
   |                  ^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return _gl_alloc_nomem()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fclose.rs:37:5
   |
37 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
  --> src/ialloc.rs:32:8
   |
32 |     if n <= usize::MAX && s <= usize::MAX {
   |        ^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::absurd-extreme-comparisons` implied by `-W clippy::all`
   = help: because `usize::MAX` is the maximum value for this type, this comparison is always true
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons

warning: missing documentation for a struct field
  --> src/fclose.rs:38:5
   |
38 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
  --> src/ialloc.rs:32:27
   |
32 |     if n <= usize::MAX && s <= usize::MAX {
   |                           ^^^^^^^^^^^^^^^
   |
   = help: because `usize::MAX` is the maximum value for this type, this comparison is always true
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons

warning: missing documentation for a struct field
  --> src/fclose.rs:39:5
   |
39 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value. This can be done more directly by calling `map_or_else(<g>, <f>)` instead
  --> src/ialloc.rs:40:23
   |
40 |         let mut vec = p.map(|slice| slice.to_vec()).unwrap_or_else(Vec::new);
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `p.map_or_else(Vec::new, |slice| slice.to_vec())`
   |
   = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or

warning: missing documentation for a struct field
  --> src/fclose.rs:40:5
   |
40 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/ialloc.rs:40:37
   |
40 |         let mut vec = p.map(|slice| slice.to_vec()).unwrap_or_else(Vec::new);
   |                                     ^^^^^^^^^^^^^^ help: add `return` as shown: `return slice.to_vec()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fclose.rs:41:5
   |
41 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/ialloc.rs:42:9
   |
42 |         vec.as_mut_ptr() as *mut libc::c_void
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `vec.as_mut_ptr().cast::<libc::c_void>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fclose.rs:42:5
   |
42 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/ialloc.rs:44:9
   |
44 |         unsafe { _gl_alloc_nomem() }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fclose.rs:43:5
   |
43 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/ialloc.rs:65:5
   |
65 |     Some(vec![0u8; total_size]) // Allocate and initialize the Vec with zeroes
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Some(vec![0u8; total_size])`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: arithmetic detected
  --> src/ialloc.rs:52:12
   |
52 |     if n > usize::MAX / s {
   |            ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/fclose.rs:44:5
   |
44 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fclose.rs:45:5
   |
45 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
  --> src/ialloc.rs:52:12
   |
52 |     if n > usize::MAX / s {
   |            ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
  --> src/ialloc.rs:52:12
   |
52 |     if n > usize::MAX / s {
   |            ^^^^^^^^^^^^^^
   |
   = note: `-W clippy::integer-division` implied by `-W clippy::restriction`
   = help: division of integers may cause loss of precision. consider using floats
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a struct field
  --> src/fclose.rs:46:5
   |
46 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
  --> src/ialloc.rs:58:12
   |
58 |     if s > usize::MAX / n {
   |            ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/fclose.rs:47:5
   |
47 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
  --> src/ialloc.rs:58:12
   |
58 |     if s > usize::MAX / n {
   |            ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/fclose.rs:48:5
   |
48 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer division
  --> src/ialloc.rs:58:12
   |
58 |     if s > usize::MAX / n {
   |            ^^^^^^^^^^^^^^
   |
   = help: division of integers may cause loss of precision. consider using floats
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a struct field
  --> src/fclose.rs:49:5
   |
49 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
  --> src/ialloc.rs:64:22
   |
64 |     let total_size = n * s;
   |                      ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/ialloc.rs:64:22
   |
64 |     let total_size = n * s;
   |                      ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/fclose.rs:50:5
   |
50 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/ialloc.rs:77:9
   |
77 |         Some(new_vec)
   |         ^^^^^^^^^^^^^ help: add `return` as shown: `return Some(new_vec)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
  --> src/ialloc.rs:79:9
   |
79 |         None
   |         ^^^^ help: add `return` as shown: `return None`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be simplified with `bool::then`
  --> src/ialloc.rs:72:5
   |
72 | /     if s <= usize::MAX {
73 | |         let mut new_vec = Vec::with_capacity(s);
74 | |         if let Some(mut vec) = p {
75 | |             new_vec.extend(vec);
...  |
79 | |         None
80 | |     }
   | |_____^
   |
   = note: `-W clippy::if-then-some-else-none` implied by `-W clippy::restriction`
   = help: consider using `bool::then` like: `(s <= usize::MAX).then(|| { /* snippet */ new_vec })`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_then_some_else_none

warning: missing documentation for a type alias
  --> src/fclose.rs:52:1
   |
52 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/fclose.rs:53:1
   |
53 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
  --> src/ialloc.rs:72:8
   |
72 |     if s <= usize::MAX {
   |        ^^^^^^^^^^^^^^^
   |
   = help: because `usize::MAX` is the maximum value for this type, this comparison is always true
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons

warning: missing `return` statement
  --> src/ialloc.rs:89:9
   |
89 |         Some(vec)
   |         ^^^^^^^^^ help: add `return` as shown: `return Some(vec)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a function
  --> src/fclose.rs:55:1
   |
55 | / pub fn rpl_fclose(fp: *mut FILE) -> libc::c_int {
56 | |     let mut saved_errno: libc::c_int = 0;
57 | |     let fd = unsafe { fileno(fp) };
58 | |     
...  |
74 | |     result
75 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/ialloc.rs:91:9
   |
91 |         None
   |         ^^^^ help: add `return` as shown: `return None`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `#[inline]` for a function
  --> src/fclose.rs:55:1
   |
55 | / pub fn rpl_fclose(fp: *mut FILE) -> libc::c_int {
56 | |     let mut saved_errno: libc::c_int = 0;
57 | |     let fd = unsafe { fileno(fp) };
58 | |     
...  |
74 | |     result
75 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: this could be simplified with `bool::then`
  --> src/ialloc.rs:87:5
   |
87 | /     if s as usize <= usize::MAX {
88 | |         let vec = Vec::with_capacity(s as usize);
89 | |         Some(vec)
90 | |     } else {
91 | |         None
92 | |     }
   | |_____^
   |
   = help: consider using `bool::then` like: `(s as usize <= usize::MAX).then(|| { /* snippet */ vec })`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_then_some_else_none

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/ialloc.rs:87:8
   |
87 |     if s as usize <= usize::MAX {
   |        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
  --> src/ialloc.rs:87:8
   |
87 |     if s as usize <= usize::MAX {
   |        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/ialloc.rs:88:38
   |
88 |         let vec = Vec::with_capacity(s as usize);
   |                                      ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
  --> src/ialloc.rs:88:38
   |
88 |         let vec = Vec::with_capacity(s as usize);
   |                                      ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unsafe function's docs miss `# Safety` section
   --> src/ialloc.rs:99:1
    |
99  | / pub unsafe extern "C" fn _gl_alloc_nomem() -> *mut libc::c_void {
100 | |     *__errno_location() = 12 as libc::c_int;
101 | |     return 0 as *mut libc::c_void;
102 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/ialloc.rs:101:5
    |
101 |     return 0 as *mut libc::c_void;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut libc::c_void`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
   --> src/ialloc.rs:100:27
    |
100 |     *__errno_location() = 12 as libc::c_int;
    |                           ^^ help: consider adding suffix: `12_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `0 as *mut _` detected
   --> src/ialloc.rs:101:12
    |
101 |     return 0 as *mut libc::c_void;
    |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = note: `-W clippy::zero-ptr` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: used import from `std` instead of `core`
 --> src/localcharset.rs:1:5
  |
1 | use std::ffi::CStr;
  |     ^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing `return` statement
   --> src/localcharset.rs:401:5
    |
401 |     codeset.to_string_lossy().into_owned()
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return codeset.to_string_lossy().into_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
   --> src/localcharset.rs:394:44
    |
394 |     let codeset_ptr: *const libc::c_char = unsafe { nl_langinfo(CODESET as libc::c_int) };
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: casting `u32` to `i32` may wrap around the value
   --> src/localcharset.rs:394:65
    |
394 |     let codeset_ptr: *const libc::c_char = unsafe { nl_langinfo(CODESET as libc::c_int) };
    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: unsafe block missing a safety comment
   --> src/localcharset.rs:395:19
    |
395 |     let codeset = unsafe { CStr::from_ptr(codeset_ptr) };
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `to_string()` called on a `&str`
   --> src/localcharset.rs:398:16
    |
398 |         return "ASCII".to_string();
    |                ^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::str-to-string` implied by `-W clippy::restriction`
    = help: consider using `.to_owned()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: exported structs should not be exhaustive
  --> src/mbrtoc32.rs:24:1
   |
24 | / pub struct __mbstate_t {
25 | |     pub __count: libc::c_int,
26 | |     pub __value: C2RustUnnamed,
27 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
24 | #[non_exhaustive]
   |

warning: used import from `std` instead of `core`
  --> src/mbrtoc32.rs:38:16
   |
38 |     let size = std::mem::size_of::<mbstate_t>();
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
  --> src/mbrtoc32.rs:39:28
   |
39 |     let bytes: &mut [u8] = unsafe { std::slice::from_raw_parts_mut(ps as *mut _ as *mut u8, size) };
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
  --> src/mbrtoc32.rs:39:37
   |
39 |     let bytes: &mut [u8] = unsafe { std::slice::from_raw_parts_mut(ps as *mut _ as *mut u8, size) };
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
  --> src/mbrtoc32.rs:39:68
   |
39 |     let bytes: &mut [u8] = unsafe { std::slice::from_raw_parts_mut(ps as *mut _ as *mut u8, size) };
   |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(ps as *mut _).cast::<u8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a module
  --> lib.rs:22:1
   |
22 | pub mod fflush;
   | ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
  --> src/mbrtoc32.rs:48:1
   |
48 | / pub unsafe extern "C" fn rpl_mbrtoc32(
49 | |     mut pwc: *mut char32_t,
50 | |     mut s: *const libc::c_char,
51 | |     mut n: size_t,
...  |
77 | |     return ret;
78 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a type alias
  --> src/fflush.rs:10:1
   |
10 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name ends with its containing module's name
  --> src/mbrtoc32.rs:48:1
   |
48 | / pub unsafe extern "C" fn rpl_mbrtoc32(
49 | |     mut pwc: *mut char32_t,
50 | |     mut s: *const libc::c_char,
51 | |     mut n: size_t,
...  |
77 | |     return ret;
78 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a type alias
  --> src/fflush.rs:11:1
   |
11 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/fflush.rs:12:1
   |
12 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
  --> src/mbrtoc32.rs:77:5
   |
77 |     return ret;
   |     ^^^^^^^^^^^ help: remove `return`: `ret`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a struct
  --> src/fflush.rs:15:1
   |
15 | / pub struct _IO_FILE {
16 | |     pub _flags: libc::c_int,
17 | |     pub _IO_read_ptr: *mut libc::c_char,
18 | |     pub _IO_read_end: *mut libc::c_char,
...  |
44 | |     pub _unused2: [libc::c_char; 20],
45 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/mbrtoc32.rs:57:13
   |
57 |         n = 1 as libc::c_int as size_t;
   |             ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/mbrtoc32.rs:63:16
   |
63 |     if ret < -(3 as libc::c_int) as size_t && mbsinit(ps) == 0 {
   |                ^ help: consider adding suffix: `3_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/mbrtoc32.rs:63:62
   |
63 |     if ret < -(3 as libc::c_int) as size_t && mbsinit(ps) == 0 {
   |                                                              ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fflush.rs:16:5
   |
16 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fflush.rs:17:5
   |
17 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/mbrtoc32.rs:66:17
   |
66 |     if ret == -(3 as libc::c_int) as size_t {
   |                 ^ help: consider adding suffix: `3_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fflush.rs:18:5
   |
18 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/mbrtoc32.rs:69:10
   |
69 |     if -(2 as libc::c_int) as size_t <= ret && n != 0 as libc::c_int as libc::c_ulong
   |          ^ help: consider adding suffix: `2_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fflush.rs:19:5
   |
19 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/mbrtoc32.rs:69:53
   |
69 |     if -(2 as libc::c_int) as size_t <= ret && n != 0 as libc::c_int as libc::c_ulong
   |                                                     ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fflush.rs:20:5
   |
20 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/mbrtoc32.rs:75:16
   |
75 |         return 1 as libc::c_int as size_t;
   |                ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fflush.rs:21:5
   |
21 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `0 as *mut _` detected
  --> src/mbrtoc32.rs:55:15
   |
55 |         pwc = 0 as *mut char32_t;
   |               ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<char32_t>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a struct field
  --> src/fflush.rs:22:5
   |
22 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/mbrtoc32.rs:56:13
   |
56 |         s = b"\0" as *const u8 as *const libc::c_char;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fflush.rs:23:5
   |
23 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/mbrtoc32.rs:57:13
   |
57 |         n = 1 as libc::c_int as size_t;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fflush.rs:24:5
   |
24 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/mbrtoc32.rs:63:14
   |
63 |     if ret < -(3 as libc::c_int) as size_t && mbsinit(ps) == 0 {
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fflush.rs:25:5
   |
25 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
  --> src/mbrtoc32.rs:63:14
   |
63 |     if ret < -(3 as libc::c_int) as size_t && mbsinit(ps) == 0 {
   |              ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/fflush.rs:26:5
   |
26 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
  --> src/mbrtoc32.rs:63:14
   |
63 |     if ret < -(3 as libc::c_int) as size_t && mbsinit(ps) == 0 {
   |              ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/fflush.rs:27:5
   |
27 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/mbrtoc32.rs:66:15
   |
66 |     if ret == -(3 as libc::c_int) as size_t {
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fflush.rs:28:5
   |
28 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
  --> src/mbrtoc32.rs:66:15
   |
66 |     if ret == -(3 as libc::c_int) as size_t {
   |               ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/fflush.rs:29:5
   |
29 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
  --> src/mbrtoc32.rs:66:15
   |
66 |     if ret == -(3 as libc::c_int) as size_t {
   |               ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/fflush.rs:30:5
   |
30 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/mbrtoc32.rs:69:8
   |
69 |     if -(2 as libc::c_int) as size_t <= ret && n != 0 as libc::c_int as libc::c_ulong
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fflush.rs:31:5
   |
31 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
  --> src/mbrtoc32.rs:69:8
   |
69 |     if -(2 as libc::c_int) as size_t <= ret && n != 0 as libc::c_int as libc::c_ulong
   |        ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/fflush.rs:32:5
   |
32 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
  --> src/mbrtoc32.rs:69:8
   |
69 |     if -(2 as libc::c_int) as size_t <= ret && n != 0 as libc::c_int as libc::c_ulong
   |        ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/fflush.rs:33:5
   |
33 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/mbrtoc32.rs:69:53
   |
69 |     if -(2 as libc::c_int) as size_t <= ret && n != 0 as libc::c_int as libc::c_ulong
   |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fflush.rs:34:5
   |
34 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `u32` may become silently lossy if you later change the type
  --> src/mbrtoc32.rs:73:20
   |
73 |             *pwc = *s as libc::c_uchar as char32_t;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u32::from(*s as libc::c_uchar)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i8` to `u8` may lose the sign of the value
  --> src/mbrtoc32.rs:73:20
   |
73 |             *pwc = *s as libc::c_uchar as char32_t;
   |                    ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fflush.rs:35:5
   |
35 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/mbrtoc32.rs:75:16
   |
75 |         return 1 as libc::c_int as size_t;
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fflush.rs:36:5
   |
36 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
 --> src/mbszero.rs:1:5
  |
1 | use std::mem;
  |     ^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fflush.rs:37:5
   |
37 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
  --> src/mbszero.rs:13:1
   |
13 | / pub struct __mbstate_t {
14 | |     pub __count: libc::c_int,
15 | |     pub __value: C2RustUnnamed,
16 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
13 | #[non_exhaustive]
   |

warning: missing documentation for a struct field
  --> src/fflush.rs:38:5
   |
38 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/mbszero.rs:30:18
   |
30 |         __value: unsafe { std::mem::zeroed() }, // Zero-initialize __value
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fflush.rs:39:5
   |
39 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/mbszero.rs:30:27
   |
30 |         __value: unsafe { std::mem::zeroed() }, // Zero-initialize __value
   |                           ^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fflush.rs:40:5
   |
40 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
  --> src/progname.rs:21:1
   |
21 | / pub struct _IO_FILE {
22 | |     pub _flags: libc::c_int,
23 | |     pub _IO_read_ptr: *mut libc::c_char,
24 | |     pub _IO_read_end: *mut libc::c_char,
...  |
50 | |     pub _unused2: [libc::c_char; 20],
51 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
21 | #[non_exhaustive]
   |

warning: missing documentation for a struct field
  --> src/fflush.rs:41:5
   |
41 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fflush.rs:42:5
   |
42 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
  --> src/progname.rs:35:22
   |
35 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a struct field
  --> src/fflush.rs:43:5
   |
43 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
  --> src/progname.rs:46:29
   |
46 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a struct field
  --> src/fflush.rs:44:5
   |
44 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
  --> src/progname.rs:59:1
   |
59 | / pub unsafe extern "C" fn set_program_name(mut argv0: *const libc::c_char) {
60 | |     let mut slash: *const libc::c_char = 0 as *const libc::c_char;
61 | |     let mut base: *const libc::c_char = 0 as *const libc::c_char;
62 | |     if argv0.is_null() {
...  |
95 | |     program_invocation_name = argv0 as *mut libc::c_char;
96 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: default numeric fallback might occur
  --> src/progname.rs:76:51
   |
76 |     if base.offset_from(argv0) as libc::c_long >= 7 as libc::c_int as libc::c_long
   |                                                   ^ help: consider adding suffix: `7_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/progname.rs:81:14
   |
81 |         ) == 0 as libc::c_int
   |              ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
  --> src/fflush.rs:46:1
   |
46 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/progname.rs:88:14
   |
88 |         ) == 0 as libc::c_int
   |              ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
  --> src/fflush.rs:47:1
   |
47 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `0 as *const _` detected
  --> src/progname.rs:60:42
   |
60 |     let mut slash: *const libc::c_char = 0 as *const libc::c_char;
   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a type alias
  --> src/fflush.rs:48:1
   |
48 | pub type off_t = __off_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `0 as *const _` detected
  --> src/progname.rs:61:41
   |
61 |     let mut base: *const libc::c_char = 0 as *const libc::c_char;
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a function
  --> src/fflush.rs:49:1
   |
49 | / unsafe extern "C" fn clear_ungetc_buffer_preserving_position(mut fp: *mut FILE) {
50 | |     if (*fp)._flags & 0x100 as libc::c_int != 0 {
51 | |         rpl_fseeko(fp, 0 as libc::c_int as off_t, 1 as libc::c_int);
52 | |     }
53 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/progname.rs:64:13
   |
64 | /             b"A NULL argv[0] was passed through an exec system call.\n\0" as *const u8
65 | |                 as *const libc::c_char,
   | |______________________________________^ help: try `pointer::cast`, a safer alternative: `(b"A NULL argv[0] was passed through an exec system call.\n\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary boolean `not` operation
  --> src/progname.rs:71:12
   |
71 |       base = if !slash.is_null() {
   |  ____________^
72 | |         slash.offset(1 as libc::c_int as isize)
73 | |     } else {
74 | |         argv0
75 | |     };
   | |_____^
   |
   = help: remove the `!` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/progname.rs:76:51
   |
76 |     if base.offset_from(argv0) as libc::c_long >= 7 as libc::c_int as libc::c_long
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(7 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
  --> src/progname.rs:78:25
   |
78 |             base.offset(-(7 as libc::c_int as isize)),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/progname.rs:78:25
   |
78 |             base.offset(-(7 as libc::c_int as isize)),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: `as` casting between raw pointers without changing its mutability
  --> src/progname.rs:79:13
   |
79 |             b"/.libs/\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"/.libs/\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a function
  --> src/fflush.rs:55:1
   |
55 | / pub unsafe extern "C" fn rpl_fflush(mut stream: *mut FILE) -> libc::c_int {
56 | |     if stream.is_null() || !(__freading(stream) != 0 as libc::c_int) {
57 | |         return fflush(stream);
58 | |     }
59 | |     clear_ungetc_buffer_preserving_position(stream);
60 | |     return fflush(stream);
61 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/progname.rs:80:13
   |
80 |             7 as libc::c_int as libc::c_ulong,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `#[inline]` for a function
  --> src/fflush.rs:55:1
   |
55 | / pub unsafe extern "C" fn rpl_fflush(mut stream: *mut FILE) -> libc::c_int {
56 | |     if stream.is_null() || !(__freading(stream) != 0 as libc::c_int) {
57 | |         return fflush(stream);
58 | |     }
59 | |     clear_ungetc_buffer_preserving_position(stream);
60 | |     return fflush(stream);
61 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/progname.rs:86:13
   |
86 |             b"lt-\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"lt-\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/progname.rs:87:13
   |
87 |             3 as libc::c_int as libc::c_ulong,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unsafe function's docs miss `# Safety` section
  --> src/propername_lite.rs:8:1
   |
8  | / pub unsafe extern "C" fn proper_name_lite(
9  | |     mut name_ascii: *const libc::c_char,
10 | |     mut name_utf8: *const libc::c_char,
11 | | ) -> *const libc::c_char {
...  |
23 | |     };
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/propername_lite.rs:13:5
   |
13 | /     return if translation != name_ascii {
14 | |         translation
15 | |     } else if c_strcasecmp(
16 | |         locale_charset(),
...  |
22 | |         name_ascii
23 | |     };
   | |______^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
13 ~     if translation != name_ascii {
14 +         translation
15 +     } else if c_strcasecmp(
16 +         locale_charset(),
17 +         b"UTF-8\0" as *const u8 as *const libc::c_char,
18 +     ) == 0 as libc::c_int
19 +     {
20 +         name_utf8
21 +     } else {
22 +         name_ascii
23 +     }
   |

warning: default numeric fallback might occur
  --> src/propername_lite.rs:18:10
   |
18 |     ) == 0 as libc::c_int
   |          ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a module
  --> lib.rs:23:1
   |
23 | pub mod fseeko;
   | ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/propername_lite.rs:17:9
   |
17 |         b"UTF-8\0" as *const u8 as *const libc::c_char,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"UTF-8\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a type alias
  --> src/fseeko.rs:12:1
   |
12 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/fseeko.rs:13:1
   |
13 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/quotearg.rs:31:5
   |
31 | use std::clone::Clone;
   |     ^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a type alias
  --> src/fseeko.rs:14:1
   |
14 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/quotearg.rs:33:5
   |
33 | use std::option::Option;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct
  --> src/fseeko.rs:17:1
   |
17 | / pub struct _IO_FILE {
18 | |     pub _flags: libc::c_int,
19 | |     pub _IO_read_ptr: *mut libc::c_char,
20 | |     pub _IO_read_end: *mut libc::c_char,
...  |
46 | |     pub _unused2: [libc::c_char; 20],
47 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `alloc`
  --> src/quotearg.rs:35:5
   |
35 | use std::ffi::CString;
   |     ^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `core`
  --> src/quotearg.rs:37:5
   |
37 | use std::convert::TryInto;
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
  --> src/quotearg.rs:41:5
   |
41 | use std::mem;
   |     ^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fseeko.rs:18:5
   |
18 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/quotearg.rs:43:5
   |
43 | use std::ffi::CStr;
   |     ^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fseeko.rs:19:5
   |
19 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
   --> src/quotearg.rs:105:1
    |
105 | / pub struct quoting_options {
106 | |     pub style: quoting_style,
107 | |     pub flags: libc::c_int,
108 | |     pub quote_these_too: [libc::c_uint; 8],
109 | |     pub left_quote: *const libc::c_char,
110 | |     pub right_quote: *const libc::c_char,
111 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
105 | #[non_exhaustive]
    |

warning: missing documentation for a struct field
  --> src/fseeko.rs:20:5
   |
20 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
   --> src/quotearg.rs:115:1
    |
115 | / pub struct mbstate_t {
116 | |     pub __count: libc::c_int,
117 | |     pub __value: C2RustUnnamed,
118 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
115 | #[non_exhaustive]
    |

warning: missing documentation for a struct field
  --> src/fseeko.rs:21:5
   |
21 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
   --> src/quotearg.rs:130:1
    |
130 | / pub struct slotvec {
131 | |     pub size: size_t,
132 | |     pub val: *mut libc::c_char,
133 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
130 | #[non_exhaustive]
    |

warning: missing documentation for a struct field
  --> src/fseeko.rs:22:5
   |
22 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/quotearg.rs:149:14
    |
149 |     unsafe { iswprint(wc) }
    |              ^^^^^^^^^^^^ help: add `return` as shown: `return iswprint(wc)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fseeko.rs:23:5
   |
23 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fseeko.rs:24:5
   |
24 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:149:5
    |
149 |     unsafe { iswprint(wc) }
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:154:5
    |
154 |     unsafe {
    |     ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fseeko.rs:25:5
   |
25 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fseeko.rs:26:5
   |
26 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: found a count of bytes instead of a count of elements of `T`
   --> src/quotearg.rs:155:38
    |
155 |         std::ptr::write_bytes(ps, 0, std::mem::size_of::<mbstate_t>());
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::size-of-in-element-count` implied by `-W clippy::all`
    = help: use a count of elements instead of a count of bytes, it already gets multiplied by the size of the type
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#size_of_in_element_count

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:155:9
    |
155 |         std::ptr::write_bytes(ps, 0, std::mem::size_of::<mbstate_t>());
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fseeko.rs:27:5
   |
27 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fseeko.rs:28:5
   |
28 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:155:38
    |
155 |         std::ptr::write_bytes(ps, 0, std::mem::size_of::<mbstate_t>());
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fseeko.rs:29:5
   |
29 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:161:5
    |
161 |     b"literal\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"literal\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fseeko.rs:30:5
   |
30 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:162:5
    |
162 |     b"shell\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"shell\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fseeko.rs:31:5
   |
31 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:163:5
    |
163 |     b"shell-always\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"shell-always\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fseeko.rs:32:5
   |
32 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:164:5
    |
164 |     b"shell-escape\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"shell-escape\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fseeko.rs:33:5
   |
33 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:165:5
    |
165 |     b"shell-escape-always\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"shell-escape-always\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fseeko.rs:34:5
   |
34 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:166:5
    |
166 |     b"c\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"c\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fseeko.rs:35:5
   |
35 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:167:5
    |
167 |     b"c-maybe\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"c-maybe\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fseeko.rs:36:5
   |
36 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:168:5
    |
168 |     b"escape\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"escape\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fseeko.rs:37:5
   |
37 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:169:5
    |
169 |     b"locale\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"locale\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fseeko.rs:38:5
   |
38 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:170:5
    |
170 |     b"clocale\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"clocale\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fseeko.rs:39:5
   |
39 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/quotearg.rs:197:5
    |
197 |     Box::new(cloned_options)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Box::new(cloned_options)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fseeko.rs:40:5
   |
40 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:195:31
    |
195 |     let options = o.unwrap_or(unsafe { &default_quoting_options });
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fseeko.rs:41:5
   |
41 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: using `clone` on type `src::quotearg::quoting_options` which implements the `Copy` trait
   --> src/quotearg.rs:196:26
    |
196 |     let cloned_options = options.clone();
    |                          ^^^^^^^^^^^^^^^ help: try dereferencing it: `*options`
    |
    = note: `-W clippy::clone-on-copy` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: missing documentation for a struct field
  --> src/fseeko.rs:42:5
   |
42 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/quotearg.rs:206:5
    |
206 |     options.style
    |     ^^^^^^^^^^^^^ help: add `return` as shown: `return options.style`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fseeko.rs:43:5
   |
43 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:204:17
    |
204 |         None => unsafe { &default_quoting_options },
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fseeko.rs:44:5
   |
44 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:216:17
    |
216 |         None => unsafe { &mut default_quoting_options },
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fseeko.rs:45:5
   |
45 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/quotearg.rs:240:5
    |
240 |     r
    |     ^ help: add `return` as shown: `return r`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fseeko.rs:46:5
   |
46 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:239:17
    |
239 |     *p ^= ((i & 1 ^ r) << shift) as u32;
    |                 ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: arithmetic detected
   --> src/quotearg.rs:227:17
    |
227 |     let index = (c as usize) / (std::mem::size_of::<u32>() * 8);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:227:17
    |
227 |     let index = (c as usize) / (std::mem::size_of::<u32>() * 8);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a type alias
  --> src/fseeko.rs:48:1
   |
48 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer division
   --> src/quotearg.rs:227:17
    |
227 |     let index = (c as usize) / (std::mem::size_of::<u32>() * 8);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a type alias
  --> src/fseeko.rs:49:1
   |
49 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:227:33
    |
227 |     let index = (c as usize) / (std::mem::size_of::<u32>() * 8);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a type alias
  --> src/fseeko.rs:50:1
   |
50 | pub type off_t = __off_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:228:17
    |
228 |     let shift = (c as usize) % (std::mem::size_of::<u32>() * 8);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
  --> src/fseeko.rs:52:1
   |
52 | / pub fn rpl_fseeko(
53 | |     fp: &mut FILE,
54 | |     offset: off_t,
55 | |     whence: libc::c_int,
...  |
73 | |     }
74 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:228:17
    |
228 |     let shift = (c as usize) % (std::mem::size_of::<u32>() * 8);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `#[inline]` for a function
  --> src/fseeko.rs:52:1
   |
52 | / pub fn rpl_fseeko(
53 | |     fp: &mut FILE,
54 | |     offset: off_t,
55 | |     whence: libc::c_int,
...  |
73 | |     }
74 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:228:33
    |
228 |     let shift = (c as usize) % (std::mem::size_of::<u32>() * 8);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: indexing may panic
   --> src/quotearg.rs:231:31
    |
231 |         Some(options) => &mut options.quote_these_too[index],
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:234:13
    |
234 |             unsafe { &mut default_quoting_options.quote_these_too[index] }
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: indexing may panic
   --> src/quotearg.rs:234:27
    |
234 |             unsafe { &mut default_quoting_options.quote_these_too[index] }
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:238:18
    |
238 |     let r: i32 = ((*p >> shift) & 1) as i32;
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: arithmetic detected
   --> src/quotearg.rs:238:19
    |
238 |     let r: i32 = ((*p >> shift) & 1) as i32;
    |                   ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:238:19
    |
238 |     let r: i32 = ((*p >> shift) & 1) as i32;
    |                   ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:239:11
    |
239 |     *p ^= ((i & 1 ^ r) << shift) as u32;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
   --> src/quotearg.rs:239:11
    |
239 |     *p ^= ((i & 1 ^ r) << shift) as u32;
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:239:11
    |
239 |     *p ^= ((i & 1 ^ r) << shift) as u32;
    |           ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `return` statement
   --> src/quotearg.rs:255:5
    |
255 |     r
    |     ^ help: add `return` as shown: `return r`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:251:17
    |
251 |         None => unsafe { &mut default_quoting_options },
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:264:27
    |
264 |     let default_options = unsafe { &mut default_quoting_options };
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `o` is shadowed
   --> src/quotearg.rs:265:9
    |
265 |     let o = o.unwrap_or(default_options);
    |         ^
    |
    = note: `-W clippy::shadow-reuse` implied by `-W clippy::restriction`
note: previous binding is here
   --> src/quotearg.rs:260:5
    |
260 |     mut o: Option<&mut quoting_options>,
    |     ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing `return` statement
   --> src/quotearg.rs:286:5
    |
286 |     o
    |     ^ help: add `return` as shown: `return o`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:277:21
    |
277 |         left_quote: std::ptr::null(),
    |                     ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:278:22
    |
278 |         right_quote: std::ptr::null(),
    |                      ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: only a `panic!` in `if`-then statement
   --> src/quotearg.rs:281:5
    |
281 | /     if style as u32 == custom_quoting_style as i32 as u32 {
282 | |         panic!("Custom quoting style is not allowed");
283 | |     }
    | |_____^ help: try: `assert!(!(style as u32 == custom_quoting_style as i32 as u32), "Custom quoting style is not allowed");`
    |
    = note: `-W clippy::manual-assert` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_assert

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:281:24
    |
281 |     if style as u32 == custom_quoting_style as i32 as u32 {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:281:24
    |
281 |     if style as u32 == custom_quoting_style as i32 as u32 {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: `panic` should not be present in production code
   --> src/quotearg.rs:282:9
    |
282 |         panic!("Custom quoting style is not allowed");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::panic` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#panic

warning: missing documentation for a module
  --> lib.rs:24:1
   |
24 | pub mod hard_locale;
   | ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
   --> src/quotearg.rs:320:9
    |
320 |         return "\"".to_string();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `"\"".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/quotearg.rs:322:9
    |
322 |         return "'".to_string();
    |         ^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `"'".to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a type alias
  --> src/hard_locale.rs:12:1
   |
12 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:302:117
    |
302 |         if c_strcasecmp(locale_code.as_ptr() as *const libc::c_char, b"UTF-8\0".as_ptr() as *const libc::c_char) == 0 {
    |                                                                                                                     ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/hard_locale.rs:14:1
   |
14 | / pub fn hard_locale(category: libc::c_int) -> bool {
15 | |     let mut locale: [libc::c_char; 257] = [0; 257];
16 | |     unsafe {
17 | |         if setlocale_null_r(
...  |
29 | |     return true;
30 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:310:119
    |
310 |         if c_strcasecmp(locale_code.as_ptr() as *const libc::c_char, b"GB18030\0".as_ptr() as *const libc::c_char) == 0 {
    |                                                                                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:290:23
    |
290 |     let translation = unsafe { std::ffi::CStr::from_ptr(gettext(msgid.as_ptr() as *const libc::c_char)) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing `#[inline]` for a function
  --> src/hard_locale.rs:14:1
   |
14 | / pub fn hard_locale(category: libc::c_int) -> bool {
15 | |     let mut locale: [libc::c_char; 257] = [0; 257];
16 | |     unsafe {
17 | |         if setlocale_null_r(
...  |
29 | |     return true;
30 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:290:32
    |
290 |     let translation = unsafe { std::ffi::CStr::from_ptr(gettext(msgid.as_ptr() as *const libc::c_char)) }
    |                                ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:290:65
    |
290 |     let translation = unsafe { std::ffi::CStr::from_ptr(gettext(msgid.as_ptr() as *const libc::c_char)) }
    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `msgid.as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:293:23
    |
293 |     let locale_code = unsafe { std::ffi::CStr::from_ptr(locale_charset()) }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:293:32
    |
293 |     let locale_code = unsafe { std::ffi::CStr::from_ptr(locale_charset()) }
    |                                ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a module
  --> lib.rs:25:1
   |
25 | pub mod ialloc;
   | ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:301:5
    |
301 |     unsafe {
    |     ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:302:25
    |
302 |         if c_strcasecmp(locale_code.as_ptr() as *const libc::c_char, b"UTF-8\0".as_ptr() as *const libc::c_char) == 0 {
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `locale_code.as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:302:70
    |
302 |         if c_strcasecmp(locale_code.as_ptr() as *const libc::c_char, b"UTF-8\0".as_ptr() as *const libc::c_char) == 0 {
    |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"UTF-8\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: you should use the `starts_with` method
   --> src/quotearg.rs:303:23
    |
303 |             return if msgid.chars().next() == Some('`') {
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `msgid.starts_with('`')`
    |
    = note: `-W clippy::chars-next-cmp` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#chars_next_cmp

warning: `to_string()` called on a `&str`
   --> src/quotearg.rs:304:17
    |
304 |                 "\u{2018}".to_string() // Left single quotation mark
    |                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.to_owned()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: `to_string()` called on a `&str`
   --> src/quotearg.rs:306:17
    |
306 |                 "\u{2019}".to_string() // Right single quotation mark
    |                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.to_owned()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:310:25
    |
310 |         if c_strcasecmp(locale_code.as_ptr() as *const libc::c_char, b"GB18030\0".as_ptr() as *const libc::c_char) == 0 {
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `locale_code.as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a type alias
  --> src/ialloc.rs:21:1
   |
21 | pub type ptrdiff_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:310:70
    |
310 |         if c_strcasecmp(locale_code.as_ptr() as *const libc::c_char, b"GB18030\0".as_ptr() as *const libc::c_char) == 0 {
    |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"GB18030\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a type alias
  --> src/ialloc.rs:22:1
   |
22 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: you should use the `starts_with` method
   --> src/quotearg.rs:311:23
    |
311 |             return if msgid.chars().next() == Some('`') {
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: like this: `msgid.starts_with('`')`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#chars_next_cmp

warning: missing documentation for a type alias
  --> src/ialloc.rs:23:1
   |
23 | pub type idx_t = ptrdiff_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `to_string()` called on a `&str`
   --> src/quotearg.rs:312:17
    |
312 |                 "\u{A1E7}".to_string() // Left single quotation mark in GB18030
    |                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.to_owned()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: missing documentation for a function
  --> src/ialloc.rs:27:1
   |
27 | / pub fn ireallocarray(
28 | |     p: Option<&mut [u8]>,
29 | |     n: usize,
30 | |     s: usize,
...  |
45 | |     }
46 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `to_string()` called on a `&str`
   --> src/quotearg.rs:314:17
    |
314 |                 "\u{A1AF}".to_string() // Right single quotation mark in GB18030
    |                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.to_owned()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:319:20
    |
319 |     if s as u32 == clocale_quoting_style as i32 as u32 {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:319:20
    |
319 |     if s as u32 == clocale_quoting_style as i32 as u32 {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: `to_string()` called on a `&str`
   --> src/quotearg.rs:320:16
    |
320 |         return "\"".to_string();
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using `.to_owned()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: `to_string()` called on a `&str`
   --> src/quotearg.rs:322:16
    |
322 |         return "'".to_string();
    |                ^^^^^^^^^^^^^^^
    |
    = help: consider using `.to_owned()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: this boolean expression can be simplified
   --> src/quotearg.rs:828:28
    |
828 |                         if !(bytes == 0 as libc::c_int as libc::c_ulong) {
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `bytes != 0 as libc::c_int as libc::c_ulong`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/quotearg.rs:1011:12
     |
1011 |           if !((backslash_escapes && quoting_style != shell_always_quoting_style) || elide_outer_quotes)
     |  ____________^
1012 | |             && !quote_these_too.is_null()
1013 | |             && (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std:...
1014 | |             && !is_right_quote {
     | |______________________________^ help: try: `!(elide_outer_quotes || quote_these_too.is_null() || (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std::mem::size_of::<libc::c_int>() * 8)) & 1) == 0 || is_right_quote || backslash_escapes && quoting_style != shell_always_quoting_style)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/quotearg.rs:1011:12
     |
1011 |           if !((backslash_escapes && quoting_style != shell_always_quoting_style) || elide_outer_quotes)
     |  ____________^
1012 | |             && !quote_these_too.is_null()
     | |_________________________________________^ help: try: `!(elide_outer_quotes || quote_these_too.is_null() || backslash_escapes && quoting_style != shell_always_quoting_style)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: the function has a cognitive complexity of (122/25)
   --> src/quotearg.rs:326:22
    |
326 | unsafe extern "C" fn quotearg_buffer_restyled(
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::cognitive-complexity` implied by `-W clippy::nursery`
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: missing documentation for a function
  --> src/ialloc.rs:51:1
   |
51 | / pub fn icalloc(n: usize, s: usize) -> Option<Vec<u8>> {
52 | |     if n > usize::MAX / s {
53 | |         if s != 0 {
54 | |             return None; // Equivalent to _gl_alloc_nomem()
...  |
65 | |     Some(vec![0u8; total_size]) // Allocate and initialize the Vec with zeroes
66 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this function has too many lines (804/100)
    --> src/quotearg.rs:326:1
     |
326  | / unsafe extern "C" fn quotearg_buffer_restyled(
327  | |     mut buffer: *mut libc::c_char,
328  | |     mut buffersize: size_t,
329  | |     mut arg: *const libc::c_char,
...    |
1155 | |     };
1156 | | }
     | |_^
     |
     = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: unneeded `return` statement
    --> src/quotearg.rs:1126:13
     |
1126 | /             return quotearg_buffer_restyled(
1127 | |                 buffer,
1128 | |                 buffersize,
1129 | |                 arg,
...    |
1135 | |                 right_quote,
1136 | |             );
     | |______________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1126 ~             quotearg_buffer_restyled(
1127 +                 buffer,
1128 +                 buffersize,
1129 +                 arg,
1130 +                 argsize,
1131 +                 quoting_style,
1132 +                 flags & !(QA_ELIDE_OUTER_QUOTES as libc::c_int),
1133 +                 0 as *const libc::c_uint,
1134 +                 left_quote,
1135 +                 right_quote,
1136 +             )
     |

warning: unneeded `return` statement
    --> src/quotearg.rs:1153:13
     |
1153 |             return len;
     |             ^^^^^^^^^^^ help: remove `return`: `len`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
   --> src/quotearg.rs:352:36
    |
352 |         pending_shell_escape_end = 0 as libc::c_int != 0;
    |                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:352:56
    |
352 |         pending_shell_escape_end = 0 as libc::c_int != 0;
    |                                                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:357:38
    |
357 |                 elide_outer_quotes = 1 as libc::c_int != 0;
    |                                      ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:357:58
    |
357 |                 elide_outer_quotes = 1 as libc::c_int != 0;
    |                                                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:364:37
    |
364 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/ialloc.rs:71:1
   |
71 | / pub fn irealloc(p: Option<Vec<u8>>, s: usize) -> Option<Vec<u8>> {
72 | |     if s <= usize::MAX {
73 | |         let mut new_vec = Vec::with_capacity(s);
74 | |         if let Some(mut vec) = p {
...  |
80 | |     }
81 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:364:57
    |
364 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:365:38
    |
365 |                 elide_outer_quotes = 0 as libc::c_int != 0;
    |                                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:365:58
    |
365 |                 elide_outer_quotes = 0 as libc::c_int != 0;
    |                                                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:387:37
    |
387 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:387:57
    |
387 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/ialloc.rs:86:1
   |
86 | / pub fn imalloc(s: idx_t) -> Option<Vec<u8>> {
87 | |     if s as usize <= usize::MAX {
88 | |         let vec = Vec::with_capacity(s as usize);
89 | |         Some(vec)
...  |
92 | |     }
93 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:393:37
    |
393 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:393:57
    |
393 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:406:38
    |
406 |                 elide_outer_quotes = 0 as libc::c_int != 0;
    |                                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:406:58
    |
406 |                 elide_outer_quotes = 0 as libc::c_int != 0;
    |                                                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:422:37
    |
422 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:422:57
    |
422 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:424:36
    |
424 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:428:38
    |
428 |                 elide_outer_quotes = 1 as libc::c_int != 0;
    |                                      ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:428:58
    |
428 |                 elide_outer_quotes = 1 as libc::c_int != 0;
    |                                                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/ialloc.rs:99:1
    |
99  | / pub unsafe extern "C" fn _gl_alloc_nomem() -> *mut libc::c_void {
100 | |     *__errno_location() = 12 as libc::c_int;
101 | |     return 0 as *mut libc::c_void;
102 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:436:41
    |
436 |                     backslash_escapes = 1 as libc::c_int != 0;
    |                                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:436:61
    |
436 |                     backslash_escapes = 1 as libc::c_int != 0;
    |                                                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:453:36
    |
453 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:457:13
    |
457 |         i = 0 as libc::c_int as size_t;
    |             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a module
  --> lib.rs:26:1
   |
26 | pub mod localcharset;
   | ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:462:14
    |
462 |         } == 0
    |              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:469:52
    |
469 |             if backslash_escapes as libc::c_int != 0
    |                                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
 --> src/localcharset.rs:7:1
  |
7 | pub const CODESET: C2RustUnnamed = 14;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
 --> src/localcharset.rs:8:1
  |
8 | pub type nl_item = libc::c_int;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:475:29
    |
475 |                         && (1 as libc::c_int as libc::c_ulong) < quote_string_len
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:486:22
    |
486 |                 ) == 0 as libc::c_int
    |                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
 --> src/localcharset.rs:9:1
  |
9 | pub type C2RustUnnamed = libc::c_uint;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:10:1
   |
10 | pub const _NL_NUM: C2RustUnnamed = 786449;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:492:34
    |
492 |                 is_right_quote = 1 as libc::c_int != 0;
    |                                  ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:11:1
   |
11 | pub const _NL_NUM_LC_IDENTIFICATION: C2RustUnnamed = 786448;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:492:54
    |
492 |                 is_right_quote = 1 as libc::c_int != 0;
    |                                                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:12:1
   |
12 | pub const _NL_IDENTIFICATION_CODESET: C2RustUnnamed = 786447;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:496:17
    |
496 |                 0 => {
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:538:49
    |
538 | } else if flags & QA_ELIDE_NULL_BYTES as i32 != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:13:1
   |
13 | pub const _NL_IDENTIFICATION_CATEGORY: C2RustUnnamed = 786446;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:545:17
    |
545 |                 63 => {
    |                 ^^ help: consider adding suffix: `63_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:14:1
   |
14 | pub const _NL_IDENTIFICATION_DATE: C2RustUnnamed = 786445;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:15:1
   |
15 | pub const _NL_IDENTIFICATION_REVISION: C2RustUnnamed = 786444;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:557:85
    |
557 | ...                   if flags & QA_SPLIT_TRIGRAPHS as libc::c_int != 0
    |                                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:16:1
   |
16 | pub const _NL_IDENTIFICATION_ABBREVIATION: C2RustUnnamed = 786443;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:570:45
    |
570 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                       ^^ help: consider adding suffix: `33_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:570:50
    |
570 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                            ^^ help: consider adding suffix: `39_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:17:1
   |
17 | pub const _NL_IDENTIFICATION_APPLICATION: C2RustUnnamed = 786442;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:18:1
   |
18 | pub const _NL_IDENTIFICATION_AUDIENCE: C2RustUnnamed = 786441;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:570:55
    |
570 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                 ^^ help: consider adding suffix: `40_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:570:60
    |
570 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                      ^^ help: consider adding suffix: `41_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:19:1
   |
19 | pub const _NL_IDENTIFICATION_TERRITORY: C2RustUnnamed = 786440;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:20:1
   |
20 | pub const _NL_IDENTIFICATION_LANGUAGE: C2RustUnnamed = 786439;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:570:65
    |
570 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                           ^^ help: consider adding suffix: `45_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:21:1
   |
21 | pub const _NL_IDENTIFICATION_FAX: C2RustUnnamed = 786438;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:570:70
    |
570 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                ^^ help: consider adding suffix: `47_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:22:1
   |
22 | pub const _NL_IDENTIFICATION_TEL: C2RustUnnamed = 786437;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:570:75
    |
570 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                     ^^ help: consider adding suffix: `60_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:23:1
   |
23 | pub const _NL_IDENTIFICATION_EMAIL: C2RustUnnamed = 786436;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:570:80
    |
570 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                          ^^ help: consider adding suffix: `61_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:24:1
   |
24 | pub const _NL_IDENTIFICATION_CONTACT: C2RustUnnamed = 786435;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:570:85
    |
570 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                               ^^ help: consider adding suffix: `62_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:25:1
   |
25 | pub const _NL_IDENTIFICATION_ADDRESS: C2RustUnnamed = 786434;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:620:85
    |
620 | ...                   if flags & QA_SPLIT_TRIGRAPHS as libc::c_int != 0
    |                                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:26:1
   |
26 | pub const _NL_IDENTIFICATION_SOURCE: C2RustUnnamed = 786433;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:633:45
    |
633 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                       ^^ help: consider adding suffix: `33_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:27:1
   |
27 | pub const _NL_IDENTIFICATION_TITLE: C2RustUnnamed = 786432;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:633:50
    |
633 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                            ^^ help: consider adding suffix: `39_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:633:55
    |
633 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                 ^^ help: consider adding suffix: `40_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:28:1
   |
28 | pub const _NL_NUM_LC_MEASUREMENT: C2RustUnnamed = 720898;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:29:1
   |
29 | pub const _NL_MEASUREMENT_CODESET: C2RustUnnamed = 720897;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:633:60
    |
633 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                      ^^ help: consider adding suffix: `41_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:633:65
    |
633 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                           ^^ help: consider adding suffix: `45_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:30:1
   |
30 | pub const _NL_MEASUREMENT_MEASUREMENT: C2RustUnnamed = 720896;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:633:70
    |
633 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                ^^ help: consider adding suffix: `47_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:31:1
   |
31 | pub const _NL_NUM_LC_TELEPHONE: C2RustUnnamed = 655365;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:32:1
   |
32 | pub const _NL_TELEPHONE_CODESET: C2RustUnnamed = 655364;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:633:75
    |
633 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                     ^^ help: consider adding suffix: `60_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:33:1
   |
33 | pub const _NL_TELEPHONE_INT_PREFIX: C2RustUnnamed = 655363;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:633:80
    |
633 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                          ^^ help: consider adding suffix: `61_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:34:1
   |
34 | pub const _NL_TELEPHONE_INT_SELECT: C2RustUnnamed = 655362;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:633:85
    |
633 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                               ^^ help: consider adding suffix: `62_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:678:17
    |
678 |                 7 => {
    |                 ^ help: consider adding suffix: `7_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:35:1
   |
35 | pub const _NL_TELEPHONE_TEL_DOM_FMT: C2RustUnnamed = 655361;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:682:17
    |
682 |                 8 => {
    |                 ^ help: consider adding suffix: `8_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:36:1
   |
36 | pub const _NL_TELEPHONE_TEL_INT_FMT: C2RustUnnamed = 655360;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:686:17
    |
686 |                 12 => {
    |                 ^^ help: consider adding suffix: `12_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:37:1
   |
37 | pub const _NL_NUM_LC_ADDRESS: C2RustUnnamed = 589837;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:690:17
    |
690 |                 10 => {
    |                 ^^ help: consider adding suffix: `10_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:38:1
   |
38 | pub const _NL_ADDRESS_CODESET: C2RustUnnamed = 589836;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:694:17
    |
694 |                 13 => {
    |                 ^^ help: consider adding suffix: `13_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:39:1
   |
39 | pub const _NL_ADDRESS_LANG_LIB: C2RustUnnamed = 589835;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:698:17
    |
698 |                 9 => {
    |                 ^ help: consider adding suffix: `9_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:40:1
   |
40 | pub const _NL_ADDRESS_LANG_TERM: C2RustUnnamed = 589834;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:41:1
   |
41 | pub const _NL_ADDRESS_LANG_AB: C2RustUnnamed = 589833;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:702:17
    |
702 |                 11 => {
    |                 ^^ help: consider adding suffix: `11_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:706:17
    |
706 |                 92 => {
    |                 ^^ help: consider adding suffix: `92_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:42:1
   |
42 | pub const _NL_ADDRESS_LANG_NAME: C2RustUnnamed = 589832;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:721:17
    |
721 |                 123 | 125 => {
    |                 ^^^ help: consider adding suffix: `123_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:43:1
   |
43 | pub const _NL_ADDRESS_COUNTRY_ISBN: C2RustUnnamed = 589831;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:721:23
    |
721 |                 123 | 125 => {
    |                       ^^^ help: consider adding suffix: `125_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:44:1
   |
44 | pub const _NL_ADDRESS_COUNTRY_NUM: C2RustUnnamed = 589830;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:45:1
   |
45 | pub const _NL_ADDRESS_COUNTRY_CAR: C2RustUnnamed = 589829;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:736:17
    |
736 |                 35 | 126 => {
    |                 ^^ help: consider adding suffix: `35_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:736:22
    |
736 |                 35 | 126 => {
    |                      ^^^ help: consider adding suffix: `126_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:46:1
   |
46 | pub const _NL_ADDRESS_COUNTRY_AB3: C2RustUnnamed = 589828;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:739:17
    |
739 |                 32 => {
    |                 ^^ help: consider adding suffix: `32_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:47:1
   |
47 | pub const _NL_ADDRESS_COUNTRY_AB2: C2RustUnnamed = 589827;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:48:1
   |
48 | pub const _NL_ADDRESS_COUNTRY_POST: C2RustUnnamed = 589826;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:742:17
    |
742 |                 33 => {
    |                 ^^ help: consider adding suffix: `33_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:49:1
   |
49 | pub const _NL_ADDRESS_COUNTRY_NAME: C2RustUnnamed = 589825;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:745:17
    |
745 |                 34 | 36 | 38 | 40 | 41 | 42 | 59 | 60 | 61 => {
    |                 ^^ help: consider adding suffix: `34_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:50:1
   |
50 | pub const _NL_ADDRESS_POSTAL_FMT: C2RustUnnamed = 589824;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:745:22
    |
745 |                 34 | 36 | 38 | 40 | 41 | 42 | 59 | 60 | 61 => {
    |                      ^^ help: consider adding suffix: `36_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:51:1
   |
51 | pub const _NL_NUM_LC_NAME: C2RustUnnamed = 524295;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:745:27
    |
745 |                 34 | 36 | 38 | 40 | 41 | 42 | 59 | 60 | 61 => {
    |                           ^^ help: consider adding suffix: `38_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:52:1
   |
52 | pub const _NL_NAME_CODESET: C2RustUnnamed = 524294;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:745:32
    |
745 |                 34 | 36 | 38 | 40 | 41 | 42 | 59 | 60 | 61 => {
    |                                ^^ help: consider adding suffix: `40_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:53:1
   |
53 | pub const _NL_NAME_NAME_MS: C2RustUnnamed = 524293;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:745:37
    |
745 |                 34 | 36 | 38 | 40 | 41 | 42 | 59 | 60 | 61 => {
    |                                     ^^ help: consider adding suffix: `41_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:54:1
   |
54 | pub const _NL_NAME_NAME_MISS: C2RustUnnamed = 524292;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:745:42
    |
745 |                 34 | 36 | 38 | 40 | 41 | 42 | 59 | 60 | 61 => {
    |                                          ^^ help: consider adding suffix: `42_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:55:1
   |
55 | pub const _NL_NAME_NAME_MRS: C2RustUnnamed = 524291;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:745:47
    |
745 |                 34 | 36 | 38 | 40 | 41 | 42 | 59 | 60 | 61 => {
    |                                               ^^ help: consider adding suffix: `59_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:56:1
   |
56 | pub const _NL_NAME_NAME_MR: C2RustUnnamed = 524290;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:745:52
    |
745 |                 34 | 36 | 38 | 40 | 41 | 42 | 59 | 60 | 61 => {
    |                                                    ^^ help: consider adding suffix: `60_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:57:1
   |
57 | pub const _NL_NAME_NAME_GEN: C2RustUnnamed = 524289;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:745:57
    |
745 |                 34 | 36 | 38 | 40 | 41 | 42 | 59 | 60 | 61 => {
    |                                                         ^^ help: consider adding suffix: `61_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:58:1
   |
58 | pub const _NL_NAME_NAME_FMT: C2RustUnnamed = 524288;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:748:17
    |
748 |                 62 | 91 | 94 => {
    |                 ^^ help: consider adding suffix: `62_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:59:1
   |
59 | pub const _NL_NUM_LC_PAPER: C2RustUnnamed = 458755;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:748:22
    |
748 |                 62 | 91 | 94 => {
    |                      ^^ help: consider adding suffix: `91_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:60:1
   |
60 | pub const _NL_PAPER_CODESET: C2RustUnnamed = 458754;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:748:27
    |
748 |                 62 | 91 | 94 => {
    |                           ^^ help: consider adding suffix: `94_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:61:1
   |
61 | pub const _NL_PAPER_WIDTH: C2RustUnnamed = 458753;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:751:17
    |
751 |                 96 | 124 => {
    |                 ^^ help: consider adding suffix: `96_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:62:1
   |
62 | pub const _NL_PAPER_HEIGHT: C2RustUnnamed = 458752;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:751:22
    |
751 |                 96 | 124 => {
    |                      ^^^ help: consider adding suffix: `124_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:754:17
    |
754 |                 39 => {
    |                 ^^ help: consider adding suffix: `39_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:63:1
   |
63 | pub const _NL_NUM_LC_MESSAGES: C2RustUnnamed = 327685;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:17
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                 ^^ help: consider adding suffix: `37_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:64:1
   |
64 | pub const _NL_MESSAGES_CODESET: C2RustUnnamed = 327684;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:65:1
   |
65 | pub const __NOSTR: C2RustUnnamed = 327683;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:22
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                      ^^ help: consider adding suffix: `43_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:66:1
   |
66 | pub const __YESSTR: C2RustUnnamed = 327682;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:27
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                           ^^ help: consider adding suffix: `44_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:67:1
   |
67 | pub const __NOEXPR: C2RustUnnamed = 327681;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:32
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                                ^^ help: consider adding suffix: `45_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:37
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                                     ^^ help: consider adding suffix: `46_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:68:1
   |
68 | pub const __YESEXPR: C2RustUnnamed = 327680;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:69:1
   |
69 | pub const _NL_NUM_LC_NUMERIC: C2RustUnnamed = 65542;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:42
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                                          ^^ help: consider adding suffix: `47_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:70:1
   |
70 | pub const _NL_NUMERIC_CODESET: C2RustUnnamed = 65541;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:47
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                                               ^^ help: consider adding suffix: `48_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:71:1
   |
71 | pub const _NL_NUMERIC_THOUSANDS_SEP_WC: C2RustUnnamed = 65540;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:52
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                                                    ^^ help: consider adding suffix: `49_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:57
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                                                         ^^ help: consider adding suffix: `50_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:72:1
   |
72 | pub const _NL_NUMERIC_DECIMAL_POINT_WC: C2RustUnnamed = 65539;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:62
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                                                              ^^ help: consider adding suffix: `51_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:73:1
   |
73 | pub const __GROUPING: C2RustUnnamed = 65538;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:67
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                                                                   ^^ help: consider adding suffix: `52_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:74:1
   |
74 | pub const THOUSEP: C2RustUnnamed = 65537;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:75:1
   |
75 | pub const __THOUSANDS_SEP: C2RustUnnamed = 65537;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:72
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                                                                        ^^ help: consider adding suffix: `53_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:76:1
   |
76 | pub const RADIXCHAR: C2RustUnnamed = 65536;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:77
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                                                                             ^^ help: consider adding suffix: `54_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:77:1
   |
77 | pub const __DECIMAL_POINT: C2RustUnnamed = 65536;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:82
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                                                                                  ^^ help: consider adding suffix: `55_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:78:1
   |
78 | pub const _NL_NUM_LC_MONETARY: C2RustUnnamed = 262190;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:792:87
    |
792 |                 37 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56
    |                                                                                       ^^ help: consider adding suffix: `56_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:79:1
   |
79 | pub const _NL_MONETARY_CODESET: C2RustUnnamed = 262189;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:19
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                   ^^ help: consider adding suffix: `57_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:24
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                        ^^ help: consider adding suffix: `58_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:80:1
   |
80 | pub const _NL_MONETARY_THOUSANDS_SEP_WC: C2RustUnnamed = 262188;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:81:1
   |
81 | pub const _NL_MONETARY_DECIMAL_POINT_WC: C2RustUnnamed = 262187;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:29
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                             ^^ help: consider adding suffix: `65_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:82:1
   |
82 | pub const _NL_MONETARY_CONVERSION_RATE: C2RustUnnamed = 262186;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:34
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                                  ^^ help: consider adding suffix: `66_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:39
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                                       ^^ help: consider adding suffix: `67_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:83:1
   |
83 | pub const _NL_MONETARY_DUO_VALID_TO: C2RustUnnamed = 262185;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:44
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                                            ^^ help: consider adding suffix: `68_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:84:1
   |
84 | pub const _NL_MONETARY_DUO_VALID_FROM: C2RustUnnamed = 262184;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:85:1
   |
85 | pub const _NL_MONETARY_UNO_VALID_TO: C2RustUnnamed = 262183;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:49
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                                                 ^^ help: consider adding suffix: `69_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:86:1
   |
86 | pub const _NL_MONETARY_UNO_VALID_FROM: C2RustUnnamed = 262182;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:54
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                                                      ^^ help: consider adding suffix: `70_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:87:1
   |
87 | pub const _NL_MONETARY_DUO_INT_N_SIGN_POSN: C2RustUnnamed = 262181;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:59
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                                                           ^^ help: consider adding suffix: `71_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:88:1
   |
88 | pub const _NL_MONETARY_DUO_INT_P_SIGN_POSN: C2RustUnnamed = 262180;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:64
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                                                                ^^ help: consider adding suffix: `72_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:89:1
   |
89 | pub const _NL_MONETARY_DUO_N_SIGN_POSN: C2RustUnnamed = 262179;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:69
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                                                                     ^^ help: consider adding suffix: `73_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:90:1
   |
90 | pub const _NL_MONETARY_DUO_P_SIGN_POSN: C2RustUnnamed = 262178;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:74
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                                                                          ^^ help: consider adding suffix: `74_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:79
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                                                                               ^^ help: consider adding suffix: `75_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:91:1
   |
91 | pub const _NL_MONETARY_DUO_INT_N_SEP_BY_SPACE: C2RustUnnamed = 262177;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:92:1
   |
92 | pub const _NL_MONETARY_DUO_INT_N_CS_PRECEDES: C2RustUnnamed = 262176;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:793:84
    |
793 |                 | 57 | 58 | 65 | 66 | 67 | 68 | 69 | 70 | 71 | 72 | 73 | 74 | 75 | 76
    |                                                                                    ^^ help: consider adding suffix: `76_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:93:1
   |
93 | pub const _NL_MONETARY_DUO_INT_P_SEP_BY_SPACE: C2RustUnnamed = 262175;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:19
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                   ^^ help: consider adding suffix: `77_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:94:1
   |
94 | pub const _NL_MONETARY_DUO_INT_P_CS_PRECEDES: C2RustUnnamed = 262174;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:24
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                        ^^ help: consider adding suffix: `78_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:95:1
   |
95 | pub const _NL_MONETARY_DUO_N_SEP_BY_SPACE: C2RustUnnamed = 262173;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:29
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                             ^^ help: consider adding suffix: `79_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:96:1
   |
96 | pub const _NL_MONETARY_DUO_N_CS_PRECEDES: C2RustUnnamed = 262172;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:34
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                                  ^^ help: consider adding suffix: `80_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:97:1
   |
97 | pub const _NL_MONETARY_DUO_P_SEP_BY_SPACE: C2RustUnnamed = 262171;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:39
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                                       ^^ help: consider adding suffix: `81_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:98:1
   |
98 | pub const _NL_MONETARY_DUO_P_CS_PRECEDES: C2RustUnnamed = 262170;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:44
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                                            ^^ help: consider adding suffix: `82_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:99:1
   |
99 | pub const _NL_MONETARY_DUO_FRAC_DIGITS: C2RustUnnamed = 262169;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:49
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                                                 ^^ help: consider adding suffix: `83_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:54
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                                                      ^^ help: consider adding suffix: `84_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:100:1
    |
100 | pub const _NL_MONETARY_DUO_INT_FRAC_DIGITS: C2RustUnnamed = 262168;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:101:1
    |
101 | pub const _NL_MONETARY_DUO_CURRENCY_SYMBOL: C2RustUnnamed = 262167;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:59
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                                                           ^^ help: consider adding suffix: `85_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:102:1
    |
102 | pub const _NL_MONETARY_DUO_INT_CURR_SYMBOL: C2RustUnnamed = 262166;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:64
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                                                                ^^ help: consider adding suffix: `86_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:69
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                                                                     ^^ help: consider adding suffix: `87_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:103:1
    |
103 | pub const __INT_N_SIGN_POSN: C2RustUnnamed = 262165;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:74
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                                                                          ^^ help: consider adding suffix: `88_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:104:1
    |
104 | pub const __INT_P_SIGN_POSN: C2RustUnnamed = 262164;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:105:1
    |
105 | pub const __INT_N_SEP_BY_SPACE: C2RustUnnamed = 262163;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:79
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                                                                               ^^ help: consider adding suffix: `89_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:106:1
    |
106 | pub const __INT_N_CS_PRECEDES: C2RustUnnamed = 262162;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:794:84
    |
794 |                 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85 | 86 | 87 | 88 | 89 | 90
    |                                                                                    ^^ help: consider adding suffix: `90_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:19
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                   ^^ help: consider adding suffix: `93_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:107:1
    |
107 | pub const __INT_P_SEP_BY_SPACE: C2RustUnnamed = 262161;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:24
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                        ^^ help: consider adding suffix: `95_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:108:1
    |
108 | pub const __INT_P_CS_PRECEDES: C2RustUnnamed = 262160;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:29
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                             ^^ help: consider adding suffix: `97_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:109:1
    |
109 | pub const _NL_MONETARY_CRNCYSTR: C2RustUnnamed = 262159;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:110:1
    |
110 | pub const __N_SIGN_POSN: C2RustUnnamed = 262158;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:34
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                                  ^^ help: consider adding suffix: `98_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:111:1
    |
111 | pub const __P_SIGN_POSN: C2RustUnnamed = 262157;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:39
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                                       ^^ help: consider adding suffix: `99_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:44
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                                            ^^^ help: consider adding suffix: `100_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:112:1
    |
112 | pub const __N_SEP_BY_SPACE: C2RustUnnamed = 262156;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:113:1
    |
113 | pub const __N_CS_PRECEDES: C2RustUnnamed = 262155;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:50
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                                                  ^^^ help: consider adding suffix: `101_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:114:1
    |
114 | pub const __P_SEP_BY_SPACE: C2RustUnnamed = 262154;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:56
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                                                        ^^^ help: consider adding suffix: `102_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:115:1
    |
115 | pub const __P_CS_PRECEDES: C2RustUnnamed = 262153;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:62
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                                                              ^^^ help: consider adding suffix: `103_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:116:1
    |
116 | pub const __FRAC_DIGITS: C2RustUnnamed = 262152;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:68
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                                                                    ^^^ help: consider adding suffix: `104_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:117:1
    |
117 | pub const __INT_FRAC_DIGITS: C2RustUnnamed = 262151;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:74
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                                                                          ^^^ help: consider adding suffix: `105_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:118:1
    |
118 | pub const __NEGATIVE_SIGN: C2RustUnnamed = 262150;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:80
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                                                                                ^^^ help: consider adding suffix: `106_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:119:1
    |
119 | pub const __POSITIVE_SIGN: C2RustUnnamed = 262149;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:795:86
    |
795 |                 | 93 | 95 | 97 | 98 | 99 | 100 | 101 | 102 | 103 | 104 | 105 | 106 | 107
    |                                                                                      ^^^ help: consider adding suffix: `107_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:120:1
    |
120 | pub const __MON_GROUPING: C2RustUnnamed = 262148;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:796:19
    |
796 |                 | 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
    |                   ^^^ help: consider adding suffix: `108_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:121:1
    |
121 | pub const __MON_THOUSANDS_SEP: C2RustUnnamed = 262147;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:796:25
    |
796 |                 | 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
    |                         ^^^ help: consider adding suffix: `109_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:122:1
    |
122 | pub const __MON_DECIMAL_POINT: C2RustUnnamed = 262146;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:796:31
    |
796 |                 | 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
    |                               ^^^ help: consider adding suffix: `110_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:796:37
    |
796 |                 | 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
    |                                     ^^^ help: consider adding suffix: `111_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:123:1
    |
123 | pub const __CURRENCY_SYMBOL: C2RustUnnamed = 262145;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:796:43
    |
796 |                 | 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
    |                                           ^^^ help: consider adding suffix: `112_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:124:1
    |
124 | pub const __INT_CURR_SYMBOL: C2RustUnnamed = 262144;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:796:49
    |
796 |                 | 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
    |                                                 ^^^ help: consider adding suffix: `113_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:125:1
    |
125 | pub const _NL_NUM_LC_CTYPE: C2RustUnnamed = 86;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:796:55
    |
796 |                 | 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
    |                                                       ^^^ help: consider adding suffix: `114_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:126:1
    |
126 | pub const _NL_CTYPE_EXTRA_MAP_14: C2RustUnnamed = 85;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:796:61
    |
796 |                 | 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
    |                                                             ^^^ help: consider adding suffix: `115_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:127:1
    |
127 | pub const _NL_CTYPE_EXTRA_MAP_13: C2RustUnnamed = 84;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:128:1
    |
128 | pub const _NL_CTYPE_EXTRA_MAP_12: C2RustUnnamed = 83;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:796:67
    |
796 |                 | 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
    |                                                                   ^^^ help: consider adding suffix: `116_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:796:73
    |
796 |                 | 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
    |                                                                         ^^^ help: consider adding suffix: `117_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:129:1
    |
129 | pub const _NL_CTYPE_EXTRA_MAP_11: C2RustUnnamed = 82;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:130:1
    |
130 | pub const _NL_CTYPE_EXTRA_MAP_10: C2RustUnnamed = 81;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:796:79
    |
796 |                 | 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
    |                                                                               ^^^ help: consider adding suffix: `118_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:131:1
    |
131 | pub const _NL_CTYPE_EXTRA_MAP_9: C2RustUnnamed = 80;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:796:85
    |
796 |                 | 108 | 109 | 110 | 111 | 112 | 113 | 114 | 115 | 116 | 117 | 118 | 119
    |                                                                                     ^^^ help: consider adding suffix: `119_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:797:19
    |
797 |                 | 120 | 121 | 122 => {
    |                   ^^^ help: consider adding suffix: `120_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:132:1
    |
132 | pub const _NL_CTYPE_EXTRA_MAP_8: C2RustUnnamed = 79;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:133:1
    |
133 | pub const _NL_CTYPE_EXTRA_MAP_7: C2RustUnnamed = 78;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:797:25
    |
797 |                 | 120 | 121 | 122 => {
    |                         ^^^ help: consider adding suffix: `121_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:134:1
    |
134 | pub const _NL_CTYPE_EXTRA_MAP_6: C2RustUnnamed = 77;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:797:31
    |
797 |                 | 120 | 121 | 122 => {
    |                               ^^^ help: consider adding suffix: `122_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:798:48
    |
798 |                     c_and_shell_quote_compat = 1 as libc::c_int != 0;
    |                                                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:135:1
    |
135 | pub const _NL_CTYPE_EXTRA_MAP_5: C2RustUnnamed = 76;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:136:1
    |
136 | pub const _NL_CTYPE_EXTRA_MAP_4: C2RustUnnamed = 75;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:798:68
    |
798 |                     c_and_shell_quote_compat = 1 as libc::c_int != 0;
    |                                                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:137:1
    |
137 | pub const _NL_CTYPE_EXTRA_MAP_3: C2RustUnnamed = 74;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:805:29
    |
805 |                         m = 1 as libc::c_int as size_t;
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:138:1
    |
138 | pub const _NL_CTYPE_EXTRA_MAP_2: C2RustUnnamed = 73;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:809:32
    |
809 | ...                   != 0 as libc::c_int;
    |                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:816:29
    |
816 |                         m = 0 as libc::c_int as size_t;
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:139:1
    |
139 | pub const _NL_CTYPE_EXTRA_MAP_1: C2RustUnnamed = 72;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:140:1
    |
140 | pub const _NL_CTYPE_NONASCII_CASE: C2RustUnnamed = 71;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:817:37
    |
817 |                         printable = 1 as libc::c_int != 0;
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:817:57
    |
817 |                         printable = 1 as libc::c_int != 0;
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:141:1
    |
141 | pub const _NL_CTYPE_MAP_TO_NONASCII: C2RustUnnamed = 70;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:828:39
    |
828 |                         if !(bytes == 0 as libc::c_int as libc::c_ulong) {
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:142:1
    |
142 | pub const _NL_CTYPE_TRANSLIT_IGNORE: C2RustUnnamed = 69;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:143:1
    |
143 | pub const _NL_CTYPE_TRANSLIT_IGNORE_LEN: C2RustUnnamed = 68;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:829:43
    |
829 | ...                   if bytes == -(1 as libc::c_int) as size_t {
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:144:1
    |
144 | pub const _NL_CTYPE_TRANSLIT_DEFAULT_MISSING: C2RustUnnamed = 67;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:830:45
    |
830 | ...                   printable = 0 as libc::c_int != 0;
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:145:1
    |
145 | pub const _NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN: C2RustUnnamed = 66;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:830:65
    |
830 | ...                   printable = 0 as libc::c_int != 0;
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:146:1
    |
146 | pub const _NL_CTYPE_TRANSLIT_TO_TBL: C2RustUnnamed = 65;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:831:50
    |
831 | ...                   } else if bytes == -(2 as libc::c_int) as size_t {
    |                                            ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:147:1
    |
147 | pub const _NL_CTYPE_TRANSLIT_TO_IDX: C2RustUnnamed = 64;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:832:45
    |
832 | ...                   printable = 0 as libc::c_int != 0;
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:148:1
    |
148 | pub const _NL_CTYPE_TRANSLIT_FROM_TBL: C2RustUnnamed = 63;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:832:65
    |
832 | ...                   printable = 0 as libc::c_int != 0;
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:149:1
    |
149 | pub const _NL_CTYPE_TRANSLIT_FROM_IDX: C2RustUnnamed = 62;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:835:44
    |
835 | ...                   != 0
    |                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:150:1
    |
150 | pub const _NL_CTYPE_TRANSLIT_TAB_SIZE: C2RustUnnamed = 61;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:841:50
    |
841 | ...                   if '[' as i32 == 0x5b as libc::c_int
    |                                        ^^^^ help: consider adding suffix: `0x005b_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:151:1
    |
151 | pub const _NL_CTYPE_OUTDIGIT9_WC: C2RustUnnamed = 60;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:842:77
    |
842 | ...                   && elide_outer_quotes as libc::c_int != 0
    |                                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:152:1
    |
152 | pub const _NL_CTYPE_OUTDIGIT8_WC: C2RustUnnamed = 59;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:847:41
    |
847 | ...                   j = 1 as libc::c_int as size_t;
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:153:1
    |
153 | pub const _NL_CTYPE_OUTDIGIT7_WC: C2RustUnnamed = 58;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:853:45
    |
853 | ...                   91 | 92 | 94 | 96 | 124 => {
    |                       ^^ help: consider adding suffix: `91_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:154:1
    |
154 | pub const _NL_CTYPE_OUTDIGIT6_WC: C2RustUnnamed = 57;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:853:50
    |
853 | ...                   91 | 92 | 94 | 96 | 124 => {
    |                            ^^ help: consider adding suffix: `92_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:155:1
    |
155 | pub const _NL_CTYPE_OUTDIGIT5_WC: C2RustUnnamed = 56;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:853:55
    |
853 | ...                   91 | 92 | 94 | 96 | 124 => {
    |                                 ^^ help: consider adding suffix: `94_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:156:1
    |
156 | pub const _NL_CTYPE_OUTDIGIT4_WC: C2RustUnnamed = 55;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:853:60
    |
853 | ...                   91 | 92 | 94 | 96 | 124 => {
    |                                      ^^ help: consider adding suffix: `96_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:157:1
    |
157 | pub const _NL_CTYPE_OUTDIGIT3_WC: C2RustUnnamed = 54;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:853:65
    |
853 | ...                   91 | 92 | 94 | 96 | 124 => {
    |                                           ^^^ help: consider adding suffix: `124_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:158:1
    |
158 | pub const _NL_CTYPE_OUTDIGIT2_WC: C2RustUnnamed = 53;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:863:53
    |
863 | ...                   if c32isprint(w) == 0 {
    |                                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:159:1
    |
159 | pub const _NL_CTYPE_OUTDIGIT1_WC: C2RustUnnamed = 52;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:864:49
    |
864 | ...                   printable = 0 as libc::c_int != 0;
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:160:1
    |
160 | pub const _NL_CTYPE_OUTDIGIT0_WC: C2RustUnnamed = 51;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:864:69
    |
864 | ...                   printable = 0 as libc::c_int != 0;
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:161:1
    |
161 | pub const _NL_CTYPE_OUTDIGIT9_MB: C2RustUnnamed = 50;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:902:65
    |
902 |                 buffer_slice[len as usize] = ('0' as u8 + (c >> 6)) as i8; // Add first octet
    |                                                                 ^ help: consider adding suffix: `6_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:162:1
    |
162 | pub const _NL_CTYPE_OUTDIGIT8_MB: C2RustUnnamed = 49;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:163:1
    |
163 | pub const _NL_CTYPE_OUTDIGIT7_MB: C2RustUnnamed = 48;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:906:66
    |
906 |                 buffer_slice[len as usize] = ('0' as u8 + ((c >> 3) & 7)) as i8; // Add second octet
    |                                                                  ^ help: consider adding suffix: `3_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:164:1
    |
164 | pub const _NL_CTYPE_OUTDIGIT6_MB: C2RustUnnamed = 47;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:165:1
    |
165 | pub const _NL_CTYPE_OUTDIGIT5_MB: C2RustUnnamed = 46;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:947:29
    |
947 |                     if i != 0 as libc::c_int as libc::c_ulong {
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:956:65
    |
956 |                         && elide_outer_quotes as libc::c_int != 0
    |                                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:166:1
    |
166 | pub const _NL_CTYPE_OUTDIGIT4_MB: C2RustUnnamed = 45;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:167:1
    |
167 | pub const _NL_CTYPE_OUTDIGIT3_MB: C2RustUnnamed = 44;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:975:48
    |
975 |                     c_and_shell_quote_compat = 1 as libc::c_int != 0;
    |                                                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:168:1
    |
168 | pub const _NL_CTYPE_OUTDIGIT2_MB: C2RustUnnamed = 43;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:975:68
    |
975 |                     c_and_shell_quote_compat = 1 as libc::c_int != 0;
    |                                                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:169:1
    |
169 | pub const _NL_CTYPE_OUTDIGIT1_MB: C2RustUnnamed = 42;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1081:19
     |
1081 |         if len == 0 as libc::c_int as libc::c_ulong
     |                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:170:1
    |
170 | pub const _NL_CTYPE_OUTDIGIT0_MB: C2RustUnnamed = 41;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1084:53
     |
1084 |             && elide_outer_quotes as libc::c_int != 0
     |                                                     ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:171:1
    |
171 | pub const _NL_CTYPE_INDIGITS9_WC: C2RustUnnamed = 40;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1091:82
     |
1091 |             && !elide_outer_quotes && encountered_single_quote as libc::c_int != 0)
     |                                                                                  ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:172:1
    |
172 | pub const _NL_CTYPE_INDIGITS8_WC: C2RustUnnamed = 39;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1122:56
     |
1122 |                 && backslash_escapes as libc::c_int != 0
     |                                                        ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:173:1
    |
173 | pub const _NL_CTYPE_INDIGITS7_WC: C2RustUnnamed = 38;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:340:27
    |
340 |     let mut len: size_t = 0 as libc::c_int as size_t;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:174:1
    |
174 | pub const _NL_CTYPE_INDIGITS6_WC: C2RustUnnamed = 37;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:341:39
    |
341 |     let mut orig_buffersize: size_t = 0 as libc::c_int as size_t;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:175:1
    |
175 | pub const _NL_CTYPE_INDIGITS5_WC: C2RustUnnamed = 36;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `0 as *const _` detected
   --> src/quotearg.rs:342:49
    |
342 |     let mut quote_string: *const libc::c_char = 0 as *const libc::c_char;
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:176:1
    |
176 | pub const _NL_CTYPE_INDIGITS4_WC: C2RustUnnamed = 35;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:343:40
    |
343 |     let mut quote_string_len: size_t = 0 as libc::c_int as size_t;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:177:1
    |
177 | pub const _NL_CTYPE_INDIGITS3_WC: C2RustUnnamed = 34;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:346:12
    |
346 |         == 1 as libc::c_int as libc::c_ulong;
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:347:48
    |
347 |     let mut elide_outer_quotes: bool = flags & QA_ELIDE_OUTER_QUOTES as libc::c_int
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:178:1
    |
178 | pub const _NL_CTYPE_INDIGITS2_WC: C2RustUnnamed = 33;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:370:24
    |
370 |                     != custom_quoting_style as libc::c_int as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:179:1
    |
179 | pub const _NL_CTYPE_INDIGITS1_WC: C2RustUnnamed = 32;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:370:24
    |
370 |                     != custom_quoting_style as libc::c_int as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:180:1
    |
180 | pub const _NL_CTYPE_INDIGITS0_WC: C2RustUnnamed = 31;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:181:1
    |
181 | pub const _NL_CTYPE_INDIGITS_WC_LEN: C2RustUnnamed = 30;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `left_quote` shadows a previous, unrelated binding
   --> src/quotearg.rs:372:25
    |
372 |                     let left_quote = gettext_quote("`", quoting_style);
    |                         ^^^^^^^^^^
    |
    = note: `-W clippy::shadow-unrelated` implied by `-W clippy::restriction`
note: previous binding is here
   --> src/quotearg.rs:334:5
    |
334 |     mut left_quote: *const libc::c_char,
    |     ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: missing documentation for a constant
   --> src/localcharset.rs:182:1
    |
182 | pub const _NL_CTYPE_INDIGITS9_MB: C2RustUnnamed = 29;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `right_quote` shadows a previous, unrelated binding
   --> src/quotearg.rs:373:25
    |
373 |                     let right_quote = gettext_quote("'", quoting_style);
    |                         ^^^^^^^^^^^
    |
note: previous binding is here
   --> src/quotearg.rs:335:5
    |
335 |     mut right_quote: *const libc::c_char,
    |     ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: missing documentation for a constant
   --> src/localcharset.rs:183:1
    |
183 | pub const _NL_CTYPE_INDIGITS8_MB: C2RustUnnamed = 28;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:379:44
    |
379 | ...                   *buffer.offset(len as isize) = *quote_string;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:184:1
    |
184 | pub const _NL_CTYPE_INDIGITS7_MB: C2RustUnnamed = 27;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:379:44
    |
379 | ...                   *buffer.offset(len as isize) = *quote_string;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:185:1
    |
185 | pub const _NL_CTYPE_INDIGITS6_MB: C2RustUnnamed = 26;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:382:25
    |
382 |                         len;
    |                         ^^^^
    |
    = note: `-W clippy::no-effect` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:186:1
    |
186 | pub const _NL_CTYPE_INDIGITS5_MB: C2RustUnnamed = 25;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:384:25
    |
384 |                         quote_string;
    |                         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:187:1
    |
187 | pub const _NL_CTYPE_INDIGITS4_MB: C2RustUnnamed = 24;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:417:56
    |
417 |                         *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:188:1
    |
188 | pub const _NL_CTYPE_INDIGITS3_MB: C2RustUnnamed = 23;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:417:40
    |
417 |                         *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                        ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:189:1
    |
189 | pub const _NL_CTYPE_INDIGITS2_MB: C2RustUnnamed = 22;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:417:40
    |
417 |                         *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                        ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:190:1
    |
190 | pub const _NL_CTYPE_INDIGITS1_MB: C2RustUnnamed = 21;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:420:21
    |
420 |                     len;
    |                     ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:191:1
    |
191 | pub const _NL_CTYPE_INDIGITS0_MB: C2RustUnnamed = 20;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:423:32
    |
423 |                 quote_string = b"\"\0" as *const u8 as *const libc::c_char;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\"\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:192:1
    |
192 | pub const _NL_CTYPE_INDIGITS_MB_LEN: C2RustUnnamed = 19;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:424:36
    |
424 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:193:1
    |
193 | pub const _NL_CTYPE_MAP_OFFSET: C2RustUnnamed = 18;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:194:1
    |
194 | pub const _NL_CTYPE_CLASS_OFFSET: C2RustUnnamed = 17;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
   --> src/quotearg.rs:433:9
    |
433 | /         match current_block_48 {
434 | |             2266290538919981374 => {
435 | |                 if !elide_outer_quotes {
436 | |                     backslash_escapes = 1 as libc::c_int != 0;
...   |
440 | |             _ => {}
441 | |         }
    | |_________^
    |
    = note: `-W clippy::single-match` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
433 ~         if current_block_48 == 2266290538919981374 {
434 +             if !elide_outer_quotes {
435 +                 backslash_escapes = 1 as libc::c_int != 0;
436 +             }
437 +             current_block_48 = 14141891332124833771;
438 +         }
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:195:1
    |
195 | pub const _NL_CTYPE_TOLOWER32: C2RustUnnamed = 16;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
   --> src/quotearg.rs:442:9
    |
442 | /         match current_block_48 {
443 | |             14141891332124833771 => {
444 | |                 quoting_style = shell_always_quoting_style;
445 | |                 if !elide_outer_quotes {
...   |
455 | |             _ => {}
456 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
442 ~         if current_block_48 == 14141891332124833771 {
443 +             quoting_style = shell_always_quoting_style;
444 +             if !elide_outer_quotes {
445 +                 if len < buffersize {
446 +                     *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
447 +                 }
448 +                 len = len.wrapping_add(1);
449 +                 len;
450 +             }
451 +             quote_string = b"'\0" as *const u8 as *const libc::c_char;
452 +             quote_string_len = 1 as libc::c_int as size_t;
453 +         }
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:196:1
    |
196 | pub const _NL_CTYPE_TOUPPER32: C2RustUnnamed = 15;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:447:56
    |
447 |                         *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:197:1
    |
197 | pub const _NL_CTYPE_CODESET_NAME: C2RustUnnamed = 14;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:447:40
    |
447 |                         *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
    |                                        ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:198:1
    |
198 | pub const _NL_CTYPE_MB_CUR_MAX: C2RustUnnamed = 13;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:447:40
    |
447 |                         *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
    |                                        ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:199:1
    |
199 | pub const _NL_CTYPE_WIDTH: C2RustUnnamed = 12;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:450:21
    |
450 |                     len;
    |                     ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:200:1
    |
200 | pub const _NL_CTYPE_MAP_NAMES: C2RustUnnamed = 11;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:452:32
    |
452 |                 quote_string = b"'\0" as *const u8 as *const libc::c_char;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"'\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:201:1
    |
201 | pub const _NL_CTYPE_CLASS_NAMES: C2RustUnnamed = 10;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:453:36
    |
453 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:202:1
    |
202 | pub const _NL_CTYPE_GAP6: C2RustUnnamed = 9;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:457:13
    |
457 |         i = 0 as libc::c_int as size_t;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:203:1
    |
203 | pub const _NL_CTYPE_GAP5: C2RustUnnamed = 8;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/quotearg.rs:459:13
    |
459 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*arg.offset(i as isize) as libc::c_int == '\0' as i32)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:204:1
    |
204 | pub const _NL_CTYPE_GAP4: C2RustUnnamed = 7;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:459:14
    |
459 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*arg.offset(i as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:205:1
    |
205 | pub const _NL_CTYPE_GAP3: C2RustUnnamed = 6;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:459:26
    |
459 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |                          ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:206:1
    |
206 | pub const _NL_CTYPE_CLASS32: C2RustUnnamed = 5;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:459:26
    |
459 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |                          ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:207:1
    |
207 | pub const _NL_CTYPE_GAP2: C2RustUnnamed = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/quotearg.rs:461:13
    |
461 |             (i == argsize) as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(i == argsize)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:208:1
    |
208 | pub const _NL_CTYPE_TOLOWER: C2RustUnnamed = 3;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/quotearg.rs:469:16
    |
469 |             if backslash_escapes as libc::c_int != 0
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(backslash_escapes)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:209:1
    |
209 | pub const _NL_CTYPE_GAP1: C2RustUnnamed = 2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:471:24
    |
471 |                     != shell_always_quoting_style as libc::c_int as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:210:1
    |
210 | pub const _NL_CTYPE_TOUPPER: C2RustUnnamed = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:471:24
    |
471 |                     != shell_always_quoting_style as libc::c_int as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:211:1
    |
211 | pub const _NL_CTYPE_CLASS: C2RustUnnamed = 0;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: all if blocks contain the same code at the end
   --> src/quotearg.rs:480:21
    |
480 | /                         argsize
481 | |                     })
    | |_____________________^
    |
    = note: `-W clippy::branches-sharing-code` implied by `-W clippy::nursery`
    = note: the end suggestion probably needs some adjustments to use the expression result correctly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#branches_sharing_code
help: consider moving these statements after the if
    |
480 ~                     }
481 ~                     argsize)
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:212:1
    |
212 | pub const _NL_NUM_LC_COLLATE: C2RustUnnamed = 196627;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:475:28
    |
475 |                         && (1 as libc::c_int as libc::c_ulong) < quote_string_len
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:213:1
    |
213 | pub const _NL_COLLATE_CODESET: C2RustUnnamed = 196626;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:483:21
    |
483 |                     arg.offset(i as isize) as *const libc::c_void,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `arg.offset(i as isize).cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:214:1
    |
214 | pub const _NL_COLLATE_COLLSEQWC: C2RustUnnamed = 196625;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:215:1
    |
215 | pub const _NL_COLLATE_COLLSEQMB: C2RustUnnamed = 196624;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:483:32
    |
483 |                     arg.offset(i as isize) as *const libc::c_void,
    |                                ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:483:32
    |
483 |                     arg.offset(i as isize) as *const libc::c_void,
    |                                ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:216:1
    |
216 | pub const _NL_COLLATE_SYMB_EXTRAMB: C2RustUnnamed = 196623;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:217:1
    |
217 | pub const _NL_COLLATE_SYMB_TABLEMB: C2RustUnnamed = 196622;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:484:21
    |
484 |                     quote_string as *const libc::c_void,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `quote_string.cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:218:1
    |
218 | pub const _NL_COLLATE_SYMB_HASH_SIZEMB: C2RustUnnamed = 196621;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/quotearg.rs:494:17
    |
494 |             c = *arg.offset(i as isize) as libc::c_uchar;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:219:1
    |
219 | pub const _NL_COLLATE_INDIRECTWC: C2RustUnnamed = 196620;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:494:29
    |
494 |             c = *arg.offset(i as isize) as libc::c_uchar;
    |                             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:220:1
    |
220 | pub const _NL_COLLATE_EXTRAWC: C2RustUnnamed = 196619;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:494:29
    |
494 |             c = *arg.offset(i as isize) as libc::c_uchar;
    |                             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:221:1
    |
221 | pub const _NL_COLLATE_WEIGHTWC: C2RustUnnamed = 196618;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:495:19
    |
495 |             match c as libc::c_int {
    |                   ^^^^^^^^^^^^^^^^ help: try: `i32::from(c)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:222:1
    |
222 | pub const _NL_COLLATE_TABLEWC: C2RustUnnamed = 196617;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:505:13
    |
505 |             unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:223:1
    |
223 | pub const _NL_COLLATE_GAP3: C2RustUnnamed = 196616;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:505:53
    |
505 |             unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |                                                     ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:224:1
    |
224 | pub const _NL_COLLATE_GAP2: C2RustUnnamed = 196615;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:505:37
    |
505 |             unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:225:1
    |
225 | pub const _NL_COLLATE_GAP1: C2RustUnnamed = 196614;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:505:37
    |
505 |             unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:226:1
    |
226 | pub const _NL_COLLATE_INDIRECTMB: C2RustUnnamed = 196613;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:507:9
    |
507 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:227:1
    |
227 | pub const _NL_COLLATE_EXTRAMB: C2RustUnnamed = 196612;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:507:9
    |
507 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:228:1
    |
228 | pub const _NL_COLLATE_WEIGHTMB: C2RustUnnamed = 196611;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:509:13
    |
509 |             unsafe { *buffer.offset(len as isize) = b'$' as i8 }; // Add dollar sign
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:229:1
    |
229 | pub const _NL_COLLATE_TABLEMB: C2RustUnnamed = 196610;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:509:53
    |
509 |             unsafe { *buffer.offset(len as isize) = b'$' as i8 }; // Add dollar sign
    |                                                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:230:1
    |
230 | pub const _NL_COLLATE_RULESETS: C2RustUnnamed = 196609;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:509:37
    |
509 |             unsafe { *buffer.offset(len as isize) = b'$' as i8 }; // Add dollar sign
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:231:1
    |
231 | pub const _NL_COLLATE_NRULES: C2RustUnnamed = 196608;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:509:37
    |
509 |             unsafe { *buffer.offset(len as isize) = b'$' as i8 }; // Add dollar sign
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:232:1
    |
232 | pub const _NL_NUM_LC_TIME: C2RustUnnamed = 131231;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:511:9
    |
511 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:233:1
    |
233 | pub const _NL_WABALTMON_12: C2RustUnnamed = 131230;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:511:9
    |
511 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:234:1
    |
234 | pub const _NL_WABALTMON_11: C2RustUnnamed = 131229;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:513:13
    |
513 |             unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:235:1
    |
235 | pub const _NL_WABALTMON_10: C2RustUnnamed = 131228;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:513:53
    |
513 |             unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |                                                     ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:236:1
    |
236 | pub const _NL_WABALTMON_9: C2RustUnnamed = 131227;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:513:37
    |
513 |             unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:237:1
    |
237 | pub const _NL_WABALTMON_8: C2RustUnnamed = 131226;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:513:37
    |
513 |             unsafe { *buffer.offset(len as isize) = b'\'' as i8 }; // Add single quote
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:238:1
    |
238 | pub const _NL_WABALTMON_7: C2RustUnnamed = 131225;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:515:9
    |
515 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:239:1
    |
239 | pub const _NL_WABALTMON_6: C2RustUnnamed = 131224;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:515:9
    |
515 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:240:1
    |
240 | pub const _NL_WABALTMON_5: C2RustUnnamed = 131223;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:519:9
    |
519 |         unsafe { *buffer.offset(len as isize) = b'\\' as i8 }; // Add backslash
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:241:1
    |
241 | pub const _NL_WABALTMON_4: C2RustUnnamed = 131222;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:519:49
    |
519 |         unsafe { *buffer.offset(len as isize) = b'\\' as i8 }; // Add backslash
    |                                                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:242:1
    |
242 | pub const _NL_WABALTMON_3: C2RustUnnamed = 131221;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:519:33
    |
519 |         unsafe { *buffer.offset(len as isize) = b'\\' as i8 }; // Add backslash
    |                                 ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:243:1
    |
243 | pub const _NL_WABALTMON_2: C2RustUnnamed = 131220;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:519:33
    |
519 |         unsafe { *buffer.offset(len as isize) = b'\\' as i8 }; // Add backslash
    |                                 ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:244:1
    |
244 | pub const _NL_WABALTMON_1: C2RustUnnamed = 131219;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:521:5
    |
521 |     len += 1;
    |     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:245:1
    |
245 | pub const _NL_ABALTMON_12: C2RustUnnamed = 131218;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:521:5
    |
521 |     len += 1;
    |     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:246:1
    |
246 | pub const _NL_ABALTMON_11: C2RustUnnamed = 131217;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:524:12
    |
524 |         && i + 1 < argsize
    |            ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:247:1
    |
247 | pub const _NL_ABALTMON_10: C2RustUnnamed = 131216;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:524:12
    |
524 |         && i + 1 < argsize
    |            ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:248:1
    |
248 | pub const _NL_ABALTMON_9: C2RustUnnamed = 131215;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/quotearg.rs:525:12
    |
525 |         && (unsafe { *arg.offset((i + 1) as isize) } as u8).is_ascii_digit()
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:249:1
    |
249 | pub const _NL_ABALTMON_8: C2RustUnnamed = 131214;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:525:13
    |
525 |         && (unsafe { *arg.offset((i + 1) as isize) } as u8).is_ascii_digit()
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:250:1
    |
250 | pub const _NL_ABALTMON_7: C2RustUnnamed = 131213;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:251:1
    |
251 | pub const _NL_ABALTMON_6: C2RustUnnamed = 131212;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:525:34
    |
525 |         && (unsafe { *arg.offset((i + 1) as isize) } as u8).is_ascii_digit()
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:252:1
    |
252 | pub const _NL_ABALTMON_5: C2RustUnnamed = 131211;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:525:34
    |
525 |         && (unsafe { *arg.offset((i + 1) as isize) } as u8).is_ascii_digit()
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: arithmetic detected
   --> src/quotearg.rs:525:34
    |
525 |         && (unsafe { *arg.offset((i + 1) as isize) } as u8).is_ascii_digit()
    |                                  ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:253:1
    |
253 | pub const _NL_ABALTMON_4: C2RustUnnamed = 131210;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:525:34
    |
525 |         && (unsafe { *arg.offset((i + 1) as isize) } as u8).is_ascii_digit()
    |                                  ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:254:1
    |
254 | pub const _NL_ABALTMON_3: C2RustUnnamed = 131209;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:528:13
    |
528 |             unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:255:1
    |
255 | pub const _NL_ABALTMON_2: C2RustUnnamed = 131208;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:528:53
    |
528 |             unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |                                                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:256:1
    |
256 | pub const _NL_ABALTMON_1: C2RustUnnamed = 131207;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:528:37
    |
528 |             unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:257:1
    |
257 | pub const _NL_WALTMON_12: C2RustUnnamed = 131206;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:528:37
    |
528 |             unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:258:1
    |
258 | pub const _NL_WALTMON_11: C2RustUnnamed = 131205;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:530:9
    |
530 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:259:1
    |
259 | pub const _NL_WALTMON_10: C2RustUnnamed = 131204;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:530:9
    |
530 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:260:1
    |
260 | pub const _NL_WALTMON_9: C2RustUnnamed = 131203;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:532:13
    |
532 |             unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:261:1
    |
261 | pub const _NL_WALTMON_8: C2RustUnnamed = 131202;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:532:53
    |
532 |             unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |                                                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:262:1
    |
262 | pub const _NL_WALTMON_7: C2RustUnnamed = 131201;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:532:37
    |
532 |             unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:263:1
    |
263 | pub const _NL_WALTMON_6: C2RustUnnamed = 131200;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:532:37
    |
532 |             unsafe { *buffer.offset(len as isize) = b'0' as i8 }; // Add zero
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:264:1
    |
264 | pub const _NL_WALTMON_5: C2RustUnnamed = 131199;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:534:9
    |
534 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:265:1
    |
265 | pub const _NL_WALTMON_4: C2RustUnnamed = 131198;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:534:9
    |
534 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:266:1
    |
266 | pub const _NL_WALTMON_3: C2RustUnnamed = 131197;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:538:19
    |
538 | } else if flags & QA_ELIDE_NULL_BYTES as i32 != 0 {
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:267:1
    |
267 | pub const _NL_WALTMON_2: C2RustUnnamed = 131196;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:557:48
    |
557 | ...                   if flags & QA_SPLIT_TRIGRAPHS as libc::c_int != 0
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:268:1
    |
268 | pub const _NL_WALTMON_1: C2RustUnnamed = 131195;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:558:59
    |
558 | ...                   && i.wrapping_add(2 as libc::c_int as libc::c_ulong)
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:269:1
    |
269 | pub const __ALTMON_12: C2RustUnnamed = 131194;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:560:44
    |
560 |   ...                   && *arg
    |  __________________________^
561 | | ...                       .offset(
562 | | ...                           i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
563 | | ...                       ) as libc::c_int == '?' as i32
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
560 ~                                         && i32::from(*arg
561 +                                             .offset(
562 +                                                 i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
563 ~                                             )) == '?' as i32
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:270:1
    |
270 | pub const __ALTMON_11: C2RustUnnamed = 131193;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:562:49
    |
562 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:271:1
    |
271 | pub const __ALTMON_10: C2RustUnnamed = 131192;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:562:49
    |
562 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:272:1
    |
272 | pub const __ALTMON_9: C2RustUnnamed = 131191;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:562:64
    |
562 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:273:1
    |
273 | pub const __ALTMON_8: C2RustUnnamed = 131190;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:565:47
    |
565 |   ...                   match *arg
    |  _____________________________^
566 | | ...                       .offset(
567 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
568 | | ...                       ) as libc::c_int
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
565 ~                                         match i32::from(*arg
566 +                                             .offset(
567 +                                                 i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
568 +                                             ))
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:274:1
    |
274 | pub const __ALTMON_7: C2RustUnnamed = 131189;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:567:49
    |
567 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:275:1
    |
275 | pub const __ALTMON_6: C2RustUnnamed = 131188;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:567:49
    |
567 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:276:1
    |
276 | pub const __ALTMON_5: C2RustUnnamed = 131187;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:567:64
    |
567 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:277:1
    |
277 | pub const __ALTMON_4: C2RustUnnamed = 131186;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/quotearg.rs:575:53
    |
575 |   ...                   c = *arg
    |  ___________________________^
576 | | ...                       .offset(
577 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
578 | | ...                       ) as libc::c_uchar;
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:278:1
    |
278 | pub const __ALTMON_3: C2RustUnnamed = 131185;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:577:57
    |
577 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:279:1
    |
279 | pub const __ALTMON_2: C2RustUnnamed = 131184;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:577:57
    |
577 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:280:1
    |
280 | pub const __ALTMON_1: C2RustUnnamed = 131183;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:577:72
    |
577 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:580:67
    |
580 | ...                   .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:281:1
    |
281 | pub const _NL_TIME_CODESET: C2RustUnnamed = 131182;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:583:84
    |
583 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:282:1
    |
282 | pub const _NL_W_DATE_FMT: C2RustUnnamed = 131181;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:583:68
    |
583 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:283:1
    |
283 | pub const _DATE_FMT: C2RustUnnamed = 131180;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:284:1
    |
284 | pub const _NL_TIME_TIMEZONE: C2RustUnnamed = 131179;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:583:68
    |
583 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:285:1
    |
285 | pub const _NL_TIME_CAL_DIRECTION: C2RustUnnamed = 131178;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:586:49
    |
586 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:286:1
    |
286 | pub const _NL_TIME_FIRST_WORKDAY: C2RustUnnamed = 131177;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:588:84
    |
588 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:287:1
    |
287 | pub const _NL_TIME_FIRST_WEEKDAY: C2RustUnnamed = 131176;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:588:68
    |
588 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:288:1
    |
288 | pub const _NL_TIME_WEEK_1STWEEK: C2RustUnnamed = 131175;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:588:68
    |
588 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:289:1
    |
289 | pub const _NL_TIME_WEEK_1STDAY: C2RustUnnamed = 131174;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:591:49
    |
591 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:290:1
    |
290 | pub const _NL_TIME_WEEK_NDAYS: C2RustUnnamed = 131173;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:593:84
    |
593 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:291:1
    |
291 | pub const _NL_WERA_T_FMT: C2RustUnnamed = 131172;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:593:68
    |
593 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:593:68
    |
593 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:292:1
    |
292 | pub const _NL_WERA_D_T_FMT: C2RustUnnamed = 131171;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:596:49
    |
596 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:293:1
    |
293 | pub const _NL_WALT_DIGITS: C2RustUnnamed = 131170;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:598:84
    |
598 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:294:1
    |
294 | pub const _NL_WERA_D_FMT: C2RustUnnamed = 131169;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:295:1
    |
295 | pub const _NL_WERA_YEAR: C2RustUnnamed = 131168;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:598:68
    |
598 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:296:1
    |
296 | pub const _NL_WT_FMT_AMPM: C2RustUnnamed = 131167;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:598:68
    |
598 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:297:1
    |
297 | pub const _NL_WT_FMT: C2RustUnnamed = 131166;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:601:49
    |
601 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:298:1
    |
298 | pub const _NL_WD_FMT: C2RustUnnamed = 131165;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:620:48
    |
620 | ...                   if flags & QA_SPLIT_TRIGRAPHS as libc::c_int != 0
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:621:59
    |
621 | ...                   && i.wrapping_add(2 as libc::c_int as libc::c_ulong)
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:299:1
    |
299 | pub const _NL_WD_T_FMT: C2RustUnnamed = 131164;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:300:1
    |
300 | pub const _NL_WPM_STR: C2RustUnnamed = 131163;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:623:44
    |
623 |   ...                   && *arg
    |  __________________________^
624 | | ...                       .offset(
625 | | ...                           i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
626 | | ...                       ) as libc::c_int == '?' as i32
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
623 ~                                         && i32::from(*arg
624 +                                             .offset(
625 +                                                 i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
626 ~                                             )) == '?' as i32
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:301:1
    |
301 | pub const _NL_WAM_STR: C2RustUnnamed = 131162;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:625:49
    |
625 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:302:1
    |
302 | pub const _NL_WMON_12: C2RustUnnamed = 131161;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:625:49
    |
625 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:303:1
    |
303 | pub const _NL_WMON_11: C2RustUnnamed = 131160;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:625:64
    |
625 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:304:1
    |
304 | pub const _NL_WMON_10: C2RustUnnamed = 131159;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:628:47
    |
628 |   ...                   match *arg
    |  _____________________________^
629 | | ...                       .offset(
630 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
631 | | ...                       ) as libc::c_int
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
628 ~                                         match i32::from(*arg
629 +                                             .offset(
630 +                                                 i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
631 +                                             ))
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:305:1
    |
305 | pub const _NL_WMON_9: C2RustUnnamed = 131158;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:630:49
    |
630 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:306:1
    |
306 | pub const _NL_WMON_8: C2RustUnnamed = 131157;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:630:49
    |
630 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:630:64
    |
630 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:307:1
    |
307 | pub const _NL_WMON_7: C2RustUnnamed = 131156;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/quotearg.rs:638:53
    |
638 |   ...                   c = *arg
    |  ___________________________^
639 | | ...                       .offset(
640 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
641 | | ...                       ) as libc::c_uchar;
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:308:1
    |
308 | pub const _NL_WMON_6: C2RustUnnamed = 131155;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:640:57
    |
640 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:309:1
    |
309 | pub const _NL_WMON_5: C2RustUnnamed = 131154;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:640:57
    |
640 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:310:1
    |
310 | pub const _NL_WMON_4: C2RustUnnamed = 131153;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:640:72
    |
640 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:311:1
    |
311 | pub const _NL_WMON_3: C2RustUnnamed = 131152;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:643:67
    |
643 | ...                   .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:312:1
    |
312 | pub const _NL_WMON_2: C2RustUnnamed = 131151;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:646:84
    |
646 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:313:1
    |
313 | pub const _NL_WMON_1: C2RustUnnamed = 131150;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:646:68
    |
646 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:314:1
    |
314 | pub const _NL_WABMON_12: C2RustUnnamed = 131149;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:646:68
    |
646 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:315:1
    |
315 | pub const _NL_WABMON_11: C2RustUnnamed = 131148;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:649:49
    |
649 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:316:1
    |
316 | pub const _NL_WABMON_10: C2RustUnnamed = 131147;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:651:84
    |
651 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:317:1
    |
317 | pub const _NL_WABMON_9: C2RustUnnamed = 131146;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:651:68
    |
651 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:318:1
    |
318 | pub const _NL_WABMON_8: C2RustUnnamed = 131145;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:651:68
    |
651 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:319:1
    |
319 | pub const _NL_WABMON_7: C2RustUnnamed = 131144;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:654:49
    |
654 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:320:1
    |
320 | pub const _NL_WABMON_6: C2RustUnnamed = 131143;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:321:1
    |
321 | pub const _NL_WABMON_5: C2RustUnnamed = 131142;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:656:84
    |
656 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:322:1
    |
322 | pub const _NL_WABMON_4: C2RustUnnamed = 131141;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:656:68
    |
656 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:323:1
    |
323 | pub const _NL_WABMON_3: C2RustUnnamed = 131140;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:656:68
    |
656 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: statement with no effect
   --> src/quotearg.rs:659:49
    |
659 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:324:1
    |
324 | pub const _NL_WABMON_2: C2RustUnnamed = 131139;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:661:84
    |
661 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:325:1
    |
325 | pub const _NL_WABMON_1: C2RustUnnamed = 131138;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:661:68
    |
661 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:326:1
    |
326 | pub const _NL_WDAY_7: C2RustUnnamed = 131137;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:661:68
    |
661 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:327:1
    |
327 | pub const _NL_WDAY_6: C2RustUnnamed = 131136;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:664:49
    |
664 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:328:1
    |
328 | pub const _NL_WDAY_5: C2RustUnnamed = 131135;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may truncate the value
   --> src/quotearg.rs:679:27
    |
679 |                     esc = 'a' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:329:1
    |
329 | pub const _NL_WDAY_4: C2RustUnnamed = 131134;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may lose the sign of the value
   --> src/quotearg.rs:679:27
    |
679 |                     esc = 'a' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:330:1
    |
330 | pub const _NL_WDAY_3: C2RustUnnamed = 131133;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may truncate the value
   --> src/quotearg.rs:683:27
    |
683 |                     esc = 'b' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:331:1
    |
331 | pub const _NL_WDAY_2: C2RustUnnamed = 131132;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may lose the sign of the value
   --> src/quotearg.rs:683:27
    |
683 |                     esc = 'b' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:332:1
    |
332 | pub const _NL_WDAY_1: C2RustUnnamed = 131131;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:333:1
    |
333 | pub const _NL_WABDAY_7: C2RustUnnamed = 131130;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may truncate the value
   --> src/quotearg.rs:687:27
    |
687 |                     esc = 'f' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:334:1
    |
334 | pub const _NL_WABDAY_6: C2RustUnnamed = 131129;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may lose the sign of the value
   --> src/quotearg.rs:687:27
    |
687 |                     esc = 'f' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u8` may truncate the value
   --> src/quotearg.rs:691:27
    |
691 |                     esc = 'n' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:335:1
    |
335 | pub const _NL_WABDAY_5: C2RustUnnamed = 131128;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may lose the sign of the value
   --> src/quotearg.rs:691:27
    |
691 |                     esc = 'n' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:336:1
    |
336 | pub const _NL_WABDAY_4: C2RustUnnamed = 131127;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may truncate the value
   --> src/quotearg.rs:695:27
    |
695 |                     esc = 'r' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:337:1
    |
337 | pub const _NL_WABDAY_3: C2RustUnnamed = 131126;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:338:1
    |
338 | pub const _NL_WABDAY_2: C2RustUnnamed = 131125;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may lose the sign of the value
   --> src/quotearg.rs:695:27
    |
695 |                     esc = 'r' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u8` may truncate the value
   --> src/quotearg.rs:699:27
    |
699 |                     esc = 't' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:339:1
    |
339 | pub const _NL_WABDAY_1: C2RustUnnamed = 131124;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may lose the sign of the value
   --> src/quotearg.rs:699:27
    |
699 |                     esc = 't' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:340:1
    |
340 | pub const _NL_TIME_ERA_ENTRIES: C2RustUnnamed = 131123;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may truncate the value
   --> src/quotearg.rs:703:27
    |
703 |                     esc = 'v' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:341:1
    |
341 | pub const _NL_TIME_ERA_NUM_ENTRIES: C2RustUnnamed = 131122;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may lose the sign of the value
   --> src/quotearg.rs:703:27
    |
703 |                     esc = 'v' as i32 as libc::c_uchar;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:342:1
    |
342 | pub const ERA_T_FMT: C2RustUnnamed = 131121;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:723:21
    |
723 |     let arg_slice = unsafe { std::ffi::CStr::from_ptr(arg) };
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:343:1
    |
343 | pub const ERA_D_T_FMT: C2RustUnnamed = 131120;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:723:30
    |
723 |     let arg_slice = unsafe { std::ffi::CStr::from_ptr(arg) };
    |                              ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a constant
   --> src/localcharset.rs:344:1
    |
344 | pub const ALT_DIGITS: C2RustUnnamed = 131119;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/quotearg.rs:724:52
    |
724 |     arg_slice.to_bytes().get(1).map_or(false, |&b| b == 0)
    |                                                    ^^^^^^ help: add `return` as shown: `return b == 0`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a constant
   --> src/localcharset.rs:345:1
    |
345 | pub const ERA_D_FMT: C2RustUnnamed = 131118;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:346:1
    |
346 | pub const __ERA_YEAR: C2RustUnnamed = 131117;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary boolean `not` operation
   --> src/quotearg.rs:729:17
    |
729 |   current_block = if !new_current_block {
    |  _________________^
730 | |     253337042034819032
731 | | } else {
732 | |     16442922512115311366
733 | | };
    | |_^
    |
    = help: remove the `!` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a constant
   --> src/localcharset.rs:347:1
    |
347 | pub const ERA: C2RustUnnamed = 131116;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `mut encountered_single_quote` shadows a previous, unrelated binding
   --> src/quotearg.rs:755:29
    |
755 |                     let mut encountered_single_quote = true;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: previous binding is here
   --> src/quotearg.rs:349:9
    |
349 |     let mut encountered_single_quote: bool = 0 as libc::c_int != 0;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: missing documentation for a constant
   --> src/localcharset.rs:348:1
    |
348 | pub const T_FMT_AMPM: C2RustUnnamed = 131115;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `mut c_and_shell_quote_compat` shadows a previous, unrelated binding
   --> src/quotearg.rs:756:9
    |
756 | let mut c_and_shell_quote_compat = true;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: previous binding is here
   --> src/quotearg.rs:468:17
    |
468 |             let mut c_and_shell_quote_compat: bool = 0 as libc::c_int != 0;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: missing documentation for a constant
   --> src/localcharset.rs:349:1
    |
349 | pub const T_FMT: C2RustUnnamed = 131114;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: all if blocks contain the same code at the end
   --> src/quotearg.rs:788:1
    |
788 | /     current_block = 253337042034819032;
789 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#branches_sharing_code
help: consider moving these statements after the if
    |
788 + }
789 + current_block = 253337042034819032;
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:350:1
    |
350 | pub const D_FMT: C2RustUnnamed = 131113;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:768:9
    |
768 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:351:1
    |
351 | pub const D_T_FMT: C2RustUnnamed = 131112;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:769:28
    |
769 |             *buffer.offset(len as isize) = '\'' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:769:28
    |
769 |             *buffer.offset(len as isize) = '\'' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:352:1
    |
352 | pub const PM_STR: C2RustUnnamed = 131111;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:774:9
    |
774 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:353:1
    |
353 | pub const AM_STR: C2RustUnnamed = 131110;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:354:1
    |
354 | pub const MON_12: C2RustUnnamed = 131109;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:775:28
    |
775 |             *buffer.offset(len as isize) = '\\' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:355:1
    |
355 | pub const MON_11: C2RustUnnamed = 131108;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:775:28
    |
775 |             *buffer.offset(len as isize) = '\\' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:780:9
    |
780 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:356:1
    |
356 | pub const MON_10: C2RustUnnamed = 131107;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:781:28
    |
781 |             *buffer.offset(len as isize) = '\'' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:357:1
    |
357 | pub const MON_9: C2RustUnnamed = 131106;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:781:28
    |
781 |             *buffer.offset(len as isize) = '\'' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:358:1
    |
358 | pub const MON_8: C2RustUnnamed = 131105;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `if _ { .. } else { .. }` is an expression
   --> src/quotearg.rs:803:21
    |
803 | /                     let mut printable: bool = false;
804 | |                     if unibyte_locale {
805 | |                         m = 1 as libc::c_int as size_t;
806 | |                         printable = *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
...   |
869 | |                         }
870 | |                     }
    | |_____________________^
    |
    = note: `-W clippy::useless-let-if-seq` implied by `-W clippy::nursery`
    = note: you might not need `mut` at all
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_let_if_seq
help: it is more idiomatic to write
    |
803 ~                     let <mut> printable = if unibyte_locale { ..; *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
804 +                             as libc::c_int
805 +                             & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
806 +                             != 0 as libc::c_int } else { ..; false };
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:359:1
    |
359 | pub const MON_7: C2RustUnnamed = 131104;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:805:29
    |
805 |                         m = 1 as libc::c_int as size_t;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:360:1
    |
360 | pub const MON_6: C2RustUnnamed = 131103;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u16` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:806:37
    |
806 |                           printable = *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
    |  _____________________________________^
807 | |                             as libc::c_int
    | |__________________________________________^ help: try: `i32::from(*(*__ctype_b_loc()).offset(c as libc::c_int as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:361:1
    |
361 | pub const MON_5: C2RustUnnamed = 131102;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:806:64
    |
806 |                         printable = *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
    |                                                                ^^^^^^^^^^^^^^^^ help: try: `i32::from(c)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:362:1
    |
362 | pub const MON_4: C2RustUnnamed = 131101;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:363:1
    |
363 | pub const MON_3: C2RustUnnamed = 131100;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u16` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:808:31
    |
808 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(_ISprint as libc::c_int as libc::c_ushort)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:364:1
    |
364 | pub const MON_2: C2RustUnnamed = 131099;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u16` may truncate the value
   --> src/quotearg.rs:808:31
    |
808 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:365:1
    |
365 | pub const MON_1: C2RustUnnamed = 131098;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u16` may lose the sign of the value
   --> src/quotearg.rs:808:31
    |
808 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:366:1
    |
366 | pub const ABMON_12: C2RustUnnamed = 131097;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:808:31
    |
808 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:816:29
    |
816 |                         m = 0 as libc::c_int as size_t;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:367:1
    |
367 | pub const ABMON_11: C2RustUnnamed = 131096;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:368:1
    |
368 | pub const ABMON_10: C2RustUnnamed = 131095;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:824:42
    |
824 | ...                   &*arg.offset(i.wrapping_add(m) as isize),
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:824:42
    |
824 | ...                   &*arg.offset(i.wrapping_add(m) as isize),
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:369:1
    |
369 | pub const ABMON_9: C2RustUnnamed = 131094;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:370:1
    |
370 | pub const ABMON_8: C2RustUnnamed = 131093;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:828:39
    |
828 |                         if !(bytes == 0 as libc::c_int as libc::c_ulong) {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:371:1
    |
371 | pub const ABMON_7: C2RustUnnamed = 131092;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:829:41
    |
829 | ...                   if bytes == -(1 as libc::c_int) as size_t {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:372:1
    |
372 | pub const ABMON_6: C2RustUnnamed = 131091;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:829:41
    |
829 | ...                   if bytes == -(1 as libc::c_int) as size_t {
    |                                   ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:373:1
    |
373 | pub const ABMON_5: C2RustUnnamed = 131090;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:829:41
    |
829 | ...                   if bytes == -(1 as libc::c_int) as size_t {
    |                                   ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:374:1
    |
374 | pub const ABMON_4: C2RustUnnamed = 131089;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:831:48
    |
831 | ...                   } else if bytes == -(2 as libc::c_int) as size_t {
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
   --> src/quotearg.rs:831:48
    |
831 | ...                   } else if bytes == -(2 as libc::c_int) as size_t {
    |                                          ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:375:1
    |
375 | pub const ABMON_3: C2RustUnnamed = 131088;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:831:48
    |
831 | ...                   } else if bytes == -(2 as libc::c_int) as size_t {
    |                                          ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:376:1
    |
376 | pub const ABMON_2: C2RustUnnamed = 131087;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:834:40
    |
834 | ...                   && *arg.offset(i.wrapping_add(m) as isize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*arg.offset(i.wrapping_add(m) as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:377:1
    |
377 | pub const ABMON_1: C2RustUnnamed = 131086;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:834:52
    |
834 | ...                   && *arg.offset(i.wrapping_add(m) as isize) as libc::c_int
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:378:1
    |
378 | pub const DAY_7: C2RustUnnamed = 131085;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:834:52
    |
834 | ...                   && *arg.offset(i.wrapping_add(m) as isize) as libc::c_int
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:379:1
    |
379 | pub const DAY_6: C2RustUnnamed = 131084;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:838:37
    |
838 | ...                   m;
    |                       ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:380:1
    |
380 | pub const DAY_5: C2RustUnnamed = 131083;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/quotearg.rs:842:40
    |
842 | ...                   && elide_outer_quotes as libc::c_int != 0
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(elide_outer_quotes)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:381:1
    |
381 | pub const DAY_4: C2RustUnnamed = 131082;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:844:44
    |
844 | ...                   == shell_always_quoting_style as libc::c_int as libc::c_uint
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:382:1
    |
382 | pub const DAY_3: C2RustUnnamed = 131081;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:844:44
    |
844 | ...                   == shell_always_quoting_style as libc::c_int as libc::c_uint
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:383:1
    |
383 | pub const DAY_2: C2RustUnnamed = 131080;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:384:1
    |
384 | pub const DAY_1: C2RustUnnamed = 131079;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:847:41
    |
847 | ...                   j = 1 as libc::c_int as size_t;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:385:1
    |
385 | pub const ABDAY_7: C2RustUnnamed = 131078;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:849:47
    |
849 |   ...                   match *arg
    |  _____________________________^
850 | | ...                       .offset(i.wrapping_add(m).wrapping_add(j) as isize)
851 | | ...                       as libc::c_int
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
849 ~                                         match i32::from(*arg
850 +                                             .offset(i.wrapping_add(m).wrapping_add(j) as isize))
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:386:1
    |
386 | pub const ABDAY_6: C2RustUnnamed = 131077;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:850:53
    |
850 | ...                   .offset(i.wrapping_add(m).wrapping_add(j) as isize)
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:387:1
    |
387 | pub const ABDAY_5: C2RustUnnamed = 131076;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:850:53
    |
850 | ...                   .offset(i.wrapping_add(m).wrapping_add(j) as isize)
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: statement with no effect
   --> src/quotearg.rs:860:41
    |
860 | ...                   j;
    |                       ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:388:1
    |
388 | pub const ABDAY_4: C2RustUnnamed = 131075;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:874:24
    |
874 |     let buffer_slice = unsafe { std::slice::from_raw_parts_mut(buffer, buffersize as usize) };
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:389:1
    |
389 | pub const ABDAY_3: C2RustUnnamed = 131074;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:874:33
    |
874 |     let buffer_slice = unsafe { std::slice::from_raw_parts_mut(buffer, buffersize as usize) };
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a constant
   --> src/localcharset.rs:390:1
    |
390 | pub const ABDAY_2: C2RustUnnamed = 131073;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:874:72
    |
874 |     let buffer_slice = unsafe { std::slice::from_raw_parts_mut(buffer, buffersize as usize) };
    |                                                                        ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:391:1
    |
391 | pub const ABDAY_1: C2RustUnnamed = 131072;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:884:50
    |
884 |                     buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                                                  ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a function
   --> src/localcharset.rs:393:1
    |
393 | / pub fn locale_charset() -> String {
394 | |     let codeset_ptr: *const libc::c_char = unsafe { nl_langinfo(CODESET as libc::c_int) };
395 | |     let codeset = unsafe { CStr::from_ptr(codeset_ptr) };
396 | |     
...   |
401 | |     codeset.to_string_lossy().into_owned()
402 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:884:21
    |
884 |                     buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing `#[inline]` for a function
   --> src/localcharset.rs:393:1
    |
393 | / pub fn locale_charset() -> String {
394 | |     let codeset_ptr: *const libc::c_char = unsafe { nl_langinfo(CODESET as libc::c_int) };
395 | |     let codeset = unsafe { CStr::from_ptr(codeset_ptr) };
396 | |     
...   |
401 | |     codeset.to_string_lossy().into_owned()
402 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:884:34
    |
884 |                     buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                                  ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: arithmetic detected
   --> src/quotearg.rs:886:17
    |
886 |                 len += 1;
    |                 ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:886:17
    |
886 |                 len += 1;
    |                 ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:888:50
    |
888 |                     buffer_slice[len as usize] = b'$' as i8; // Add dollar sign
    |                                                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: indexing may panic
   --> src/quotearg.rs:888:21
    |
888 |                     buffer_slice[len as usize] = b'$' as i8; // Add dollar sign
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a module
  --> lib.rs:27:1
   |
27 | pub mod mbrtoc32;
   | ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:888:34
    |
888 |                     buffer_slice[len as usize] = b'$' as i8; // Add dollar sign
    |                                  ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a type alias
  --> src/mbrtoc32.rs:19:1
   |
19 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:890:17
    |
890 |                 len += 1;
    |                 ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a type alias
  --> src/mbrtoc32.rs:20:1
   |
20 | pub type __uint32_t = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:890:17
    |
890 |                 len += 1;
    |                 ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a type alias
  --> src/mbrtoc32.rs:21:1
   |
21 | pub type __uint_least32_t = __uint32_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:892:50
    |
892 |                     buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                                                  ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a struct
  --> src/mbrtoc32.rs:24:1
   |
24 | / pub struct __mbstate_t {
25 | |     pub __count: libc::c_int,
26 | |     pub __value: C2RustUnnamed,
27 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:892:21
    |
892 |                     buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:892:34
    |
892 |                     buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                                  ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a struct field
  --> src/mbrtoc32.rs:25:5
   |
25 |     pub __count: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:894:17
    |
894 |                 len += 1;
    |                 ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/mbrtoc32.rs:26:5
   |
26 |     pub __value: C2RustUnnamed,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:894:17
    |
894 |                 len += 1;
    |                 ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a union
  --> src/mbrtoc32.rs:30:1
   |
30 | / pub union C2RustUnnamed {
31 | |     pub __wch: libc::c_uint,
32 | |     pub __wchb: [libc::c_char; 4],
33 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:898:46
    |
898 |                 buffer_slice[len as usize] = b'\\' as i8; // Add backslash
    |                                              ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a struct field
  --> src/mbrtoc32.rs:31:5
   |
31 |     pub __wch: libc::c_uint,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:898:17
    |
898 |                 buffer_slice[len as usize] = b'\\' as i8; // Add backslash
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a struct field
  --> src/mbrtoc32.rs:32:5
   |
32 |     pub __wchb: [libc::c_char; 4],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:898:30
    |
898 |                 buffer_slice[len as usize] = b'\\' as i8; // Add backslash
    |                              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a type alias
  --> src/mbrtoc32.rs:34:1
   |
34 | pub type mbstate_t = __mbstate_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:900:13
    |
900 |             len += 1;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a type alias
  --> src/mbrtoc32.rs:35:1
   |
35 | pub type char32_t = __uint_least32_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:900:13
    |
900 |             len += 1;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
  --> src/mbrtoc32.rs:37:1
   |
37 | / fn mbszero(ps: &mut mbstate_t) {
38 | |     let size = std::mem::size_of::<mbstate_t>();
39 | |     let bytes: &mut [u8] = unsafe { std::slice::from_raw_parts_mut(ps as *mut _ as *mut u8, size) };
40 | |     bytes.fill(0);
41 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:902:46
    |
902 |                 buffer_slice[len as usize] = ('0' as u8 + (c >> 6)) as i8; // Add first octet
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: arithmetic detected
   --> src/quotearg.rs:902:46
    |
902 |                 buffer_slice[len as usize] = ('0' as u8 + (c >> 6)) as i8; // Add first octet
    |                                              ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:902:46
    |
902 |                 buffer_slice[len as usize] = ('0' as u8 + (c >> 6)) as i8; // Add first octet
    |                                              ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting a character literal to `u8` truncates
   --> src/quotearg.rs:902:47
    |
902 |                 buffer_slice[len as usize] = ('0' as u8 + (c >> 6)) as i8; // Add first octet
    |                                               ^^^^^^^^^ help: use a byte literal instead: `b'0'`
    |
    = note: `-W clippy::char-lit-as-u8` implied by `-W clippy::all`
    = note: `char` is four bytes wide, but `u8` is a single byte
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8

warning: indexing may panic
   --> src/quotearg.rs:902:17
    |
902 |                 buffer_slice[len as usize] = ('0' as u8 + (c >> 6)) as i8; // Add first octet
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a static
  --> src/mbrtoc32.rs:43:1
   |
43 | / static mut internal_state: mbstate_t = mbstate_t {
44 | |     __count: 0,
45 | |     __value: C2RustUnnamed { __wch: 0 },
46 | | };
   | |__^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:902:30
    |
902 |                 buffer_slice[len as usize] = ('0' as u8 + (c >> 6)) as i8; // Add first octet
    |                              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: arithmetic detected
   --> src/quotearg.rs:904:13
    |
904 |             len += 1;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:904:13
    |
904 |             len += 1;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
  --> src/mbrtoc32.rs:48:1
   |
48 | / pub unsafe extern "C" fn rpl_mbrtoc32(
49 | |     mut pwc: *mut char32_t,
50 | |     mut s: *const libc::c_char,
51 | |     mut n: size_t,
...  |
77 | |     return ret;
78 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:906:46
    |
906 |                 buffer_slice[len as usize] = ('0' as u8 + ((c >> 3) & 7)) as i8; // Add second octet
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing `#[inline]` for a function
  --> src/mbrtoc32.rs:48:1
   |
48 | / pub unsafe extern "C" fn rpl_mbrtoc32(
49 | |     mut pwc: *mut char32_t,
50 | |     mut s: *const libc::c_char,
51 | |     mut n: size_t,
...  |
77 | |     return ret;
78 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: arithmetic detected
   --> src/quotearg.rs:906:46
    |
906 |                 buffer_slice[len as usize] = ('0' as u8 + ((c >> 3) & 7)) as i8; // Add second octet
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:906:46
    |
906 |                 buffer_slice[len as usize] = ('0' as u8 + ((c >> 3) & 7)) as i8; // Add second octet
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting a character literal to `u8` truncates
   --> src/quotearg.rs:906:47
    |
906 |                 buffer_slice[len as usize] = ('0' as u8 + ((c >> 3) & 7)) as i8; // Add second octet
    |                                               ^^^^^^^^^ help: use a byte literal instead: `b'0'`
    |
    = note: `char` is four bytes wide, but `u8` is a single byte
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8

warning: indexing may panic
   --> src/quotearg.rs:906:17
    |
906 |                 buffer_slice[len as usize] = ('0' as u8 + ((c >> 3) & 7)) as i8; // Add second octet
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:906:30
    |
906 |                 buffer_slice[len as usize] = ('0' as u8 + ((c >> 3) & 7)) as i8; // Add second octet
    |                              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: arithmetic detected
   --> src/quotearg.rs:908:13
    |
908 |             len += 1;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:908:13
    |
908 |             len += 1;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/quotearg.rs:909:17
    |
909 |             c = ('0' as u8 + (c & 7)) as u8; // Update c to last octet
    |                 ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:909:17
    |
909 |             c = ('0' as u8 + (c & 7)) as u8; // Update c to last octet
    |                 ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting a character literal to `u8` truncates
   --> src/quotearg.rs:909:18
    |
909 |             c = ('0' as u8 + (c & 7)) as u8; // Update c to last octet
    |                  ^^^^^^^^^ help: use a byte literal instead: `b'0'`
    |
    = note: `char` is four bytes wide, but `u8` is a single byte
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:912:46
    |
912 |                 buffer_slice[len as usize] = b'\\' as i8; // Add backslash
    |                                              ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: indexing may panic
   --> src/quotearg.rs:912:17
    |
912 |                 buffer_slice[len as usize] = b'\\' as i8; // Add backslash
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:912:30
    |
912 |                 buffer_slice[len as usize] = b'\\' as i8; // Add backslash
    |                              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: arithmetic detected
   --> src/quotearg.rs:914:13
    |
914 |             len += 1;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:914:13
    |
914 |             len += 1;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:922:46
    |
922 |                 buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                                              ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: indexing may panic
   --> src/quotearg.rs:922:17
    |
922 |                 buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:922:30
    |
922 |                 buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: arithmetic detected
   --> src/quotearg.rs:924:13
    |
924 |             len += 1;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:924:13
    |
924 |             len += 1;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:926:46
    |
926 |                 buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                                              ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: indexing may panic
   --> src/quotearg.rs:926:17
    |
926 |                 buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:926:30
    |
926 |                 buffer_slice[len as usize] = b'\'' as i8; // Add single quote
    |                              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: arithmetic detected
   --> src/quotearg.rs:928:13
    |
928 |             len += 1;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:928:13
    |
928 |             len += 1;
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:932:42
    |
932 |             buffer_slice[len as usize] = c as i8; // Add current character
    |                                          ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a module
  --> lib.rs:28:1
   |
28 | pub mod mbszero;
   | ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:932:13
    |
932 |             buffer_slice[len as usize] = c as i8; // Add current character
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:932:26
    |
932 |             buffer_slice[len as usize] = c as i8; // Add current character
    |                          ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a struct
  --> src/mbszero.rs:13:1
   |
13 | / pub struct __mbstate_t {
14 | |     pub __count: libc::c_int,
15 | |     pub __value: C2RustUnnamed,
16 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:934:9
    |
934 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/quotearg.rs:934:9
    |
934 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/mbszero.rs:14:5
   |
14 |     pub __count: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:935:9
    |
935 |         i += 1;
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/mbszero.rs:15:5
   |
15 |     pub __value: C2RustUnnamed,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:935:9
    |
935 |         i += 1;
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a union
  --> src/mbszero.rs:19:1
   |
19 | / pub union C2RustUnnamed {
20 | |     pub __wch: libc::c_uint,
21 | |     pub __wchb: [libc::c_char; 4],
22 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/quotearg.rs:936:13
    |
936 |         c = *arg.offset(i as isize) as u8; // Update c to next character
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/mbszero.rs:20:5
   |
20 |     pub __wch: libc::c_uint,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:936:25
    |
936 |         c = *arg.offset(i as isize) as u8; // Update c to next character
    |                         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a struct field
  --> src/mbszero.rs:21:5
   |
21 |     pub __wchb: [libc::c_char; 4],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:936:25
    |
936 |         c = *arg.offset(i as isize) as u8; // Update c to next character
    |                         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a type alias
  --> src/mbszero.rs:23:1
   |
23 | pub type mbstate_t = __mbstate_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/quotearg.rs:947:21
    |
947 | /                     if i != 0 as libc::c_int as libc::c_ulong {
948 | |                         current_block = 253337042034819032;
949 | |                     } else {
950 | |                         current_block = 4634307283396172174;
951 | |                     }
    | |_____________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:947:29
    |
947 |                     if i != 0 as libc::c_int as libc::c_ulong {
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a function
  --> src/mbszero.rs:27:1
   |
27 | / pub fn mbszero(ps: &mut mbstate_t) {
28 | |     *ps = mbstate_t {
29 | |         __count: 0,
30 | |         __value: unsafe { std::mem::zeroed() }, // Zero-initialize __value
31 | |     };
32 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:955:28
    |
955 |                         == shell_always_quoting_style as libc::c_int as libc::c_uint
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:955:28
    |
955 |                         == shell_always_quoting_style as libc::c_int as libc::c_uint
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a module
  --> lib.rs:29:1
   |
29 | pub mod progname;
   | ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/quotearg.rs:956:28
    |
956 |                         && elide_outer_quotes as libc::c_int != 0
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(elide_outer_quotes)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/progname.rs:18:1
   |
18 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
   --> src/quotearg.rs:980:13
    |
980 | /             match current_block {
981 | |                 7549413860336125482 => {
982 | |                     current_block = 13059411171234995867;
983 | |                 }
984 | |                 _ => {}
985 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
980 ~             if current_block == 7549413860336125482 {
981 +                 current_block = 13059411171234995867;
982 +             }
    |

warning: missing documentation for a struct
  --> src/progname.rs:21:1
   |
21 | / pub struct _IO_FILE {
22 | |     pub _flags: libc::c_int,
23 | |     pub _IO_read_ptr: *mut libc::c_char,
24 | |     pub _IO_read_end: *mut libc::c_char,
...  |
50 | |     pub _unused2: [libc::c_char; 20],
51 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
   --> src/quotearg.rs:986:13
    |
986 | /             match current_block {
987 | |                 13059411171234995867 => {
988 | |                     current_block = 16620298045565028098;
989 | |                 }
990 | |                 _ => {}
991 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
986 ~             if current_block == 13059411171234995867 {
987 +                 current_block = 16620298045565028098;
988 +             }
    |

warning: `mut current_block` is shadowed
   --> src/quotearg.rs:992:21
    |
992 |             let mut current_block = match current_block {
    |                     ^^^^^^^^^^^^^
    |
note: previous binding is here
   --> src/quotearg.rs:338:9
    |
338 |     let mut current_block: u64;
    |         ^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing documentation for a struct field
  --> src/progname.rs:22:5
   |
22 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/progname.rs:23:5
   |
23 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1013:17
     |
1013 | ...& (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std::mem::size_of::<libc::c_int>() * 8)) & ...
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/progname.rs:24:5
   |
24 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1013:17
     |
1013 | ...& (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std::mem::size_of::<libc::c_int>() * 8)) & ...
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/progname.rs:25:5
   |
25 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1013:17
     |
1013 | ...   && (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std::mem::...
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/progname.rs:26:5
   |
26 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer division
    --> src/quotearg.rs:1013:50
     |
1013 | ...   && (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std::mem::...
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: division of integers may cause loss of precision. consider using floats
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a struct field
  --> src/progname.rs:27:5
   |
27 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `isize` may wrap around the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1013:50
     |
1013 | ...   && (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std::mem::...
     |                                            ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a struct field
  --> src/progname.rs:28:5
   |
28 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `usize` to `isize` may wrap around the value
    --> src/quotearg.rs:1013:63
     |
1013 | ...   && (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std::mem::...
     |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a struct field
  --> src/progname.rs:29:5
   |
29 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
    --> src/quotearg.rs:1013:64
     |
1013 | ...   && (unsafe { *quote_these_too.offset(c as isize / (std::mem::size_of::<libc::c_int>() * 8) as isize) } >> (c as usize % (std::mem::...
     |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/progname.rs:30:5
   |
30 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/progname.rs:31:5
   |
31 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
    --> src/quotearg.rs:1013:134
     |
1013 | ...<libc::c_int>() * 8) as isize) } >> (c as usize % (std::mem::size_of::<libc::c_int>() * 8)) & 1) != 0
     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/progname.rs:32:5
   |
32 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1031:17
     |
1031 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/progname.rs:33:5
   |
33 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1031:41
     |
1031 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a struct field
  --> src/progname.rs:34:5
   |
34 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
    --> src/quotearg.rs:1031:41
     |
1031 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a struct field
  --> src/progname.rs:35:5
   |
35 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1033:13
     |
1033 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/progname.rs:36:5
   |
36 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1033:13
     |
1033 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/progname.rs:37:5
   |
37 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1035:17
     |
1035 |                 unsafe { *buffer.offset(len as isize) = '$' as i8; }
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/progname.rs:38:5
   |
38 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1035:41
     |
1035 |                 unsafe { *buffer.offset(len as isize) = '$' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a struct field
  --> src/progname.rs:39:5
   |
39 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
    --> src/quotearg.rs:1035:41
     |
1035 |                 unsafe { *buffer.offset(len as isize) = '$' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a struct field
  --> src/progname.rs:40:5
   |
40 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1037:13
     |
1037 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/progname.rs:41:5
   |
41 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1037:13
     |
1037 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/progname.rs:42:5
   |
42 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1039:17
     |
1039 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/progname.rs:43:5
   |
43 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1039:41
     |
1039 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a struct field
  --> src/progname.rs:44:5
   |
44 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
    --> src/quotearg.rs:1039:41
     |
1039 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a struct field
  --> src/progname.rs:45:5
   |
45 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1041:13
     |
1041 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/progname.rs:46:5
   |
46 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1041:13
     |
1041 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/progname.rs:47:5
   |
47 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1045:13
     |
1045 |             unsafe { *buffer.offset(len as isize) = '\\' as i8; }
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/progname.rs:48:5
   |
48 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1045:37
     |
1045 |             unsafe { *buffer.offset(len as isize) = '\\' as i8; }
     |                                     ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a struct field
  --> src/progname.rs:49:5
   |
49 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
    --> src/quotearg.rs:1045:37
     |
1045 |             unsafe { *buffer.offset(len as isize) = '\\' as i8; }
     |                                     ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a struct field
  --> src/progname.rs:50:5
   |
50 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1047:9
     |
1047 |         len += 1;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/quotearg.rs:1047:9
     |
1047 |         len += 1;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1057:17
     |
1057 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
  --> src/progname.rs:52:1
   |
52 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1057:41
     |
1057 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a type alias
  --> src/progname.rs:53:1
   |
53 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
    --> src/quotearg.rs:1057:41
     |
1057 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: arithmetic detected
    --> src/quotearg.rs:1059:13
     |
1059 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a type alias
  --> src/progname.rs:54:1
   |
54 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1059:13
     |
1059 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a type alias
  --> src/progname.rs:55:1
   |
55 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1061:17
     |
1061 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a static
  --> src/progname.rs:57:1
   |
57 | pub static mut program_name: *const libc::c_char = 0 as *const libc::c_char;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1061:41
     |
1061 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
    --> src/quotearg.rs:1061:41
     |
1061 |                 unsafe { *buffer.offset(len as isize) = '\'' as i8; }
     |                                         ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a function
  --> src/progname.rs:59:1
   |
59 | / pub unsafe extern "C" fn set_program_name(mut argv0: *const libc::c_char) {
60 | |     let mut slash: *const libc::c_char = 0 as *const libc::c_char;
61 | |     let mut base: *const libc::c_char = 0 as *const libc::c_char;
62 | |     if argv0.is_null() {
...  |
95 | |     program_invocation_name = argv0 as *mut libc::c_char;
96 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1063:13
     |
1063 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing `#[inline]` for a function
  --> src/progname.rs:59:1
   |
59 | / pub unsafe extern "C" fn set_program_name(mut argv0: *const libc::c_char) {
60 | |     let mut slash: *const libc::c_char = 0 as *const libc::c_char;
61 | |     let mut base: *const libc::c_char = 0 as *const libc::c_char;
62 | |     if argv0.is_null() {
...  |
95 | |     program_invocation_name = argv0 as *mut libc::c_char;
96 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1063:13
     |
1063 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1067:13
     |
1067 |             unsafe { *buffer.offset(len as isize) = c as i8; }
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: casting `u8` to `i8` may wrap around the value
    --> src/quotearg.rs:1067:53
     |
1067 |             unsafe { *buffer.offset(len as isize) = c as i8; }
     |                                                     ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1067:37
     |
1067 |             unsafe { *buffer.offset(len as isize) = c as i8; }
     |                                     ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
    --> src/quotearg.rs:1067:37
     |
1067 |             unsafe { *buffer.offset(len as isize) = c as i8; }
     |                                     ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: arithmetic detected
    --> src/quotearg.rs:1069:9
     |
1069 |         len += 1;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/quotearg.rs:1069:9
     |
1069 |         len += 1;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
    --> src/quotearg.rs:1078:1
     |
1078 | i += 1;
     | ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/quotearg.rs:1078:1
     |
1078 | i += 1;
     | ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/quotearg.rs:1081:19
     |
1081 |         if len == 0 as libc::c_int as libc::c_ulong
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u32` may lose the sign of the value
    --> src/quotearg.rs:1083:20
     |
1083 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
    --> src/quotearg.rs:1083:20
     |
1083 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
    --> src/quotearg.rs:1084:16
     |
1084 |             && elide_outer_quotes as libc::c_int != 0
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(elide_outer_quotes)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u32` may lose the sign of the value
    --> src/quotearg.rs:1090:16
     |
1090 |             == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
    --> src/quotearg.rs:1090:16
     |
1090 |             == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a module
  --> lib.rs:30:1
   |
30 | pub mod propername_lite;
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
    --> src/quotearg.rs:1091:39
     |
1091 |             && !elide_outer_quotes && encountered_single_quote as libc::c_int != 0)
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(encountered_single_quote)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/quotearg.rs:1118:5
     |
1118 | /     match current_block {
1119 | |         7928555609993211441 => {
1120 | |             if quoting_style as libc::c_uint
1121 | |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
...    |
1154 | |         }
1155 | |     };
     | |_____^
     |
     = note: `-W clippy::single-match-else` implied by `-W clippy::pedantic`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
help: try this
     |
1118 ~     if current_block == 7928555609993211441 {
1119 +         if quoting_style as libc::c_uint
1120 +             == shell_always_quoting_style as libc::c_int as libc::c_uint
1121 +             && backslash_escapes as libc::c_int != 0
1122 +         {
1123 +             quoting_style = shell_escape_always_quoting_style;
1124 +         }
1125 +         return quotearg_buffer_restyled(
1126 +             buffer,
1127 +             buffersize,
1128 +             arg,
1129 +             argsize,
1130 +             quoting_style,
1131 +             flags & !(QA_ELIDE_OUTER_QUOTES as libc::c_int),
1132 +             0 as *const libc::c_uint,
1133 +             left_quote,
1134 +             right_quote,
1135 +         );
1136 +     } else {
1137 +         if !quote_string.is_null() && !elide_outer_quotes {
1138 +             while *quote_string != 0 {
1139 +                 if len < buffersize {
1140 +                     *buffer.offset(len as isize) = *quote_string;
1141 +                 }
1142 +                 len = len.wrapping_add(1);
1143 +                 len;
1144 +                 quote_string = quote_string.offset(1);
1145 +                 quote_string;
1146 +             }
1147 +         }
1148 +         if len < buffersize {
1149 +             *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
1150 +         }
1151 +         return len;
1152 ~     };
     |

warning: missing documentation for a function
  --> src/propername_lite.rs:8:1
   |
8  | / pub unsafe extern "C" fn proper_name_lite(
9  | |     mut name_ascii: *const libc::c_char,
10 | |     mut name_utf8: *const libc::c_char,
11 | | ) -> *const libc::c_char {
...  |
23 | |     };
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
    --> src/quotearg.rs:1121:20
     |
1121 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `#[inline]` for a function
  --> src/propername_lite.rs:8:1
   |
8  | / pub unsafe extern "C" fn proper_name_lite(
9  | |     mut name_ascii: *const libc::c_char,
10 | |     mut name_utf8: *const libc::c_char,
11 | | ) -> *const libc::c_char {
...  |
23 | |     };
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `u32` to `i32` may wrap around the value
    --> src/quotearg.rs:1121:20
     |
1121 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
    --> src/quotearg.rs:1122:20
     |
1122 |                 && backslash_escapes as libc::c_int != 0
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(backslash_escapes)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u32` to `i32` may wrap around the value
    --> src/quotearg.rs:1132:26
     |
1132 |                 flags & !(QA_ELIDE_OUTER_QUOTES as libc::c_int),
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: `0 as *const _` detected
    --> src/quotearg.rs:1133:17
     |
1133 |                 0 as *const libc::c_uint,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_uint>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a module
  --> lib.rs:31:1
   |
31 | pub mod quotearg;
   | ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1142:40
     |
1142 |                         *buffer.offset(len as isize) = *quote_string;
     |                                        ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
    --> src/quotearg.rs:1142:40
     |
1142 |                         *buffer.offset(len as isize) = *quote_string;
     |                                        ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: statement with no effect
    --> src/quotearg.rs:1145:21
     |
1145 |                     len;
     |                     ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/quotearg.rs:1147:21
     |
1147 |                     quote_string;
     |                     ^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `i8` may truncate the value
    --> src/quotearg.rs:1151:48
     |
1151 |                 *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1151:32
     |
1151 |                 *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
     |                                ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
    --> src/quotearg.rs:1151:32
     |
1151 |                 *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
     |                                ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a type alias
  --> src/quotearg.rs:83:1
   |
83 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: docs for function which may panic missing `# Panics` section
    --> src/quotearg.rs:1158:1
     |
1158 | / pub fn quotearg_buffer(
1159 | |     buffer: &mut [u8],
1160 | |     arg: &[u8],
1161 | |     o: Option<&quoting_options>,
...    |
1179 | |     r.try_into().unwrap()
1180 | | }
     | |_^
     |
     = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
note: first possible panic found here
    --> src/quotearg.rs:1168:13
     |
1168 |             buffer.len().try_into().unwrap(),
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing documentation for a type alias
  --> src/quotearg.rs:84:1
   |
84 | pub type __uint32_t = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1158:1
     |
1158 | / pub fn quotearg_buffer(
1159 | |     buffer: &mut [u8],
1160 | |     arg: &[u8],
1161 | |     o: Option<&quoting_options>,
...    |
1179 | |     r.try_into().unwrap()
1180 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a type alias
  --> src/quotearg.rs:85:1
   |
85 | pub type __uint_least32_t = __uint32_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/quotearg.rs:86:1
   |
86 | pub type ptrdiff_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
    --> src/quotearg.rs:1179:5
     |
1179 |     r.try_into().unwrap()
     |     ^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return r.try_into().unwrap()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a type alias
  --> src/quotearg.rs:87:1
   |
87 | pub type quoting_style = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1163:25
     |
1163 |     let p = o.unwrap_or(unsafe { &default_quoting_options });
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/quotearg.rs:88:1
   |
88 | pub const custom_quoting_style: quoting_style = 10;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1165:13
     |
1165 |     let r = unsafe {
     |             ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/quotearg.rs:89:1
   |
89 | pub const clocale_quoting_style: quoting_style = 9;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1167:13
     |
1167 |             buffer.as_mut_ptr() as *mut libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `buffer.as_mut_ptr().cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/quotearg.rs:90:1
   |
90 | pub const locale_quoting_style: quoting_style = 8;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1168:13
     |
1168 |             buffer.len().try_into().unwrap(),
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: `-W clippy::unwrap-used` implied by `-W clippy::restriction`
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a constant
  --> src/quotearg.rs:91:1
   |
91 | pub const escape_quoting_style: quoting_style = 7;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1169:13
     |
1169 |             arg.as_ptr() as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `arg.as_ptr().cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/quotearg.rs:92:1
   |
92 | pub const c_maybe_quoting_style: quoting_style = 6;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1170:13
     |
1170 |             arg.len().try_into().unwrap(),
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a constant
  --> src/quotearg.rs:93:1
   |
93 | pub const c_quoting_style: quoting_style = 5;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1179:5
     |
1179 |     r.try_into().unwrap()
     |     ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a constant
  --> src/quotearg.rs:94:1
   |
94 | pub const shell_escape_always_quoting_style: quoting_style = 4;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: docs for function which may panic missing `# Panics` section
    --> src/quotearg.rs:1183:1
     |
1183 | / pub fn quotearg_alloc(
1184 | |     arg: &CStr,
1185 | |     argsize: usize,
1186 | |     o: &quoting_options,
...    |
1196 | |     unsafe { CString::from_raw(result_ptr) } // Convert the raw pointer back to CString
1197 | | }
     | |_^
     |
note: first possible panic found here
    --> src/quotearg.rs:1193:50
     |
1193 |         result_ptr = quotearg_alloc_mem(arg_ptr, argsize.try_into().unwrap(), &mut size as *mut u64, o);
     |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing documentation for a constant
  --> src/quotearg.rs:95:1
   |
95 | pub const shell_escape_quoting_style: quoting_style = 3;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1183:1
     |
1183 | / pub fn quotearg_alloc(
1184 | |     arg: &CStr,
1185 | |     argsize: usize,
1186 | |     o: &quoting_options,
...    |
1196 | |     unsafe { CString::from_raw(result_ptr) } // Convert the raw pointer back to CString
1197 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a constant
  --> src/quotearg.rs:96:1
   |
96 | pub const shell_always_quoting_style: quoting_style = 2;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
    --> src/quotearg.rs:1196:14
     |
1196 |     unsafe { CString::from_raw(result_ptr) } // Convert the raw pointer back to CString
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_raw(result_ptr)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a constant
  --> src/quotearg.rs:97:1
   |
97 | pub const shell_quoting_style: quoting_style = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/quotearg.rs:98:1
   |
98 | pub const literal_quoting_style: quoting_style = 0;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1192:5
     |
1192 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
  --> src/quotearg.rs:99:1
   |
99 | pub type quoting_flags = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1193:50
     |
1193 |         result_ptr = quotearg_alloc_mem(arg_ptr, argsize.try_into().unwrap(), &mut size as *mut u64, o);
     |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a constant
   --> src/quotearg.rs:100:1
    |
100 | pub const QA_SPLIT_TRIGRAPHS: quoting_flags = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
    --> src/quotearg.rs:1193:79
     |
1193 |         result_ptr = quotearg_alloc_mem(arg_ptr, argsize.try_into().unwrap(), &mut size as *mut u64, o);
     |                                                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(size)`
     |
     = note: `-W clippy::borrow-as-ptr` implied by `-W clippy::pedantic`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a constant
   --> src/quotearg.rs:101:1
    |
101 | pub const QA_ELIDE_OUTER_QUOTES: quoting_flags = 2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1196:5
     |
1196 |     unsafe { CString::from_raw(result_ptr) } // Convert the raw pointer back to CString
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/quotearg.rs:102:1
    |
102 | pub const QA_ELIDE_NULL_BYTES: quoting_flags = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1200:1
     |
1200 | / pub unsafe extern "C" fn quotearg_alloc_mem(
1201 | |     mut arg: *const libc::c_char,
1202 | |     mut argsize: size_t,
1203 | |     mut size: *mut size_t,
...    |
1246 | |     return buf;
1247 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a struct
   --> src/quotearg.rs:105:1
    |
105 | / pub struct quoting_options {
106 | |     pub style: quoting_style,
107 | |     pub flags: libc::c_int,
108 | |     pub quote_these_too: [libc::c_uint; 8],
109 | |     pub left_quote: *const libc::c_char,
110 | |     pub right_quote: *const libc::c_char,
111 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1200:1
     |
1200 | / pub unsafe extern "C" fn quotearg_alloc_mem(
1201 | |     mut arg: *const libc::c_char,
1202 | |     mut argsize: size_t,
1203 | |     mut size: *mut size_t,
...    |
1246 | |     return buf;
1247 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: unneeded `return` statement
    --> src/quotearg.rs:1246:5
     |
1246 |     return buf;
     |     ^^^^^^^^^^^ help: remove `return`: `buf`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a struct field
   --> src/quotearg.rs:106:5
    |
106 |     pub style: quoting_style,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary boolean `not` operation
    --> src/quotearg.rs:1206:41
     |
1206 |       let mut p: *const quoting_options = if !o.is_null() {
     |  _________________________________________^
1207 | |         o
1208 | |     } else {
1209 | |         &mut default_quoting_options as *mut quoting_options as *const quoting_options
1210 | |     };
     | |_____^
     |
     = help: remove the `!` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
   --> src/quotearg.rs:107:5
    |
107 |     pub flags: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
    --> src/quotearg.rs:1209:9
     |
1209 |         &mut default_quoting_options as *mut quoting_options as *const quoting_options
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(default_quoting_options)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a struct field
   --> src/quotearg.rs:108:5
    |
108 |     pub quote_these_too: [libc::c_uint; 8],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary boolean `not` operation
    --> src/quotearg.rs:1213:11
     |
1213 |           | (if !size.is_null() {
     |  ___________^
1214 | |             0 as libc::c_int
1215 | |         } else {
1216 | |             QA_ELIDE_NULL_BYTES as libc::c_int
1217 | |         });
     | |__________^
     |
     = help: remove the `!` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
   --> src/quotearg.rs:109:5
    |
109 |     pub left_quote: *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
    --> src/quotearg.rs:1216:13
     |
1216 |             QA_ELIDE_NULL_BYTES as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a struct field
   --> src/quotearg.rs:110:5
    |
110 |     pub right_quote: *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `0 as *mut _` detected
    --> src/quotearg.rs:1219:9
     |
1219 |         0 as *mut libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a type alias
   --> src/quotearg.rs:112:1
    |
112 | pub type __mbstate_t = mbstate_t;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/quotearg.rs:1220:9
     |
1220 |         0 as libc::c_int as size_t,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/quotearg.rs:1229:23
     |
1229 |         .wrapping_add(1 as libc::c_int as libc::c_ulong);
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct
   --> src/quotearg.rs:115:1
    |
115 | / pub struct mbstate_t {
116 | |     pub __count: libc::c_int,
117 | |     pub __value: C2RustUnnamed,
118 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/quotearg.rs:1244:38
     |
1244 |         *size = bufsize.wrapping_sub(1 as libc::c_int as libc::c_ulong);
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
   --> src/quotearg.rs:116:5
    |
116 |     pub __count: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1249:34
     |
1249 | static mut nslots: libc::c_int = 1 as libc::c_int;
     |                                  ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
   --> src/quotearg.rs:117:5
    |
117 |     pub __value: C2RustUnnamed,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1250:32
     |
1250 | static mut slotvec0: slotvec = unsafe {
     |                                ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a union
   --> src/quotearg.rs:121:1
    |
121 | / pub union C2RustUnnamed {
122 | |     pub __wch: libc::c_uint,
123 | |     pub __wchb: [libc::c_char; 4],
124 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
    --> src/quotearg.rs:1256:9
     |
1252 | /         let mut init = slotvec {
1253 | |             size: ::core::mem::size_of::<[libc::c_char; 256]>() as libc::c_ulong,
1254 | |             val: slot0.as_ptr() as *mut _,
1255 | |         };
     | |__________- unnecessary `let` binding
1256 |           init
     |           ^^^^
     |
     = note: `-W clippy::let-and-return` implied by `-W clippy::all`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1252 ~         
1253 ~         slotvec {
1254 +             size: ::core::mem::size_of::<[libc::c_char; 256]>() as libc::c_ulong,
1255 +             val: slot0.as_ptr() as *mut _,
1256 +         }
     |

warning: missing documentation for a struct field
   --> src/quotearg.rs:122:5
    |
122 |     pub __wch: libc::c_uint,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1259:36
     |
1259 | static mut slotvec: *mut slotvec = unsafe {
     |                                    ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
   --> src/quotearg.rs:123:5
    |
123 |     pub __wchb: [libc::c_char; 4],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
    --> src/quotearg.rs:1260:5
     |
1260 |     &slotvec0 as *const slotvec as *mut slotvec
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of!(slotvec0)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a type alias
   --> src/quotearg.rs:125:1
    |
125 | pub type char32_t = __uint_least32_t;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1263:1
     |
1263 | / pub unsafe extern "C" fn quotearg_free() {
1264 | |     let mut sv: *mut slotvec = slotvec;
1265 | |     let mut i: libc::c_int = 0;
1266 | |     i = 1 as libc::c_int;
...    |
1281 | |     nslots = 1 as libc::c_int;
1282 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a type alias
   --> src/quotearg.rs:126:1
    |
126 | pub type wint_t = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1263:1
     |
1263 | / pub unsafe extern "C" fn quotearg_free() {
1264 | |     let mut sv: *mut slotvec = slotvec;
1265 | |     let mut i: libc::c_int = 0;
1266 | |     i = 1 as libc::c_int;
...    |
1281 | |     nslots = 1 as libc::c_int;
1282 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a constant
   --> src/quotearg.rs:127:1
    |
127 | pub const _ISprint: C2RustUnnamed_0 = 16384;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1266:9
     |
1266 |     i = 1 as libc::c_int;
     |         ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct
   --> src/quotearg.rs:130:1
    |
130 | / pub struct slotvec {
131 | |     pub size: size_t,
132 | |     pub val: *mut libc::c_char,
133 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1269:14
     |
1269 |         i += 1;
     |              ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/quotearg.rs:1281:14
     |
1281 |     nslots = 1 as libc::c_int;
     |              ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
   --> src/quotearg.rs:131:5
    |
131 |     pub size: size_t,
    |     ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1268:14
     |
1268 |         free((*sv.offset(i as isize)).val as *mut libc::c_void);
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(*sv.offset(i as isize)).val.cast::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/quotearg.rs:132:5
    |
132 |     pub val: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1269:9
     |
1269 |         i += 1;
     |         ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a type alias
   --> src/quotearg.rs:134:1
    |
134 | pub type idx_t = ptrdiff_t;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1269:9
     |
1269 |         i += 1;
     |         ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a type alias
   --> src/quotearg.rs:135:1
    |
135 | pub type C2RustUnnamed_0 = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
    --> src/quotearg.rs:1270:9
     |
1270 |         i;
     |         ^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1273:14
     |
1273 |         free((*sv.offset(0 as libc::c_int as isize)).val as *mut libc::c_void);
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(*sv.offset(0 as libc::c_int as isize)).val.cast::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/quotearg.rs:136:1
    |
136 | pub const _ISalnum: C2RustUnnamed_0 = 8;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
    --> src/quotearg.rs:1277:14
     |
1277 |     if sv != &mut slotvec0 as *mut slotvec {
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(slotvec0)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a constant
   --> src/quotearg.rs:137:1
    |
137 | pub const _ISpunct: C2RustUnnamed_0 = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1278:14
     |
1278 |         free(sv as *mut libc::c_void);
     |              ^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `sv.cast::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/quotearg.rs:138:1
    |
138 | pub const _IScntrl: C2RustUnnamed_0 = 2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
    --> src/quotearg.rs:1360:5
     |
1360 |     return val;
     |     ^^^^^^^^^^^ help: remove `return`: `val`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a constant
   --> src/quotearg.rs:139:1
    |
139 | pub const _ISblank: C2RustUnnamed_0 = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/quotearg.rs:140:1
    |
140 | pub const _ISgraph: C2RustUnnamed_0 = 32768;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1298:10
     |
1298 |     if !(0 as libc::c_int <= n && n < nslots_max) {
     |          ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/quotearg.rs:141:1
    |
141 | pub const _ISspace: C2RustUnnamed_0 = 8192;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1305:48
     |
1305 |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
     |                                                ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/quotearg.rs:142:1
    |
142 | pub const _ISxdigit: C2RustUnnamed_0 = 4096;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i64` to `i32` may truncate the value
    --> src/quotearg.rs:1291:39
     |
1291 |       let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |  _______________________________________^
1292 | |         < 9223372036854775807 as libc::c_long
1293 | |     {
1294 | |         2147483647 as libc::c_int as libc::c_long
1295 | |     } else {
1296 | |         9223372036854775807 as libc::c_long
1297 | |     }) as libc::c_int;
     | |_____________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/quotearg.rs:143:1
    |
143 | pub const _ISdigit: C2RustUnnamed_0 = 2048;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/quotearg.rs:1291:43
     |
1291 |     let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2147483647 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/quotearg.rs:144:1
    |
144 | pub const _ISalpha: C2RustUnnamed_0 = 1024;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/quotearg.rs:1294:9
     |
1294 |         2147483647 as libc::c_int as libc::c_long
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2147483647 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/quotearg.rs:145:1
    |
145 | pub const _ISlower: C2RustUnnamed_0 = 512;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
    --> src/quotearg.rs:1302:44
     |
1302 |         let mut preallocated: bool = sv == &mut slotvec0 as *mut slotvec;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(slotvec0)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a constant
   --> src/quotearg.rs:146:1
    |
146 | pub const _ISupper: C2RustUnnamed_0 = 256;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/quotearg.rs:1303:37
     |
1303 |         let mut new_nslots: idx_t = nslots as idx_t;
     |                                     ^^^^^^^^^^^^^^^ help: try: `i64::from(nslots)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
   --> src/quotearg.rs:148:1
    |
148 | / fn c32isprint(wc: u32) -> libc::c_int {
149 | |     unsafe { iswprint(wc) }
150 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1304:14
     |
1304 |           sv = xpalloc(
     |  ______________^
1305 | |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
1306 | |                 as *mut libc::c_void,
1307 | |             &mut new_nslots,
...    |
1310 | |             ::core::mem::size_of::<slotvec>() as libc::c_ulong as idx_t,
1311 | |         ) as *mut slotvec;
     | |_________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr
help: try `pointer::cast`, a safer alternative
     |
1304 ~         sv = xpalloc(
1305 +             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
1306 +                 as *mut libc::c_void,
1307 +             &mut new_nslots,
1308 +             (n - nslots + 1 as libc::c_int) as idx_t,
1309 +             nslots_max as ptrdiff_t,
1310 +             ::core::mem::size_of::<slotvec>() as libc::c_ulong as idx_t,
1311 ~         ).cast::<src::quotearg::slotvec>();
     |

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1305:13
     |
1305 | /             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
1306 | |                 as *mut libc::c_void,
     | |____________________________________^ help: try `pointer::cast`, a safer alternative: `(if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv }).cast::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a function
   --> src/quotearg.rs:153:1
    |
153 | / fn mbszero(ps: &mut mbstate_t) {
154 | |     unsafe {
155 | |         std::ptr::write_bytes(ps, 0, std::mem::size_of::<mbstate_t>());
156 | |     }
157 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
    --> src/quotearg.rs:1305:13
     |
1305 |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
    --> src/quotearg.rs:1305:17
     |
1305 |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(preallocated)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: `0 as *mut _` detected
    --> src/quotearg.rs:1305:52
     |
1305 |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
     |                                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<slotvec>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/quotearg.rs:1308:13
     |
1308 |             (n - nslots + 1 as libc::c_int) as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(n - nslots + 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
    --> src/quotearg.rs:1308:13
     |
1308 |             (n - nslots + 1 as libc::c_int) as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/quotearg.rs:1308:13
     |
1308 |             (n - nslots + 1 as libc::c_int) as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a static
   --> src/quotearg.rs:160:1
    |
160 | / pub static mut quoting_style_args: [*const libc::c_char; 11] = [
161 | |     b"literal\0" as *const u8 as *const libc::c_char,
162 | |     b"shell\0" as *const u8 as *const libc::c_char,
163 | |     b"shell-always\0" as *const u8 as *const libc::c_char,
...   |
171 | |     0 as *const libc::c_char,
172 | | ];
    | |__^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/quotearg.rs:1309:13
     |
1309 |             nslots_max as ptrdiff_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(nslots_max)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u64` to `i64` may wrap around the value
    --> src/quotearg.rs:1310:13
     |
1310 |             ::core::mem::size_of::<slotvec>() as libc::c_ulong as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1317:13
     |
1317 |             sv.offset(nslots as isize) as *mut libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `sv.offset(nslots as isize).cast::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i64` to `u64` may lose the sign of the value
    --> src/quotearg.rs:1319:13
     |
1319 |             ((new_nslots - nslots as libc::c_long) as libc::c_ulong)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
    --> src/quotearg.rs:1319:14
     |
1319 |             ((new_nslots - nslots as libc::c_long) as libc::c_ulong)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/quotearg.rs:1319:14
     |
1319 |             ((new_nslots - nslots as libc::c_long) as libc::c_ulong)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/quotearg.rs:1319:28
     |
1319 |             ((new_nslots - nslots as libc::c_long) as libc::c_ulong)
     |                            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(nslots)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i64` to `i32` may truncate the value
    --> src/quotearg.rs:1322:18
     |
1322 |         nslots = new_nslots as libc::c_int;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u32` to `i32` may wrap around the value
    --> src/quotearg.rs:1326:53
     |
1326 |     let mut flags: libc::c_int = (*options).flags | QA_ELIDE_NULL_BYTES as libc::c_int;
     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/quotearg.rs:1339:35
     |
1339 |         size = qsize.wrapping_add(1 as libc::c_int as libc::c_ulong);
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a static
   --> src/quotearg.rs:174:1
    |
174 | / pub static mut quoting_style_vals: [quoting_style; 10] = [
175 | |     literal_quoting_style,
176 | |     shell_quoting_style,
177 | |     shell_always_quoting_style,
...   |
184 | |     clocale_quoting_style,
185 | | ];
    | |__^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1342:18
     |
1342 |             free(val as *mut libc::c_void);
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `val.cast::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/quotearg.rs:1345:13
     |
1345 |         let ref mut fresh0 = (*sv.offset(n as isize)).val;
     |         ----^^^^^^^^^^^^^^-------------------------------- help: try: `let fresh0 = &mut (*sv.offset(n as isize)).val;`
     |
     = note: `-W clippy::toplevel-ref-arg` implied by `-W clippy::all`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: missing documentation for a static
   --> src/quotearg.rs:186:1
    |
186 | / static mut default_quoting_options: quoting_options = quoting_options {
187 | |     style: literal_quoting_style,
188 | |     flags: 0,
189 | |     quote_these_too: [0; 8],
190 | |     left_quote: 0 as *const libc::c_char,
191 | |     right_quote: 0 as *const libc::c_char,
192 | | };
    | |__^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1363:1
     |
1363 | / pub fn quotearg_n(n: i32, arg: &CStr) -> *mut libc::c_char {
1364 | |     unsafe {
1365 | |         let options = &default_quoting_options;
1366 | |         quotearg_n_options(
...    |
1372 | |     }
1373 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a function
   --> src/quotearg.rs:194:1
    |
194 | / pub fn clone_quoting_options(o: Option<&quoting_options>) -> Box<quoting_options> {
195 | |     let options = o.unwrap_or(unsafe { &default_quoting_options });
196 | |     let cloned_options = options.clone();
197 | |     Box::new(cloned_options)
198 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/quotearg.rs:194:1
    |
194 | / pub fn clone_quoting_options(o: Option<&quoting_options>) -> Box<quoting_options> {
195 | |     let options = o.unwrap_or(unsafe { &default_quoting_options });
196 | |     let cloned_options = options.clone();
197 | |     Box::new(cloned_options)
198 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
    --> src/quotearg.rs:1366:9
     |
1366 | /         quotearg_n_options(
1367 | |             n,
1368 | |             arg.as_ptr(),
1369 | |             u64::MAX,
1370 | |             options,
1371 | |         )
     | |_________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
     |
1366 ~         return quotearg_n_options(
1367 +             n,
1368 +             arg.as_ptr(),
1369 +             u64::MAX,
1370 +             options,
1371 +         )
     |

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1364:5
     |
1364 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: docs for function which may panic missing `# Panics` section
    --> src/quotearg.rs:1376:1
     |
1376 | / pub fn quotearg_n_mem(
1377 | |     n: i32,
1378 | |     arg: &CStr,
1379 | |     argsize: usize,
...    |
1384 | |     }
1385 | | }
     | |_^
     |
note: first possible panic found here
    --> src/quotearg.rs:1383:45
     |
1383 |         quotearg_n_options(n, arg.as_ptr(), argsize.try_into().unwrap(), options)
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1376:1
     |
1376 | / pub fn quotearg_n_mem(
1377 | |     n: i32,
1378 | |     arg: &CStr,
1379 | |     argsize: usize,
...    |
1384 | |     }
1385 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a function
   --> src/quotearg.rs:201:1
    |
201 | / pub fn get_quoting_style(o: Option<&quoting_options>) -> quoting_style {
202 | |     let options = match o {
203 | |         Some(opts) => opts,
204 | |         None => unsafe { &default_quoting_options },
205 | |     };
206 | |     options.style
207 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
    --> src/quotearg.rs:1383:9
     |
1383 |         quotearg_n_options(n, arg.as_ptr(), argsize.try_into().unwrap(), options)
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return quotearg_n_options(n, arg.as_ptr(), argsize.try_into().unwrap(), options)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1381:5
     |
1381 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing `#[inline]` for a function
   --> src/quotearg.rs:201:1
    |
201 | / pub fn get_quoting_style(o: Option<&quoting_options>) -> quoting_style {
202 | |     let options = match o {
203 | |         Some(opts) => opts,
204 | |         None => unsafe { &default_quoting_options },
205 | |     };
206 | |     options.style
207 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1383:45
     |
1383 |         quotearg_n_options(n, arg.as_ptr(), argsize.try_into().unwrap(), options)
     |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing `return` statement
    --> src/quotearg.rs:1390:14
     |
1390 |     unsafe { CString::from_raw(result_ptr) }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_raw(result_ptr)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1390:5
     |
1390 |     unsafe { CString::from_raw(result_ptr) }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a function
   --> src/quotearg.rs:210:1
    |
210 | / pub fn set_quoting_style(
211 | |     o: Option<&mut quoting_options>,
212 | |     s: quoting_style,
213 | | ) {
...   |
218 | |     options.style = s;
219 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1394:1
     |
1394 | / pub fn quotearg_mem(arg: &CStr) -> *mut libc::c_char {
1395 | |     let argsize = arg.to_bytes().len();
1396 | |     quotearg_n_mem(0, arg, argsize)
1397 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `#[inline]` for a function
   --> src/quotearg.rs:210:1
    |
210 | / pub fn set_quoting_style(
211 | |     o: Option<&mut quoting_options>,
212 | |     s: quoting_style,
213 | | ) {
...   |
218 | |     options.style = s;
219 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
    --> src/quotearg.rs:1396:5
     |
1396 |     quotearg_n_mem(0, arg, argsize)
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return quotearg_n_mem(0, arg, argsize)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1400:1
     |
1400 | / pub fn quotearg_n_style(
1401 | |     n: i32,
1402 | |     s: quoting_style,
1403 | |     arg: &CStr,
...    |
1408 | |     }
1409 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a function
   --> src/quotearg.rs:222:1
    |
222 | / pub fn set_char_quoting(
223 | |     o: Option<&mut quoting_options>,
224 | |     c: u8,
225 | |     i: i32,
...   |
240 | |     r
241 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
    --> src/quotearg.rs:1407:9
     |
1407 |         quotearg_n_options(n, arg.as_ptr(), u64::MAX, &o)
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return quotearg_n_options(n, arg.as_ptr(), u64::MAX, &o)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `#[inline]` for a function
   --> src/quotearg.rs:222:1
    |
222 | / pub fn set_char_quoting(
223 | |     o: Option<&mut quoting_options>,
224 | |     c: u8,
225 | |     i: i32,
...   |
240 | |     r
241 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1406:5
     |
1406 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1412:1
     |
1412 | / pub fn quotearg_n_style_mem(
1413 | |     n: i32,
1414 | |     s: quoting_style,
1415 | |     arg: &CStr,
...    |
1421 | |     }
1422 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1420:9
     |
1420 |         quotearg_n_options(n, arg.as_ptr(), argsize, &o)
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return quotearg_n_options(n, arg.as_ptr(), argsize, &o)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1419:5
     |
1419 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1425:1
     |
1425 | / pub fn quotearg_style(
1426 | |     s: quoting_style,
1427 | |     arg: &CStr,
1428 | | ) -> CString {
1429 | |     let result_ptr = quotearg_n_style(0, s, arg);
1430 | |     unsafe { CString::from_raw(result_ptr) }
1431 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1430:14
     |
1430 |     unsafe { CString::from_raw(result_ptr) }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_raw(result_ptr)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1430:5
     |
1430 |     unsafe { CString::from_raw(result_ptr) }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1434:1
     |
1434 | / pub fn quotearg_style_mem(
1435 | |     s: quoting_style,
1436 | |     arg: &CStr,
1437 | | ) -> CString {
1438 | |     let result_ptr = quotearg_n_style_mem(0, s, arg);
1439 | |     unsafe { CString::from_raw(result_ptr) }
1440 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1439:14
     |
1439 |     unsafe { CString::from_raw(result_ptr) }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_raw(result_ptr)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1439:5
     |
1439 |     unsafe { CString::from_raw(result_ptr) }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1443:1
     |
1443 | / pub unsafe extern "C" fn quotearg_char_mem(
1444 | |     mut arg: *const libc::c_char,
1445 | |     mut argsize: size_t,
1446 | |     mut ch: libc::c_char,
...    |
1457 | |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
1458 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1443:1
     |
1443 | / pub unsafe extern "C" fn quotearg_char_mem(
1444 | |     mut arg: *const libc::c_char,
1445 | |     mut argsize: size_t,
1446 | |     mut ch: libc::c_char,
...    |
1457 | |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
1458 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: unneeded `return` statement
    --> src/quotearg.rs:1457:5
     |
1457 |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/quotearg.rs:1452:21
     |
1452 |         left_quote: 0 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/quotearg.rs:1453:22
     |
1453 |         right_quote: 0 as *const libc::c_char,
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: casting `i8` to `u8` may lose the sign of the value
    --> src/quotearg.rs:1456:55
     |
1456 |     let result = set_char_quoting(Some(&mut options), ch as u8, 1);
     |                                                       ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: the function `quotearg_n_options` doesn't need a mutable reference
    --> src/quotearg.rs:1457:63
     |
1457 |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
     |                                                               ^^^^^^^^^^^^
     |
     = note: `-W clippy::unnecessary-mut-passed` implied by `-W clippy::all`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1460:1
     |
1460 | / pub fn quotearg_char(arg: &CStr, ch: char) -> *mut libc::c_char {
1461 | |     let ch_as_c_char = ch as u8 as libc::c_char;
1462 | |     unsafe {
1463 | |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
1464 | |     }
1465 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a function
   --> src/quotearg.rs:244:1
    |
244 | / pub fn set_quoting_flags(
245 | |     o: Option<&mut quoting_options>,
246 | |     i: libc::c_int,
247 | | ) -> libc::c_int {
...   |
255 | |     r
256 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
    --> src/quotearg.rs:1463:9
     |
1463 |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: casting `u8` to `i8` may wrap around the value
    --> src/quotearg.rs:1461:24
     |
1461 |     let ch_as_c_char = ch as u8 as libc::c_char;
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing `#[inline]` for a function
   --> src/quotearg.rs:244:1
    |
244 | / pub fn set_quoting_flags(
245 | |     o: Option<&mut quoting_options>,
246 | |     i: libc::c_int,
247 | | ) -> libc::c_int {
...   |
255 | |     r
256 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1462:5
     |
1462 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1468:1
     |
1468 | / pub fn quotearg_colon(arg: &CStr) -> String {
1469 | |     let ch: char = ':'; // Define the character to be used
1470 | |     let result_ptr = quotearg_char(arg, ch); // Call the original function
1471 | |     unsafe { CStr::from_ptr(result_ptr).to_string_lossy().into_owned() } // Convert the result to a String
1472 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1471:14
     |
1471 |     unsafe { CStr::from_ptr(result_ptr).to_string_lossy().into_owned() } // Convert the result to a String
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CStr::from_ptr(result_ptr).to_string_lossy().into_owned()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a function
   --> src/quotearg.rs:259:1
    |
259 | / pub fn set_custom_quoting(
260 | |     mut o: Option<&mut quoting_options>,
261 | |     left_quote: &CStr,
262 | |     right_quote: &CStr,
...   |
269 | |     o.right_quote = right_quote.as_ptr();
270 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1471:5
     |
1471 |     unsafe { CStr::from_ptr(result_ptr).to_string_lossy().into_owned() } // Convert the result to a String
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing `#[inline]` for a function
   --> src/quotearg.rs:259:1
    |
259 | / pub fn set_custom_quoting(
260 | |     mut o: Option<&mut quoting_options>,
261 | |     left_quote: &CStr,
262 | |     right_quote: &CStr,
...   |
269 | |     o.right_quote = right_quote.as_ptr();
270 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1475:1
     |
1475 | / pub fn quotearg_colon_mem(arg: &CStr) -> String {
1476 | |     let argsize = arg.to_bytes().len() as u64;
1477 | |     let result_ptr: *mut libc::c_char = unsafe { quotearg_char_mem(arg.as_ptr(), argsize, ':' as i32 as libc::c_char) };
1478 | |     unsafe { CStr::from_ptr(result_ptr).to_string_lossy().into_owned() }
1479 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1478:14
     |
1478 |     unsafe { CStr::from_ptr(result_ptr).to_string_lossy().into_owned() }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CStr::from_ptr(result_ptr).to_string_lossy().into_owned()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1477:41
     |
1477 |     let result_ptr: *mut libc::c_char = unsafe { quotearg_char_mem(arg.as_ptr(), argsize, ':' as i32 as libc::c_char) };
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a function
   --> src/quotearg.rs:272:1
    |
272 | / fn quoting_options_from_style(style: quoting_style) -> quoting_options {
273 | |     let mut o = quoting_options {
274 | |         style: literal_quoting_style,
275 | |         flags: 0,
...   |
286 | |     o
287 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
    --> src/quotearg.rs:1477:91
     |
1477 |     let result_ptr: *mut libc::c_char = unsafe { quotearg_char_mem(arg.as_ptr(), argsize, ':' as i32 as libc::c_char) };
     |                                                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1478:5
     |
1478 |     unsafe { CStr::from_ptr(result_ptr).to_string_lossy().into_owned() }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1482:1
     |
1482 | / pub fn quotearg_n_style_colon(
1483 | |     n: i32,
1484 | |     s: quoting_style,
1485 | |     arg: &CStr,
...    |
1506 | |     unsafe { CString::from_raw(result_ptr) }
1507 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1506:14
     |
1506 |     unsafe { CString::from_raw(result_ptr) }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_raw(result_ptr)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used import from `std` instead of `core`
    --> src/quotearg.rs:1491:21
     |
1491 |         left_quote: std::ptr::null(),
     |                     ^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
    --> src/quotearg.rs:1492:22
     |
1492 |         right_quote: std::ptr::null(),
     |                      ^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: casting a character literal to `u8` truncates
    --> src/quotearg.rs:1495:42
     |
1495 |     set_char_quoting(Some(&mut options), ':' as u8, 1);
     |                                          ^^^^^^^^^ help: use a byte literal instead: `b':'`
     |
     = note: `char` is four bytes wide, but `u8` is a single byte
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1497:22
     |
1497 |     let result_ptr = unsafe {
     |                      ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: the function `quotearg_n_options` doesn't need a mutable reference
    --> src/quotearg.rs:1502:13
     |
1502 |             &mut options,
     |             ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1506:5
     |
1506 |     unsafe { CString::from_raw(result_ptr) }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a function
   --> src/quotearg.rs:289:1
    |
289 | / fn gettext_quote(msgid: &str, s: quoting_style) -> String {
290 | |     let translation = unsafe { std::ffi::CStr::from_ptr(gettext(msgid.as_ptr() as *const libc::c_char)) }
291 | |         .to_string_lossy()
292 | |         .into_owned();
...   |
323 | |     }
324 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1510:1
     |
1510 | / pub fn quotearg_n_custom(
1511 | |     n: i32,
1512 | |     left_quote: &CStr,
1513 | |     right_quote: &CStr,
...    |
1525 | |     }
1526 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1524:9
     |
1524 |         CStr::from_ptr(result_ptr).to_owned()
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CStr::from_ptr(result_ptr).to_owned()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1516:5
     |
1516 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1529:1
     |
1529 | / pub unsafe extern "C" fn quotearg_n_custom_mem(
1530 | |     mut n: libc::c_int,
1531 | |     mut left_quote: *const libc::c_char,
1532 | |     mut right_quote: *const libc::c_char,
...    |
1538 | |     return quotearg_n_options(n, arg, argsize, &mut o);
1539 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1529:1
     |
1529 | / pub unsafe extern "C" fn quotearg_n_custom_mem(
1530 | |     mut n: libc::c_int,
1531 | |     mut left_quote: *const libc::c_char,
1532 | |     mut right_quote: *const libc::c_char,
...    |
1538 | |     return quotearg_n_options(n, arg, argsize, &mut o);
1539 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: unneeded `return` statement
    --> src/quotearg.rs:1538:5
     |
1538 |     return quotearg_n_options(n, arg, argsize, &mut o);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `quotearg_n_options(n, arg, argsize, &mut o)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: the function `quotearg_n_options` doesn't need a mutable reference
    --> src/quotearg.rs:1538:48
     |
1538 |     return quotearg_n_options(n, arg, argsize, &mut o);
     |                                                ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: docs for function which may panic missing `# Panics` section
    --> src/quotearg.rs:1541:1
     |
1541 | / pub fn quotearg_custom(
1542 | |     left_quote: &str,
1543 | |     right_quote: &str,
1544 | |     arg: &str,
...    |
1551 | |     result.to_string_lossy().into_owned()
1552 | | }
     | |_^
     |
note: first possible panic found here
    --> src/quotearg.rs:1546:24
     |
1546 |     let left_quote_c = CString::new(left_quote).unwrap();
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1541:1
     |
1541 | / pub fn quotearg_custom(
1542 | |     left_quote: &str,
1543 | |     right_quote: &str,
1544 | |     arg: &str,
...    |
1551 | |     result.to_string_lossy().into_owned()
1552 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1551:5
     |
1551 |     result.to_string_lossy().into_owned()
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return result.to_string_lossy().into_owned()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1546:24
     |
1546 |     let left_quote_c = CString::new(left_quote).unwrap();
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1547:25
     |
1547 |     let right_quote_c = CString::new(right_quote).unwrap();
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1548:17
     |
1548 |     let arg_c = CString::new(arg).unwrap();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1555:1
     |
1555 | / pub fn quotearg_custom_mem(
1556 | |     left_quote: &CStr,
1557 | |     right_quote: &CStr,
1558 | |     arg: &CStr,
...    |
1572 | |     }
1573 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1571:9
     |
1571 |         CStr::from_ptr(result_ptr).to_string_lossy().into_owned()
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CStr::from_ptr(result_ptr).to_string_lossy().into_owned()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1563:5
     |
1563 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: default numeric fallback might occur
    --> src/quotearg.rs:1580:27
     |
1580 |         quote_these_too: [0 as libc::c_int as libc::c_uint, 0, 0, 0, 0, 0, 0, 0],
     |                           ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: returning the result of a `let` binding from a block
    --> src/quotearg.rs:1584:5
     |
1577 | /     let mut init = quoting_options {
1578 | |         style: locale_quoting_style,
1579 | |         flags: 0 as libc::c_int,
1580 | |         quote_these_too: [0 as libc::c_int as libc::c_uint, 0, 0, 0, 0, 0, 0, 0],
1581 | |         left_quote: 0 as *const libc::c_char,
1582 | |         right_quote: 0 as *const libc::c_char,
1583 | |     };
     | |______- unnecessary `let` binding
1584 |       init
     |       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1577 ~     
1578 ~     quoting_options {
1579 +         style: locale_quoting_style,
1580 +         flags: 0 as libc::c_int,
1581 +         quote_these_too: [0 as libc::c_int as libc::c_uint, 0, 0, 0, 0, 0, 0, 0],
1582 +         left_quote: 0 as *const libc::c_char,
1583 +         right_quote: 0 as *const libc::c_char,
1584 +     }
     |

warning: casting `i32` to `u32` may lose the sign of the value
    --> src/quotearg.rs:1580:27
     |
1580 |         quote_these_too: [0 as libc::c_int as libc::c_uint, 0, 0, 0, 0, 0, 0, 0],
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `return` statement
    --> src/quotearg.rs:1593:9
     |
1593 |         quotearg_n_options(n, arg.as_ptr(), argsize, &quote_quoting_options)
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return quotearg_n_options(n, arg.as_ptr(), argsize, &quote_quoting_options)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1592:5
     |
1592 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1598:1
     |
1598 | / pub unsafe extern "C" fn quote_mem(
1599 | |     mut arg: *const libc::c_char,
1600 | |     mut argsize: size_t,
1601 | | ) -> *const libc::c_char {
1602 | |     let arg_cstr = CStr::from_ptr(arg);
1603 | | return quote_n_mem(0, arg_cstr, argsize.try_into().unwrap());
1604 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: docs for function which may panic missing `# Panics` section
    --> src/quotearg.rs:1598:1
     |
1598 | / pub unsafe extern "C" fn quote_mem(
1599 | |     mut arg: *const libc::c_char,
1600 | |     mut argsize: size_t,
1601 | | ) -> *const libc::c_char {
1602 | |     let arg_cstr = CStr::from_ptr(arg);
1603 | | return quote_n_mem(0, arg_cstr, argsize.try_into().unwrap());
1604 | | }
     | |_^
     |
note: first possible panic found here
    --> src/quotearg.rs:1603:33
     |
1603 | return quote_n_mem(0, arg_cstr, argsize.try_into().unwrap());
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: unneeded `return` statement
    --> src/quotearg.rs:1603:1
     |
1603 | return quote_n_mem(0, arg_cstr, argsize.try_into().unwrap());
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `quote_n_mem(0, arg_cstr, argsize.try_into().unwrap())`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1603:33
     |
1603 | return quote_n_mem(0, arg_cstr, argsize.try_into().unwrap());
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a function
    --> src/quotearg.rs:326:1
     |
326  | / unsafe extern "C" fn quotearg_buffer_restyled(
327  | |     mut buffer: *mut libc::c_char,
328  | |     mut buffersize: size_t,
329  | |     mut arg: *const libc::c_char,
...    |
1155 | |     };
1156 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: useless conversion to the same type: `u64`
    --> src/quotearg.rs:1603:33
     |
1603 | return quote_n_mem(0, arg_cstr, argsize.try_into().unwrap());
     |                                 ^^^^^^^^^^^^^^^^^^
     |
     = note: `-W clippy::useless-conversion` implied by `-W clippy::all`
     = help: consider removing `.try_into()`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: missing `return` statement
    --> src/quotearg.rs:1607:5
     |
1607 |     quote_n_mem(n, arg, u64::MAX)
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return quote_n_mem(n, arg, u64::MAX)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
    --> src/quotearg.rs:1613:14
     |
1613 |     unsafe { CStr::from_ptr(result) }
     |              ^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CStr::from_ptr(result)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1612:18
     |
1612 |     let result = unsafe { quote_n(0, arg) };
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1613:5
     |
1613 |     unsafe { CStr::from_ptr(result) }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `alloc`
 --> src/root_dev_ino.rs:1:5
  |
1 | use std::ffi::CString;
  |     ^^^^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `alloc`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `core`
 --> src/root_dev_ino.rs:2:5
  |
2 | use std::option::Option;
  |     ^^^^^^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: exported structs should not be exhaustive
  --> src/root_dev_ino.rs:23:1
   |
23 | / pub struct timespec {
24 | |     pub tv_sec: __time_t,
25 | |     pub tv_nsec: __syscall_slong_t,
26 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
23 | #[non_exhaustive]
   |

warning: exported structs should not be exhaustive
  --> src/root_dev_ino.rs:29:1
   |
29 | / pub struct stat {
30 | |     pub st_dev: __dev_t,
31 | |     pub st_ino: __ino_t,
32 | |     pub st_mode: __mode_t,
...  |
45 | |     pub __glibc_reserved: [libc::c_int; 2],
46 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
29 | #[non_exhaustive]
   |

warning: exported structs should not be exhaustive
  --> src/root_dev_ino.rs:49:1
   |
49 | / pub struct dev_ino {
50 | |     pub st_ino: ino_t,
51 | |     pub st_dev: dev_t,
52 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
49 | #[non_exhaustive]
   |

warning: docs for function which may panic missing `# Panics` section
  --> src/root_dev_ino.rs:54:1
   |
54 | / pub fn get_root_dev_ino(root_d_i: &mut dev_ino) -> Option<&dev_ino> {
55 | |     let mut statbuf: stat = stat {
56 | |         st_dev: 0,
57 | |         st_ino: 0,
...  |
81 | |     Some(root_d_i)
82 | | }
   | |_^
   |
note: first possible panic found here
  --> src/root_dev_ino.rs:74:16
   |
74 |     let path = std::ffi::CString::new("/").unwrap();
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: item name ends with its containing module's name
  --> src/root_dev_ino.rs:54:1
   |
54 | / pub fn get_root_dev_ino(root_d_i: &mut dev_ino) -> Option<&dev_ino> {
55 | |     let mut statbuf: stat = stat {
56 | |         st_dev: 0,
57 | |         st_ino: 0,
...  |
81 | |     Some(root_d_i)
82 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
  --> src/root_dev_ino.rs:81:5
   |
81 |     Some(root_d_i)
   |     ^^^^^^^^^^^^^^ help: add `return` as shown: `return Some(root_d_i)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: default numeric fallback might occur
  --> src/root_dev_ino.rs:71:28
   |
71 |         __glibc_reserved: [0; 2],
   |                            ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/root_dev_ino.rs:75:57
   |
75 |     if unsafe { lstat(path.as_ptr(), &mut statbuf) } != 0 {
   |                                                         ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: used `unwrap()` on `a Result` value
  --> src/root_dev_ino.rs:74:16
   |
74 |     let path = std::ffi::CString::new("/").unwrap();
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used import from `std` instead of `alloc`
  --> src/root_dev_ino.rs:74:16
   |
74 |     let path = std::ffi::CString::new("/").unwrap();
   |                ^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: unsafe block missing a safety comment
  --> src/root_dev_ino.rs:75:8
   |
75 |     if unsafe { lstat(path.as_ptr(), &mut statbuf) } != 0 {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: exported structs should not be exhaustive
  --> src/same_inode.rs:17:1
   |
17 | / pub struct timespec {
18 | |     pub tv_sec: __time_t,
19 | |     pub tv_nsec: __syscall_slong_t,
20 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
17 | #[non_exhaustive]
   |

warning: exported structs should not be exhaustive
  --> src/same_inode.rs:23:1
   |
23 | / pub struct stat {
24 | |     pub st_dev: __dev_t,
25 | |     pub st_ino: __ino_t,
26 | |     pub st_mode: __mode_t,
...  |
39 | |     pub __glibc_reserved: [libc::c_int; 2],
40 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
23 | #[non_exhaustive]
   |

warning: missing `return` statement
  --> src/same_inode.rs:45:5
   |
45 |     a.st_dev == b.st_dev && a.st_ino == b.st_ino
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return a.st_dev == b.st_dev && a.st_ino == b.st_ino`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/same_inode.rs:44:1
   |
44 | / pub fn psame_inode(a: &libc::stat, b: &libc::stat) -> bool {
45 | |     a.st_dev == b.st_dev && a.st_ino == b.st_ino
46 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: used import from `std` instead of `core`
 --> src/setlocale_null.rs:2:5
  |
2 | use std::ffi::CStr;
  |     ^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: item name starts with its containing module's name
  --> src/setlocale_null.rs:15:1
   |
15 | / pub fn setlocale_null_r(
16 | |     category: libc::c_int,
17 | |     buf: &mut [u8],
18 | | ) -> libc::c_int {
...  |
24 | |     }
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: unneeded `return` statement
  --> src/setlocale_null.rs:23:9
   |
23 |         return setlocale_null_r_unlocked(category, buf_ptr, bufsize);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `setlocale_null_r_unlocked(category, buf_ptr, bufsize)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `as` casting between raw pointers without changing its mutability
  --> src/setlocale_null.rs:20:19
   |
20 |     let buf_ptr = buf.as_mut_ptr() as *mut libc::c_char;
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `buf.as_mut_ptr().cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
  --> src/setlocale_null.rs:22:5
   |
22 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing `return` statement
  --> src/setlocale_null.rs:32:13
   |
32 |             None
   |             ^^^^ help: add `return` as shown: `return None`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
  --> src/setlocale_null.rs:34:13
   |
34 |             Some(CStr::from_ptr(result).to_string_lossy().into_owned())
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Some(CStr::from_ptr(result).to_string_lossy().into_owned())`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
  --> src/setlocale_null.rs:29:5
   |
29 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `alloc`
 --> src/setlocale_null_unlocked.rs:1:5
  |
1 | use std::slice;
  |     ^^^^^^^^^^
  |
  = help: consider importing the item from `alloc`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: unsafe function's docs miss `# Safety` section
  --> src/setlocale_null_unlocked.rs:18:1
   |
18 | / pub unsafe extern "C" fn setlocale_null_unlocked(
19 | |     mut category: libc::c_int,
20 | | ) -> *const libc::c_char {
21 | |     let mut result: *const libc::c_char = setlocale(category, 0 as *const libc::c_char);
22 | |     return result;
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/setlocale_null_unlocked.rs:22:5
   |
22 |     return result;
   |     ^^^^^^^^^^^^^^ help: remove `return`: `result`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
  --> src/setlocale_null_unlocked.rs:21:63
   |
21 |     let mut result: *const libc::c_char = setlocale(category, 0 as *const libc::c_char);
   |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
  --> src/setlocale_null_unlocked.rs:34:9
   |
34 |         return 22; // EINVAL
   |         ^^^^^^^^^^ help: remove `return`: `22`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
  --> src/setlocale_null_unlocked.rs:40:13
   |
40 |             return 0; // Success
   |             ^^^^^^^^^ help: remove `return`: `0`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
  --> src/setlocale_null_unlocked.rs:47:13
   |
47 |             return 34; // ERANGE
   |             ^^^^^^^^^^ help: remove `return`: `34`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
  --> src/setlocale_null_unlocked.rs:34:16
   |
34 |         return 22; // EINVAL
   |                ^^ help: consider adding suffix: `22_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/setlocale_null_unlocked.rs:40:20
   |
40 |             return 0; // Success
   |                    ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/setlocale_null_unlocked.rs:47:20
   |
47 |             return 34; // ERANGE
   |                    ^^ help: consider adding suffix: `34_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: unsafe block missing a safety comment
  --> src/setlocale_null_unlocked.rs:29:39
   |
29 |     let result: *const libc::c_char = unsafe { setlocale_null_unlocked(category) };
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: indexing may panic
  --> src/setlocale_null_unlocked.rs:32:13
   |
32 |             buf[0] = 0; // Null-terminate the buffer
   |             ^^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/setlocale_null_unlocked.rs:36:29
   |
36 |         let length: usize = unsafe { strlen(result) } as usize; // Cast to usize
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: unsafe block missing a safety comment
  --> src/setlocale_null_unlocked.rs:36:29
   |
36 |         let length: usize = unsafe { strlen(result) } as usize; // Cast to usize
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: slicing may panic
  --> src/setlocale_null_unlocked.rs:38:13
   |
38 |             buf[..length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, length) });
   |             ^^^^^^^^^^^^^
   |
   = help: consider using `.get(..n)`or `.get_mut(..n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: unsafe block missing a safety comment
  --> src/setlocale_null_unlocked.rs:38:43
   |
38 |             buf[..length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, length) });
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
  --> src/setlocale_null_unlocked.rs:38:52
   |
38 |             buf[..length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, length) });
   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
  --> src/setlocale_null_unlocked.rs:38:79
   |
38 |             buf[..length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, length) });
   |                                                                               ^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `result.cast::<u8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: indexing may panic
  --> src/setlocale_null_unlocked.rs:39:13
   |
39 |             buf[length] = 0; // Null-terminate the buffer
   |             ^^^^^^^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic detected
  --> src/setlocale_null_unlocked.rs:42:31
   |
42 |             let copy_length = buf.len() - 1;
   |                               ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/setlocale_null_unlocked.rs:42:31
   |
42 |             let copy_length = buf.len() - 1;
   |                               ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: slicing may panic
  --> src/setlocale_null_unlocked.rs:44:17
   |
44 |                 buf[..copy_length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, copy_length) });
   |                 ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using `.get(..n)`or `.get_mut(..n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: unsafe block missing a safety comment
  --> src/setlocale_null_unlocked.rs:44:52
   |
44 |                 buf[..copy_length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, copy_length) });
   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
  --> src/setlocale_null_unlocked.rs:44:61
   |
44 |                 buf[..copy_length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, copy_length) });
   |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
  --> src/setlocale_null_unlocked.rs:44:88
   |
44 |                 buf[..copy_length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, copy_length) });
   |                                                                                        ^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `result.cast::<u8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: indexing may panic
  --> src/setlocale_null_unlocked.rs:45:17
   |
45 |                 buf[copy_length] = 0; // Null-terminate the buffer
   |                 ^^^^^^^^^^^^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: `as` casting between raw pointers without changing its mutability
 --> src/version.rs:3:47
  |
3 |   pub static mut Version: *const libc::c_char = b"9.5.42-bbc97\0" as *const u8
  |  _______________________________________________^
4 | |     as *const libc::c_char;
  | |__________________________^ help: try `pointer::cast`, a safer alternative: `(b"9.5.42-bbc97\0" as *const u8).cast::<i8>()`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: used import from `std` instead of `core`
 --> src/version_etc.rs:2:5
  |
2 | use std::ffi::CStr;
  |     ^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: exported structs should not be exhaustive
  --> src/version_etc.rs:20:1
   |
20 | / pub struct __va_list {
21 | |     pub __stack: *mut libc::c_void,
22 | |     pub __gr_top: *mut libc::c_void,
23 | |     pub __vr_top: *mut libc::c_void,
24 | |     pub __gr_offs: libc::c_int,
25 | |     pub __vr_offs: libc::c_int,
26 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
20 | #[non_exhaustive]
   |

warning: exported structs should not be exhaustive
  --> src/version_etc.rs:33:1
   |
33 | / pub struct _IO_FILE {
34 | |     pub _flags: libc::c_int,
35 | |     pub _IO_read_ptr: *mut libc::c_char,
36 | |     pub _IO_read_end: *mut libc::c_char,
...  |
62 | |     pub _unused2: [libc::c_char; 20],
63 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
33 | #[non_exhaustive]
   |

warning: unnecessary structure name repetition
  --> src/version_etc.rs:47:22
   |
47 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/version_etc.rs:58:29
   |
58 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unsafe function's docs miss `# Safety` section
   --> src/version_etc.rs:69:1
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
172 | |
173 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: item name starts with its containing module's name
   --> src/version_etc.rs:69:1
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
172 | |
173 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: unnecessary boolean `not` operation
  --> src/version_etc.rs:77:5
   |
77 | /     if !command_name.is_null() {
78 | |         fprintf(
79 | |             stream,
80 | |             b"%s (%s) %s\n\0" as *const u8 as *const libc::c_char,
...  |
91 | |         );
92 | |     }
   | |_____^
   |
   = help: remove the `!` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: `as` casting between raw pointers without changing its mutability
  --> src/version_etc.rs:80:13
   |
80 |             b"%s (%s) %s\n\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s (%s) %s\n\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
  --> src/version_etc.rs:88:13
   |
88 |             b"%s %s\n\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s %s\n\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
  --> src/version_etc.rs:96:17
   |
96 |         gettext(b"(C)\0" as *const u8 as *const libc::c_char),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"(C)\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `u32` to `i32` may wrap around the value
  --> src/version_etc.rs:97:9
   |
97 |         COPYRIGHT_YEAR as libc::c_int,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: `as` casting between raw pointers without changing its mutability
  --> src/version_etc.rs:99:20
   |
99 |     fputs_unlocked(b"\n\0" as *const u8 as *const libc::c_char, stream);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\n\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:103:13
    |
103 | /             b"License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere...
104 | |                 as *const u8 as *const libc::c_char,
    | |___________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:106:9
    |
106 |         b"https://gnu.org/licenses/gpl.html\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"https://gnu.org/licenses/gpl.html\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:108:20
    |
108 |     fputs_unlocked(b"\n\0" as *const u8 as *const libc::c_char, stream);
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:112:27
    |
112 |         let msg = gettext(b"Written by %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Written by %s.\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:113:9
    |
113 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:118:27
    |
118 |         let msg = gettext(b"Written by %s and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Written by %s and %s.\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:119:9
    |
119 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:124:27
    |
124 |         let msg = gettext(b"Written by %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Written by %s, %s, and %s.\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:125:9
    |
125 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:130:27
    |
130 |         let msg = gettext(b"Written by %s, %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Written by %s, %s, %s, and %s.\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:131:9
    |
131 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:136:27
    |
136 |         let msg = gettext(b"Written by %s, %s, %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Written by %s, %s, %s, %s, and %s.\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:137:9
    |
137 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:142:27
    |
142 |         let msg = gettext(b"Written by %s, %s, %s, %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Written by %s, %s, %s, %s, %s, and %s.\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:143:9
    |
143 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:148:27
    |
148 |         let msg = gettext(b"Written by %s, %s, %s, %s, %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Written by %s, %s, %s, %s, %s, %s, and %s.\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:149:9
    |
149 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:154:27
    |
154 |         let msg = gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Written by %s, %s, %s, %s, %s, %s, %s, and %s.\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:155:9
    |
155 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:160:27
    |
160 |         let msg = gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and %s.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and %s.\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:161:9
    |
161 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:166:27
    |
166 |         let msg = gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and others.\n\0".as_ptr() as *const libc::c_char);
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and others.\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:167:9
    |
167 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe function's docs miss `# Safety` section
   --> src/version_etc.rs:175:1
    |
175 | / pub unsafe extern "C" fn version_etc_ar(
176 | |     mut stream: *mut FILE,
177 | |     mut command_name: *const libc::c_char,
178 | |     mut package: *const libc::c_char,
...   |
188 | |     version_etc_arn(stream, command_name, package, version, authors, n_authors);
189 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: item name starts with its containing module's name
   --> src/version_etc.rs:175:1
    |
175 | / pub unsafe extern "C" fn version_etc_ar(
176 | |     mut stream: *mut FILE,
177 | |     mut command_name: *const libc::c_char,
178 | |     mut package: *const libc::c_char,
...   |
188 | |     version_etc_arn(stream, command_name, package, version, authors, n_authors);
189 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: default numeric fallback might occur
   --> src/version_etc.rs:183:17
    |
183 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/version_etc.rs:183:17
    |
183 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/version_etc.rs:184:29
    |
184 |     while !(*authors.offset(n_authors as isize)).is_null() {
    |                             ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/version_etc.rs:184:29
    |
184 |     while !(*authors.offset(n_authors as isize)).is_null() {
    |                             ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: statement with no effect
   --> src/version_etc.rs:186:9
    |
186 |         n_authors;
    |         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/version_etc.rs:191:1
    |
191 | / pub unsafe extern "C" fn version_etc_va(
192 | |     mut stream: *mut FILE,
193 | |     mut command_name: *const libc::c_char,
194 | |     mut package: *const libc::c_char,
...   |
217 | |     );
218 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: item name starts with its containing module's name
   --> src/version_etc.rs:191:1
    |
191 | / pub unsafe extern "C" fn version_etc_va(
192 | |     mut stream: *mut FILE,
193 | |     mut command_name: *const libc::c_char,
194 | |     mut package: *const libc::c_char,
...   |
217 | |     );
218 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: default numeric fallback might occur
   --> src/version_etc.rs:200:17
    |
200 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/version_etc.rs:201:23
    |
201 |     while n_authors < 10 as libc::c_int as libc::c_ulong
    |                       ^^ help: consider adding suffix: `10_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `0 as *const _` detected
   --> src/version_etc.rs:199:51
    |
199 |     let mut authtab: [*const libc::c_char; 10] = [0 as *const libc::c_char; 10];
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/version_etc.rs:200:17
    |
200 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/version_etc.rs:201:23
    |
201 |     while n_authors < 10 as libc::c_int as libc::c_ulong
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: indexing may panic
   --> src/version_etc.rs:203:13
    |
203 |             authtab[n_authors as usize] = authors.arg::<*const libc::c_char>();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/version_etc.rs:203:21
    |
203 |             authtab[n_authors as usize] = authors.arg::<*const libc::c_char>();
    |                     ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: indexing may panic
   --> src/version_etc.rs:204:14
    |
204 |             !(authtab[n_authors as usize]).is_null()
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/version_etc.rs:204:23
    |
204 |             !(authtab[n_authors as usize]).is_null()
    |                       ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: statement with no effect
   --> src/version_etc.rs:208:9
    |
208 |         n_authors;
    |         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe function's docs miss `# Safety` section
   --> src/version_etc.rs:220:1
    |
220 | / pub unsafe extern "C" fn version_etc(
221 | |     mut stream: *mut FILE,
222 | |     mut command_name: *const libc::c_char,
223 | |     mut package: *const libc::c_char,
...   |
229 | |     version_etc_va(stream, command_name, package, version, authors.as_va_list());
230 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:236:9
    |
236 |         unsafe { CStr::from_ptr(gettext(b"Report bugs to: \0".as_ptr() as *const c_char)).to_string_lossy() }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:236:41
    |
236 |         unsafe { CStr::from_ptr(gettext(b"Report bugs to: \0".as_ptr() as *const c_char)).to_string_lossy() }
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Report bugs to: \0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:240:9
    |
240 |         unsafe { CStr::from_ptr(gettext(b"GNU coreutils\0".as_ptr() as *const c_char)).to_string_lossy() },
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:240:41
    |
240 |         unsafe { CStr::from_ptr(gettext(b"GNU coreutils\0".as_ptr() as *const c_char)).to_string_lossy() },
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"GNU coreutils\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:241:9
    |
241 |         unsafe { CStr::from_ptr(b"https://www.gnu.org/software/coreutils/\0".as_ptr() as *const c_char).to_string_lossy() }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:241:33
    |
241 |         unsafe { CStr::from_ptr(b"https://www.gnu.org/software/coreutils/\0".as_ptr() as *const c_char).to_string_lossy() }
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"https://www.gnu.org/software/coreutils/\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:245:9
    |
245 |         unsafe { CStr::from_ptr(b"https://www.gnu.org/gethelp/\0".as_ptr() as *const c_char).to_string_lossy() }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:245:33
    |
245 |         unsafe { CStr::from_ptr(b"https://www.gnu.org/gethelp/\0".as_ptr() as *const c_char).to_string_lossy() }
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"https://www.gnu.org/gethelp/\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
 --> src/version_etc_fsf.rs:3:60
  |
3 | pub static mut version_etc_copyright: [libc::c_char; 47] = unsafe {
  |                                                            ^^^^^^^^
  |
  = help: consider adding a safety comment on the preceding line
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: default numeric fallback might occur
  --> src/xalloc_die.rs:18:12
   |
18 |         if 0 != 0 {
   |            ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xalloc_die.rs:18:17
   |
18 |         if 0 != 0 {
   |                 ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xalloc_die.rs:25:32
   |
25 |             if exit_failure != 0 {
   |                                ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xalloc_die.rs:36:29
   |
36 |             if errstatus != 0 {
   |                             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xalloc_die.rs:47:29
   |
47 |             if errstatus != 0 {
   |                             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: unsafe block missing a safety comment
  --> src/xalloc_die.rs:17:5
   |
17 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unnecessary `!=` operation
  --> src/xalloc_die.rs:18:9
   |
18 | /         if 0 != 0 {
19 | |             error(
20 | |                 exit_failure,
21 | |                 0,
...  |
49 | |             }
50 | |         }
   | |_________^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
  --> src/xalloc_die.rs:18:12
   |
18 |         if 0 != 0 {
   |            ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: `as` casting between raw pointers without changing its mutability
  --> src/xalloc_die.rs:22:17
   |
22 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
  --> src/xalloc_die.rs:23:25
   |
23 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"memory exhausted\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of the `unreachable!` macro
  --> src/xalloc_die.rs:26:17
   |
26 |                 unreachable!();
   |                 ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: `as` casting between raw pointers without changing its mutability
  --> src/xalloc_die.rs:33:17
   |
33 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
  --> src/xalloc_die.rs:34:25
   |
34 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"memory exhausted\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of the `unreachable!` macro
  --> src/xalloc_die.rs:37:17
   |
37 |                 unreachable!();
   |                 ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: `errstatus` shadows a previous, unrelated binding
  --> src/xalloc_die.rs:40:17
   |
40 |             let errstatus = exit_failure;
   |                 ^^^^^^^^^
   |
note: previous binding is here
  --> src/xalloc_die.rs:29:17
   |
29 |             let errstatus = exit_failure;
   |                 ^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: `as` casting between raw pointers without changing its mutability
  --> src/xalloc_die.rs:44:17
   |
44 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
  --> src/xalloc_die.rs:45:25
   |
45 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"memory exhausted\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of the `unreachable!` macro
  --> src/xalloc_die.rs:48:17
   |
48 |                 unreachable!();
   |                 ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: unsafe function's docs miss `# Safety` section
  --> src/xgetcwd.rs:9:1
   |
9  | / pub unsafe extern "C" fn xgetcwd() -> *mut libc::c_char {
10 | |     let mut cwd: *mut libc::c_char = getcwd(
11 | |         0 as *mut libc::c_char,
12 | |         0 as libc::c_int as size_t,
...  |
17 | |     return cwd;
18 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/xgetcwd.rs:17:5
   |
17 |     return cwd;
   |     ^^^^^^^^^^^ help: remove `return`: `cwd`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
  --> src/xgetcwd.rs:14:48
   |
14 |     if cwd.is_null() && *__errno_location() == 12 as libc::c_int {
   |                                                ^^ help: consider adding suffix: `12_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `0 as *mut _` detected
  --> src/xgetcwd.rs:11:9
   |
11 |         0 as *mut libc::c_char,
   |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/xgetcwd.rs:12:9
   |
12 |         0 as libc::c_int as size_t,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: used import from `std` instead of `alloc`
  --> src/xmalloc.rs:11:5
   |
11 | use std::slice;
   |     ^^^^^^^^^^
   |
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `core`
  --> src/xmalloc.rs:13:5
   |
13 | use std::option::Option;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `alloc`
  --> src/xmalloc.rs:15:5
   |
15 | use std::vec;
   |     ^^^^^^^^
   |
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `alloc`
  --> src/xmalloc.rs:17:5
   |
17 | use std::vec::Vec;
   |     ^^^^^^^^^^^^^
   |
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `alloc`
  --> src/xmalloc.rs:21:5
   |
21 | use std::ffi::CString;
   |     ^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: unneeded `return` statement
  --> src/xmalloc.rs:56:9
   |
56 |         return p;
   |         ^^^^^^^^^ help: remove `return`: `p`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
  --> src/xmalloc.rs:58:9
   |
58 |         return _gl_alloc_nomem()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `_gl_alloc_nomem()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/xmalloc.rs:54:8
   |
54 |     if s as libc::c_ulong <= 18446744073709551615 as libc::c_ulong {
   |        ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/xmalloc.rs:55:24
   |
55 |         p = realloc(p, (s | (s == 0) as libc::c_int as libc::c_long) as libc::c_ulong);
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xmalloc.rs:55:29
   |
55 |         p = realloc(p, (s | (s == 0) as libc::c_int as libc::c_long) as libc::c_ulong);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from((s == 0) as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
  --> src/xmalloc.rs:55:29
   |
55 |         p = realloc(p, (s | (s == 0) as libc::c_int as libc::c_long) as libc::c_ulong);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(s == 0)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `return` statement
  --> src/xmalloc.rs:81:5
   |
81 |     Box::into_raw(boxed_slice) as *mut libc::c_void
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Box::into_raw(boxed_slice) as *mut libc::c_void`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: arithmetic detected
  --> src/xmalloc.rs:66:18
   |
66 |     if n_usize > usize::MAX / s_usize {
   |                  ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/xmalloc.rs:66:18
   |
66 |     if n_usize > usize::MAX / s_usize {
   |                  ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
  --> src/xmalloc.rs:66:18
   |
66 |     if n_usize > usize::MAX / s_usize {
   |                  ^^^^^^^^^^^^^^^^^^^^
   |
   = help: division of integers may cause loss of precision. consider using floats
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: unsafe block missing a safety comment
  --> src/xmalloc.rs:68:20
   |
68 |             return unsafe { _gl_alloc_nomem() }; // Call the unsafe function within an unsafe block
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
  --> src/xmalloc.rs:70:16
   |
70 |         return std::ptr::null_mut(); // Return a null pointer
   |                ^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: arithmetic detected
  --> src/xmalloc.rs:72:18
   |
72 |     if s_usize > usize::MAX / n_usize {
   |                  ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/xmalloc.rs:72:18
   |
72 |     if s_usize > usize::MAX / n_usize {
   |                  ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
  --> src/xmalloc.rs:72:18
   |
72 |     if s_usize > usize::MAX / n_usize {
   |                  ^^^^^^^^^^^^^^^^^^^^
   |
   = help: division of integers may cause loss of precision. consider using floats
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: unsafe block missing a safety comment
  --> src/xmalloc.rs:74:20
   |
74 |             return unsafe { _gl_alloc_nomem() }; // Call the unsafe function within an unsafe block
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
  --> src/xmalloc.rs:76:16
   |
76 |         return std::ptr::null_mut(); // Return a null pointer
   |                ^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: arithmetic detected
  --> src/xmalloc.rs:78:22
   |
78 |     let total_size = n_usize * s_usize;
   |                      ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/xmalloc.rs:78:22
   |
78 |     let total_size = n_usize * s_usize;
   |                      ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: `as` casting between raw pointers without changing its mutability
  --> src/xmalloc.rs:81:5
   |
81 |     Box::into_raw(boxed_slice) as *mut libc::c_void
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `Box::into_raw(boxed_slice).cast::<libc::c_void>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unneeded `return` statement
  --> src/xmalloc.rs:94:9
   |
94 |         return p;
   |         ^^^^^^^^^ help: remove `return`: `p`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
  --> src/xmalloc.rs:96:9
   |
96 |         return std::ptr::null_mut(); // Handle out of memory or invalid allocation
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `std::ptr::null_mut()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
  --> src/xmalloc.rs:86:8
   |
86 |     if n <= usize::MAX && s <= usize::MAX {
   |        ^^^^^^^^^^^^^^^
   |
   = help: because `usize::MAX` is the maximum value for this type, this comparison is always true
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons

warning: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
  --> src/xmalloc.rs:86:27
   |
86 |     if n <= usize::MAX && s <= usize::MAX {
   |                           ^^^^^^^^^^^^^^^
   |
   = help: because `usize::MAX` is the maximum value for this type, this comparison is always true
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons

warning: unsafe block missing a safety comment
  --> src/xmalloc.rs:93:17
   |
93 |         let p = unsafe { reallocarray(std::ptr::null_mut(), nx.try_into().unwrap(), sx.try_into().unwrap()) };
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
  --> src/xmalloc.rs:93:39
   |
93 |         let p = unsafe { reallocarray(std::ptr::null_mut(), nx.try_into().unwrap(), sx.try_into().unwrap()) };
   |                                       ^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used `unwrap()` on `a Result` value
  --> src/xmalloc.rs:93:61
   |
93 |         let p = unsafe { reallocarray(std::ptr::null_mut(), nx.try_into().unwrap(), sx.try_into().unwrap()) };
   |                                                             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on `a Result` value
  --> src/xmalloc.rs:93:85
   |
93 |         let p = unsafe { reallocarray(std::ptr::null_mut(), nx.try_into().unwrap(), sx.try_into().unwrap()) };
   |                                                                                     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used import from `std` instead of `core`
  --> src/xmalloc.rs:96:16
   |
96 |         return std::ptr::null_mut(); // Handle out of memory or invalid allocation
   |                ^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unneeded `return` statement
   --> src/xmalloc.rs:104:5
    |
104 |     return 0 as *mut libc::c_void;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut libc::c_void`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
   --> src/xmalloc.rs:103:27
    |
103 |     *__errno_location() = 12 as libc::c_int;
    |                           ^^ help: consider adding suffix: `12_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `0 as *mut _` detected
   --> src/xmalloc.rs:104:12
    |
104 |     return 0 as *mut libc::c_void;
    |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing `return` statement
   --> src/xmalloc.rs:112:13
    |
112 |             std::ptr::null_mut()
    |             ^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return std::ptr::null_mut()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/xmalloc.rs:114:13
    |
114 |             ptr as *mut libc::c_void
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return ptr as *mut libc::c_void`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/xmalloc.rs:117:9
    |
117 |         std::ptr::null_mut()
    |         ^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return std::ptr::null_mut()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
   --> src/xmalloc.rs:108:8
    |
108 |     if s <= usize::MAX {
    |        ^^^^^^^^^^^^^^^
    |
    = help: because `usize::MAX` is the maximum value for this type, this comparison is always true
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons

warning: used `unwrap()` on `a Result` value
   --> src/xmalloc.rs:109:22
    |
109 |         let layout = std::alloc::Layout::from_size_align(s, 1).unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used import from `std` instead of `core`
   --> src/xmalloc.rs:109:22
    |
109 |         let layout = std::alloc::Layout::from_size_align(s, 1).unwrap();
    |                      ^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
   --> src/xmalloc.rs:110:19
    |
110 |         let ptr = unsafe { std::alloc::alloc(layout) };
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `alloc`
   --> src/xmalloc.rs:110:28
    |
110 |         let ptr = unsafe { std::alloc::alloc(layout) };
    |                            ^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `alloc`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `core`
   --> src/xmalloc.rs:112:13
    |
112 |             std::ptr::null_mut()
    |             ^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/xmalloc.rs:114:13
    |
114 |             ptr as *mut libc::c_void
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `ptr.cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: used import from `std` instead of `core`
   --> src/xmalloc.rs:117:9
    |
117 |         std::ptr::null_mut()
    |         ^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing `return` statement
   --> src/xmalloc.rs:125:5
    |
125 |     p
    |     ^ help: add `return` as shown: `return p`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
   --> src/xmalloc.rs:123:9
    |
123 |         unsafe { xalloc_die() };
    |         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:129:1
    |
129 | / pub unsafe extern "C" fn xmalloc(mut s: size_t) -> *mut libc::c_void {
130 | |     return check_nonnull(malloc(s));
131 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:130:5
    |
130 |     return check_nonnull(malloc(s));
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `check_nonnull(malloc(s))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:133:1
    |
133 | / pub unsafe extern "C" fn ximalloc(mut s: idx_t) -> *mut libc::c_void {
134 | |     let allocated_memory = imalloc(s.try_into().unwrap());
135 | | return check_nonnull(allocated_memory);
136 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/xmalloc.rs:133:1
    |
133 | / pub unsafe extern "C" fn ximalloc(mut s: idx_t) -> *mut libc::c_void {
134 | |     let allocated_memory = imalloc(s.try_into().unwrap());
135 | | return check_nonnull(allocated_memory);
136 | | }
    | |_^
    |
note: first possible panic found here
   --> src/xmalloc.rs:134:36
    |
134 |     let allocated_memory = imalloc(s.try_into().unwrap());
    |                                    ^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:135:1
    |
135 | return check_nonnull(allocated_memory);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `check_nonnull(allocated_memory)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: used `unwrap()` on `a Result` value
   --> src/xmalloc.rs:134:36
    |
134 |     let allocated_memory = imalloc(s.try_into().unwrap());
    |                                    ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: docs for function returning `Result` missing `# Errors` section
   --> src/xmalloc.rs:138:1
    |
138 | / pub fn xcharalloc(n: usize) -> Result<CString, std::io::Error> {
139 | |     let buffer = vec![0u8; n];
140 | |     CString::from_vec_with_nul(buffer).map_err(|_| std::io::Error::new(std::io::ErrorKind::InvalidInput, "Failed to create CString"))
141 | | }
    | |_^
    |
    = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/xmalloc.rs:140:5
    |
140 |     CString::from_vec_with_nul(buffer).map_err(|_| std::io::Error::new(std::io::ErrorKind::InvalidInput, "Failed to create CString"))
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_vec_with_nul(buffer).map_err(|_| std::io::Error::new(std::io::ErrorKind::InvalidInput, "Failed to create CString"))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: `map_err(|_|...` wildcard pattern discards the original error
   --> src/xmalloc.rs:140:48
    |
140 |     CString::from_vec_with_nul(buffer).map_err(|_| std::io::Error::new(std::io::ErrorKind::InvalidInput, "Failed to create CString"))
    |                                                ^^^
    |
    = note: `-W clippy::map-err-ignore` implied by `-W clippy::restriction`
    = help: consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_err_ignore

warning: missing `return` statement
   --> src/xmalloc.rs:140:52
    |
140 |     CString::from_vec_with_nul(buffer).map_err(|_| std::io::Error::new(std::io::ErrorKind::InvalidInput, "Failed to create CString"))
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return std::io::Error::new(std::io::ErrorKind::InvalidInput, "Failed to create CString")`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:144:1
    |
144 | / pub unsafe extern "C" fn xrealloc(
145 | |     mut p: *mut libc::c_void,
146 | |     mut s: size_t,
147 | | ) -> *mut libc::c_void {
...   |
152 | |     return r;
153 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:152:5
    |
152 |     return r;
    |     ^^^^^^^^^ help: remove `return`: `r`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing `return` statement
   --> src/xmalloc.rs:160:13
    |
160 |             Some(new_vec)
    |             ^^^^^^^^^^^^^ help: add `return` as shown: `return Some(new_vec)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/xmalloc.rs:165:13
    |
165 |             Some(new_vec)
    |             ^^^^^^^^^^^^^ help: add `return` as shown: `return Some(new_vec)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> src/xmalloc.rs:156:5
    |
156 | /     match p {
157 | |         Some(vec) => {
158 | |             let mut new_vec = vec.clone();
159 | |             new_vec.resize(s, 0);
...   |
166 | |         }
167 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
help: try this
    |
156 ~     if let Some(vec) = p {
157 +         let mut new_vec = vec.clone();
158 +         new_vec.resize(s, 0);
159 +         Some(new_vec)
160 +     } else {
161 +         let mut new_vec = Vec::with_capacity(s);
162 +         new_vec.resize(s, 0);
163 +         Some(new_vec)
164 +     }
    |

warning: slow zero-filling initialization
   --> src/xmalloc.rs:164:13
    |
163 |             let mut new_vec = Vec::with_capacity(s);
    |                               --------------------- help: consider replace allocation with: `vec![0; s]`
164 |             new_vec.resize(s, 0);
    |             ^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::slow-vector-initialization` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#slow_vector_initialization

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:171:1
    |
171 | / pub unsafe extern "C" fn xreallocarray(
172 | |     mut p: *mut libc::c_void,
173 | |     mut n: size_t,
174 | |     mut s: size_t,
...   |
180 | |     return r;
181 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:180:5
    |
180 |     return r;
    |     ^^^^^^^^^ help: remove `return`: `r`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing `return` statement
   --> src/xmalloc.rs:188:5
    |
188 |     ptr
    |     ^^^ help: add `return` as shown: `return ptr`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used `expect()` on `an Option` value
   --> src/xmalloc.rs:184:22
    |
184 |     let total_size = n.checked_mul(s).expect("Overflow in allocation size");
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this value is an `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: usage of `mem::forget` on `Drop` type
   --> src/xmalloc.rs:187:5
    |
187 |     std::mem::forget(vec); // Prevent Vec from deallocating the memory
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::mem-forget` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mem_forget

warning: used import from `std` instead of `core`
   --> src/xmalloc.rs:187:5
    |
187 |     std::mem::forget(vec); // Prevent Vec from deallocating the memory
    |     ^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:192:1
    |
192 | / pub unsafe extern "C" fn xnmalloc(mut n: size_t, mut s: size_t) -> *mut libc::c_void {
193 | |     return xreallocarray(0 as *mut libc::c_void, n, s);
194 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:193:5
    |
193 |     return xreallocarray(0 as *mut libc::c_void, n, s);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `xreallocarray(0 as *mut libc::c_void, n, s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/xmalloc.rs:193:26
    |
193 |     return xreallocarray(0 as *mut libc::c_void, n, s);
    |                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: docs for function returning `Result` missing `# Errors` section
   --> src/xmalloc.rs:196:1
    |
196 | / pub fn xinmalloc(n: idx_t, s: idx_t) -> Result<Vec<u8>, io::Error> {
197 | |     let size = n.checked_mul(s).ok_or(io::Error::new(io::ErrorKind::InvalidInput, "Overflow in size calculation"))?;
198 | |     let vec = Vec::with_capacity(size as usize);
199 | |     Ok(vec)
200 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/xmalloc.rs:199:5
    |
199 |     Ok(vec)
    |     ^^^^^^^ help: add `return` as shown: `return Ok(vec)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: use of `ok_or` followed by a function call
   --> src/xmalloc.rs:197:33
    |
197 |     let size = n.checked_mul(s).ok_or(io::Error::new(io::ErrorKind::InvalidInput, "Overflow in size calculation"))?;
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `ok_or_else(|| io::Error::new(io::ErrorKind::InvalidInput, "Overflow in size calculation"))`
    |
    = note: `-W clippy::or-fun-call` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/xmalloc.rs:198:34
    |
198 |     let vec = Vec::with_capacity(size as usize);
    |                                  ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
   --> src/xmalloc.rs:198:34
    |
198 |     let vec = Vec::with_capacity(size as usize);
    |                                  ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:203:1
    |
203 | / pub unsafe extern "C" fn x2realloc(
204 | |     mut p: *mut libc::c_void,
205 | |     mut ps: *mut size_t,
206 | | ) -> *mut libc::c_void {
207 | |     return x2nrealloc(p, ps, 1 as libc::c_int as size_t);
208 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:207:5
    |
207 |     return x2nrealloc(p, ps, 1 as libc::c_int as size_t);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `x2nrealloc(p, ps, 1 as libc::c_int as size_t)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:207:30
    |
207 |     return x2nrealloc(p, ps, 1 as libc::c_int as size_t);
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:210:1
    |
210 | / pub unsafe extern "C" fn x2nrealloc(
211 | |     mut p: *mut libc::c_void,
212 | |     mut pn: *mut size_t,
213 | |     mut s: size_t,
...   |
235 | |     return p;
236 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:235:5
    |
235 |     return p;
    |     ^^^^^^^^^ help: remove `return`: `p`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:218:17
    |
218 |             n = (DEFAULT_MXFAST as libc::c_int as libc::c_ulong).wrapping_div(s);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
   --> src/xmalloc.rs:218:18
    |
218 |             n = (DEFAULT_MXFAST as libc::c_int as libc::c_ulong).wrapping_div(s);
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:220:31
    |
220 |                 .wrapping_add((n == 0) as libc::c_int as libc::c_ulong) as size_t
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:220:31
    |
220 |                 .wrapping_add((n == 0) as libc::c_int as libc::c_ulong) as size_t
    |                               ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(n == 0)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:226:17
    |
226 |                 (n >> 1 as libc::c_int).wrapping_add(1 as libc::c_int as libc::c_ulong),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:226:17
    |
226 |                 (n >> 1 as libc::c_int).wrapping_add(1 as libc::c_int as libc::c_ulong),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:226:54
    |
226 |                 (n >> 1 as libc::c_int).wrapping_add(1 as libc::c_int as libc::c_ulong),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: borrow as raw pointer
   --> src/xmalloc.rs:228:10
    |
228 |         *(&mut n as *mut size_t) = fresh0;
    |          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:238:1
    |
238 | / pub unsafe extern "C" fn xpalloc(
239 | |     mut pa: *mut libc::c_void,
240 | |     mut pn: *mut idx_t,
241 | |     mut n_incr_min: idx_t,
...   |
942 | |     return pa;
943 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function has a cognitive complexity of (131/25)
   --> src/xmalloc.rs:238:26
    |
238 | pub unsafe extern "C" fn xpalloc(
    |                          ^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: this function has too many lines (698/100)
   --> src/xmalloc.rs:238:1
    |
238 | / pub unsafe extern "C" fn xpalloc(
239 | |     mut pa: *mut libc::c_void,
240 | |     mut pn: *mut idx_t,
241 | |     mut n_incr_min: idx_t,
...   |
942 | |     return pa;
943 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: unneeded `return` statement
   --> src/xmalloc.rs:942:5
    |
942 |     return pa;
    |     ^^^^^^^^^^ help: remove `return`: `pa`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
   --> src/xmalloc.rs:252:8
    |
252 |     if 0 as libc::c_int as libc::c_long <= n_max && n_max < n {
    |        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:597:15
    |
597 |         *pn = 0 as libc::c_int as idx_t;
    |               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:603:39
    |
603 |             fresh13 as libc::c_int != 0
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:604:20
    |
604 |                 || 0 as libc::c_int as libc::c_long <= n_max && n_max < n
    |                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:605:25
    |
605 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:605:56
    |
605 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                                                        ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:606:29
    |
606 |                     && ((if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:606:49
    |
606 |                     && ((if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:607:25
    |
607 |                         0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:610:26
    |
610 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:611:27
    |
611 |                         < 0 as libc::c_int as libc::c_long
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:612:29
    |
612 |                     && ((if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:612:49
    |
612 |                     && ((if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:613:25
    |
613 |                         0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:616:26
    |
616 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:617:27
    |
617 |                         < 0 as libc::c_int as libc::c_long
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:618:32
    |
618 |                     && (if s < 0 as libc::c_int as libc::c_long {
    |                                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:619:32
    |
619 |                         if n < 0 as libc::c_int as libc::c_long {
    |                                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:620:37
    |
620 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:620:57
    |
620 | ...                   if ((if 1 as libc::c_int != 0 {
    |                                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:621:33
    |
621 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:623:37
    |
623 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:623:57
    |
623 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:624:37
    |
624 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:626:39
    |
626 | ...                   -(1 as libc::c_int) as idx_t
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:628:34
    |
628 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:629:35
    |
629 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:631:40
    |
631 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:633:51
    |
633 | ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |                                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:633:71
    |
633 | ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |                                                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:634:37
    |
634 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:637:38
    |
637 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:638:39
    |
638 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:640:46
    |
640 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:640:66
    |
640 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:641:41
    |
641 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:644:42
    |
644 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:648:43
    |
648 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:649:43
    |
649 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:650:43
    |
650 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:652:41
    |
652 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:652:61
    |
652 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:653:41
    |
653 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:656:42
    |
656 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:657:38
    |
657 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:660:53
    |
660 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:660:73
    |
660 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:661:45
    |
661 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:664:46
    |
664 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:665:47
    |
665 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:667:52
    |
667 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:667:72
    |
667 | ...                   ((((if 1 as libc::c_int != 0 {
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:668:49
    |
668 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:671:50
    |
671 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:675:51
    |
675 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:676:51
    |
676 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:677:51
    |
677 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:679:49
    |
679 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:679:69
    |
679 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:680:49
    |
680 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:683:50
    |
683 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:686:39
    |
686 | ...                   ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:687:39
    |
687 | ...                   }) != 0
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:689:41
    |
689 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:689:61
    |
689 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:690:41
    |
690 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:693:44
    |
693 | ...                   }) + -(1 as libc::c_int) as idx_t
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:698:39
    |
698 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:699:41
    |
699 | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    |                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:703:45
    |
703 | ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |                                       ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:703:65
    |
703 | ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |                                                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:704:33
    |
704 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:706:37
    |
706 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:706:57
    |
706 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:707:37
    |
707 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:710:38
    |
710 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:711:34
    |
711 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:712:35
    |
712 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:714:42
    |
714 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:714:62
    |
714 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:715:37
    |
715 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:717:41
    |
717 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:717:61
    |
717 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:718:41
    |
718 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:721:42
    |
721 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:722:38
    |
722 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:726:39
    |
726 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:727:39
    |
727 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:728:39
    |
728 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:730:37
    |
730 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:730:57
    |
730 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:731:37
    |
731 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:733:41
    |
733 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:733:61
    |
733 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:734:41
    |
734 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:737:42
    |
737 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:738:38
    |
738 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:739:34
    |
739 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:741:39
    |
741 | ...                   (((if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:741:59
    |
741 | ...                   (((if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:742:37
    |
742 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:745:38
    |
745 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:746:49
    |
746 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:746:69
    |
746 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:747:41
    |
747 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:749:45
    |
749 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:749:65
    |
749 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:750:45
    |
750 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:753:46
    |
753 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:754:42
    |
754 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:755:43
    |
755 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:757:48
    |
757 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:757:68
    |
757 | ...                   ((((if 1 as libc::c_int != 0 {
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:758:45
    |
758 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:760:49
    |
760 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:760:69
    |
760 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:761:49
    |
761 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:764:50
    |
764 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:765:46
    |
765 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:769:47
    |
769 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:770:47
    |
770 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:771:47
    |
771 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:773:45
    |
773 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:773:65
    |
773 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:774:45
    |
774 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:776:49
    |
776 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:776:69
    |
776 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:777:49
    |
777 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:780:50
    |
780 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:781:46
    |
781 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:784:35
    |
784 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:785:43
    |
785 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:785:63
    |
785 | ...                   < (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:786:41
    |
786 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:789:42
    |
789 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:790:35
    |
790 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:790:47
    |
790 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:792:41
    |
792 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:792:61
    |
792 | ...                   if ((if 1 as libc::c_int != 0 {
    |                                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:793:37
    |
793 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:796:38
    |
796 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:797:39
    |
797 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:799:39
    |
799 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:800:47
    |
800 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:802:39
    |
802 | ...                   ((0 as libc::c_int as libc::c_long) < n
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:803:47
    |
803 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:804:47
    |
804 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:805:51
    |
805 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:808:34
    |
808 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:812:33
    |
812 |                         if s == 0 as libc::c_int as libc::c_long {
    |                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:813:29
    |
813 | ...                   0 as libc::c_int
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:815:36
    |
815 | ...                   if n < 0 as libc::c_int as libc::c_long {
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:816:49
    |
816 | ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |                                       ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:816:69
    |
816 | ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |                                                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:817:37
    |
817 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:819:41
    |
819 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:819:61
    |
819 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:820:41
    |
820 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:823:42
    |
823 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:824:38
    |
824 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:825:39
    |
825 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:827:46
    |
827 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:827:66
    |
827 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:828:41
    |
828 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:830:45
    |
830 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:830:65
    |
830 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:831:45
    |
831 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:834:46
    |
834 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:835:42
    |
835 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:839:43
    |
839 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:840:43
    |
840 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:841:43
    |
841 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:843:41
    |
843 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:843:61
    |
843 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:844:41
    |
844 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:846:45
    |
846 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:846:65
    |
846 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:847:45
    |
847 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:850:46
    |
850 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:851:42
    |
851 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:852:38
    |
852 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:854:43
    |
854 | ...                   (((if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:854:63
    |
854 | ...                   (((if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:855:41
    |
855 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:858:42
    |
858 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:859:53
    |
859 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:859:73
    |
859 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:860:45
    |
860 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:862:49
    |
862 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:862:69
    |
862 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:863:49
    |
863 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:866:50
    |
866 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:867:46
    |
867 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:868:47
    |
868 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:870:52
    |
870 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:870:72
    |
870 | ...                   ((((if 1 as libc::c_int != 0 {
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:871:49
    |
871 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:873:53
    |
873 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:873:73
    |
873 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:874:53
    |
874 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:877:54
    |
877 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:878:50
    |
878 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:882:51
    |
882 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:883:51
    |
883 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:884:51
    |
884 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:886:49
    |
886 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:886:69
    |
886 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:887:49
    |
887 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:889:53
    |
889 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:889:73
    |
889 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:890:53
    |
890 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:893:54
    |
893 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:894:50
    |
894 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:897:39
    |
897 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:898:47
    |
898 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:898:67
    |
898 | ...                   < (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:899:45
    |
899 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:902:46
    |
902 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:903:39
    |
903 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:903:51
    |
903 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:905:45
    |
905 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:905:65
    |
905 | ...                   if ((if 1 as libc::c_int != 0 {
    |                                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:906:41
    |
906 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:909:42
    |
909 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:910:43
    |
910 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:912:43
    |
912 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:913:51
    |
913 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:915:45
    |
915 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:916:47
    |
916 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:917:51
    |
917 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:920:38
    |
920 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:923:36
    |
923 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                          ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:926:27
    |
926 |                     }) != 0
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:930:21
    |
930 |                     1 as libc::c_int
    |                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:935:23
    |
935 |                 }) != 0
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: arithmetic detected
   --> src/xmalloc.rs:247:47
    |
247 |     let (fresh2, fresh3) = n0.overflowing_add(n0 >> 1 as libc::c_int);
    |                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:247:47
    |
247 |     let (fresh2, fresh3) = n0.overflowing_add(n0 >> 1 as libc::c_int);
    |                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: borrow as raw pointer
   --> src/xmalloc.rs:248:6
    |
248 |     *(&mut n as *mut idx_t) = fresh2;
    |      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:252:8
    |
252 |     if 0 as libc::c_int as libc::c_long <= n_max && n_max < n {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u64` to `i64` may wrap around the value
   --> src/xmalloc.rs:256:38
    |
256 |       let mut adjusted_nbytes: idx_t = (if if (0 as libc::c_int as idx_t)
    |  ______________________________________^
257 | |         < -(1 as libc::c_int) as idx_t
258 | |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
259 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
...   |
590 | |         }) as libc::c_ulong
591 | |     }) as idx_t;
    | |_______________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:256:38
    |
256 |       let mut adjusted_nbytes: idx_t = (if if (0 as libc::c_int as idx_t)
    |  ______________________________________^
257 | |         < -(1 as libc::c_int) as idx_t
258 | |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
259 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
...   |
590 | |         }) as libc::c_ulong
591 | |     }) as idx_t;
    | |______^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:256:45
    |
256 |     let mut adjusted_nbytes: idx_t = (if if (0 as libc::c_int as idx_t)
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:257:11
    |
257 |         < -(1 as libc::c_int) as idx_t
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:257:11
    |
257 |         < -(1 as libc::c_int) as idx_t
    |           ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:257:11
    |
257 |         < -(1 as libc::c_int) as idx_t
    |           ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:258:12
    |
258 |           && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |  ____________^
259 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |_______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:258:12
    |
258 |           && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |  ____________^
259 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |_______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:258:13
    |
258 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:258:41
    |
258 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:259:15
    |
259 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:259:51
    |
259 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:260:12
    |
260 |           && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |  ____________^
261 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |_______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:260:12
    |
260 |           && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |  ____________^
261 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |_______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:260:13
    |
260 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:260:41
    |
260 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:261:15
    |
261 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:261:51
    |
261 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:262:20
    |
262 |         && (if s < 0 as libc::c_int as libc::c_long {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:263:20
    |
263 |             if n < 0 as libc::c_int as libc::c_long {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:264:20
    |
264 |                   if ((if 1 as libc::c_int != 0 {
    |  ____________________^
265 | |                     0 as libc::c_int as libc::c_long
266 | |                 } else {
267 | |                     (if 1 as libc::c_int != 0 {
...   |
271 | |                     }) + s
272 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:264:20
    |
264 |                   if ((if 1 as libc::c_int != 0 {
    |  ____________________^
265 | |                     0 as libc::c_int as libc::c_long
266 | |                 } else {
267 | |                     (if 1 as libc::c_int != 0 {
...   |
271 | |                     }) + s
272 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:264:21
    |
264 |                   if ((if 1 as libc::c_int != 0 {
    |  _____________________^
265 | |                     0 as libc::c_int as libc::c_long
266 | |                 } else {
267 | |                     (if 1 as libc::c_int != 0 {
...   |
271 | |                     }) + s
272 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |__________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:265:21
    |
265 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:267:21
    |
267 | /                     (if 1 as libc::c_int != 0 {
268 | |                         0 as libc::c_int as libc::c_long
269 | |                     } else {
270 | |                         -(1 as libc::c_int) as idx_t
271 | |                     }) + s
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:268:25
    |
268 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:270:25
    |
270 |                         -(1 as libc::c_int) as idx_t
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:272:22
    |
272 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:272:58
    |
272 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:274:21
    |
274 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(n < -(1 as libc::c_int) as idx_t / s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:274:26
    |
274 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:274:26
    |
274 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xmalloc.rs:274:26
    |
274 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:274:26
    |
274 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:276:21
    |
276 | /                     ((if (if (if ((if 1 as libc::c_int != 0 {
277 | |                         0 as libc::c_int as libc::c_long
278 | |                     } else {
279 | |                         s
...   |
341 | |                         -(1 as libc::c_int) as idx_t / -s
342 | |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    | |_________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
276 ~                     i32::from((if (if (if ((if 1 as libc::c_int != 0 {
277 +                         0 as libc::c_int as libc::c_long
278 +                     } else {
279 +                         s
280 +                     }) - 1 as libc::c_int as libc::c_long)
281 +                         < 0 as libc::c_int as libc::c_long
282 +                     {
283 +                         !(((((if 1 as libc::c_int != 0 {
284 +                             0 as libc::c_int as libc::c_long
285 +                         } else {
286 +                             s
287 +                         }) + 1 as libc::c_int as libc::c_long)
288 +                             << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
289 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
290 +                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
291 +                             - 1 as libc::c_int as libc::c_long)
292 +                             * 2 as libc::c_int as libc::c_long
293 +                             + 1 as libc::c_int as libc::c_long)
294 +                     } else {
295 +                         (if 1 as libc::c_int != 0 {
296 +                             0 as libc::c_int as libc::c_long
297 +                         } else {
298 +                             s
299 +                         }) + 0 as libc::c_int as libc::c_long
300 +                     }) < 0 as libc::c_int as libc::c_long
301 +                     {
302 +                         (s
303 +                             < -(if ((if 1 as libc::c_int != 0 {
304 +                                 0 as libc::c_int as libc::c_long
305 +                             } else {
306 +                                 s
307 +                             }) - 1 as libc::c_int as libc::c_long)
308 +                                 < 0 as libc::c_int as libc::c_long
309 +                             {
310 +                                 ((((if 1 as libc::c_int != 0 {
311 +                                     0 as libc::c_int as libc::c_long
312 +                                 } else {
313 +                                     s
314 +                                 }) + 1 as libc::c_int as libc::c_long)
315 +                                     << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
316 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
317 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
318 +                                     - 1 as libc::c_int as libc::c_long)
319 +                                     * 2 as libc::c_int as libc::c_long
320 +                                     + 1 as libc::c_int as libc::c_long
321 +                             } else {
322 +                                 (if 1 as libc::c_int != 0 {
323 +                                     0 as libc::c_int as libc::c_long
324 +                                 } else {
325 +                                     s
326 +                                 }) - 1 as libc::c_int as libc::c_long
327 +                             })) as libc::c_int
328 +                     } else {
329 +                         ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
330 +                     }) != 0
331 +                     {
332 +                         (if 1 as libc::c_int != 0 {
333 +                             0 as libc::c_int as libc::c_long
334 +                         } else {
335 +                             s
336 +                         }) + -(1 as libc::c_int) as idx_t
337 +                             >> (::core::mem::size_of::<idx_t>() as libc::c_ulong)
338 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
339 +                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
340 +                     } else {
341 +                         -(1 as libc::c_int) as idx_t / -s
342 +                     }) <= -(1 as libc::c_int) as libc::c_long - n)
    |

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:276:22
    |
276 |                       ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ______________________^
277 | |                         0 as libc::c_int as libc::c_long
278 | |                     } else {
279 | |                         s
...   |
341 | |                         -(1 as libc::c_int) as idx_t / -s
342 | |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: arithmetic detected
   --> src/xmalloc.rs:276:34
    |
276 |                       ((if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________________^
277 | |                         0 as libc::c_int as libc::c_long
278 | |                     } else {
279 | |                         s
280 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:276:34
    |
276 |                       ((if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________________^
277 | |                         0 as libc::c_int as libc::c_long
278 | |                     } else {
279 | |                         s
280 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:276:35
    |
276 |                       ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ___________________________________^
277 | |                         0 as libc::c_int as libc::c_long
278 | |                     } else {
279 | |                         s
280 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:277:25
    |
277 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:280:26
    |
280 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:281:27
    |
281 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:283:26
    |
283 |                           !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
284 | |                             0 as libc::c_int as libc::c_long
285 | |                         } else {
286 | |                             s
...   |
292 | |                             * 2 as libc::c_int as libc::c_long
293 | |                             + 1 as libc::c_int as libc::c_long)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:283:26
    |
283 |                           !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
284 | |                             0 as libc::c_int as libc::c_long
285 | |                         } else {
286 | |                             s
...   |
292 | |                             * 2 as libc::c_int as libc::c_long
293 | |                             + 1 as libc::c_int as libc::c_long)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:283:30
    |
283 |                           !(((((if 1 as libc::c_int != 0 {
    |  ______________________________^
284 | |                             0 as libc::c_int as libc::c_long
285 | |                         } else {
286 | |                             s
287 | |                         }) + 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:284:29
    |
284 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:287:30
    |
287 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:289:47
    |
289 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:290:47
    |
290 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:291:31
    |
291 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:292:31
    |
292 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:293:31
    |
293 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:295:25
    |
295 | /                         (if 1 as libc::c_int != 0 {
296 | |                             0 as libc::c_int as libc::c_long
297 | |                         } else {
298 | |                             s
299 | |                         }) + 0 as libc::c_int as libc::c_long
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:295:25
    |
295 | /                         (if 1 as libc::c_int != 0 {
296 | |                             0 as libc::c_int as libc::c_long
297 | |                         } else {
298 | |                             s
299 | |                         }) + 0 as libc::c_int as libc::c_long
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:295:25
    |
295 | /                         (if 1 as libc::c_int != 0 {
296 | |                             0 as libc::c_int as libc::c_long
297 | |                         } else {
298 | |                             s
299 | |                         }) + 0 as libc::c_int as libc::c_long
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:296:29
    |
296 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:299:30
    |
299 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:300:26
    |
300 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:302:25
    |
302 | /                         (s
303 | |                             < -(if ((if 1 as libc::c_int != 0 {
304 | |                                 0 as libc::c_int as libc::c_long
305 | |                             } else {
...   |
326 | |                                 }) - 1 as libc::c_int as libc::c_long
327 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
302 ~                         i32::from(s
303 +                             < -(if ((if 1 as libc::c_int != 0 {
304 +                                 0 as libc::c_int as libc::c_long
305 +                             } else {
306 +                                 s
307 +                             }) - 1 as libc::c_int as libc::c_long)
308 +                                 < 0 as libc::c_int as libc::c_long
309 +                             {
310 +                                 ((((if 1 as libc::c_int != 0 {
311 +                                     0 as libc::c_int as libc::c_long
312 +                                 } else {
313 +                                     s
314 +                                 }) + 1 as libc::c_int as libc::c_long)
315 +                                     << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
316 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
317 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
318 +                                     - 1 as libc::c_int as libc::c_long)
319 +                                     * 2 as libc::c_int as libc::c_long
320 +                                     + 1 as libc::c_int as libc::c_long
321 +                             } else {
322 +                                 (if 1 as libc::c_int != 0 {
323 +                                     0 as libc::c_int as libc::c_long
324 +                                 } else {
325 +                                     s
326 +                                 }) - 1 as libc::c_int as libc::c_long
327 +                             }))
    |

warning: arithmetic detected
   --> src/xmalloc.rs:303:31
    |
303 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
304 | | ...                       0 as libc::c_int as libc::c_long
305 | | ...                   } else {
306 | | ...                       s
...   |
326 | | ...                       }) - 1 as libc::c_int as libc::c_long
327 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:303:31
    |
303 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
304 | | ...                       0 as libc::c_int as libc::c_long
305 | | ...                   } else {
306 | | ...                       s
...   |
326 | | ...                       }) - 1 as libc::c_int as libc::c_long
327 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:303:37
    |
303 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
304 | | ...                       0 as libc::c_int as libc::c_long
305 | | ...                   } else {
306 | | ...                       s
307 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:304:33
    |
304 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:307:34
    |
307 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:308:35
    |
308 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:310:36
    |
310 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
311 | | ...                       0 as libc::c_int as libc::c_long
312 | | ...                   } else {
313 | | ...                       s
314 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:311:37
    |
311 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:314:38
    |
314 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:316:55
    |
316 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:317:55
    |
317 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:318:39
    |
318 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:319:39
    |
319 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:320:39
    |
320 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:322:33
    |
322 | / ...                   (if 1 as libc::c_int != 0 {
323 | | ...                       0 as libc::c_int as libc::c_long
324 | | ...                   } else {
325 | | ...                       s
326 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:323:37
    |
323 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:326:38
    |
326 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:329:25
    |
329 |                         ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from((0 as libc::c_int as libc::c_long) < s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:329:26
    |
329 |                         ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1158:1
     |
1158 | / pub fn quotearg_buffer(
1159 | |     buffer: &mut [u8],
1160 | |     arg: &[u8],
1161 | |     o: Option<&quoting_options>,
...    |
1179 | |     r.try_into().unwrap()
1180 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:332:25
    |
332 | /                         (if 1 as libc::c_int != 0 {
333 | |                             0 as libc::c_int as libc::c_long
334 | |                         } else {
335 | |                             s
...   |
338 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
339 | |                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1158:1
     |
1158 | / pub fn quotearg_buffer(
1159 | |     buffer: &mut [u8],
1160 | |     arg: &[u8],
1161 | |     o: Option<&quoting_options>,
...    |
1179 | |     r.try_into().unwrap()
1180 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:332:25
    |
332 | /                         (if 1 as libc::c_int != 0 {
333 | |                             0 as libc::c_int as libc::c_long
334 | |                         } else {
335 | |                             s
...   |
338 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
339 | |                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:332:25
    |
332 | /                         (if 1 as libc::c_int != 0 {
333 | |                             0 as libc::c_int as libc::c_long
334 | |                         } else {
335 | |                             s
336 | |                         }) + -(1 as libc::c_int) as idx_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:333:29
    |
333 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:336:30
    |
336 |                         }) + -(1 as libc::c_int) as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:338:47
    |
338 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:339:47
    |
339 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
   --> src/xmalloc.rs:341:25
    |
341 |                         -(1 as libc::c_int) as idx_t / -s
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer division
   --> src/xmalloc.rs:341:25
    |
341 |                         -(1 as libc::c_int) as idx_t / -s
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:341:25
    |
341 |                         -(1 as libc::c_int) as idx_t / -s
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: integer arithmetic detected
   --> src/xmalloc.rs:341:25
    |
341 |                         -(1 as libc::c_int) as idx_t / -s
    |                         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:341:56
    |
341 |                         -(1 as libc::c_int) as idx_t / -s
    |                                                        ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:342:27
    |
342 |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1183:1
     |
1183 | / pub fn quotearg_alloc(
1184 | |     arg: &CStr,
1185 | |     argsize: usize,
1186 | |     o: &quoting_options,
...    |
1196 | |     unsafe { CString::from_raw(result_ptr) } // Convert the raw pointer back to CString
1197 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:342:27
    |
342 |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1183:1
     |
1183 | / pub fn quotearg_alloc(
1184 | |     arg: &CStr,
1185 | |     argsize: usize,
1186 | |     o: &quoting_options,
...    |
1196 | |     unsafe { CString::from_raw(result_ptr) } // Convert the raw pointer back to CString
1197 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:342:27
    |
342 |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:345:28
    |
345 |                   if (if (if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
346 | |                     0 as libc::c_int as libc::c_long
347 | |                 } else {
348 | |                     (if 1 as libc::c_int != 0 {
...   |
352 | |                     }) + 0 as libc::c_int as idx_t
353 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:345:28
    |
345 |                   if (if (if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
346 | |                     0 as libc::c_int as libc::c_long
347 | |                 } else {
348 | |                     (if 1 as libc::c_int != 0 {
...   |
352 | |                     }) + 0 as libc::c_int as idx_t
353 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:345:29
    |
345 |                   if (if (if ((if 1 as libc::c_int != 0 {
    |  _____________________________^
346 | |                     0 as libc::c_int as libc::c_long
347 | |                 } else {
348 | |                     (if 1 as libc::c_int != 0 {
...   |
352 | |                     }) + 0 as libc::c_int as idx_t
353 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |__________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:346:21
    |
346 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:348:21
    |
348 | /                     (if 1 as libc::c_int != 0 {
349 | |                         0 as libc::c_int as libc::c_long
350 | |                     } else {
351 | |                         s
352 | |                     }) + 0 as libc::c_int as idx_t
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:349:25
    |
349 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:352:26
    |
352 |                     }) + 0 as libc::c_int as idx_t
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:353:22
    |
353 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:353:58
    |
353 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1200:1
     |
1200 | / pub unsafe extern "C" fn quotearg_alloc_mem(
1201 | |     mut arg: *const libc::c_char,
1202 | |     mut argsize: size_t,
1203 | |     mut size: *mut size_t,
...    |
1246 | |     return buf;
1247 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:355:22
    |
355 |                       !(((((if 1 as libc::c_int != 0 {
    |  ______________________^
356 | |                         0 as libc::c_int as libc::c_long
357 | |                     } else {
358 | |                         (if 1 as libc::c_int != 0 {
...   |
368 | |                         * 2 as libc::c_int as libc::c_long
369 | |                         + 1 as libc::c_int as libc::c_long)
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1200:1
     |
1200 | / pub unsafe extern "C" fn quotearg_alloc_mem(
1201 | |     mut arg: *const libc::c_char,
1202 | |     mut argsize: size_t,
1203 | |     mut size: *mut size_t,
...    |
1246 | |     return buf;
1247 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:355:22
    |
355 |                       !(((((if 1 as libc::c_int != 0 {
    |  ______________________^
356 | |                         0 as libc::c_int as libc::c_long
357 | |                     } else {
358 | |                         (if 1 as libc::c_int != 0 {
...   |
368 | |                         * 2 as libc::c_int as libc::c_long
369 | |                         + 1 as libc::c_int as libc::c_long)
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:355:26
    |
355 |                       !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
356 | |                         0 as libc::c_int as libc::c_long
357 | |                     } else {
358 | |                         (if 1 as libc::c_int != 0 {
...   |
362 | |                         }) + 0 as libc::c_int as idx_t
363 | |                     }) + 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:356:25
    |
356 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:358:25
    |
358 | /                         (if 1 as libc::c_int != 0 {
359 | |                             0 as libc::c_int as libc::c_long
360 | |                         } else {
361 | |                             s
362 | |                         }) + 0 as libc::c_int as idx_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:359:29
    |
359 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:362:30
    |
362 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:363:26
    |
363 |                     }) + 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:365:43
    |
365 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:366:43
    |
366 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:367:27
    |
367 |                         - 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:368:27
    |
368 |                         * 2 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a static
    --> src/quotearg.rs:1248:1
     |
1248 | static mut slot0: [libc::c_char; 256] = [0; 256];
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:369:27
    |
369 |                         + 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a static
    --> src/quotearg.rs:1249:1
     |
1249 | static mut nslots: libc::c_int = 1 as libc::c_int;
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:371:21
    |
371 | /                     (if 1 as libc::c_int != 0 {
372 | |                         0 as libc::c_int as libc::c_long
373 | |                     } else {
374 | |                         (if 1 as libc::c_int != 0 {
...   |
378 | |                         }) + 0 as libc::c_int as idx_t
379 | |                     }) + 0 as libc::c_int as libc::c_long
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:371:21
    |
371 | /                     (if 1 as libc::c_int != 0 {
372 | |                         0 as libc::c_int as libc::c_long
373 | |                     } else {
374 | |                         (if 1 as libc::c_int != 0 {
...   |
378 | |                         }) + 0 as libc::c_int as idx_t
379 | |                     }) + 0 as libc::c_int as libc::c_long
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:371:21
    |
371 | /                     (if 1 as libc::c_int != 0 {
372 | |                         0 as libc::c_int as libc::c_long
373 | |                     } else {
374 | |                         (if 1 as libc::c_int != 0 {
...   |
378 | |                         }) + 0 as libc::c_int as idx_t
379 | |                     }) + 0 as libc::c_int as libc::c_long
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a static
    --> src/quotearg.rs:1250:1
     |
1250 | / static mut slotvec0: slotvec = unsafe {
1251 | |     {
1252 | |         let mut init = slotvec {
1253 | |             size: ::core::mem::size_of::<[libc::c_char; 256]>() as libc::c_ulong,
...    |
1257 | |     }
1258 | | };
     | |__^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:372:25
    |
372 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:374:25
    |
374 | /                         (if 1 as libc::c_int != 0 {
375 | |                             0 as libc::c_int as libc::c_long
376 | |                         } else {
377 | |                             s
378 | |                         }) + 0 as libc::c_int as idx_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a static
    --> src/quotearg.rs:1259:1
     |
1259 | / static mut slotvec: *mut slotvec = unsafe {
1260 | |     &slotvec0 as *const slotvec as *mut slotvec
1261 | | };
     | |__^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:375:29
    |
375 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:378:30
    |
378 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:379:26
    |
379 |                     }) + 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:380:22
    |
380 |                 }) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:382:21
    |
382 | /                     (((if 1 as libc::c_int != 0 {
383 | |                         0 as libc::c_int as libc::c_long
384 | |                     } else {
385 | |                         s
...   |
422 | |                             }) - 1 as libc::c_int as libc::c_long
423 | |                         })) as libc::c_int
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
382 ~                     i32::from(((if 1 as libc::c_int != 0 {
383 +                         0 as libc::c_int as libc::c_long
384 +                     } else {
385 +                         s
386 +                     }) + 0 as libc::c_int as idx_t)
387 +                         < -(if ((if 1 as libc::c_int != 0 {
388 +                             0 as libc::c_int as libc::c_long
389 +                         } else {
390 +                             (if 1 as libc::c_int != 0 {
391 +                                 0 as libc::c_int as libc::c_long
392 +                             } else {
393 +                                 s
394 +                             }) + 0 as libc::c_int as idx_t
395 +                         }) - 1 as libc::c_int as libc::c_long)
396 +                             < 0 as libc::c_int as libc::c_long
397 +                         {
398 +                             ((((if 1 as libc::c_int != 0 {
399 +                                 0 as libc::c_int as libc::c_long
400 +                             } else {
401 +                                 (if 1 as libc::c_int != 0 {
402 +                                     0 as libc::c_int as libc::c_long
403 +                                 } else {
404 +                                     s
405 +                                 }) + 0 as libc::c_int as idx_t
406 +                             }) + 1 as libc::c_int as libc::c_long)
407 +                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
408 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
409 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
410 +                                 - 1 as libc::c_int as libc::c_long)
411 +                                 * 2 as libc::c_int as libc::c_long
412 +                                 + 1 as libc::c_int as libc::c_long
413 +                         } else {
414 +                             (if 1 as libc::c_int != 0 {
415 +                                 0 as libc::c_int as libc::c_long
416 +                             } else {
417 +                                 (if 1 as libc::c_int != 0 {
418 +                                     0 as libc::c_int as libc::c_long
419 +                                 } else {
420 +                                     s
421 +                                 }) + 0 as libc::c_int as idx_t
422 +                             }) - 1 as libc::c_int as libc::c_long
423 +                         }))
    |

warning: missing documentation for a function
    --> src/quotearg.rs:1263:1
     |
1263 | / pub unsafe extern "C" fn quotearg_free() {
1264 | |     let mut sv: *mut slotvec = slotvec;
1265 | |     let mut i: libc::c_int = 0;
1266 | |     i = 1 as libc::c_int;
...    |
1281 | |     nslots = 1 as libc::c_int;
1282 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1263:1
     |
1263 | / pub unsafe extern "C" fn quotearg_free() {
1264 | |     let mut sv: *mut slotvec = slotvec;
1265 | |     let mut i: libc::c_int = 0;
1266 | |     i = 1 as libc::c_int;
...    |
1281 | |     nslots = 1 as libc::c_int;
1282 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: arithmetic detected
   --> src/xmalloc.rs:382:22
    |
382 |                       (((if 1 as libc::c_int != 0 {
    |  ______________________^
383 | |                         0 as libc::c_int as libc::c_long
384 | |                     } else {
385 | |                         s
386 | |                     }) + 0 as libc::c_int as idx_t)
    | |___________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:382:22
    |
382 |                       (((if 1 as libc::c_int != 0 {
    |  ______________________^
383 | |                         0 as libc::c_int as libc::c_long
384 | |                     } else {
385 | |                         s
386 | |                     }) + 0 as libc::c_int as idx_t)
    | |___________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:382:23
    |
382 |                       (((if 1 as libc::c_int != 0 {
    |  _______________________^
383 | |                         0 as libc::c_int as libc::c_long
384 | |                     } else {
385 | |                         s
386 | |                     }) + 0 as libc::c_int as idx_t)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:383:25
    |
383 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:386:26
    |
386 |                     }) + 0 as libc::c_int as idx_t)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:387:27
    |
387 |                           < -(if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
388 | |                             0 as libc::c_int as libc::c_long
389 | |                         } else {
390 | |                             (if 1 as libc::c_int != 0 {
...   |
422 | |                             }) - 1 as libc::c_int as libc::c_long
423 | |                         })) as libc::c_int
    | |__________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:387:27
    |
387 |                           < -(if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
388 | |                             0 as libc::c_int as libc::c_long
389 | |                         } else {
390 | |                             (if 1 as libc::c_int != 0 {
...   |
422 | |                             }) - 1 as libc::c_int as libc::c_long
423 | |                         })) as libc::c_int
    | |__________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:387:33
    |
387 |                           < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________________^
388 | |                             0 as libc::c_int as libc::c_long
389 | |                         } else {
390 | |                             (if 1 as libc::c_int != 0 {
...   |
394 | |                             }) + 0 as libc::c_int as idx_t
395 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:388:29
    |
388 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:390:29
    |
390 | / ...                   (if 1 as libc::c_int != 0 {
391 | | ...                       0 as libc::c_int as libc::c_long
392 | | ...                   } else {
393 | | ...                       s
394 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:391:33
    |
391 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:394:34
    |
394 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1283:1
     |
1283 | / unsafe extern "C" fn quotearg_n_options(
1284 | |     mut n: libc::c_int,
1285 | |     mut arg: *const libc::c_char,
1286 | |     mut argsize: size_t,
...    |
1360 | |     return val;
1361 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:395:30
    |
395 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:396:31
    |
396 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:398:32
    |
398 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
399 | | ...                       0 as libc::c_int as libc::c_long
400 | | ...                   } else {
401 | | ...                       (if 1 as libc::c_int != 0 {
...   |
405 | | ...                       }) + 0 as libc::c_int as idx_t
406 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:399:33
    |
399 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:401:33
    |
401 | / ...                   (if 1 as libc::c_int != 0 {
402 | | ...                       0 as libc::c_int as libc::c_long
403 | | ...                   } else {
404 | | ...                       s
405 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:402:37
    |
402 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:405:38
    |
405 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:406:34
    |
406 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:408:51
    |
408 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:409:51
    |
409 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:410:35
    |
410 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:411:35
    |
411 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:412:35
    |
412 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:414:29
    |
414 | / ...                   (if 1 as libc::c_int != 0 {
415 | | ...                       0 as libc::c_int as libc::c_long
416 | | ...                   } else {
417 | | ...                       (if 1 as libc::c_int != 0 {
...   |
421 | | ...                       }) + 0 as libc::c_int as idx_t
422 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:415:33
    |
415 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:417:33
    |
417 | / ...                   (if 1 as libc::c_int != 0 {
418 | | ...                       0 as libc::c_int as libc::c_long
419 | | ...                   } else {
420 | | ...                       s
421 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:418:37
    |
418 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:421:38
    |
421 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:422:34
    |
422 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:425:21
    |
425 | /                     ((0 as libc::c_int as libc::c_long)
426 | |                         < (if 1 as libc::c_int != 0 {
427 | |                             0 as libc::c_int as libc::c_long
428 | |                         } else {
429 | |                             s
430 | |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |______________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
425 ~                     i32::from((0 as libc::c_int as libc::c_long)
426 +                         < (if 1 as libc::c_int != 0 {
427 +                             0 as libc::c_int as libc::c_long
428 +                         } else {
429 +                             s
430 +                         }) + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:425:22
    |
425 |                     ((0 as libc::c_int as libc::c_long)
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:426:27
    |
426 |                           < (if 1 as libc::c_int != 0 {
    |  ___________________________^
427 | |                             0 as libc::c_int as libc::c_long
428 | |                         } else {
429 | |                             s
430 | |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:426:27
    |
426 |                           < (if 1 as libc::c_int != 0 {
    |  ___________________________^
427 | |                             0 as libc::c_int as libc::c_long
428 | |                         } else {
429 | |                             s
430 | |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:426:27
    |
426 |                           < (if 1 as libc::c_int != 0 {
    |  ___________________________^
427 | |                             0 as libc::c_int as libc::c_long
428 | |                         } else {
429 | |                             s
430 | |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:427:29
    |
427 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:430:30
    |
430 |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:431:33
    |
431 |                 }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:431:33
    |
431 |                 }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                 ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1363:1
     |
1363 | / pub fn quotearg_n(n: i32, arg: &CStr) -> *mut libc::c_char {
1364 | |     unsafe {
1365 | |         let options = &default_quoting_options;
1366 | |         quotearg_n_options(
...    |
1372 | |     }
1373 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:431:33
    |
431 |                 }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                 ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1363:1
     |
1363 | / pub fn quotearg_n(n: i32, arg: &CStr) -> *mut libc::c_char {
1364 | |     unsafe {
1365 | |         let options = &default_quoting_options;
1366 | |         quotearg_n_options(
...    |
1372 | |     }
1373 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: arithmetic detected
   --> src/xmalloc.rs:433:24
    |
433 |                       if ((if 1 as libc::c_int != 0 {
    |  ________________________^
434 | |                         0 as libc::c_int as libc::c_long
435 | |                     } else {
436 | |                         n
437 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:433:24
    |
433 |                       if ((if 1 as libc::c_int != 0 {
    |  ________________________^
434 | |                         0 as libc::c_int as libc::c_long
435 | |                     } else {
436 | |                         n
437 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:433:25
    |
433 |                       if ((if 1 as libc::c_int != 0 {
    |  _________________________^
434 | |                         0 as libc::c_int as libc::c_long
435 | |                     } else {
436 | |                         n
437 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:434:25
    |
434 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:437:26
    |
437 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:438:27
    |
438 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1376:1
     |
1376 | / pub fn quotearg_n_mem(
1377 | |     n: i32,
1378 | |     arg: &CStr,
1379 | |     argsize: usize,
...    |
1384 | |     }
1385 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1376:1
     |
1376 | / pub fn quotearg_n_mem(
1377 | |     n: i32,
1378 | |     arg: &CStr,
1379 | |     argsize: usize,
...    |
1384 | |     }
1385 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:440:25
    |
440 | /                         ((0 as libc::c_int as libc::c_long)
441 | |                             < n + 0 as libc::c_int as idx_t) as libc::c_int
    | |___________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
440 ~                         i32::from((0 as libc::c_int as libc::c_long)
441 +                             < n + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:440:26
    |
440 |                         ((0 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:441:31
    |
441 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:441:31
    |
441 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:441:35
    |
441 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1388:1
     |
1388 | / pub fn quotearg(arg: &CStr) -> CString {
1389 | |     let result_ptr = quotearg_n(0, arg);
1390 | |     unsafe { CString::from_raw(result_ptr) }
1391 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:443:25
    |
443 | /                         ((0 as libc::c_int as libc::c_long) < n
444 | |                             && (-(1 as libc::c_int) as libc::c_long
445 | |                                 - 0 as libc::c_int as idx_t)
446 | |                                 < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |______________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
443 ~                         i32::from((0 as libc::c_int as libc::c_long) < n
444 +                             && (-(1 as libc::c_int) as libc::c_long
445 +                                 - 0 as libc::c_int as idx_t)
446 +                                 < n - 1 as libc::c_int as libc::c_long)
    |

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1388:1
     |
1388 | / pub fn quotearg(arg: &CStr) -> CString {
1389 | |     let result_ptr = quotearg_n(0, arg);
1390 | |     unsafe { CString::from_raw(result_ptr) }
1391 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:443:26
    |
443 |                         ((0 as libc::c_int as libc::c_long) < n
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:444:32
    |
444 |   ...                   && (-(1 as libc::c_int) as libc::c_long
    |  __________________________^
445 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:444:32
    |
444 |   ...                   && (-(1 as libc::c_int) as libc::c_long
    |  __________________________^
445 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1394:1
     |
1394 | / pub fn quotearg_mem(arg: &CStr) -> *mut libc::c_char {
1395 | |     let argsize = arg.to_bytes().len();
1396 | |     quotearg_n_mem(0, arg, argsize)
1397 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:444:33
    |
444 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1394:1
     |
1394 | / pub fn quotearg_mem(arg: &CStr) -> *mut libc::c_char {
1395 | |     let argsize = arg.to_bytes().len();
1396 | |     quotearg_n_mem(0, arg, argsize)
1397 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:445:35
    |
445 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:446:35
    |
446 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1400:1
     |
1400 | / pub fn quotearg_n_style(
1401 | |     n: i32,
1402 | |     s: quoting_style,
1403 | |     arg: &CStr,
...    |
1408 | |     }
1409 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:446:35
    |
446 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1400:1
     |
1400 | / pub fn quotearg_n_style(
1401 | |     n: i32,
1402 | |     s: quoting_style,
1403 | |     arg: &CStr,
...    |
1408 | |     }
1409 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:446:39
    |
446 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:449:21
    |
449 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(0 as libc::c_int as idx_t / s < n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:449:22
    |
449 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:449:22
    |
449 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1412:1
     |
1412 | / pub fn quotearg_n_style_mem(
1413 | |     n: i32,
1414 | |     s: quoting_style,
1415 | |     arg: &CStr,
...    |
1421 | |     }
1422 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer division
   --> src/xmalloc.rs:449:22
    |
449 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1412:1
     |
1412 | / pub fn quotearg_n_style_mem(
1413 | |     n: i32,
1414 | |     s: quoting_style,
1415 | |     arg: &CStr,
...    |
1421 | |     }
1422 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:449:22
    |
449 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:453:21
    |
453 |             if s == 0 as libc::c_int as libc::c_long {
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:456:24
    |
456 |                 if n < 0 as libc::c_int as libc::c_long {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1425:1
     |
1425 | / pub fn quotearg_style(
1426 | |     s: quoting_style,
1427 | |     arg: &CStr,
1428 | | ) -> CString {
1429 | |     let result_ptr = quotearg_n_style(0, s, arg);
1430 | |     unsafe { CString::from_raw(result_ptr) }
1431 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:457:32
    |
457 |                       if (if (if ((if 1 as libc::c_int != 0 {
    |  ________________________________^
458 | |                         0 as libc::c_int as libc::c_long
459 | |                     } else {
460 | |                         (if 1 as libc::c_int != 0 {
...   |
464 | |                         }) + 0 as libc::c_int as idx_t
465 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1425:1
     |
1425 | / pub fn quotearg_style(
1426 | |     s: quoting_style,
1427 | |     arg: &CStr,
1428 | | ) -> CString {
1429 | |     let result_ptr = quotearg_n_style(0, s, arg);
1430 | |     unsafe { CString::from_raw(result_ptr) }
1431 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:457:32
    |
457 |                       if (if (if ((if 1 as libc::c_int != 0 {
    |  ________________________________^
458 | |                         0 as libc::c_int as libc::c_long
459 | |                     } else {
460 | |                         (if 1 as libc::c_int != 0 {
...   |
464 | |                         }) + 0 as libc::c_int as idx_t
465 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:457:33
    |
457 |                       if (if (if ((if 1 as libc::c_int != 0 {
    |  _________________________________^
458 | |                         0 as libc::c_int as libc::c_long
459 | |                     } else {
460 | |                         (if 1 as libc::c_int != 0 {
...   |
464 | |                         }) + 0 as libc::c_int as idx_t
465 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:458:25
    |
458 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:460:25
    |
460 | /                         (if 1 as libc::c_int != 0 {
461 | |                             0 as libc::c_int as libc::c_long
462 | |                         } else {
463 | |                             n
464 | |                         }) + 0 as libc::c_int as idx_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a function
    --> src/quotearg.rs:1434:1
     |
1434 | / pub fn quotearg_style_mem(
1435 | |     s: quoting_style,
1436 | |     arg: &CStr,
1437 | | ) -> CString {
1438 | |     let result_ptr = quotearg_n_style_mem(0, s, arg);
1439 | |     unsafe { CString::from_raw(result_ptr) }
1440 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:461:29
    |
461 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:464:30
    |
464 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1434:1
     |
1434 | / pub fn quotearg_style_mem(
1435 | |     s: quoting_style,
1436 | |     arg: &CStr,
1437 | | ) -> CString {
1438 | |     let result_ptr = quotearg_n_style_mem(0, s, arg);
1439 | |     unsafe { CString::from_raw(result_ptr) }
1440 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:465:26
    |
465 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:466:27
    |
466 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:468:26
    |
468 |                           !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
469 | |                             0 as libc::c_int as libc::c_long
470 | |                         } else {
471 | |                             (if 1 as libc::c_int != 0 {
...   |
481 | |                             * 2 as libc::c_int as libc::c_long
482 | |                             + 1 as libc::c_int as libc::c_long)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:468:26
    |
468 |                           !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
469 | |                             0 as libc::c_int as libc::c_long
470 | |                         } else {
471 | |                             (if 1 as libc::c_int != 0 {
...   |
481 | |                             * 2 as libc::c_int as libc::c_long
482 | |                             + 1 as libc::c_int as libc::c_long)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:468:30
    |
468 |                           !(((((if 1 as libc::c_int != 0 {
    |  ______________________________^
469 | |                             0 as libc::c_int as libc::c_long
470 | |                         } else {
471 | |                             (if 1 as libc::c_int != 0 {
...   |
475 | |                             }) + 0 as libc::c_int as idx_t
476 | |                         }) + 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a function
    --> src/quotearg.rs:1443:1
     |
1443 | / pub unsafe extern "C" fn quotearg_char_mem(
1444 | |     mut arg: *const libc::c_char,
1445 | |     mut argsize: size_t,
1446 | |     mut ch: libc::c_char,
...    |
1457 | |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
1458 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:469:29
    |
469 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1443:1
     |
1443 | / pub unsafe extern "C" fn quotearg_char_mem(
1444 | |     mut arg: *const libc::c_char,
1445 | |     mut argsize: size_t,
1446 | |     mut ch: libc::c_char,
...    |
1457 | |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
1458 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:471:29
    |
471 | / ...                   (if 1 as libc::c_int != 0 {
472 | | ...                       0 as libc::c_int as libc::c_long
473 | | ...                   } else {
474 | | ...                       n
475 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:472:33
    |
472 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:475:34
    |
475 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:476:30
    |
476 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:478:47
    |
478 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:479:47
    |
479 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:480:31
    |
480 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1460:1
     |
1460 | / pub fn quotearg_char(arg: &CStr, ch: char) -> *mut libc::c_char {
1461 | |     let ch_as_c_char = ch as u8 as libc::c_char;
1462 | |     unsafe {
1463 | |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
1464 | |     }
1465 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:481:31
    |
481 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1460:1
     |
1460 | / pub fn quotearg_char(arg: &CStr, ch: char) -> *mut libc::c_char {
1461 | |     let ch_as_c_char = ch as u8 as libc::c_char;
1462 | |     unsafe {
1463 | |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
1464 | |     }
1465 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:482:31
    |
482 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:484:25
    |
484 | /                         (if 1 as libc::c_int != 0 {
485 | |                             0 as libc::c_int as libc::c_long
486 | |                         } else {
487 | |                             (if 1 as libc::c_int != 0 {
...   |
491 | |                             }) + 0 as libc::c_int as idx_t
492 | |                         }) + 0 as libc::c_int as libc::c_long
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:484:25
    |
484 | /                         (if 1 as libc::c_int != 0 {
485 | |                             0 as libc::c_int as libc::c_long
486 | |                         } else {
487 | |                             (if 1 as libc::c_int != 0 {
...   |
491 | |                             }) + 0 as libc::c_int as idx_t
492 | |                         }) + 0 as libc::c_int as libc::c_long
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:484:25
    |
484 | /                         (if 1 as libc::c_int != 0 {
485 | |                             0 as libc::c_int as libc::c_long
486 | |                         } else {
487 | |                             (if 1 as libc::c_int != 0 {
...   |
491 | |                             }) + 0 as libc::c_int as idx_t
492 | |                         }) + 0 as libc::c_int as libc::c_long
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:485:29
    |
485 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1468:1
     |
1468 | / pub fn quotearg_colon(arg: &CStr) -> String {
1469 | |     let ch: char = ':'; // Define the character to be used
1470 | |     let result_ptr = quotearg_char(arg, ch); // Call the original function
1471 | |     unsafe { CStr::from_ptr(result_ptr).to_string_lossy().into_owned() } // Convert the result to a String
1472 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:487:29
    |
487 | / ...                   (if 1 as libc::c_int != 0 {
488 | | ...                       0 as libc::c_int as libc::c_long
489 | | ...                   } else {
490 | | ...                       n
491 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:488:33
    |
488 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1468:1
     |
1468 | / pub fn quotearg_colon(arg: &CStr) -> String {
1469 | |     let ch: char = ':'; // Define the character to be used
1470 | |     let result_ptr = quotearg_char(arg, ch); // Call the original function
1471 | |     unsafe { CStr::from_ptr(result_ptr).to_string_lossy().into_owned() } // Convert the result to a String
1472 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:491:34
    |
491 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:492:30
    |
492 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:493:26
    |
493 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1475:1
     |
1475 | / pub fn quotearg_colon_mem(arg: &CStr) -> String {
1476 | |     let argsize = arg.to_bytes().len() as u64;
1477 | |     let result_ptr: *mut libc::c_char = unsafe { quotearg_char_mem(arg.as_ptr(), argsize, ':' as i32 as libc::c_char) };
1478 | |     unsafe { CStr::from_ptr(result_ptr).to_string_lossy().into_owned() }
1479 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:495:25
    |
495 | /                         (((if 1 as libc::c_int != 0 {
496 | |                             0 as libc::c_int as libc::c_long
497 | |                         } else {
498 | |                             n
...   |
535 | |                                 }) - 1 as libc::c_int as libc::c_long
536 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
495 ~                         i32::from(((if 1 as libc::c_int != 0 {
496 +                             0 as libc::c_int as libc::c_long
497 +                         } else {
498 +                             n
499 +                         }) + 0 as libc::c_int as idx_t)
500 +                             < -(if ((if 1 as libc::c_int != 0 {
501 +                                 0 as libc::c_int as libc::c_long
502 +                             } else {
503 +                                 (if 1 as libc::c_int != 0 {
504 +                                     0 as libc::c_int as libc::c_long
505 +                                 } else {
506 +                                     n
507 +                                 }) + 0 as libc::c_int as idx_t
508 +                             }) - 1 as libc::c_int as libc::c_long)
509 +                                 < 0 as libc::c_int as libc::c_long
510 +                             {
511 +                                 ((((if 1 as libc::c_int != 0 {
512 +                                     0 as libc::c_int as libc::c_long
513 +                                 } else {
514 +                                     (if 1 as libc::c_int != 0 {
515 +                                         0 as libc::c_int as libc::c_long
516 +                                     } else {
517 +                                         n
518 +                                     }) + 0 as libc::c_int as idx_t
519 +                                 }) + 1 as libc::c_int as libc::c_long)
520 +                                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
521 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
522 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
523 +                                     - 1 as libc::c_int as libc::c_long)
524 +                                     * 2 as libc::c_int as libc::c_long
525 +                                     + 1 as libc::c_int as libc::c_long
526 +                             } else {
527 +                                 (if 1 as libc::c_int != 0 {
528 +                                     0 as libc::c_int as libc::c_long
529 +                                 } else {
530 +                                     (if 1 as libc::c_int != 0 {
531 +                                         0 as libc::c_int as libc::c_long
532 +                                     } else {
533 +                                         n
534 +                                     }) + 0 as libc::c_int as idx_t
535 +                                 }) - 1 as libc::c_int as libc::c_long
536 +                             }))
    |

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1475:1
     |
1475 | / pub fn quotearg_colon_mem(arg: &CStr) -> String {
1476 | |     let argsize = arg.to_bytes().len() as u64;
1477 | |     let result_ptr: *mut libc::c_char = unsafe { quotearg_char_mem(arg.as_ptr(), argsize, ':' as i32 as libc::c_char) };
1478 | |     unsafe { CStr::from_ptr(result_ptr).to_string_lossy().into_owned() }
1479 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: arithmetic detected
   --> src/xmalloc.rs:495:26
    |
495 |                           (((if 1 as libc::c_int != 0 {
    |  __________________________^
496 | |                             0 as libc::c_int as libc::c_long
497 | |                         } else {
498 | |                             n
499 | |                         }) + 0 as libc::c_int as idx_t)
    | |_______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:495:26
    |
495 |                           (((if 1 as libc::c_int != 0 {
    |  __________________________^
496 | |                             0 as libc::c_int as libc::c_long
497 | |                         } else {
498 | |                             n
499 | |                         }) + 0 as libc::c_int as idx_t)
    | |_______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:495:27
    |
495 |                           (((if 1 as libc::c_int != 0 {
    |  ___________________________^
496 | |                             0 as libc::c_int as libc::c_long
497 | |                         } else {
498 | |                             n
499 | |                         }) + 0 as libc::c_int as idx_t)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:496:29
    |
496 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:499:30
    |
499 |                         }) + 0 as libc::c_int as idx_t)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:500:31
    |
500 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
501 | | ...                       0 as libc::c_int as libc::c_long
502 | | ...                   } else {
503 | | ...                       (if 1 as libc::c_int != 0 {
...   |
535 | | ...                       }) - 1 as libc::c_int as libc::c_long
536 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1482:1
     |
1482 | / pub fn quotearg_n_style_colon(
1483 | |     n: i32,
1484 | |     s: quoting_style,
1485 | |     arg: &CStr,
...    |
1506 | |     unsafe { CString::from_raw(result_ptr) }
1507 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:500:31
    |
500 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
501 | | ...                       0 as libc::c_int as libc::c_long
502 | | ...                   } else {
503 | | ...                       (if 1 as libc::c_int != 0 {
...   |
535 | | ...                       }) - 1 as libc::c_int as libc::c_long
536 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1482:1
     |
1482 | / pub fn quotearg_n_style_colon(
1483 | |     n: i32,
1484 | |     s: quoting_style,
1485 | |     arg: &CStr,
...    |
1506 | |     unsafe { CString::from_raw(result_ptr) }
1507 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:500:37
    |
500 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
501 | | ...                       0 as libc::c_int as libc::c_long
502 | | ...                   } else {
503 | | ...                       (if 1 as libc::c_int != 0 {
...   |
507 | | ...                       }) + 0 as libc::c_int as idx_t
508 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:501:33
    |
501 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:503:33
    |
503 | / ...                   (if 1 as libc::c_int != 0 {
504 | | ...                       0 as libc::c_int as libc::c_long
505 | | ...                   } else {
506 | | ...                       n
507 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:504:37
    |
504 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:507:38
    |
507 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:508:34
    |
508 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:509:35
    |
509 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:511:36
    |
511 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
512 | | ...                       0 as libc::c_int as libc::c_long
513 | | ...                   } else {
514 | | ...                       (if 1 as libc::c_int != 0 {
...   |
518 | | ...                       }) + 0 as libc::c_int as idx_t
519 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:512:37
    |
512 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1510:1
     |
1510 | / pub fn quotearg_n_custom(
1511 | |     n: i32,
1512 | |     left_quote: &CStr,
1513 | |     right_quote: &CStr,
...    |
1525 | |     }
1526 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:514:37
    |
514 | / ...                   (if 1 as libc::c_int != 0 {
515 | | ...                       0 as libc::c_int as libc::c_long
516 | | ...                   } else {
517 | | ...                       n
518 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1510:1
     |
1510 | / pub fn quotearg_n_custom(
1511 | |     n: i32,
1512 | |     left_quote: &CStr,
1513 | |     right_quote: &CStr,
...    |
1525 | |     }
1526 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:515:41
    |
515 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:518:42
    |
518 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:519:38
    |
519 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:521:55
    |
521 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:522:55
    |
522 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a function
    --> src/quotearg.rs:1529:1
     |
1529 | / pub unsafe extern "C" fn quotearg_n_custom_mem(
1530 | |     mut n: libc::c_int,
1531 | |     mut left_quote: *const libc::c_char,
1532 | |     mut right_quote: *const libc::c_char,
...    |
1538 | |     return quotearg_n_options(n, arg, argsize, &mut o);
1539 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:523:39
    |
523 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:524:39
    |
524 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1529:1
     |
1529 | / pub unsafe extern "C" fn quotearg_n_custom_mem(
1530 | |     mut n: libc::c_int,
1531 | |     mut left_quote: *const libc::c_char,
1532 | |     mut right_quote: *const libc::c_char,
...    |
1538 | |     return quotearg_n_options(n, arg, argsize, &mut o);
1539 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:525:39
    |
525 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:527:33
    |
527 | / ...                   (if 1 as libc::c_int != 0 {
528 | | ...                       0 as libc::c_int as libc::c_long
529 | | ...                   } else {
530 | | ...                       (if 1 as libc::c_int != 0 {
...   |
534 | | ...                       }) + 0 as libc::c_int as idx_t
535 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:528:37
    |
528 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:530:37
    |
530 | / ...                   (if 1 as libc::c_int != 0 {
531 | | ...                       0 as libc::c_int as libc::c_long
532 | | ...                   } else {
533 | | ...                       n
534 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:531:41
    |
531 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1541:1
     |
1541 | / pub fn quotearg_custom(
1542 | |     left_quote: &str,
1543 | |     right_quote: &str,
1544 | |     arg: &str,
...    |
1551 | |     result.to_string_lossy().into_owned()
1552 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:534:42
    |
534 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1541:1
     |
1541 | / pub fn quotearg_custom(
1542 | |     left_quote: &str,
1543 | |     right_quote: &str,
1544 | |     arg: &str,
...    |
1551 | |     result.to_string_lossy().into_owned()
1552 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:535:38
    |
535 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:538:25
    |
538 | /                         ((0 as libc::c_int as libc::c_long)
539 | |                             < (if 1 as libc::c_int != 0 {
540 | |                                 0 as libc::c_int as libc::c_long
541 | |                             } else {
542 | |                                 n
543 | |                             }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |__________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
538 ~                         i32::from((0 as libc::c_int as libc::c_long)
539 +                             < (if 1 as libc::c_int != 0 {
540 +                                 0 as libc::c_int as libc::c_long
541 +                             } else {
542 +                                 n
543 +                             }) + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:538:26
    |
538 |                         ((0 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:539:31
    |
539 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
540 | | ...                       0 as libc::c_int as libc::c_long
541 | | ...                   } else {
542 | | ...                       n
543 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:539:31
    |
539 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
540 | | ...                       0 as libc::c_int as libc::c_long
541 | | ...                   } else {
542 | | ...                       n
543 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1555:1
     |
1555 | / pub fn quotearg_custom_mem(
1556 | |     left_quote: &CStr,
1557 | |     right_quote: &CStr,
1558 | |     arg: &CStr,
...    |
1572 | |     }
1573 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:539:31
    |
539 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
540 | | ...                       0 as libc::c_int as libc::c_long
541 | | ...                   } else {
542 | | ...                       n
543 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:540:33
    |
540 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1555:1
     |
1555 | / pub fn quotearg_custom_mem(
1556 | |     left_quote: &CStr,
1557 | |     right_quote: &CStr,
1558 | |     arg: &CStr,
...    |
1572 | |     }
1573 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:543:34
    |
543 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:544:37
    |
544 |                     }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:544:37
    |
544 |                     }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:544:37
    |
544 |                     }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a static
    --> src/quotearg.rs:1576:1
     |
1576 | / pub static mut quote_quoting_options: quoting_options = {
1577 | |     let mut init = quoting_options {
1578 | |         style: locale_quoting_style,
1579 | |         flags: 0 as libc::c_int,
...    |
1584 | |     init
1585 | | };
     | |__^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:546:28
    |
546 |                           if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
547 | |                             0 as libc::c_int as libc::c_long
548 | |                         } else {
549 | |                             s
550 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:546:28
    |
546 |                           if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
547 | |                             0 as libc::c_int as libc::c_long
548 | |                         } else {
549 | |                             s
550 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:546:29
    |
546 |                           if ((if 1 as libc::c_int != 0 {
    |  _____________________________^
547 | |                             0 as libc::c_int as libc::c_long
548 | |                         } else {
549 | |                             s
550 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:547:29
    |
547 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1587:1
     |
1587 | / pub fn quote_n_mem(
1588 | |     n: i32,
1589 | |     arg: &CStr,
1590 | |     argsize: u64,
...    |
1594 | |     }
1595 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:550:30
    |
550 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1587:1
     |
1587 | / pub fn quote_n_mem(
1588 | |     n: i32,
1589 | |     arg: &CStr,
1590 | |     argsize: u64,
...    |
1594 | |     }
1595 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:551:31
    |
551 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:553:29
    |
553 | / ...                   ((0 as libc::c_int as libc::c_long)
554 | | ...                       < s + 0 as libc::c_int as idx_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
553 ~                             i32::from((0 as libc::c_int as libc::c_long)
554 +                                 < s + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:553:30
    |
553 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:554:35
    |
554 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:554:35
    |
554 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1598:1
     |
1598 | / pub unsafe extern "C" fn quote_mem(
1599 | |     mut arg: *const libc::c_char,
1600 | |     mut argsize: size_t,
1601 | | ) -> *const libc::c_char {
1602 | |     let arg_cstr = CStr::from_ptr(arg);
1603 | | return quote_n_mem(0, arg_cstr, argsize.try_into().unwrap());
1604 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:554:39
    |
554 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1598:1
     |
1598 | / pub unsafe extern "C" fn quote_mem(
1599 | |     mut arg: *const libc::c_char,
1600 | |     mut argsize: size_t,
1601 | | ) -> *const libc::c_char {
1602 | |     let arg_cstr = CStr::from_ptr(arg);
1603 | | return quote_n_mem(0, arg_cstr, argsize.try_into().unwrap());
1604 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:556:29
    |
556 | / ...                   ((-(1 as libc::c_int) as libc::c_long
557 | | ...                       - 0 as libc::c_int as idx_t)
558 | | ...                       < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
556 ~                             i32::from((-(1 as libc::c_int) as libc::c_long
557 +                                 - 0 as libc::c_int as idx_t)
558 +                                 < s - 1 as libc::c_int as libc::c_long)
    |

warning: arithmetic detected
   --> src/xmalloc.rs:556:30
    |
556 |   ...                   ((-(1 as libc::c_int) as libc::c_long
    |  ________________________^
557 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:556:30
    |
556 |   ...                   ((-(1 as libc::c_int) as libc::c_long
    |  ________________________^
557 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:556:31
    |
556 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1606:1
     |
1606 | / pub fn quote_n(n: i32, arg: &CStr) -> *const libc::c_char {
1607 | |     quote_n_mem(n, arg, u64::MAX)
1608 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:557:35
    |
557 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1606:1
     |
1606 | / pub fn quote_n(n: i32, arg: &CStr) -> *const libc::c_char {
1607 | |     quote_n_mem(n, arg, u64::MAX)
1608 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: arithmetic detected
   --> src/xmalloc.rs:558:35
    |
558 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:558:35
    |
558 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1611:1
     |
1611 | / pub fn quote(arg: &CStr) -> &CStr {
1612 | |     let result = unsafe { quote_n(0, arg) };
1613 | |     unsafe { CStr::from_ptr(result) }
1614 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:558:39
    |
558 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1611:1
     |
1611 | / pub fn quote(arg: &CStr) -> &CStr {
1612 | |     let result = unsafe { quote_n(0, arg) };
1613 | |     unsafe { CStr::from_ptr(result) }
1614 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:561:25
    |
561 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(0 as libc::c_int as idx_t / n < s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:561:26
    |
561 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:561:26
    |
561 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a module
  --> lib.rs:32:1
   |
32 | pub mod root_dev_ino;
   | ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer division
   --> src/xmalloc.rs:561:26
    |
561 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:561:26
    |
561 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:564:21
    |
564 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(-(1 as libc::c_int) as idx_t / s < n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:564:22
    |
564 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a type alias
 --> src/root_dev_ino.rs:8:1
  |
8 | pub type __dev_t = libc::c_ulong;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:564:22
    |
564 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a type alias
 --> src/root_dev_ino.rs:9:1
  |
9 | pub type __uid_t = libc::c_uint;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer division
   --> src/xmalloc.rs:564:22
    |
564 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a type alias
  --> src/root_dev_ino.rs:10:1
   |
10 | pub type __gid_t = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:564:22
    |
564 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/root_dev_ino.rs:11:1
   |
11 | pub type __ino_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
   --> src/xmalloc.rs:570:10
    |
570 |         *(&mut nbytes as *mut idx_t) = fresh8;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(nbytes)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a type alias
  --> src/root_dev_ino.rs:12:1
   |
12 | pub type __mode_t = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
   --> src/xmalloc.rs:574:10
    |
574 |         *(&mut nbytes as *mut idx_t) = fresh10;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(nbytes)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a type alias
  --> src/root_dev_ino.rs:13:1
   |
13 | pub type __nlink_t = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:575:9
    |
575 |         fresh11 as libc::c_int
    |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(fresh11)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/root_dev_ino.rs:14:1
   |
14 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:578:12
    |
578 |         if (9223372036854775807 as libc::c_long as libc::c_ulong)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a type alias
  --> src/root_dev_ino.rs:15:1
   |
15 | pub type __time_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:581:13
    |
581 |             9223372036854775807 as libc::c_long as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a type alias
  --> src/root_dev_ino.rs:16:1
   |
16 | pub type __blksize_t = libc::c_int;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:586:9
    |
586 | /         (if nbytes < DEFAULT_MXFAST_0 as libc::c_int as libc::c_long {
587 | |             DEFAULT_MXFAST_0 as libc::c_int
588 | |         } else {
589 | |             0 as libc::c_int
590 | |         }) as libc::c_ulong
    | |___________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a type alias
  --> src/root_dev_ino.rs:17:1
   |
17 | pub type __blkcnt_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:586:22
    |
586 |         (if nbytes < DEFAULT_MXFAST_0 as libc::c_int as libc::c_long {
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(DEFAULT_MXFAST_0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/root_dev_ino.rs:18:1
   |
18 | pub type __syscall_slong_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/xmalloc.rs:586:22
    |
586 |         (if nbytes < DEFAULT_MXFAST_0 as libc::c_int as libc::c_long {
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a type alias
  --> src/root_dev_ino.rs:19:1
   |
19 | pub type ino_t = __ino_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/xmalloc.rs:587:13
    |
587 |             DEFAULT_MXFAST_0 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a type alias
  --> src/root_dev_ino.rs:20:1
   |
20 | pub type dev_t = __dev_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:593:13
    |
593 |         n = adjusted_nbytes / s;
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct
  --> src/root_dev_ino.rs:23:1
   |
23 | / pub struct timespec {
24 | |     pub tv_sec: __time_t,
25 | |     pub tv_nsec: __syscall_slong_t,
26 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:593:13
    |
593 |         n = adjusted_nbytes / s;
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xmalloc.rs:593:13
    |
593 |         n = adjusted_nbytes / s;
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: arithmetic detected
   --> src/xmalloc.rs:594:18
    |
594 |         nbytes = adjusted_nbytes - adjusted_nbytes % s;
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:24:5
   |
24 |     pub tv_sec: __time_t,
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:25:5
   |
25 |     pub tv_nsec: __syscall_slong_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:594:18
    |
594 |         nbytes = adjusted_nbytes - adjusted_nbytes % s;
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct
  --> src/root_dev_ino.rs:29:1
   |
29 | / pub struct stat {
30 | |     pub st_dev: __dev_t,
31 | |     pub st_ino: __ino_t,
32 | |     pub st_mode: __mode_t,
...  |
45 | |     pub __glibc_reserved: [libc::c_int; 2],
46 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: you are using modulo operator on types that might have different signs
   --> src/xmalloc.rs:594:36
    |
594 |         nbytes = adjusted_nbytes - adjusted_nbytes % s;
    |                                    ^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::modulo-arithmetic` implied by `-W clippy::restriction`
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:597:15
    |
597 |         *pn = 0 as libc::c_int as idx_t;
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:599:8
    |
599 |     if n - n0 < n_incr_min
    |        ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:30:5
   |
30 |     pub st_dev: __dev_t,
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:31:5
   |
31 |     pub st_ino: __ino_t,
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:599:8
    |
599 |     if n - n0 < n_incr_min
    |        ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:32:5
   |
32 |     pub st_mode: __mode_t,
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
   --> src/xmalloc.rs:602:14
    |
602 |             *(&mut n as *mut idx_t) = fresh12;
    |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:33:5
   |
33 |     pub st_nlink: __nlink_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:603:13
    |
603 |             fresh13 as libc::c_int != 0
    |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(fresh13)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:34:5
   |
34 |     pub st_uid: __uid_t,
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:604:20
    |
604 |                 || 0 as libc::c_int as libc::c_long <= n_max && n_max < n
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:35:5
   |
35 |     pub st_gid: __gid_t,
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:605:24
    |
605 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:36:5
   |
36 |     pub st_rdev: __dev_t,
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:605:54
    |
605 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:605:54
    |
605 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                                                      ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:37:5
   |
37 |     pub __pad1: __dev_t,
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:605:54
    |
605 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                                                      ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:38:5
   |
38 |     pub st_size: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:39:5
   |
39 |     pub st_blksize: __blksize_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:606:24
    |
606 |                       && ((if 1 as libc::c_int != 0 {
    |  ________________________^
607 | |                         0 as libc::c_int as libc::c_long
608 | |                     } else {
609 | |                         n
610 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:606:24
    |
606 |                       && ((if 1 as libc::c_int != 0 {
    |  ________________________^
607 | |                         0 as libc::c_int as libc::c_long
608 | |                     } else {
609 | |                         n
610 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:40:5
   |
40 |     pub __pad2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:41:5
   |
41 |     pub st_blocks: __blkcnt_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:606:25
    |
606 |                       && ((if 1 as libc::c_int != 0 {
    |  _________________________^
607 | |                         0 as libc::c_int as libc::c_long
608 | |                     } else {
609 | |                         n
610 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:42:5
   |
42 |     pub st_atim: timespec,
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:607:25
    |
607 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:43:5
   |
43 |     pub st_mtim: timespec,
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:610:26
    |
610 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:44:5
   |
44 |     pub st_ctim: timespec,
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:611:27
    |
611 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:45:5
   |
45 |     pub __glibc_reserved: [libc::c_int; 2],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:612:24
    |
612 |                       && ((if 1 as libc::c_int != 0 {
    |  ________________________^
613 | |                         0 as libc::c_int as libc::c_long
614 | |                     } else {
615 | |                         s
616 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct
  --> src/root_dev_ino.rs:49:1
   |
49 | / pub struct dev_ino {
50 | |     pub st_ino: ino_t,
51 | |     pub st_dev: dev_t,
52 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:612:24
    |
612 |                       && ((if 1 as libc::c_int != 0 {
    |  ________________________^
613 | |                         0 as libc::c_int as libc::c_long
614 | |                     } else {
615 | |                         s
616 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:612:25
    |
612 |                       && ((if 1 as libc::c_int != 0 {
    |  _________________________^
613 | |                         0 as libc::c_int as libc::c_long
614 | |                     } else {
615 | |                         s
616 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:50:5
   |
50 |     pub st_ino: ino_t,
   |     ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:613:25
    |
613 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/root_dev_ino.rs:51:5
   |
51 |     pub st_dev: dev_t,
   |     ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:616:26
    |
616 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:617:27
    |
617 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/root_dev_ino.rs:54:1
   |
54 | / pub fn get_root_dev_ino(root_d_i: &mut dev_ino) -> Option<&dev_ino> {
55 | |     let mut statbuf: stat = stat {
56 | |         st_dev: 0,
57 | |         st_ino: 0,
...  |
81 | |     Some(root_d_i)
82 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:618:32
    |
618 |                     && (if s < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:619:32
    |
619 |                         if n < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
  --> src/root_dev_ino.rs:54:1
   |
54 | / pub fn get_root_dev_ino(root_d_i: &mut dev_ino) -> Option<&dev_ino> {
55 | |     let mut statbuf: stat = stat {
56 | |         st_dev: 0,
57 | |         st_ino: 0,
...  |
81 | |     Some(root_d_i)
82 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: arithmetic detected
   --> src/xmalloc.rs:620:32
    |
620 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
621 | | ...                       0 as libc::c_int as libc::c_long
622 | | ...                   } else {
623 | | ...                       (if 1 as libc::c_int != 0 {
...   |
627 | | ...                       }) + s
628 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:620:32
    |
620 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
621 | | ...                       0 as libc::c_int as libc::c_long
622 | | ...                   } else {
623 | | ...                       (if 1 as libc::c_int != 0 {
...   |
627 | | ...                       }) + s
628 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:620:33
    |
620 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
621 | | ...                       0 as libc::c_int as libc::c_long
622 | | ...                   } else {
623 | | ...                       (if 1 as libc::c_int != 0 {
...   |
627 | | ...                       }) + s
628 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:621:33
    |
621 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:623:33
    |
623 | / ...                   (if 1 as libc::c_int != 0 {
624 | | ...                       0 as libc::c_int as libc::c_long
625 | | ...                   } else {
626 | | ...                       -(1 as libc::c_int) as idx_t
627 | | ...                   }) + s
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:624:37
    |
624 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:626:37
    |
626 | ...                   -(1 as libc::c_int) as idx_t
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:628:34
    |
628 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a module
  --> lib.rs:33:1
   |
33 | pub mod same_inode;
   | ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:629:35
    |
629 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
 --> src/same_inode.rs:4:1
  |
4 | pub type __dev_t = libc::c_ulong;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:631:33
    |
631 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(n < -(1 as libc::c_int) as idx_t / s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
 --> src/same_inode.rs:5:1
  |
5 | pub type __uid_t = libc::c_uint;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:631:38
    |
631 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a type alias
 --> src/same_inode.rs:6:1
  |
6 | pub type __gid_t = libc::c_uint;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:631:38
    |
631 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a type alias
 --> src/same_inode.rs:7:1
  |
7 | pub type __ino_t = libc::c_ulong;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer division
   --> src/xmalloc.rs:631:38
    |
631 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a type alias
 --> src/same_inode.rs:8:1
  |
8 | pub type __mode_t = libc::c_uint;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:631:38
    |
631 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
 --> src/same_inode.rs:9:1
  |
9 | pub type __nlink_t = libc::c_uint;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/same_inode.rs:10:1
   |
10 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:633:33
    |
633 | / ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
634 | | ...                       0 as libc::c_int as libc::c_long
635 | | ...                   } else {
636 | | ...                       s
...   |
699 | | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
700 | | ...                       as libc::c_int
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
633 ~                                 i32::from((if (if (if ((if 1 as libc::c_int != 0 {
634 +                                     0 as libc::c_int as libc::c_long
635 +                                 } else {
636 +                                     s
637 +                                 }) - 1 as libc::c_int as libc::c_long)
638 +                                     < 0 as libc::c_int as libc::c_long
639 +                                 {
640 +                                     !(((((if 1 as libc::c_int != 0 {
641 +                                         0 as libc::c_int as libc::c_long
642 +                                     } else {
643 +                                         s
644 +                                     }) + 1 as libc::c_int as libc::c_long)
645 +                                         << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
646 +                                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
647 +                                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
648 +                                         - 1 as libc::c_int as libc::c_long)
649 +                                         * 2 as libc::c_int as libc::c_long
650 +                                         + 1 as libc::c_int as libc::c_long)
651 +                                 } else {
652 +                                     (if 1 as libc::c_int != 0 {
653 +                                         0 as libc::c_int as libc::c_long
654 +                                     } else {
655 +                                         s
656 +                                     }) + 0 as libc::c_int as libc::c_long
657 +                                 }) < 0 as libc::c_int as libc::c_long
658 +                                 {
659 +                                     (s
660 +                                         < -(if ((if 1 as libc::c_int != 0 {
661 +                                             0 as libc::c_int as libc::c_long
662 +                                         } else {
663 +                                             s
664 +                                         }) - 1 as libc::c_int as libc::c_long)
665 +                                             < 0 as libc::c_int as libc::c_long
666 +                                         {
667 +                                             ((((if 1 as libc::c_int != 0 {
668 +                                                 0 as libc::c_int as libc::c_long
669 +                                             } else {
670 +                                                 s
671 +                                             }) + 1 as libc::c_int as libc::c_long)
672 +                                                 << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
673 +                                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
674 +                                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
675 +                                                 - 1 as libc::c_int as libc::c_long)
676 +                                                 * 2 as libc::c_int as libc::c_long
677 +                                                 + 1 as libc::c_int as libc::c_long
678 +                                         } else {
679 +                                             (if 1 as libc::c_int != 0 {
680 +                                                 0 as libc::c_int as libc::c_long
681 +                                             } else {
682 +                                                 s
683 +                                             }) - 1 as libc::c_int as libc::c_long
684 +                                         })) as libc::c_int
685 +                                 } else {
686 +                                     ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
687 +                                 }) != 0
688 +                                 {
689 +                                     (if 1 as libc::c_int != 0 {
690 +                                         0 as libc::c_int as libc::c_long
691 +                                     } else {
692 +                                         s
693 +                                     }) + -(1 as libc::c_int) as idx_t
694 +                                         >> (::core::mem::size_of::<idx_t>() as libc::c_ulong)
695 +                                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
696 +                                             .wrapping_sub(1 as libc::c_int as libc::c_ulong)
697 +                                 } else {
698 +                                     -(1 as libc::c_int) as idx_t / -s
699 +                                 }) <= -(1 as libc::c_int) as libc::c_long - n)
    |

warning: missing documentation for a type alias
  --> src/same_inode.rs:11:1
   |
11 | pub type __time_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:633:34
    |
633 |   ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ________________________^
634 | | ...                       0 as libc::c_int as libc::c_long
635 | | ...                   } else {
636 | | ...                       s
...   |
698 | | ...                       -(1 as libc::c_int) as idx_t / -s
699 | | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a type alias
  --> src/same_inode.rs:12:1
   |
12 | pub type __blksize_t = libc::c_int;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:633:46
    |
633 |   ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ____________________________________^
634 | | ...                       0 as libc::c_int as libc::c_long
635 | | ...                   } else {
636 | | ...                       s
637 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a type alias
  --> src/same_inode.rs:13:1
   |
13 | pub type __blkcnt_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:633:46
    |
633 |   ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ____________________________________^
634 | | ...                       0 as libc::c_int as libc::c_long
635 | | ...                   } else {
636 | | ...                       s
637 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a type alias
  --> src/same_inode.rs:14:1
   |
14 | pub type __syscall_slong_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:633:47
    |
633 |   ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |  _____________________________________^
634 | | ...                       0 as libc::c_int as libc::c_long
635 | | ...                   } else {
636 | | ...                       s
637 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct
  --> src/same_inode.rs:17:1
   |
17 | / pub struct timespec {
18 | |     pub tv_sec: __time_t,
19 | |     pub tv_nsec: __syscall_slong_t,
20 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:634:37
    |
634 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:637:38
    |
637 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/same_inode.rs:18:5
   |
18 |     pub tv_sec: __time_t,
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:638:39
    |
638 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/same_inode.rs:19:5
   |
19 |     pub tv_nsec: __syscall_slong_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:640:38
    |
640 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
641 | | ...                       0 as libc::c_int as libc::c_long
642 | | ...                   } else {
643 | | ...                       s
...   |
649 | | ...                       * 2 as libc::c_int as libc::c_long
650 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct
  --> src/same_inode.rs:23:1
   |
23 | / pub struct stat {
24 | |     pub st_dev: __dev_t,
25 | |     pub st_ino: __ino_t,
26 | |     pub st_mode: __mode_t,
...  |
39 | |     pub __glibc_reserved: [libc::c_int; 2],
40 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:640:38
    |
640 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
641 | | ...                       0 as libc::c_int as libc::c_long
642 | | ...                   } else {
643 | | ...                       s
...   |
649 | | ...                       * 2 as libc::c_int as libc::c_long
650 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:640:42
    |
640 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ____________________________^
641 | | ...                       0 as libc::c_int as libc::c_long
642 | | ...                   } else {
643 | | ...                       s
644 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/same_inode.rs:24:5
   |
24 |     pub st_dev: __dev_t,
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:641:41
    |
641 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/same_inode.rs:25:5
   |
25 |     pub st_ino: __ino_t,
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:644:42
    |
644 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/same_inode.rs:26:5
   |
26 |     pub st_mode: __mode_t,
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:646:59
    |
646 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/same_inode.rs:27:5
   |
27 |     pub st_nlink: __nlink_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:647:59
    |
647 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/same_inode.rs:28:5
   |
28 |     pub st_uid: __uid_t,
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:648:43
    |
648 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/same_inode.rs:29:5
   |
29 |     pub st_gid: __gid_t,
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:649:43
    |
649 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/same_inode.rs:30:5
   |
30 |     pub st_rdev: __dev_t,
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:650:43
    |
650 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/same_inode.rs:31:5
   |
31 |     pub __pad1: __dev_t,
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:652:37
    |
652 | / ...                   (if 1 as libc::c_int != 0 {
653 | | ...                       0 as libc::c_int as libc::c_long
654 | | ...                   } else {
655 | | ...                       s
656 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/same_inode.rs:32:5
   |
32 |     pub st_size: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:652:37
    |
652 | / ...                   (if 1 as libc::c_int != 0 {
653 | | ...                       0 as libc::c_int as libc::c_long
654 | | ...                   } else {
655 | | ...                       s
656 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/same_inode.rs:33:5
   |
33 |     pub st_blksize: __blksize_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:652:37
    |
652 | / ...                   (if 1 as libc::c_int != 0 {
653 | | ...                       0 as libc::c_int as libc::c_long
654 | | ...                   } else {
655 | | ...                       s
656 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/same_inode.rs:34:5
   |
34 |     pub __pad2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:653:41
    |
653 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/same_inode.rs:35:5
   |
35 |     pub st_blocks: __blkcnt_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:656:42
    |
656 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/same_inode.rs:36:5
   |
36 |     pub st_atim: timespec,
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:657:38
    |
657 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/same_inode.rs:37:5
   |
37 |     pub st_mtim: timespec,
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:659:37
    |
659 | / ...                   (s
660 | | ...                       < -(if ((if 1 as libc::c_int != 0 {
661 | | ...                           0 as libc::c_int as libc::c_long
662 | | ...                       } else {
...   |
683 | | ...                           }) - 1 as libc::c_int as libc::c_long
684 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
659 ~                                     i32::from(s
660 +                                         < -(if ((if 1 as libc::c_int != 0 {
661 +                                             0 as libc::c_int as libc::c_long
662 +                                         } else {
663 +                                             s
664 +                                         }) - 1 as libc::c_int as libc::c_long)
665 +                                             < 0 as libc::c_int as libc::c_long
666 +                                         {
667 +                                             ((((if 1 as libc::c_int != 0 {
668 +                                                 0 as libc::c_int as libc::c_long
669 +                                             } else {
670 +                                                 s
671 +                                             }) + 1 as libc::c_int as libc::c_long)
672 +                                                 << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
673 +                                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
674 +                                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
675 +                                                 - 1 as libc::c_int as libc::c_long)
676 +                                                 * 2 as libc::c_int as libc::c_long
677 +                                                 + 1 as libc::c_int as libc::c_long
678 +                                         } else {
679 +                                             (if 1 as libc::c_int != 0 {
680 +                                                 0 as libc::c_int as libc::c_long
681 +                                             } else {
682 +                                                 s
683 +                                             }) - 1 as libc::c_int as libc::c_long
684 +                                         }))
    |

warning: missing documentation for a struct field
  --> src/same_inode.rs:38:5
   |
38 |     pub st_ctim: timespec,
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:660:43
    |
660 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
661 | | ...                       0 as libc::c_int as libc::c_long
662 | | ...                   } else {
663 | | ...                       s
...   |
683 | | ...                       }) - 1 as libc::c_int as libc::c_long
684 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/same_inode.rs:39:5
   |
39 |     pub __glibc_reserved: [libc::c_int; 2],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:660:43
    |
660 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
661 | | ...                       0 as libc::c_int as libc::c_long
662 | | ...                   } else {
663 | | ...                       s
...   |
683 | | ...                       }) - 1 as libc::c_int as libc::c_long
684 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
  --> src/same_inode.rs:44:1
   |
44 | / pub fn psame_inode(a: &libc::stat, b: &libc::stat) -> bool {
45 | |     a.st_dev == b.st_dev && a.st_ino == b.st_ino
46 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:660:49
    |
660 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
661 | | ...                       0 as libc::c_int as libc::c_long
662 | | ...                   } else {
663 | | ...                       s
664 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:661:45
    |
661 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:664:46
    |
664 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:665:47
    |
665 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a module
  --> lib.rs:34:1
   |
34 | pub mod setlocale_null;
   | ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:667:48
    |
667 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
668 | | ...                       0 as libc::c_int as libc::c_long
669 | | ...                   } else {
670 | | ...                       s
671 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:668:49
    |
668 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/setlocale_null.rs:13:1
   |
13 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a function
  --> src/setlocale_null.rs:15:1
   |
15 | / pub fn setlocale_null_r(
16 | |     category: libc::c_int,
17 | |     buf: &mut [u8],
18 | | ) -> libc::c_int {
...  |
24 | |     }
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:671:50
    |
671 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
  --> src/setlocale_null.rs:15:1
   |
15 | / pub fn setlocale_null_r(
16 | |     category: libc::c_int,
17 | |     buf: &mut [u8],
18 | | ) -> libc::c_int {
...  |
24 | |     }
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:673:67
    |
673 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:674:67
    |
674 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:675:51
    |
675 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:676:51
    |
676 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:677:51
    |
677 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/setlocale_null.rs:28:1
   |
28 | / pub fn setlocale_null(category: libc::c_int) -> Option<String> {
29 | |     unsafe {
30 | |         let result = setlocale_null_unlocked(category);
31 | |         if result.is_null() {
...  |
36 | |     }
37 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:679:45
    |
679 | / ...                   (if 1 as libc::c_int != 0 {
680 | | ...                       0 as libc::c_int as libc::c_long
681 | | ...                   } else {
682 | | ...                       s
683 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing `#[inline]` for a function
  --> src/setlocale_null.rs:28:1
   |
28 | / pub fn setlocale_null(category: libc::c_int) -> Option<String> {
29 | |     unsafe {
30 | |         let result = setlocale_null_unlocked(category);
31 | |         if result.is_null() {
...  |
36 | |     }
37 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:680:49
    |
680 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:683:50
    |
683 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:686:37
    |
686 | ...                   ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from((0 as libc::c_int as libc::c_long) < s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:686:38
    |
686 | ...                   ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a module
  --> lib.rs:35:1
   |
35 | pub mod setlocale_null_unlocked;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:689:37
    |
689 | / ...                   (if 1 as libc::c_int != 0 {
690 | | ...                       0 as libc::c_int as libc::c_long
691 | | ...                   } else {
692 | | ...                       s
...   |
695 | | ...                           .wrapping_mul(8 as libc::c_int as libc::c_ulong)
696 | | ...                           .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:689:37
    |
689 | / ...                   (if 1 as libc::c_int != 0 {
690 | | ...                       0 as libc::c_int as libc::c_long
691 | | ...                   } else {
692 | | ...                       s
...   |
695 | | ...                           .wrapping_mul(8 as libc::c_int as libc::c_ulong)
696 | | ...                           .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a type alias
  --> src/setlocale_null_unlocked.rs:16:1
   |
16 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:689:37
    |
689 | / ...                   (if 1 as libc::c_int != 0 {
690 | | ...                       0 as libc::c_int as libc::c_long
691 | | ...                   } else {
692 | | ...                       s
693 | | ...                   }) + -(1 as libc::c_int) as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:690:41
    |
690 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:693:42
    |
693 | ...                   }) + -(1 as libc::c_int) as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/setlocale_null_unlocked.rs:18:1
   |
18 | / pub unsafe extern "C" fn setlocale_null_unlocked(
19 | |     mut category: libc::c_int,
20 | | ) -> *const libc::c_char {
21 | |     let mut result: *const libc::c_char = setlocale(category, 0 as *const libc::c_char);
22 | |     return result;
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:695:59
    |
695 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `#[inline]` for a function
  --> src/setlocale_null_unlocked.rs:18:1
   |
18 | / pub unsafe extern "C" fn setlocale_null_unlocked(
19 | |     mut category: libc::c_int,
20 | | ) -> *const libc::c_char {
21 | |     let mut result: *const libc::c_char = setlocale(category, 0 as *const libc::c_char);
22 | |     return result;
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:696:59
    |
696 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
   --> src/xmalloc.rs:698:37
    |
698 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer division
   --> src/xmalloc.rs:698:37
    |
698 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a function
  --> src/setlocale_null_unlocked.rs:25:1
   |
25 | / pub fn setlocale_null_r_unlocked(
26 | |     category: libc::c_int,
27 | |     buf: &mut Vec<u8>,
28 | | ) -> libc::c_int {
...  |
49 | |     }
50 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:698:37
    |
698 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
  --> src/setlocale_null_unlocked.rs:25:1
   |
25 | / pub fn setlocale_null_r_unlocked(
26 | |     category: libc::c_int,
27 | |     buf: &mut Vec<u8>,
28 | | ) -> libc::c_int {
...  |
49 | |     }
50 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:698:37
    |
698 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:698:68
    |
698 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                                                      ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:699:39
    |
699 | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:699:39
    |
699 | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:699:39
    |
699 | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:703:40
    |
703 |   ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________________^
704 | | ...                       0 as libc::c_int as libc::c_long
705 | | ...                   } else {
706 | | ...                       (if 1 as libc::c_int != 0 {
...   |
710 | | ...                       }) + 0 as libc::c_int as idx_t
711 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:703:40
    |
703 |   ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________________^
704 | | ...                       0 as libc::c_int as libc::c_long
705 | | ...                   } else {
706 | | ...                       (if 1 as libc::c_int != 0 {
...   |
710 | | ...                       }) + 0 as libc::c_int as idx_t
711 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:703:41
    |
703 |   ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |  ___________________________________^
704 | | ...                       0 as libc::c_int as libc::c_long
705 | | ...                   } else {
706 | | ...                       (if 1 as libc::c_int != 0 {
...   |
710 | | ...                       }) + 0 as libc::c_int as idx_t
711 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:704:33
    |
704 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:706:33
    |
706 | / ...                   (if 1 as libc::c_int != 0 {
707 | | ...                       0 as libc::c_int as libc::c_long
708 | | ...                   } else {
709 | | ...                       s
710 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:707:37
    |
707 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:710:38
    |
710 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:711:34
    |
711 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:712:35
    |
712 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:714:34
    |
714 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
715 | | ...                       0 as libc::c_int as libc::c_long
716 | | ...                   } else {
717 | | ...                       (if 1 as libc::c_int != 0 {
...   |
727 | | ...                       * 2 as libc::c_int as libc::c_long
728 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:714:34
    |
714 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
715 | | ...                       0 as libc::c_int as libc::c_long
716 | | ...                   } else {
717 | | ...                       (if 1 as libc::c_int != 0 {
...   |
727 | | ...                       * 2 as libc::c_int as libc::c_long
728 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:714:38
    |
714 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ____________________________^
715 | | ...                       0 as libc::c_int as libc::c_long
716 | | ...                   } else {
717 | | ...                       (if 1 as libc::c_int != 0 {
...   |
721 | | ...                       }) + 0 as libc::c_int as idx_t
722 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:715:37
    |
715 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:717:37
    |
717 | / ...                   (if 1 as libc::c_int != 0 {
718 | | ...                       0 as libc::c_int as libc::c_long
719 | | ...                   } else {
720 | | ...                       s
721 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:718:41
    |
718 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:721:42
    |
721 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:722:38
    |
722 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:724:55
    |
724 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a module
  --> lib.rs:36:1
   |
36 | pub mod version;
   | ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:725:55
    |
725 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a static
 --> src/version.rs:3:1
  |
3 | / pub static mut Version: *const libc::c_char = b"9.5.42-bbc97\0" as *const u8
4 | |     as *const libc::c_char;
  | |___________________________^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:726:39
    |
726 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:727:39
    |
727 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a module
  --> lib.rs:37:1
   |
37 | pub mod version_etc;
   | ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:728:39
    |
728 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/version_etc.rs:17:1
   |
17 | pub type __builtin_va_list = __va_list;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:730:33
    |
730 | / ...                   (if 1 as libc::c_int != 0 {
731 | | ...                       0 as libc::c_int as libc::c_long
732 | | ...                   } else {
733 | | ...                       (if 1 as libc::c_int != 0 {
...   |
737 | | ...                       }) + 0 as libc::c_int as idx_t
738 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct
  --> src/version_etc.rs:20:1
   |
20 | / pub struct __va_list {
21 | |     pub __stack: *mut libc::c_void,
22 | |     pub __gr_top: *mut libc::c_void,
23 | |     pub __vr_top: *mut libc::c_void,
24 | |     pub __gr_offs: libc::c_int,
25 | |     pub __vr_offs: libc::c_int,
26 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:730:33
    |
730 | / ...                   (if 1 as libc::c_int != 0 {
731 | | ...                       0 as libc::c_int as libc::c_long
732 | | ...                   } else {
733 | | ...                       (if 1 as libc::c_int != 0 {
...   |
737 | | ...                       }) + 0 as libc::c_int as idx_t
738 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:730:33
    |
730 | / ...                   (if 1 as libc::c_int != 0 {
731 | | ...                       0 as libc::c_int as libc::c_long
732 | | ...                   } else {
733 | | ...                       (if 1 as libc::c_int != 0 {
...   |
737 | | ...                       }) + 0 as libc::c_int as idx_t
738 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/version_etc.rs:21:5
   |
21 |     pub __stack: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:731:37
    |
731 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:22:5
   |
22 |     pub __gr_top: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:733:37
    |
733 | / ...                   (if 1 as libc::c_int != 0 {
734 | | ...                       0 as libc::c_int as libc::c_long
735 | | ...                   } else {
736 | | ...                       s
737 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/version_etc.rs:23:5
   |
23 |     pub __vr_top: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:734:41
    |
734 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:24:5
   |
24 |     pub __gr_offs: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:737:42
    |
737 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:25:5
   |
25 |     pub __vr_offs: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:738:38
    |
738 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:739:34
    |
739 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/version_etc.rs:27:1
   |
27 | pub type va_list = __builtin_va_list;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:741:33
    |
741 | / ...                   (((if 1 as libc::c_int != 0 {
742 | | ...                       0 as libc::c_int as libc::c_long
743 | | ...                   } else {
744 | | ...                       s
...   |
781 | | ...                           }) - 1 as libc::c_int as libc::c_long
782 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
741 ~                                 i32::from(((if 1 as libc::c_int != 0 {
742 +                                     0 as libc::c_int as libc::c_long
743 +                                 } else {
744 +                                     s
745 +                                 }) + 0 as libc::c_int as idx_t)
746 +                                     < -(if ((if 1 as libc::c_int != 0 {
747 +                                         0 as libc::c_int as libc::c_long
748 +                                     } else {
749 +                                         (if 1 as libc::c_int != 0 {
750 +                                             0 as libc::c_int as libc::c_long
751 +                                         } else {
752 +                                             s
753 +                                         }) + 0 as libc::c_int as idx_t
754 +                                     }) - 1 as libc::c_int as libc::c_long)
755 +                                         < 0 as libc::c_int as libc::c_long
756 +                                     {
757 +                                         ((((if 1 as libc::c_int != 0 {
758 +                                             0 as libc::c_int as libc::c_long
759 +                                         } else {
760 +                                             (if 1 as libc::c_int != 0 {
761 +                                                 0 as libc::c_int as libc::c_long
762 +                                             } else {
763 +                                                 s
764 +                                             }) + 0 as libc::c_int as idx_t
765 +                                         }) + 1 as libc::c_int as libc::c_long)
766 +                                             << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
767 +                                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
768 +                                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
769 +                                             - 1 as libc::c_int as libc::c_long)
770 +                                             * 2 as libc::c_int as libc::c_long
771 +                                             + 1 as libc::c_int as libc::c_long
772 +                                     } else {
773 +                                         (if 1 as libc::c_int != 0 {
774 +                                             0 as libc::c_int as libc::c_long
775 +                                         } else {
776 +                                             (if 1 as libc::c_int != 0 {
777 +                                                 0 as libc::c_int as libc::c_long
778 +                                             } else {
779 +                                                 s
780 +                                             }) + 0 as libc::c_int as idx_t
781 +                                         }) - 1 as libc::c_int as libc::c_long
782 +                                     }))
    |

warning: missing documentation for a type alias
  --> src/version_etc.rs:28:1
   |
28 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:741:34
    |
741 |   ...                   (((if 1 as libc::c_int != 0 {
    |  ________________________^
742 | | ...                       0 as libc::c_int as libc::c_long
743 | | ...                   } else {
744 | | ...                       s
745 | | ...                   }) + 0 as libc::c_int as idx_t)
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a type alias
  --> src/version_etc.rs:29:1
   |
29 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/version_etc.rs:30:1
   |
30 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:741:34
    |
741 |   ...                   (((if 1 as libc::c_int != 0 {
    |  ________________________^
742 | | ...                       0 as libc::c_int as libc::c_long
743 | | ...                   } else {
744 | | ...                       s
745 | | ...                   }) + 0 as libc::c_int as idx_t)
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct
  --> src/version_etc.rs:33:1
   |
33 | / pub struct _IO_FILE {
34 | |     pub _flags: libc::c_int,
35 | |     pub _IO_read_ptr: *mut libc::c_char,
36 | |     pub _IO_read_end: *mut libc::c_char,
...  |
62 | |     pub _unused2: [libc::c_char; 20],
63 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:741:35
    |
741 |   ...                   (((if 1 as libc::c_int != 0 {
    |  _________________________^
742 | | ...                       0 as libc::c_int as libc::c_long
743 | | ...                   } else {
744 | | ...                       s
745 | | ...                   }) + 0 as libc::c_int as idx_t)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:742:37
    |
742 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:34:5
   |
34 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:745:38
    |
745 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:35:5
   |
35 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:746:39
    |
746 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
747 | | ...                       0 as libc::c_int as libc::c_long
748 | | ...                   } else {
749 | | ...                       (if 1 as libc::c_int != 0 {
...   |
781 | | ...                       }) - 1 as libc::c_int as libc::c_long
782 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/version_etc.rs:36:5
   |
36 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:746:39
    |
746 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
747 | | ...                       0 as libc::c_int as libc::c_long
748 | | ...                   } else {
749 | | ...                       (if 1 as libc::c_int != 0 {
...   |
781 | | ...                       }) - 1 as libc::c_int as libc::c_long
782 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/version_etc.rs:37:5
   |
37 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:746:45
    |
746 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
747 | | ...                       0 as libc::c_int as libc::c_long
748 | | ...                   } else {
749 | | ...                       (if 1 as libc::c_int != 0 {
...   |
753 | | ...                       }) + 0 as libc::c_int as idx_t
754 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/version_etc.rs:38:5
   |
38 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:747:41
    |
747 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:39:5
   |
39 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:749:41
    |
749 | / ...                   (if 1 as libc::c_int != 0 {
750 | | ...                       0 as libc::c_int as libc::c_long
751 | | ...                   } else {
752 | | ...                       s
753 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/version_etc.rs:40:5
   |
40 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:750:45
    |
750 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:41:5
   |
41 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:753:46
    |
753 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:42:5
   |
42 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/version_etc.rs:43:5
   |
43 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:754:42
    |
754 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:44:5
   |
44 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:755:43
    |
755 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:45:5
   |
45 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:757:44
    |
757 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
758 | | ...                       0 as libc::c_int as libc::c_long
759 | | ...                   } else {
760 | | ...                       (if 1 as libc::c_int != 0 {
...   |
764 | | ...                       }) + 0 as libc::c_int as idx_t
765 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/version_etc.rs:46:5
   |
46 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:758:45
    |
758 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:47:5
   |
47 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:760:45
    |
760 | / ...                   (if 1 as libc::c_int != 0 {
761 | | ...                       0 as libc::c_int as libc::c_long
762 | | ...                   } else {
763 | | ...                       s
764 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/version_etc.rs:48:5
   |
48 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:761:49
    |
761 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:49:5
   |
49 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:764:50
    |
764 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:50:5
   |
50 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:765:46
    |
765 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:51:5
   |
51 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/version_etc.rs:52:5
   |
52 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:767:63
    |
767 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:768:63
    |
768 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/version_etc.rs:53:5
   |
53 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/version_etc.rs:54:5
   |
54 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:769:47
    |
769 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:770:47
    |
770 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:55:5
   |
55 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/version_etc.rs:56:5
   |
56 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:771:47
    |
771 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:773:41
    |
773 | / ...                   (if 1 as libc::c_int != 0 {
774 | | ...                       0 as libc::c_int as libc::c_long
775 | | ...                   } else {
776 | | ...                       (if 1 as libc::c_int != 0 {
...   |
780 | | ...                       }) + 0 as libc::c_int as idx_t
781 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/version_etc.rs:57:5
   |
57 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/version_etc.rs:58:5
   |
58 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:774:45
    |
774 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:59:5
   |
59 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:776:45
    |
776 | / ...                   (if 1 as libc::c_int != 0 {
777 | | ...                       0 as libc::c_int as libc::c_long
778 | | ...                   } else {
779 | | ...                       s
780 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/version_etc.rs:60:5
   |
60 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:777:49
    |
777 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:61:5
   |
61 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:780:50
    |
780 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:781:46
    |
781 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:62:5
   |
62 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:784:33
    |
784 | / ...                   ((0 as libc::c_int as libc::c_long)
785 | | ...                       < (if 1 as libc::c_int != 0 {
786 | | ...                           0 as libc::c_int as libc::c_long
787 | | ...                       } else {
788 | | ...                           s
789 | | ...                       }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
784 ~                                 i32::from((0 as libc::c_int as libc::c_long)
785 +                                     < (if 1 as libc::c_int != 0 {
786 +                                         0 as libc::c_int as libc::c_long
787 +                                     } else {
788 +                                         s
789 +                                     }) + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:784:34
    |
784 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/version_etc.rs:64:1
   |
64 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:785:39
    |
785 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
786 | | ...                       0 as libc::c_int as libc::c_long
787 | | ...                   } else {
788 | | ...                       s
789 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a type alias
  --> src/version_etc.rs:65:1
   |
65 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:785:39
    |
785 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
786 | | ...                       0 as libc::c_int as libc::c_long
787 | | ...                   } else {
788 | | ...                       s
789 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
  --> src/version_etc.rs:66:1
   |
66 | pub const COPYRIGHT_YEAR: C2RustUnnamed = 2024;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:785:39
    |
785 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
786 | | ...                       0 as libc::c_int as libc::c_long
787 | | ...                   } else {
788 | | ...                       s
789 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a type alias
  --> src/version_etc.rs:67:1
   |
67 | pub type C2RustUnnamed = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:786:41
    |
786 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:789:42
    |
789 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
   --> src/version_etc.rs:69:1
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
172 | |
173 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:790:45
    |
790 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
   --> src/version_etc.rs:69:1
    |
69  | / pub unsafe extern "C" fn version_etc_arn(
70  | |     mut stream: *mut FILE,
71  | |     mut command_name: *const libc::c_char,
72  | |     mut package: *const libc::c_char,
...   |
172 | |
173 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: arithmetic detected
   --> src/xmalloc.rs:790:45
    |
790 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:790:45
    |
790 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:792:36
    |
792 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
793 | | ...                       0 as libc::c_int as libc::c_long
794 | | ...                   } else {
795 | | ...                       n
796 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:792:36
    |
792 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
793 | | ...                       0 as libc::c_int as libc::c_long
794 | | ...                   } else {
795 | | ...                       n
796 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:792:37
    |
792 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
793 | | ...                       0 as libc::c_int as libc::c_long
794 | | ...                   } else {
795 | | ...                       n
796 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:793:37
    |
793 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:796:38
    |
796 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:797:39
    |
797 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:799:37
    |
799 | / ...                   ((0 as libc::c_int as libc::c_long)
800 | | ...                       < n + 0 as libc::c_int as idx_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
799 ~                                     i32::from((0 as libc::c_int as libc::c_long)
800 +                                         < n + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:799:38
    |
799 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:800:43
    |
800 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:800:43
    |
800 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:800:47
    |
800 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:802:37
    |
802 | / ...                   ((0 as libc::c_int as libc::c_long) < n
803 | | ...                       && (-(1 as libc::c_int) as libc::c_long
804 | | ...                           - 0 as libc::c_int as idx_t)
805 | | ...                           < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |____________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
802 ~                                     i32::from((0 as libc::c_int as libc::c_long) < n
803 +                                         && (-(1 as libc::c_int) as libc::c_long
804 +                                             - 0 as libc::c_int as idx_t)
805 +                                             < n - 1 as libc::c_int as libc::c_long)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:802:38
    |
802 | ...                   ((0 as libc::c_int as libc::c_long) < n
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:803:44
    |
803 |   ...                   && (-(1 as libc::c_int) as libc::c_long
    |  __________________________^
804 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:803:44
    |
803 |   ...                   && (-(1 as libc::c_int) as libc::c_long
    |  __________________________^
804 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:803:45
    |
803 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:804:47
    |
804 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:805:47
    |
805 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:805:47
    |
805 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:805:51
    |
805 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:808:33
    |
808 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(0 as libc::c_int as idx_t / s < n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:808:34
    |
808 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:808:34
    |
808 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xmalloc.rs:808:34
    |
808 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:808:34
    |
808 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:812:33
    |
812 |                         if s == 0 as libc::c_int as libc::c_long {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:815:36
    |
815 | ...                   if n < 0 as libc::c_int as libc::c_long {
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:816:44
    |
816 |   ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________________^
817 | | ...                       0 as libc::c_int as libc::c_long
818 | | ...                   } else {
819 | | ...                       (if 1 as libc::c_int != 0 {
...   |
823 | | ...                       }) + 0 as libc::c_int as idx_t
824 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:816:44
    |
816 |   ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________________^
817 | | ...                       0 as libc::c_int as libc::c_long
818 | | ...                   } else {
819 | | ...                       (if 1 as libc::c_int != 0 {
...   |
823 | | ...                       }) + 0 as libc::c_int as idx_t
824 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
   --> src/version_etc.rs:175:1
    |
175 | / pub unsafe extern "C" fn version_etc_ar(
176 | |     mut stream: *mut FILE,
177 | |     mut command_name: *const libc::c_char,
178 | |     mut package: *const libc::c_char,
...   |
188 | |     version_etc_arn(stream, command_name, package, version, authors, n_authors);
189 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/version_etc.rs:175:1
    |
175 | / pub unsafe extern "C" fn version_etc_ar(
176 | |     mut stream: *mut FILE,
177 | |     mut command_name: *const libc::c_char,
178 | |     mut package: *const libc::c_char,
...   |
188 | |     version_etc_arn(stream, command_name, package, version, authors, n_authors);
189 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:816:45
    |
816 |   ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |  ___________________________________^
817 | | ...                       0 as libc::c_int as libc::c_long
818 | | ...                   } else {
819 | | ...                       (if 1 as libc::c_int != 0 {
...   |
823 | | ...                       }) + 0 as libc::c_int as idx_t
824 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:817:37
    |
817 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:819:37
    |
819 | / ...                   (if 1 as libc::c_int != 0 {
820 | | ...                       0 as libc::c_int as libc::c_long
821 | | ...                   } else {
822 | | ...                       n
823 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:820:41
    |
820 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:823:42
    |
823 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:824:38
    |
824 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:825:39
    |
825 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:827:38
    |
827 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
828 | | ...                       0 as libc::c_int as libc::c_long
829 | | ...                   } else {
830 | | ...                       (if 1 as libc::c_int != 0 {
...   |
840 | | ...                       * 2 as libc::c_int as libc::c_long
841 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
   --> src/version_etc.rs:191:1
    |
191 | / pub unsafe extern "C" fn version_etc_va(
192 | |     mut stream: *mut FILE,
193 | |     mut command_name: *const libc::c_char,
194 | |     mut package: *const libc::c_char,
...   |
217 | |     );
218 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:827:38
    |
827 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
828 | | ...                       0 as libc::c_int as libc::c_long
829 | | ...                   } else {
830 | | ...                       (if 1 as libc::c_int != 0 {
...   |
840 | | ...                       * 2 as libc::c_int as libc::c_long
841 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `#[inline]` for a function
   --> src/version_etc.rs:191:1
    |
191 | / pub unsafe extern "C" fn version_etc_va(
192 | |     mut stream: *mut FILE,
193 | |     mut command_name: *const libc::c_char,
194 | |     mut package: *const libc::c_char,
...   |
217 | |     );
218 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:827:42
    |
827 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ____________________________^
828 | | ...                       0 as libc::c_int as libc::c_long
829 | | ...                   } else {
830 | | ...                       (if 1 as libc::c_int != 0 {
...   |
834 | | ...                       }) + 0 as libc::c_int as idx_t
835 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:828:41
    |
828 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:830:41
    |
830 | / ...                   (if 1 as libc::c_int != 0 {
831 | | ...                       0 as libc::c_int as libc::c_long
832 | | ...                   } else {
833 | | ...                       n
834 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:831:45
    |
831 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:834:46
    |
834 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:835:42
    |
835 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:837:59
    |
837 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:838:59
    |
838 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:839:43
    |
839 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:840:43
    |
840 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:841:43
    |
841 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:843:37
    |
843 | / ...                   (if 1 as libc::c_int != 0 {
844 | | ...                       0 as libc::c_int as libc::c_long
845 | | ...                   } else {
846 | | ...                       (if 1 as libc::c_int != 0 {
...   |
850 | | ...                       }) + 0 as libc::c_int as idx_t
851 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:843:37
    |
843 | / ...                   (if 1 as libc::c_int != 0 {
844 | | ...                       0 as libc::c_int as libc::c_long
845 | | ...                   } else {
846 | | ...                       (if 1 as libc::c_int != 0 {
...   |
850 | | ...                       }) + 0 as libc::c_int as idx_t
851 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
   --> src/version_etc.rs:220:1
    |
220 | / pub unsafe extern "C" fn version_etc(
221 | |     mut stream: *mut FILE,
222 | |     mut command_name: *const libc::c_char,
223 | |     mut package: *const libc::c_char,
...   |
229 | |     version_etc_va(stream, command_name, package, version, authors.as_va_list());
230 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:843:37
    |
843 | / ...                   (if 1 as libc::c_int != 0 {
844 | | ...                       0 as libc::c_int as libc::c_long
845 | | ...                   } else {
846 | | ...                       (if 1 as libc::c_int != 0 {
...   |
850 | | ...                       }) + 0 as libc::c_int as idx_t
851 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing `#[inline]` for a function
   --> src/version_etc.rs:220:1
    |
220 | / pub unsafe extern "C" fn version_etc(
221 | |     mut stream: *mut FILE,
222 | |     mut command_name: *const libc::c_char,
223 | |     mut package: *const libc::c_char,
...   |
229 | |     version_etc_va(stream, command_name, package, version, authors.as_va_list());
230 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:844:41
    |
844 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
   --> src/version_etc.rs:232:1
    |
232 | / pub fn emit_bug_reporting_address() {
233 | |     println!();
234 | |     println!(
235 | |         "{}",
...   |
246 | |     );
247 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:846:41
    |
846 | / ...                   (if 1 as libc::c_int != 0 {
847 | | ...                       0 as libc::c_int as libc::c_long
848 | | ...                   } else {
849 | | ...                       n
850 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:847:45
    |
847 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
   --> src/version_etc.rs:232:1
    |
232 | / pub fn emit_bug_reporting_address() {
233 | |     println!();
234 | |     println!(
235 | |         "{}",
...   |
246 | |     );
247 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:850:46
    |
850 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:851:42
    |
851 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:852:38
    |
852 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:854:37
    |
854 | / ...                   (((if 1 as libc::c_int != 0 {
855 | | ...                       0 as libc::c_int as libc::c_long
856 | | ...                   } else {
857 | | ...                       n
...   |
894 | | ...                           }) - 1 as libc::c_int as libc::c_long
895 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
854 ~                                     i32::from(((if 1 as libc::c_int != 0 {
855 +                                         0 as libc::c_int as libc::c_long
856 +                                     } else {
857 +                                         n
858 +                                     }) + 0 as libc::c_int as idx_t)
859 +                                         < -(if ((if 1 as libc::c_int != 0 {
860 +                                             0 as libc::c_int as libc::c_long
861 +                                         } else {
862 +                                             (if 1 as libc::c_int != 0 {
863 +                                                 0 as libc::c_int as libc::c_long
864 +                                             } else {
865 +                                                 n
866 +                                             }) + 0 as libc::c_int as idx_t
867 +                                         }) - 1 as libc::c_int as libc::c_long)
868 +                                             < 0 as libc::c_int as libc::c_long
869 +                                         {
870 +                                             ((((if 1 as libc::c_int != 0 {
871 +                                                 0 as libc::c_int as libc::c_long
872 +                                             } else {
873 +                                                 (if 1 as libc::c_int != 0 {
874 +                                                     0 as libc::c_int as libc::c_long
875 +                                                 } else {
876 +                                                     n
877 +                                                 }) + 0 as libc::c_int as idx_t
878 +                                             }) + 1 as libc::c_int as libc::c_long)
879 +                                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
880 +                                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
881 +                                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
882 +                                                 - 1 as libc::c_int as libc::c_long)
883 +                                                 * 2 as libc::c_int as libc::c_long
884 +                                                 + 1 as libc::c_int as libc::c_long
885 +                                         } else {
886 +                                             (if 1 as libc::c_int != 0 {
887 +                                                 0 as libc::c_int as libc::c_long
888 +                                             } else {
889 +                                                 (if 1 as libc::c_int != 0 {
890 +                                                     0 as libc::c_int as libc::c_long
891 +                                                 } else {
892 +                                                     n
893 +                                                 }) + 0 as libc::c_int as idx_t
894 +                                             }) - 1 as libc::c_int as libc::c_long
895 +                                         }))
    |

warning: arithmetic detected
   --> src/xmalloc.rs:854:38
    |
854 |   ...                   (((if 1 as libc::c_int != 0 {
    |  ________________________^
855 | | ...                       0 as libc::c_int as libc::c_long
856 | | ...                   } else {
857 | | ...                       n
858 | | ...                   }) + 0 as libc::c_int as idx_t)
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:854:38
    |
854 |   ...                   (((if 1 as libc::c_int != 0 {
    |  ________________________^
855 | | ...                       0 as libc::c_int as libc::c_long
856 | | ...                   } else {
857 | | ...                       n
858 | | ...                   }) + 0 as libc::c_int as idx_t)
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:854:39
    |
854 |   ...                   (((if 1 as libc::c_int != 0 {
    |  _________________________^
855 | | ...                       0 as libc::c_int as libc::c_long
856 | | ...                   } else {
857 | | ...                       n
858 | | ...                   }) + 0 as libc::c_int as idx_t)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:855:41
    |
855 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a module
  --> lib.rs:38:1
   |
38 | pub mod version_etc_fsf;
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:858:42
    |
858 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a static
 --> src/version_etc_fsf.rs:3:1
  |
3 | / pub static mut version_etc_copyright: [libc::c_char; 47] = unsafe {
4 | |     *::core::mem::transmute::<
5 | |         &[u8; 47],
6 | |         &[libc::c_char; 47],
7 | |     >(b"Copyright %s %d Free Software Foundation, Inc.\0")
8 | | };
  | |__^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:859:43
    |
859 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
860 | | ...                       0 as libc::c_int as libc::c_long
861 | | ...                   } else {
862 | | ...                       (if 1 as libc::c_int != 0 {
...   |
894 | | ...                       }) - 1 as libc::c_int as libc::c_long
895 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a module
  --> lib.rs:39:1
   |
39 | pub mod xalloc_die;
   | ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:859:43
    |
859 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
860 | | ...                       0 as libc::c_int as libc::c_long
861 | | ...                   } else {
862 | | ...                       (if 1 as libc::c_int != 0 {
...   |
894 | | ...                       }) - 1 as libc::c_int as libc::c_long
895 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
  --> src/xalloc_die.rs:16:1
   |
16 | / pub fn xalloc_die() {
17 | |     unsafe {
18 | |         if 0 != 0 {
19 | |             error(
...  |
52 | |     std::process::abort();
53 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:859:49
    |
859 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
860 | | ...                       0 as libc::c_int as libc::c_long
861 | | ...                   } else {
862 | | ...                       (if 1 as libc::c_int != 0 {
...   |
866 | | ...                       }) + 0 as libc::c_int as idx_t
867 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing `#[inline]` for a function
  --> src/xalloc_die.rs:16:1
   |
16 | / pub fn xalloc_die() {
17 | |     unsafe {
18 | |         if 0 != 0 {
19 | |             error(
...  |
52 | |     std::process::abort();
53 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:860:45
    |
860 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:862:45
    |
862 | / ...                   (if 1 as libc::c_int != 0 {
863 | | ...                       0 as libc::c_int as libc::c_long
864 | | ...                   } else {
865 | | ...                       n
866 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:863:49
    |
863 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:866:50
    |
866 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:867:46
    |
867 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:868:47
    |
868 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:870:48
    |
870 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
871 | | ...                       0 as libc::c_int as libc::c_long
872 | | ...                   } else {
873 | | ...                       (if 1 as libc::c_int != 0 {
...   |
877 | | ...                       }) + 0 as libc::c_int as idx_t
878 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:871:49
    |
871 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:873:49
    |
873 | / ...                   (if 1 as libc::c_int != 0 {
874 | | ...                       0 as libc::c_int as libc::c_long
875 | | ...                   } else {
876 | | ...                       n
877 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:874:53
    |
874 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:877:54
    |
877 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:878:50
    |
878 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:880:67
    |
880 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:881:67
    |
881 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:882:51
    |
882 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:883:51
    |
883 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:884:51
    |
884 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:886:45
    |
886 | / ...                   (if 1 as libc::c_int != 0 {
887 | | ...                       0 as libc::c_int as libc::c_long
888 | | ...                   } else {
889 | | ...                       (if 1 as libc::c_int != 0 {
...   |
893 | | ...                       }) + 0 as libc::c_int as idx_t
894 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:887:49
    |
887 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:889:49
    |
889 | / ...                   (if 1 as libc::c_int != 0 {
890 | | ...                       0 as libc::c_int as libc::c_long
891 | | ...                   } else {
892 | | ...                       n
893 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a module
  --> lib.rs:40:1
   |
40 | pub mod xgetcwd;
   | ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:890:53
    |
890 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
 --> src/xgetcwd.rs:7:1
  |
7 | pub type size_t = libc::c_ulong;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:893:54
    |
893 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:894:50
    |
894 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/xgetcwd.rs:9:1
   |
9  | / pub unsafe extern "C" fn xgetcwd() -> *mut libc::c_char {
10 | |     let mut cwd: *mut libc::c_char = getcwd(
11 | |         0 as *mut libc::c_char,
12 | |         0 as libc::c_int as size_t,
...  |
17 | |     return cwd;
18 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
  --> src/xgetcwd.rs:9:1
   |
9  | / pub unsafe extern "C" fn xgetcwd() -> *mut libc::c_char {
10 | |     let mut cwd: *mut libc::c_char = getcwd(
11 | |         0 as *mut libc::c_char,
12 | |         0 as libc::c_int as size_t,
...  |
17 | |     return cwd;
18 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:897:37
    |
897 | / ...                   ((0 as libc::c_int as libc::c_long)
898 | | ...                       < (if 1 as libc::c_int != 0 {
899 | | ...                           0 as libc::c_int as libc::c_long
900 | | ...                       } else {
901 | | ...                           n
902 | | ...                       }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
897 ~                                     i32::from((0 as libc::c_int as libc::c_long)
898 +                                         < (if 1 as libc::c_int != 0 {
899 +                                             0 as libc::c_int as libc::c_long
900 +                                         } else {
901 +                                             n
902 +                                         }) + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:897:38
    |
897 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:898:43
    |
898 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
899 | | ...                       0 as libc::c_int as libc::c_long
900 | | ...                   } else {
901 | | ...                       n
902 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:898:43
    |
898 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
899 | | ...                       0 as libc::c_int as libc::c_long
900 | | ...                   } else {
901 | | ...                       n
902 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a module
  --> lib.rs:41:1
   |
41 | pub mod xmalloc;
   | ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:898:43
    |
898 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
899 | | ...                       0 as libc::c_int as libc::c_long
900 | | ...                   } else {
901 | | ...                       n
902 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:899:45
    |
899 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:902:46
    |
902 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:903:49
    |
903 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:903:49
    |
903 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:903:49
    |
903 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:905:40
    |
905 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
906 | | ...                       0 as libc::c_int as libc::c_long
907 | | ...                   } else {
908 | | ...                       s
909 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a type alias
  --> src/xmalloc.rs:42:1
   |
42 | pub type ptrdiff_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:905:40
    |
905 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
906 | | ...                       0 as libc::c_int as libc::c_long
907 | | ...                   } else {
908 | | ...                       s
909 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a type alias
  --> src/xmalloc.rs:43:1
   |
43 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:905:41
    |
905 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
906 | | ...                       0 as libc::c_int as libc::c_long
907 | | ...                   } else {
908 | | ...                       s
909 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a type alias
  --> src/xmalloc.rs:44:1
   |
44 | pub type idx_t = ptrdiff_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:906:41
    |
906 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
  --> src/xmalloc.rs:45:1
   |
45 | pub const DEFAULT_MXFAST: C2RustUnnamed = 128;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:909:42
    |
909 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/xmalloc.rs:46:1
   |
46 | pub type C2RustUnnamed = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:910:43
    |
910 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
  --> src/xmalloc.rs:47:1
   |
47 | pub const DEFAULT_MXFAST_0: C2RustUnnamed_0 = 128;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:912:41
    |
912 | / ...                   ((0 as libc::c_int as libc::c_long)
913 | | ...                       < s + 0 as libc::c_int as idx_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
912 ~                                         i32::from((0 as libc::c_int as libc::c_long)
913 +                                             < s + 0 as libc::c_int as idx_t)
    |

warning: missing documentation for a type alias
  --> src/xmalloc.rs:48:1
   |
48 | pub type C2RustUnnamed_0 = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:912:42
    |
912 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/xmalloc.rs:50:1
   |
50 | / unsafe extern "C" fn irealloc(
51 | |     mut p: *mut libc::c_void,
52 | |     mut s: idx_t,
53 | | ) -> *mut libc::c_void {
...  |
59 | |     };
60 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:913:47
    |
913 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:913:47
    |
913 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:913:51
    |
913 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:915:41
    |
915 | / ...                   ((-(1 as libc::c_int) as libc::c_long
916 | | ...                       - 0 as libc::c_int as idx_t)
917 | | ...                       < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
915 ~                                         i32::from((-(1 as libc::c_int) as libc::c_long
916 +                                             - 0 as libc::c_int as idx_t)
917 +                                             < s - 1 as libc::c_int as libc::c_long)
    |

warning: arithmetic detected
   --> src/xmalloc.rs:915:42
    |
915 |   ...                   ((-(1 as libc::c_int) as libc::c_long
    |  ________________________^
916 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:915:42
    |
915 |   ...                   ((-(1 as libc::c_int) as libc::c_long
    |  ________________________^
916 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
  --> src/xmalloc.rs:62:1
   |
62 | / fn icalloc(n: i64, s: i64) -> *mut libc::c_void {
63 | |     let n_usize = n.try_into().unwrap_or(0);
64 | |     let s_usize = s.try_into().unwrap_or(0);
65 | |
...  |
81 | |     Box::into_raw(boxed_slice) as *mut libc::c_void
82 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:915:43
    |
915 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:916:47
    |
916 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:917:47
    |
917 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:917:47
    |
917 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:917:51
    |
917 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:920:37
    |
920 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(0 as libc::c_int as idx_t / n < s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:920:38
    |
920 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:920:38
    |
920 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xmalloc.rs:920:38
    |
920 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:920:38
    |
920 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:923:33
    |
923 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(-(1 as libc::c_int) as idx_t / s < n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:923:34
    |
923 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:923:34
    |
923 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xmalloc.rs:923:34
    |
923 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:923:34
    |
923 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/xmalloc.rs:85:1
   |
85 | / fn ireallocarray(n: usize, s: usize) -> *mut libc::c_void {
86 | |     if n <= usize::MAX && s <= usize::MAX {
87 | |         let mut nx = n;
88 | |         let mut sx = s;
...  |
97 | |     }
98 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
   --> src/xmalloc.rs:929:22
    |
929 |                     *(&mut nbytes as *mut idx_t) = fresh18;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(nbytes)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: borrow as raw pointer
   --> src/xmalloc.rs:933:22
    |
933 |                     *(&mut nbytes as *mut idx_t) = fresh20;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(nbytes)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:934:21
    |
934 |                     fresh21 as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(fresh21)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:940:23
    |
940 |     pa = xrealloc(pa, nbytes as size_t);
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `return` statement
   --> src/xmalloc.rs:946:5
    |
946 |     vec![0; s]
    |     ^^^^^^^^^^ help: add `return` as shown: `return vec![0; s]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/xmalloc.rs:953:5
    |
953 |     vec
    |     ^^^ help: add `return` as shown: `return vec`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/xmalloc.rs:951:16
    |
951 |     let size = s as usize; // Assuming idx_t can be safely cast to usize
    |                ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
   --> src/xmalloc.rs:951:16
    |
951 |     let size = s as usize; // Assuming idx_t can be safely cast to usize
    |                ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `return` statement
   --> src/xmalloc.rs:960:5
    |
960 |     Some(vec.into_boxed_slice())
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Some(vec.into_boxed_slice())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/xmalloc.rs:967:5
    |
967 |     Box::into_raw(allocation) as *mut libc::c_void
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Box::into_raw(allocation) as *mut libc::c_void`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used `expect()` on `an Option` value
   --> src/xmalloc.rs:965:22
    |
965 |     let total_size = n.checked_mul(s).expect("Overflow in allocation size");
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this value is an `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: missing documentation for a function
   --> src/xmalloc.rs:102:1
    |
102 | / unsafe extern "C" fn _gl_alloc_nomem() -> *mut libc::c_void {
103 | |     *__errno_location() = 12 as libc::c_int;
104 | |     return 0 as *mut libc::c_void;
105 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/xmalloc.rs:967:5
    |
967 |     Box::into_raw(allocation) as *mut libc::c_void
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `Box::into_raw(allocation).cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing `return` statement
   --> src/xmalloc.rs:974:5
    |
974 |     result
    |     ^^^^^^ help: add `return` as shown: `return result`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/xmalloc.rs:981:5
    |
981 |     result
    |     ^^^^^^ help: add `return` as shown: `return result`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/xmalloc.rs:989:5
    |
989 |     CString::new(result).expect("Failed to create CString")
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::new(result).expect("Failed to create CString")`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a function
   --> src/xmalloc.rs:107:1
    |
107 | / fn imalloc(s: usize) -> *mut libc::c_void {
108 | |     if s <= usize::MAX {
109 | |         let layout = std::alloc::Layout::from_size_align(s, 1).unwrap();
110 | |         let ptr = unsafe { std::alloc::alloc(layout) };
...   |
118 | |     }
119 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:986:41
    |
986 |     let mut result = Vec::with_capacity(p.len() + 1);
    |                                         ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:986:41
    |
986 |     let mut result = Vec::with_capacity(p.len() + 1);
    |                                         ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: used `expect()` on `a Result` value
   --> src/xmalloc.rs:989:5
    |
989 |     CString::new(result).expect("Failed to create CString")
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: missing `return` statement
   --> src/xmalloc.rs:994:5
    |
994 |     string.to_owned()
    |     ^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return string.to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: path statement with no effect
   --> src/quotearg.rs:382:25
    |
382 |                         len;
    |                         ^^^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
   --> src/quotearg.rs:384:25
    |
384 |                         quote_string;
    |                         ^^^^^^^^^^^^^

warning: path statement with no effect
   --> src/quotearg.rs:420:21
    |
420 |                     len;
    |                     ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:450:21
    |
450 |                     len;
    |                     ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:586:49
    |
586 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:591:49
    |
591 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:596:49
    |
596 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:601:49
    |
601 | ...                   len;
    |                       ^^^^

warning: missing documentation for a function
   --> src/xmalloc.rs:121:1
    |
121 | / fn check_nonnull(p: *mut libc::c_void) -> *mut libc::c_void {
122 | |     if p.is_null() {
123 | |         unsafe { xalloc_die() };
124 | |     }
125 | |     p
126 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: path statement with no effect
   --> src/quotearg.rs:649:49
    |
649 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:654:49
    |
654 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:659:49
    |
659 | ...                   len;
    |                       ^^^^

warning: missing documentation for a function
   --> src/xmalloc.rs:129:1
    |
129 | / pub unsafe extern "C" fn xmalloc(mut s: size_t) -> *mut libc::c_void {
130 | |     return check_nonnull(malloc(s));
131 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: path statement with no effect
   --> src/quotearg.rs:664:49
    |
664 | ...                   len;
    |                       ^^^^

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:129:1
    |
129 | / pub unsafe extern "C" fn xmalloc(mut s: size_t) -> *mut libc::c_void {
130 | |     return check_nonnull(malloc(s));
131 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: path statement with no effect
   --> src/quotearg.rs:838:37
    |
838 | ...                   m;
    |                       ^^

warning: path statement with no effect
   --> src/quotearg.rs:860:41
    |
860 | ...                   j;
    |                       ^^

warning: path statement with no effect
    --> src/quotearg.rs:1145:21
     |
1145 |                     len;
     |                     ^^^^

warning: path statement with no effect
    --> src/quotearg.rs:1147:21
     |
1147 |                     quote_string;
     |                     ^^^^^^^^^^^^^

warning: missing documentation for a function
   --> src/xmalloc.rs:133:1
    |
133 | / pub unsafe extern "C" fn ximalloc(mut s: idx_t) -> *mut libc::c_void {
134 | |     let allocated_memory = imalloc(s.try_into().unwrap());
135 | | return check_nonnull(allocated_memory);
136 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: path statement with no effect
    --> src/quotearg.rs:1270:9
     |
1270 |         i;
     |         ^^

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:133:1
    |
133 | / pub unsafe extern "C" fn ximalloc(mut s: idx_t) -> *mut libc::c_void {
134 | |     let allocated_memory = imalloc(s.try_into().unwrap());
135 | | return check_nonnull(allocated_memory);
136 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: path statement with no effect
   --> src/version_etc.rs:186:9
    |
186 |         n_authors;
    |         ^^^^^^^^^^

warning: path statement with no effect
   --> src/version_etc.rs:208:9
    |
208 |         n_authors;
    |         ^^^^^^^^^^

warning: missing documentation for a function
   --> src/xmalloc.rs:138:1
    |
138 | / pub fn xcharalloc(n: usize) -> Result<CString, std::io::Error> {
139 | |     let buffer = vec![0u8; n];
140 | |     CString::from_vec_with_nul(buffer).map_err(|_| std::io::Error::new(std::io::ErrorKind::InvalidInput, "Failed to create CString"))
141 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:138:1
    |
138 | / pub fn xcharalloc(n: usize) -> Result<CString, std::io::Error> {
139 | |     let buffer = vec![0u8; n];
140 | |     CString::from_vec_with_nul(buffer).map_err(|_| std::io::Error::new(std::io::ErrorKind::InvalidInput, "Failed to create CString"))
141 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:144:1
    |
144 | / pub unsafe extern "C" fn xrealloc(
145 | |     mut p: *mut libc::c_void,
146 | |     mut s: size_t,
147 | | ) -> *mut libc::c_void {
...   |
152 | |     return r;
153 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:144:1
    |
144 | / pub unsafe extern "C" fn xrealloc(
145 | |     mut p: *mut libc::c_void,
146 | |     mut s: size_t,
147 | | ) -> *mut libc::c_void {
...   |
152 | |     return r;
153 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:155:1
    |
155 | / pub fn xirealloc(p: Option<&mut Vec<u8>>, s: usize) -> Option<Vec<u8>> {
156 | |     match p {
157 | |         Some(vec) => {
158 | |             let mut new_vec = vec.clone();
...   |
167 | |     }
168 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:155:1
    |
155 | / pub fn xirealloc(p: Option<&mut Vec<u8>>, s: usize) -> Option<Vec<u8>> {
156 | |     match p {
157 | |         Some(vec) => {
158 | |             let mut new_vec = vec.clone();
...   |
167 | |     }
168 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:171:1
    |
171 | / pub unsafe extern "C" fn xreallocarray(
172 | |     mut p: *mut libc::c_void,
173 | |     mut n: size_t,
174 | |     mut s: size_t,
...   |
180 | |     return r;
181 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:171:1
    |
171 | / pub unsafe extern "C" fn xreallocarray(
172 | |     mut p: *mut libc::c_void,
173 | |     mut n: size_t,
174 | |     mut s: size_t,
...   |
180 | |     return r;
181 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:183:1
    |
183 | / pub fn xireallocarray(n: usize, s: usize) -> *mut libc::c_void {
184 | |     let total_size = n.checked_mul(s).expect("Overflow in allocation size");
185 | |     let mut vec = Vec::with_capacity(total_size);
186 | |     let ptr = vec.as_mut_ptr();
187 | |     std::mem::forget(vec); // Prevent Vec from deallocating the memory
188 | |     ptr
189 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:183:1
    |
183 | / pub fn xireallocarray(n: usize, s: usize) -> *mut libc::c_void {
184 | |     let total_size = n.checked_mul(s).expect("Overflow in allocation size");
185 | |     let mut vec = Vec::with_capacity(total_size);
186 | |     let ptr = vec.as_mut_ptr();
187 | |     std::mem::forget(vec); // Prevent Vec from deallocating the memory
188 | |     ptr
189 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:192:1
    |
192 | / pub unsafe extern "C" fn xnmalloc(mut n: size_t, mut s: size_t) -> *mut libc::c_void {
193 | |     return xreallocarray(0 as *mut libc::c_void, n, s);
194 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:192:1
    |
192 | / pub unsafe extern "C" fn xnmalloc(mut n: size_t, mut s: size_t) -> *mut libc::c_void {
193 | |     return xreallocarray(0 as *mut libc::c_void, n, s);
194 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:196:1
    |
196 | / pub fn xinmalloc(n: idx_t, s: idx_t) -> Result<Vec<u8>, io::Error> {
197 | |     let size = n.checked_mul(s).ok_or(io::Error::new(io::ErrorKind::InvalidInput, "Overflow in size calculation"))?;
198 | |     let vec = Vec::with_capacity(size as usize);
199 | |     Ok(vec)
200 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:196:1
    |
196 | / pub fn xinmalloc(n: idx_t, s: idx_t) -> Result<Vec<u8>, io::Error> {
197 | |     let size = n.checked_mul(s).ok_or(io::Error::new(io::ErrorKind::InvalidInput, "Overflow in size calculation"))?;
198 | |     let vec = Vec::with_capacity(size as usize);
199 | |     Ok(vec)
200 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:203:1
    |
203 | / pub unsafe extern "C" fn x2realloc(
204 | |     mut p: *mut libc::c_void,
205 | |     mut ps: *mut size_t,
206 | | ) -> *mut libc::c_void {
207 | |     return x2nrealloc(p, ps, 1 as libc::c_int as size_t);
208 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:203:1
    |
203 | / pub unsafe extern "C" fn x2realloc(
204 | |     mut p: *mut libc::c_void,
205 | |     mut ps: *mut size_t,
206 | | ) -> *mut libc::c_void {
207 | |     return x2nrealloc(p, ps, 1 as libc::c_int as size_t);
208 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:210:1
    |
210 | / pub unsafe extern "C" fn x2nrealloc(
211 | |     mut p: *mut libc::c_void,
212 | |     mut pn: *mut size_t,
213 | |     mut s: size_t,
...   |
235 | |     return p;
236 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:210:1
    |
210 | / pub unsafe extern "C" fn x2nrealloc(
211 | |     mut p: *mut libc::c_void,
212 | |     mut pn: *mut size_t,
213 | |     mut s: size_t,
...   |
235 | |     return p;
236 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:238:1
    |
238 | / pub unsafe extern "C" fn xpalloc(
239 | |     mut pa: *mut libc::c_void,
240 | |     mut pn: *mut idx_t,
241 | |     mut n_incr_min: idx_t,
...   |
942 | |     return pa;
943 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:238:1
    |
238 | / pub unsafe extern "C" fn xpalloc(
239 | |     mut pa: *mut libc::c_void,
240 | |     mut pn: *mut idx_t,
241 | |     mut n_incr_min: idx_t,
...   |
942 | |     return pa;
943 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: `rust` (lib test) generated 4225 warnings (1920 duplicates)
warning: missing documentation for a function
   --> src/xmalloc.rs:945:1
    |
945 | / pub fn xzalloc(s: usize) -> Vec<u8> {
946 | |     vec![0; s]
947 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:945:1
    |
945 | / pub fn xzalloc(s: usize) -> Vec<u8> {
946 | |     vec![0; s]
947 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:950:1
    |
950 | / pub fn xizalloc(s: idx_t) -> Vec<u8> {
951 | |     let size = s as usize; // Assuming idx_t can be safely cast to usize
952 | |     let vec = vec![0u8; size]; // Allocate a vector of the specified size initialized to zero
953 | |     vec
954 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:950:1
    |
950 | / pub fn xizalloc(s: idx_t) -> Vec<u8> {
951 | |     let size = s as usize; // Assuming idx_t can be safely cast to usize
952 | |     let vec = vec![0u8; size]; // Allocate a vector of the specified size initialized to zero
953 | |     vec
954 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:957:1
    |
957 | / pub fn xcalloc(n: usize, s: usize) -> Option<Box<[u8]>> {
958 | |     let total_size = n.checked_mul(s)?;
959 | |     let vec = vec![0u8; total_size];
960 | |     Some(vec.into_boxed_slice())
961 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:957:1
    |
957 | / pub fn xcalloc(n: usize, s: usize) -> Option<Box<[u8]>> {
958 | |     let total_size = n.checked_mul(s)?;
959 | |     let vec = vec![0u8; total_size];
960 | |     Some(vec.into_boxed_slice())
961 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:964:1
    |
964 | / pub fn xicalloc(n: usize, s: usize) -> *mut libc::c_void {
965 | |     let total_size = n.checked_mul(s).expect("Overflow in allocation size");
966 | |     let allocation = vec![0u8; total_size].into_boxed_slice();
967 | |     Box::into_raw(allocation) as *mut libc::c_void
968 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:964:1
    |
964 | / pub fn xicalloc(n: usize, s: usize) -> *mut libc::c_void {
965 | |     let total_size = n.checked_mul(s).expect("Overflow in allocation size");
966 | |     let allocation = vec![0u8; total_size].into_boxed_slice();
967 | |     Box::into_raw(allocation) as *mut libc::c_void
968 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:971:1
    |
971 | / pub fn xmemdup(p: &[u8]) -> Vec<u8> {
972 | |     let mut result = vec![0; p.len()];
973 | |     result.copy_from_slice(p);
974 | |     result
975 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:971:1
    |
971 | / pub fn xmemdup(p: &[u8]) -> Vec<u8> {
972 | |     let mut result = vec![0; p.len()];
973 | |     result.copy_from_slice(p);
974 | |     result
975 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:978:1
    |
978 | / pub fn ximemdup(p: &[u8]) -> Vec<u8> {
979 | |     let mut result = vec![0u8; p.len()];
980 | |     result.copy_from_slice(p);
981 | |     result
982 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:978:1
    |
978 | / pub fn ximemdup(p: &[u8]) -> Vec<u8> {
979 | |     let mut result = vec![0u8; p.len()];
980 | |     result.copy_from_slice(p);
981 | |     result
982 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:985:1
    |
985 | / pub fn ximemdup0(p: &[u8]) -> CString {
986 | |     let mut result = Vec::with_capacity(p.len() + 1);
987 | |     result.extend_from_slice(p);
988 | |     result.push(0); // Null-terminate the string
989 | |     CString::new(result).expect("Failed to create CString")
990 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:985:1
    |
985 | / pub fn ximemdup0(p: &[u8]) -> CString {
986 | |     let mut result = Vec::with_capacity(p.len() + 1);
987 | |     result.extend_from_slice(p);
988 | |     result.push(0); // Null-terminate the string
989 | |     CString::new(result).expect("Failed to create CString")
990 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:993:1
    |
993 | / pub fn xstrdup(string: &str) -> String {
994 | |     string.to_owned()
995 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:993:1
    |
993 | / pub fn xstrdup(string: &str) -> String {
994 | |     string.to_owned()
995 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: `rust` (lib) generated 5253 warnings (2305 duplicates)
warning: use of `println!`
   --> src/pwd.rs:255:5
    |
255 | /     println!(
256 | |         "{} online help: <{}>",
257 | |         help_message,
258 | |         "https://www.gnu.org/software/coreutils/"
259 | |     );
    | |_____^
    |
    = note: `-W clippy::print-stdout` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: literal with an empty format string
   --> src/pwd.rs:258:9
    |
258 |         "https://www.gnu.org/software/coreutils/"
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::print-literal` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_literal
help: try this
    |
256 ~         "{} online help: <https://www.gnu.org/software/coreutils/>",
257 ~         help_message
    |

warning: use of `eprintln!`
   --> src/pwd.rs:268:9
    |
268 |         eprintln!("{}", report_message);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::print-stderr` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stderr

warning: use of `println!`
   --> src/pwd.rs:273:5
    |
273 | /     println!(
274 | |         "Full documentation <{}{}>",
275 | |         "https://www.gnu.org/software/coreutils/",
276 | |         url_program
277 | |     );
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: literal with an empty format string
   --> src/pwd.rs:275:9
    |
275 |         "https://www.gnu.org/software/coreutils/",
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_literal
help: try this
    |
274 -         "Full documentation <{}{}>",
274 +         "Full documentation <https://www.gnu.org/software/coreutils/{}>",
    |

warning: use of `println!`
   --> src/pwd.rs:279:5
    |
279 | /     println!(
280 | |         "or available locally via: info '(coreutils) {}{}'",
281 | |         node,
282 | |         if node == program { " invocation" } else { "" }
283 | |     );
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `eprintln!`
   --> src/pwd.rs:365:9
    |
365 | / ...   eprintln!(
366 | | ...       "{}",
367 | | ...       unsafe { std::ffi::CStr::from_ptr(gettext(format!("Try '{} --help' for more information.\n", unsafe { std::ffi::CStr::from_ptr(...
368 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stderr

warning: use of `println!`
   --> src/pwd.rs:370:9
    |
370 | / ...   println!(
371 | | ...       "{}",
372 | | ...       unsafe { std::ffi::CStr::from_ptr(gettext(format!("Usage: {} [OPTION]...\n", unsafe { std::ffi::CStr::from_ptr(program_name).to...
373 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/pwd.rs:374:9
    |
374 | / ...   println!(
375 | | ...       "{}",
376 | | ...       unsafe { std::ffi::CStr::from_ptr(gettext("Print the full filename of the current working directory.\n\0".as_ptr() as *const i8...
377 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/pwd.rs:378:9
    |
378 | / ...   println!(
379 | | ...       "{}",
380 | | ...       unsafe { std::ffi::CStr::from_ptr(gettext("  -L, --logical   use PWD from environment, even if it contains symlinks\n\0".as_ptr...
381 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/pwd.rs:382:9
    |
382 | / ...   println!(
383 | | ...       "{}",
384 | | ...       unsafe { std::ffi::CStr::from_ptr(gettext("  -P, --physical  resolve all symlinks\n\0".as_ptr() as *const i8)).to_string_lossy() }
385 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/pwd.rs:386:9
    |
386 | / ...   println!(
387 | | ...       "{}",
388 | | ...       unsafe { std::ffi::CStr::from_ptr(gettext("      --help        display this help and exit\n\0".as_ptr() as *const i8)).to_strin...
389 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/pwd.rs:390:9
    |
390 | / ...   println!(
391 | | ...       "{}",
392 | | ...       unsafe { std::ffi::CStr::from_ptr(gettext("      --version     output version information and exit\n\0".as_ptr() as *const i8))...
393 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/pwd.rs:394:9
    |
394 | / ...   println!(
395 | | ...       "{}",
396 | | ...       unsafe { std::ffi::CStr::from_ptr(gettext("\nIf no option is specified, -P is assumed.\n\0".as_ptr() as *const i8)).to_string_l...
397 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/pwd.rs:398:9
    |
398 | / ...   println!(
399 | | ...       "{}",
400 | | ...       unsafe { std::ffi::CStr::from_ptr(gettext(format!("\nYour shell may have its own version of {}, which usually supersedes\nthe v...
401 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:254:66
    |
254 |     let help_message = unsafe { std::ffi::CStr::from_ptr(gettext(b"GNU coreutils\0".as_ptr() as *const libc::c_char)).to_string_lossy() };
    |                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::as-conversions` implied by `-W clippy::restriction`
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:267:72
    |
267 | ...m_ptr(gettext(b"Report any translation bugs to <https://translationproject.org/team/>\0".as_ptr() as *const libc::c_char)).to_string_l...
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: redundant else block
   --> src/pwd.rs:305:12
    |
305 |       } else {
    |  ____________^
306 | |         return false;
307 | |     }
    | |_____^
    |
    = note: `-W clippy::redundant-else` implied by `-W clippy::pedantic`
    = help: remove the `else` block and move the contents out
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:318:19
    |
318 |             name: b"logical\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:318:19
    |
318 |             name: b"logical\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:319:22
    |
319 |             has_arg: 0 as libc::c_int,
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:320:19
    |
320 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:320:19
    |
320 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:321:18
    |
321 |             val: 'L' as i32,
    |                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:327:19
    |
327 |             name: b"physical\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:327:19
    |
327 |             name: b"physical\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:328:22
    |
328 |             has_arg: 0 as libc::c_int,
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:329:19
    |
329 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:329:19
    |
329 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:330:18
    |
330 |             val: 'P' as i32,
    |                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:336:19
    |
336 |             name: b"help\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:336:19
    |
336 |             name: b"help\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:337:22
    |
337 |             has_arg: 0 as libc::c_int,
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:338:19
    |
338 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:338:19
    |
338 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:339:18
    |
339 |             val: GETOPT_HELP_CHAR as libc::c_int,
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:345:19
    |
345 |             name: b"version\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:345:19
    |
345 |             name: b"version\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:346:22
    |
346 |             has_arg: 0 as libc::c_int,
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:347:19
    |
347 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:347:19
    |
347 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:348:18
    |
348 |             val: GETOPT_VERSION_CHAR as libc::c_int,
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:354:19
    |
354 |             name: 0 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:355:22
    |
355 |             has_arg: 0 as libc::c_int,
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:356:19
    |
356 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:356:19
    |
356 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:357:18
    |
357 |             val: 0 as libc::c_int,
    |                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:367:55
    |
367 | ...xt(format!("Try '{} --help' for more information.\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr() as *const i8))....
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:372:55
    |
372 | ...ext(format!("Usage: {} [OPTION]...\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr() as *const i8)).to...
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:376:55
    |
376 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("Print the full filename of the current working directory.\n\0".as_ptr() as *const i8)).t...
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:380:55
    |
380 | ...from_ptr(gettext("  -L, --logical   use PWD from environment, even if it contains symlinks\n\0".as_ptr() as *const i8)).to_string_loss...
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:384:55
    |
384 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("  -P, --physical  resolve all symlinks\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:388:55
    |
388 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("      --help        display this help and exit\n\0".as_ptr() as *const i8)).to_string_lo...
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:392:55
    |
392 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("      --version     output version information and exit\n\0".as_ptr() as *const i8)).to_...
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:396:55
    |
396 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("\nIf no option is specified, -P is assumed.\n\0".as_ptr() as *const i8)).to_string_lossy...
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:400:55
    |
400 | ...xt(format!("\nYour shell may have its own version of {}, which usually supersedes\nthe version described here.  Please refer to your shell's documentation\nfor details about the options it supports.\n\0", "pwd").as_ptr() as *const i8))....
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:408:10
    |
408 |     free((*p).buf as *mut libc::c_void);
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:409:10
    |
409 |     free(p as *mut libc::c_void);
    |          ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:412:19
    |
412 |       let n_alloc = if (2 * 4096) < (32 * 1024) {
    |  ___________________^
413 | |         2 * 4096
414 | |     } else {
415 | |         32 * 1024
416 | |     } as u64;
    | |____________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:418:27
    |
418 |     let mut buf = vec![0; n_alloc as usize]; // Allocate a buffer of n_alloc size initialized to 0
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:422:38
    |
422 |         start = buf.as_mut_ptr().add(n_alloc as usize - 1); // Pointer to the end of the buffer
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:423:18
    |
423 |         *start = '\0' as i8; // Null-terminate the buffer
    |                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:442:30
    |
442 |       let mut n_free: size_t = ((*p).start).offset_from((*p).buf) as libc::c_long
    |  ______________________________^
443 | |         as size_t;
    | |_________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:442:30
    |
442 |     let mut n_free: size_t = ((*p).start).offset_from((*p).buf) as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:444:18
    |
444 |     if n_free < (1 as libc::c_int as libc::c_ulong).wrapping_add(s_len) {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:444:18
    |
444 |     if n_free < (1 as libc::c_int as libc::c_ulong).wrapping_add(s_len) {
    |                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:446:27
    |
446 |             .wrapping_add(1 as libc::c_int as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:446:27
    |
446 |             .wrapping_add(1 as libc::c_int as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:448:40
    |
448 |           let mut q: *mut libc::c_char = xnmalloc(2 as libc::c_int as size_t, half)
    |  ________________________________________^
449 | |             as *mut libc::c_char;
    | |________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:448:49
    |
448 |         let mut q: *mut libc::c_char = xnmalloc(2 as libc::c_int as size_t, half)
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:448:49
    |
448 |         let mut q: *mut libc::c_char = xnmalloc(2 as libc::c_int as size_t, half)
    |                                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:453:21
    |
453 |             .offset((2 as libc::c_int as libc::c_ulong).wrapping_mul(half) as isize)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:453:22
    |
453 |             .offset((2 as libc::c_int as libc::c_ulong).wrapping_mul(half) as isize)
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:453:22
    |
453 |             .offset((2 as libc::c_int as libc::c_ulong).wrapping_mul(half) as isize)
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:454:23
    |
454 |             .offset(-(n_used as isize));
    |                       ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:456:13
    |
456 |             (*p).start as *mut libc::c_void,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:457:13
    |
457 |             ((*p).buf).offset(n_free as isize) as *const libc::c_void,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:457:31
    |
457 |             ((*p).buf).offset(n_free as isize) as *const libc::c_void,
    |                               ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:460:14
    |
460 |         free((*p).buf as *mut libc::c_void);
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:462:25
    |
462 |         (*p).n_alloc = (2 as libc::c_int as libc::c_ulong).wrapping_mul(half);
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:462:25
    |
462 |         (*p).n_alloc = (2 as libc::c_int as libc::c_ulong).wrapping_mul(half);
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:466:19
    |
466 |         .offset(-((1 as libc::c_int as libc::c_ulong).wrapping_add(s_len) as isize));
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:466:20
    |
466 |         .offset(-((1 as libc::c_int as libc::c_ulong).wrapping_add(s_len) as isize));
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:466:20
    |
466 |         .offset(-((1 as libc::c_int as libc::c_ulong).wrapping_add(s_len) as isize));
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:467:26
    |
467 |     *((*p).start).offset(0 as libc::c_int as isize) = '/' as i32 as libc::c_char;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:467:26
    |
467 |     *((*p).start).offset(0 as libc::c_int as isize) = '/' as i32 as libc::c_char;
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:467:55
    |
467 |     *((*p).start).offset(0 as libc::c_int as isize) = '/' as i32 as libc::c_char;
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:467:55
    |
467 |     *((*p).start).offset(0 as libc::c_int as isize) = '/' as i32 as libc::c_char;
    |                                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:469:9
    |
469 |         ((*p).start).offset(1 as libc::c_int as isize) as *mut libc::c_void,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:469:29
    |
469 |         ((*p).start).offset(1 as libc::c_int as isize) as *mut libc::c_void,
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:469:29
    |
469 |         ((*p).start).offset(1 as libc::c_int as isize) as *mut libc::c_void,
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:470:9
    |
470 |         s as *const libc::c_void,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:475:13
    |
475 |     let n = n as usize; // Convert u64 to usize
    |             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:481:5
    |
481 |     buf.as_ptr() as *const libc::c_char // Return a pointer to the buffer as *const libc::c_char
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:489:30
    |
489 |     let mut dirp: *mut DIR = 0 as *mut DIR;
    |                              ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:511:20
    |
511 |     dirp = opendir(b"..\0" as *const u8 as *const libc::c_char);
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:511:20
    |
511 |     dirp = opendir(b"..\0" as *const u8 as *const libc::c_char);
    |                    ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:518:13
    |
518 |     gettext(b"cannot open directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:518:13
    |
518 |     gettext(b"cannot open directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:521:16
    |
521 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:521:36
    |
521 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:526:48
    |
526 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:531:13
    |
531 |     gettext(b"cannot open directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:531:13
    |
531 |     gettext(b"cannot open directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:534:35
    |
534 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:540:48
    |
540 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:545:13
    |
545 |     gettext(b"cannot open directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:545:13
    |
545 |     gettext(b"cannot open directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:548:35
    |
548 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:556:12
    |
556 |     if (if 0 as libc::c_int <= fd {
    |            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:559:15
    |
559 |         chdir(b"..\0" as *const u8 as *const libc::c_char)
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:559:15
    |
559 |         chdir(b"..\0" as *const u8 as *const libc::c_char)
    |               ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:560:10
    |
560 |     }) < 0 as libc::c_int
    |          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:567:13
    |
567 |     gettext(b"failed to chdir to %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:567:13
    |
567 |     gettext(b"failed to chdir to %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:570:16
    |
570 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:570:36
    |
570 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:575:48
    |
575 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:580:13
    |
580 |     gettext(b"failed to chdir to %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:580:13
    |
580 |     gettext(b"failed to chdir to %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:583:35
    |
583 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:589:48
    |
589 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:594:13
    |
594 |     gettext(b"failed to chdir to %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:594:13
    |
594 |     gettext(b"failed to chdir to %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:597:35
    |
597 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:604:12
    |
604 |     if (if 0 as libc::c_int <= fd {
    |            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:607:14
    |
607 |         stat(b".\0" as *const u8 as *const libc::c_char, &mut parent_sb)
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:607:14
    |
607 |         stat(b".\0" as *const u8 as *const libc::c_char, &mut parent_sb)
    |              ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:608:10
    |
608 |     }) < 0 as libc::c_int
    |          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:615:13
    |
615 |     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:615:13
    |
615 |     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:618:16
    |
618 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:618:36
    |
618 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:623:48
    |
623 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:628:13
    |
628 |     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:628:13
    |
628 |     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:631:35
    |
631 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:637:48
    |
637 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:642:13
    |
642 |     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:642:13
    |
642 |     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:645:35
    |
645 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:653:13
    |
653 |     found = 0 as libc::c_int != 0;
    |             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:655:37
    |
655 |         let mut dp: *const dirent = 0 as *const dirent;
    |                                     ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:675:31
    |
675 |         *__errno_location() = 0 as libc::c_int;
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: redundant else block
   --> src/pwd.rs:685:16
    |
685 |           } else {
    |  ________________^
686 | |             ino = (*dp).d_ino;
687 | |             if ino == NOT_AN_INODE_NUMBER as libc::c_int as libc::c_ulong
688 | |                 || use_lstat as libc::c_int != 0
...   |
707 | |             break;
708 | |         }
    | |_________^
    |
    = help: remove the `else` block and move the contents out
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:682:24
    |
682 |                 dirp = 0 as *mut DIR;
    |                        ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:687:23
    |
687 |             if ino == NOT_AN_INODE_NUMBER as libc::c_int as libc::c_ulong
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:687:23
    |
687 |             if ino == NOT_AN_INODE_NUMBER as libc::c_int as libc::c_ulong
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:688:20
    |
688 |                 || use_lstat as libc::c_int != 0
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:690:66
    |
690 |                 if lstat(((*dp).d_name).as_ptr(), &mut ent_sb) < 0 as libc::c_int {
    |                                                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:706:21
    |
706 |             found = 1 as libc::c_int != 0;
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:710:44
    |
710 |     if dirp.is_null() || closedir(dirp) != 0 as libc::c_int {
    |                                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:716:13
    |
716 |     gettext(b"reading directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:716:13
    |
716 |     gettext(b"reading directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:719:16
    |
719 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:719:36
    |
719 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:724:48
    |
724 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:729:13
    |
729 |     gettext(b"reading directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:729:13
    |
729 |     gettext(b"reading directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:732:35
    |
732 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:738:48
    |
738 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:743:13
    |
743 |     gettext(b"reading directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:743:13
    |
743 |     gettext(b"reading directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:746:35
    |
746 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:756:9
    |
756 |         b"couldn't find directory entry in %s with matching i-node\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:756:9
    |
756 |         b"couldn't find directory entry in %s with matching i-node\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:768:30
    |
768 |     let mut height: size_t = 1 as libc::c_int as size_t;
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:768:30
    |
768 |     let mut height: size_t = 1 as libc::c_int as size_t;
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:792:17
    |
792 |                 1 as libc::c_int,
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:795:21
    |
795 | /                     b"failed to get attributes of %s\0" as *const u8
796 | |                         as *const libc::c_char,
    | |______________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:795:21
    |
795 |                     b"failed to get attributes of %s\0" as *const u8
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:800:21
    |
800 |                     b"/\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:800:21
    |
800 |                     b"/\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:803:16
    |
803 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:803:36
    |
803 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:808:48
    |
808 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:813:25
    |
813 | /                         b"failed to get attributes of %s\0" as *const u8
814 | |                             as *const libc::c_char,
    | |__________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:813:25
    |
813 |                         b"failed to get attributes of %s\0" as *const u8
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:818:25
    |
818 |                         b"/\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:818:25
    |
818 |                         b"/\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:821:35
    |
821 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:827:48
    |
827 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:832:25
    |
832 | /                         b"failed to get attributes of %s\0" as *const u8
833 | |                             as *const libc::c_char,
    | |__________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:832:25
    |
832 |                         b"failed to get attributes of %s\0" as *const u8
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:837:25
    |
837 |                         b"/\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:837:25
    |
837 |                         b"/\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:840:35
    |
840 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:847:13
    |
847 |     if stat(b".\0" as *const u8 as *const libc::c_char, &mut dot_sb) < 0 as libc::c_int {
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:847:13
    |
847 |     if stat(b".\0" as *const u8 as *const libc::c_char, &mut dot_sb) < 0 as libc::c_int {
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:847:72
    |
847 |     if stat(b".\0" as *const u8 as *const libc::c_char, &mut dot_sb) < 0 as libc::c_int {
    |                                                                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:850:17
    |
850 |                 1 as libc::c_int,
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:852:25
    |
852 |                 gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:852:25
    |
852 |                 gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:855:21
    |
855 |                     b".\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:855:21
    |
855 |                     b".\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:858:16
    |
858 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:858:36
    |
858 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:863:48
    |
863 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:867:29
    |
867 |                     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:867:29
    |
867 |                     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:870:25
    |
870 |                         b".\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:870:25
    |
870 |                         b".\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:873:35
    |
873 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:879:48
    |
879 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:883:29
    |
883 |                     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:883:29
    |
883 |                     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:886:25
    |
886 |                         b".\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:886:25
    |
886 |                         b".\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:889:35
    |
889 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:903:8
    |
903 |     if *((*file_name).start).offset(0 as libc::c_int as isize) as libc::c_int
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:903:37
    |
903 |     if *((*file_name).start).offset(0 as libc::c_int as isize) as libc::c_int
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:903:37
    |
903 |     if *((*file_name).start).offset(0 as libc::c_int as isize) as libc::c_int
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:904:12
    |
904 |         == '\0' as i32
    |            ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:908:13
    |
908 |             b"\0" as *const u8 as *const libc::c_char,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:908:13
    |
908 |             b"\0" as *const u8 as *const libc::c_char,
    |             ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:909:13
    |
909 |             0 as libc::c_int as size_t,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:909:13
    |
909 |             0 as libc::c_int as size_t,
    |             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:950:44
    |
950 |     let mut wd: *mut libc::c_char = getenv(b"PWD\0" as *const u8 as *const libc::c_char);
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:950:44
    |
950 |     let mut wd: *mut libc::c_char = getenv(b"PWD\0" as *const u8 as *const libc::c_char);
    |                                            ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:951:36
    |
951 |     let mut p: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:952:24
    |
952 |     if wd.is_null() || *wd.offset(0 as libc::c_int as isize) as libc::c_int != '/' as i32
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:952:35
    |
952 |     if wd.is_null() || *wd.offset(0 as libc::c_int as isize) as libc::c_int != '/' as i32
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:952:35
    |
952 |     if wd.is_null() || *wd.offset(0 as libc::c_int as isize) as libc::c_int != '/' as i32
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:952:80
    |
952 |     if wd.is_null() || *wd.offset(0 as libc::c_int as isize) as libc::c_int != '/' as i32
    |                                                                                ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:954:16
    |
954 |         return 0 as *mut libc::c_char;
    |                ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:958:23
    |
958 |         p = strstr(p, b"/.\0" as *const u8 as *const libc::c_char);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:958:23
    |
958 |         p = strstr(p, b"/.\0" as *const u8 as *const libc::c_char);
    |                       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:962:22
    |
962 |         if *p.offset(2 as libc::c_int as isize) == 0
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:962:22
    |
962 |         if *p.offset(2 as libc::c_int as isize) == 0
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:963:16
    |
963 |             || *p.offset(2 as libc::c_int as isize) as libc::c_int == '/' as i32
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:963:26
    |
963 |             || *p.offset(2 as libc::c_int as isize) as libc::c_int == '/' as i32
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:963:26
    |
963 |             || *p.offset(2 as libc::c_int as isize) as libc::c_int == '/' as i32
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:963:71
    |
963 |             || *p.offset(2 as libc::c_int as isize) as libc::c_int == '/' as i32
    |                                                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:964:16
    |
964 |             || *p.offset(2 as libc::c_int as isize) as libc::c_int == '.' as i32
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:964:26
    |
964 |             || *p.offset(2 as libc::c_int as isize) as libc::c_int == '.' as i32
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:964:26
    |
964 |             || *p.offset(2 as libc::c_int as isize) as libc::c_int == '.' as i32
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:964:71
    |
964 |             || *p.offset(2 as libc::c_int as isize) as libc::c_int == '.' as i32
    |                                                                       ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:965:31
    |
965 |                 && (*p.offset(3 as libc::c_int as isize) == 0
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:965:31
    |
965 |                 && (*p.offset(3 as libc::c_int as isize) == 0
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:966:24
    |
966 |                     || *p.offset(3 as libc::c_int as isize) as libc::c_int == '/' as i32)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:966:34
    |
966 |                     || *p.offset(3 as libc::c_int as isize) as libc::c_int == '/' as i32)
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:966:34
    |
966 |                     || *p.offset(3 as libc::c_int as isize) as libc::c_int == '/' as i32)
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:966:79
    |
966 |                     || *p.offset(3 as libc::c_int as isize) as libc::c_int == '/' as i32)
    |                                                                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:968:20
    |
968 |             return 0 as *mut libc::c_char;
    |                    ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:973:30
    |
973 |     if stat(wd, &mut st1) == 0 as libc::c_int
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:974:17
    |
974 |         && stat(b".\0" as *const u8 as *const libc::c_char, &mut st2) == 0 as libc::c_int
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:974:17
    |
974 |         && stat(b".\0" as *const u8 as *const libc::c_char, &mut st2) == 0 as libc::c_int
    |                 ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:974:74
    |
974 |         && stat(b".\0" as *const u8 as *const libc::c_char, &mut st2) == 0 as libc::c_int
    |                                                                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:975:12
    |
975 |         && psame_inode(&mut st1, &mut st2) as libc::c_int != 0
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:979:12
    |
979 |     return 0 as *mut libc::c_char;
    |            ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: binding's name is too similar to existing binding
   --> src/pwd.rs:983:9
    |
983 |     mut argv: *mut *mut libc::c_char,
    |         ^^^^
    |
    = note: `-W clippy::similar-names` implied by `-W clippy::pedantic`
note: existing binding defined here
   --> src/pwd.rs:982:9
    |
982 |     mut argc: libc::c_int,
    |         ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:985:37
    |
985 |     let mut wd: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:987:9
    |
987 |         b"POSIXLY_CORRECT\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:987:9
    |
987 |         b"POSIXLY_CORRECT\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:990:35
    |
990 |     set_program_name(*argv.offset(0 as libc::c_int as isize));
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:990:35
    |
990 |     set_program_name(*argv.offset(0 as libc::c_int as isize));
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:991:15
    |
991 |     setlocale(6 as libc::c_int, b"\0" as *const u8 as *const libc::c_char);
    |               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:991:33
    |
991 |     setlocale(6 as libc::c_int, b"\0" as *const u8 as *const libc::c_char);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:991:33
    |
991 |     setlocale(6 as libc::c_int, b"\0" as *const u8 as *const libc::c_char);
    |                                 ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:993:9
    |
993 |         b"coreutils\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:993:9
    |
993 |         b"coreutils\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:994:9
    |
994 |         b"/usr/local/share/locale\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:994:9
    |
994 |         b"/usr/local/share/locale\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:996:16
    |
996 |     textdomain(b"coreutils\0" as *const u8 as *const libc::c_char);
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:996:16
    |
996 |     textdomain(b"coreutils\0" as *const u8 as *const libc::c_char);
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/pwd.rs:997:17
    |
997 |     atexit(Some(close_stdout as unsafe extern "C" fn() -> ()));
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1002:13
     |
1002 |             b"LP\0" as *const u8 as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1002:13
     |
1002 |             b"LP\0" as *const u8 as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1004:13
     |
1004 |             0 as *mut libc::c_int,
     |             ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1006:19
     |
1006 |         if c == -(1 as libc::c_int) {
     |                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1011:27
     |
1011 |                 logical = 1 as libc::c_int != 0;
     |                           ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1014:27
     |
1014 |                 logical = 0 as libc::c_int != 0;
     |                           ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1022:21
     |
1022 |                     b"pwd\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1022:21
     |
1022 |                     b"pwd\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1023:21
     |
1023 |                     b"GNU coreutils\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1023:21
     |
1023 |                     b"GNU coreutils\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1026:25
     |
1026 |                         b"Jim Meyering\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1026:25
     |
1026 |                         b"Jim Meyering\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1027:25
     |
1027 |                         b"Jim Meyering\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1027:25
     |
1027 |                         b"Jim Meyering\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1029:21
     |
1029 |                     0 as *mut libc::c_void as *mut libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1029:21
     |
1029 |                     0 as *mut libc::c_void as *mut libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1031:22
     |
1031 |                 exit(0 as libc::c_int);
     |                      ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1041:17
     |
1041 |                 0 as libc::c_int,
     |                 ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1042:17
     |
1042 |                 0 as libc::c_int,
     |                 ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1044:21
     |
1044 | /                     b"ignoring non-option arguments\0" as *const u8
1045 | |                         as *const libc::c_char,
     | |______________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1044:21
     |
1044 |                     b"ignoring non-option arguments\0" as *const u8
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1048:16
     |
1048 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1048:36
     |
1048 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                                    ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1053:48
     |
1053 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                                                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1056:21
     |
1056 |                     0 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1058:25
     |
1058 | /                         b"ignoring non-option arguments\0" as *const u8
1059 | |                             as *const libc::c_char,
     | |__________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1058:25
     |
1058 |                         b"ignoring non-option arguments\0" as *const u8
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1062:35
     |
1062 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1068:48
     |
1068 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                                                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1071:21
     |
1071 |                     0 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1073:25
     |
1073 | /                         b"ignoring non-option arguments\0" as *const u8
1074 | |                             as *const libc::c_char,
     | |__________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1073:25
     |
1073 |                         b"ignoring non-option arguments\0" as *const u8
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1077:35
     |
1077 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1088:20
     |
1088 |             return 0 as libc::c_int;
     |                    ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1094:14
     |
1094 |         free(wd as *mut libc::c_void);
     |              ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1101:12
     |
1101 |     return 0 as libc::c_int;
     |            ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1117:13
     |
1117 |             (c_args.len() - 1) as libc::c_int,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/pwd.rs:1122:26
     |
1122 |     ::std::process::exit(status as i32);
     |                          ^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: unnecessary `unsafe` block
   --> src/pwd.rs:367:106
    |
367 | ...   unsafe { std::ffi::CStr::from_ptr(gettext(format!("Try '{} --help' for more information.\n", unsafe { std::ffi::CStr::from_ptr(prog...
    |       ------ because it's nested under this `unsafe` block                                         ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: unnecessary `unsafe` block
   --> src/pwd.rs:372:90
    |
372 | ...   unsafe { std::ffi::CStr::from_ptr(gettext(format!("Usage: {} [OPTION]...\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str...
    |       ------ because it's nested under this `unsafe` block                         ^^^^^^ unnecessary `unsafe` block

warning: missing documentation for the crate
    --> src/pwd.rs:1:1
     |
1    | / #![allow(dead_code, mutable_transmutes, non_camel_case_types, non_snake_case, non_upper_case_globals, unused_assignments, unused_mut, unu...
2    | | #![feature(extern_types)]
3    | |
4    | |
...    |
1122 | |     ::std::process::exit(status as i32);
1123 | | }
     | |_^
     |
     = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
 --> src/pwd.rs:8:5
  |
8 | use std::ffi::CStr;
  |     ^^^^^^^^^^^^^^
  |
  = note: `-W clippy::std-instead-of-core` implied by `-W clippy::restriction`
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `alloc`
  --> src/pwd.rs:10:5
   |
10 | use std::ffi::CString;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::std-instead-of-alloc` implied by `-W clippy::restriction`
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: missing documentation for a struct
   --> src/pwd.rs:103:1
    |
103 | / pub struct option {
104 | |     pub name: *const libc::c_char,
105 | |     pub has_arg: libc::c_int,
106 | |     pub flag: *mut libc::c_int,
107 | |     pub val: libc::c_int,
108 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
   --> src/pwd.rs:103:1
    |
103 | / pub struct option {
104 | |     pub name: *const libc::c_char,
105 | |     pub has_arg: libc::c_int,
106 | |     pub flag: *mut libc::c_int,
107 | |     pub val: libc::c_int,
108 | | }
    | |_^
    |
    = note: `-W clippy::exhaustive-structs` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
103 | #[non_exhaustive]
    |

warning: exported structs should not be exhaustive
   --> src/pwd.rs:124:1
    |
124 | / pub struct _IO_FILE {
125 | |     pub _flags: libc::c_int,
126 | |     pub _IO_read_ptr: *mut libc::c_char,
127 | |     pub _IO_read_end: *mut libc::c_char,
...   |
153 | |     pub _unused2: [libc::c_char; 20],
154 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
124 | #[non_exhaustive]
    |

warning: missing documentation for a struct field
   --> src/pwd.rs:104:5
    |
104 |     pub name: *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
   --> src/pwd.rs:138:22
    |
138 |     pub _chain: *mut _IO_FILE,
    |                      ^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = note: `-W clippy::use-self` implied by `-W clippy::nursery`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/pwd.rs:149:29
    |
149 |     pub _freeres_list: *mut _IO_FILE,
    |                             ^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a struct field
   --> src/pwd.rs:105:5
    |
105 |     pub has_arg: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
   --> src/pwd.rs:161:1
    |
161 | / pub struct timespec {
162 | |     pub tv_sec: __time_t,
163 | |     pub tv_nsec: __syscall_slong_t,
164 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
161 | #[non_exhaustive]
    |

warning: missing documentation for a struct field
   --> src/pwd.rs:106:5
    |
106 |     pub flag: *mut libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:107:5
    |
107 |     pub val: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
   --> src/pwd.rs:167:1
    |
167 | / pub struct stat {
168 | |     pub st_dev: __dev_t,
169 | |     pub st_ino: __ino_t,
170 | |     pub st_mode: __mode_t,
...   |
183 | |     pub __glibc_reserved: [libc::c_int; 2],
184 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
167 | #[non_exhaustive]
    |

warning: exported structs should not be exhaustive
   --> src/pwd.rs:187:1
    |
187 | / pub struct dirent {
188 | |     pub d_ino: __ino_t,
189 | |     pub d_off: __off_t,
190 | |     pub d_reclen: libc::c_ushort,
191 | |     pub d_type: libc::c_uchar,
192 | |     pub d_name: [libc::c_char; 256],
193 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
187 | #[non_exhaustive]
    |

warning: missing documentation for a type alias
   --> src/pwd.rs:109:1
    |
109 | pub type size_t = libc::c_ulong;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/pwd.rs:198:51
    |
198 | pub const GETOPT_VERSION_CHAR: C2RustUnnamed_0 = -3;
    |                                                   ^ help: consider adding suffix: `3_i32`
    |
    = note: `-W clippy::default-numeric-fallback` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
   --> src/pwd.rs:110:1
    |
110 | pub type __dev_t = libc::c_ulong;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/pwd.rs:199:48
    |
199 | pub const GETOPT_HELP_CHAR: C2RustUnnamed_0 = -2;
    |                                                ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
   --> src/pwd.rs:111:1
    |
111 | pub type __uid_t = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
   --> src/pwd.rs:202:1
    |
202 | / pub struct infomap {
203 | |     pub program: *const libc::c_char,
204 | |     pub node: *const libc::c_char,
205 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
202 | #[non_exhaustive]
    |

warning: missing documentation for a type alias
   --> src/pwd.rs:112:1
    |
112 | pub type __gid_t = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
   --> src/pwd.rs:220:1
    |
220 | / pub struct dev_ino {
221 | |     pub st_ino: ino_t,
222 | |     pub st_dev: dev_t,
223 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
220 | #[non_exhaustive]
    |

warning: missing documentation for a type alias
   --> src/pwd.rs:113:1
    |
113 | pub type __ino_t = libc::c_ulong;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
   --> src/pwd.rs:226:1
    |
226 | / pub struct file_name {
227 | |     pub buf: *mut libc::c_char,
228 | |     pub n_alloc: size_t,
229 | |     pub start: *mut libc::c_char,
230 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
226 | #[non_exhaustive]
    |

warning: missing documentation for a type alias
   --> src/pwd.rs:114:1
    |
114 | pub type __mode_t = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/pwd.rs:115:1
    |
115 | pub type __nlink_t = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/pwd.rs:116:1
    |
116 | pub type __off_t = libc::c_long;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/pwd.rs:117:1
    |
117 | pub type __off64_t = libc::c_long;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/pwd.rs:118:1
    |
118 | pub type __time_t = libc::c_long;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/pwd.rs:119:1
    |
119 | pub type __blksize_t = libc::c_int;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/pwd.rs:120:1
    |
120 | pub type __blkcnt_t = libc::c_long;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/pwd.rs:121:1
    |
121 | pub type __syscall_slong_t = libc::c_long;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct
   --> src/pwd.rs:124:1
    |
124 | / pub struct _IO_FILE {
125 | |     pub _flags: libc::c_int,
126 | |     pub _IO_read_ptr: *mut libc::c_char,
127 | |     pub _IO_read_end: *mut libc::c_char,
...   |
153 | |     pub _unused2: [libc::c_char; 20],
154 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:125:5
    |
125 |     pub _flags: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:126:5
    |
126 |     pub _IO_read_ptr: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:127:5
    |
127 |     pub _IO_read_end: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:128:5
    |
128 |     pub _IO_read_base: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:129:5
    |
129 |     pub _IO_write_base: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:130:5
    |
130 |     pub _IO_write_ptr: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:131:5
    |
131 |     pub _IO_write_end: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:132:5
    |
132 |     pub _IO_buf_base: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:133:5
    |
133 |     pub _IO_buf_end: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:134:5
    |
134 |     pub _IO_save_base: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:135:5
    |
135 |     pub _IO_backup_base: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:136:5
    |
136 |     pub _IO_save_end: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:137:5
    |
137 |     pub _markers: *mut _IO_marker,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:138:5
    |
138 |     pub _chain: *mut _IO_FILE,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:139:5
    |
139 |     pub _fileno: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:140:5
    |
140 |     pub _flags2: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:141:5
    |
141 |     pub _old_offset: __off_t,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:142:5
    |
142 |     pub _cur_column: libc::c_ushort,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:143:5
    |
143 |     pub _vtable_offset: libc::c_schar,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:144:5
    |
144 |     pub _shortbuf: [libc::c_char; 1],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:145:5
    |
145 |     pub _lock: *mut libc::c_void,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:146:5
    |
146 |     pub _offset: __off64_t,
    |     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:147:5
    |
147 |     pub _codecvt: *mut _IO_codecvt,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:148:5
    |
148 |     pub _wide_data: *mut _IO_wide_data,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:149:5
    |
149 |     pub _freeres_list: *mut _IO_FILE,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:150:5
    |
150 |     pub _freeres_buf: *mut libc::c_void,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:151:5
    |
151 |     pub __pad5: size_t,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:152:5
    |
152 |     pub _mode: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:153:5
    |
153 |     pub _unused2: [libc::c_char; 20],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/pwd.rs:155:1
    |
155 | pub type _IO_lock_t = ();
    | ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/pwd.rs:156:1
    |
156 | pub type FILE = _IO_FILE;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/pwd.rs:157:1
    |
157 | pub type ino_t = __ino_t;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/pwd.rs:158:1
    |
158 | pub type dev_t = __dev_t;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct
   --> src/pwd.rs:161:1
    |
161 | / pub struct timespec {
162 | |     pub tv_sec: __time_t,
163 | |     pub tv_nsec: __syscall_slong_t,
164 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:162:5
    |
162 |     pub tv_sec: __time_t,
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:163:5
    |
163 |     pub tv_nsec: __syscall_slong_t,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct
   --> src/pwd.rs:167:1
    |
167 | / pub struct stat {
168 | |     pub st_dev: __dev_t,
169 | |     pub st_ino: __ino_t,
170 | |     pub st_mode: __mode_t,
...   |
183 | |     pub __glibc_reserved: [libc::c_int; 2],
184 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:168:5
    |
168 |     pub st_dev: __dev_t,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:169:5
    |
169 |     pub st_ino: __ino_t,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:170:5
    |
170 |     pub st_mode: __mode_t,
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:171:5
    |
171 |     pub st_nlink: __nlink_t,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:172:5
    |
172 |     pub st_uid: __uid_t,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:173:5
    |
173 |     pub st_gid: __gid_t,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:174:5
    |
174 |     pub st_rdev: __dev_t,
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:175:5
    |
175 |     pub __pad1: __dev_t,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:176:5
    |
176 |     pub st_size: __off_t,
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:177:5
    |
177 |     pub st_blksize: __blksize_t,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:178:5
    |
178 |     pub __pad2: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:179:5
    |
179 |     pub st_blocks: __blkcnt_t,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:180:5
    |
180 |     pub st_atim: timespec,
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:181:5
    |
181 |     pub st_mtim: timespec,
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:182:5
    |
182 |     pub st_ctim: timespec,
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:183:5
    |
183 |     pub __glibc_reserved: [libc::c_int; 2],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct
   --> src/pwd.rs:187:1
    |
187 | / pub struct dirent {
188 | |     pub d_ino: __ino_t,
189 | |     pub d_off: __off_t,
190 | |     pub d_reclen: libc::c_ushort,
191 | |     pub d_type: libc::c_uchar,
192 | |     pub d_name: [libc::c_char; 256],
193 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:188:5
    |
188 |     pub d_ino: __ino_t,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:189:5
    |
189 |     pub d_off: __off_t,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this loop could be written as a `for` loop
   --> src/pwd.rs:246:5
    |
246 |     while let Some(&(prog, n)) = map_prog.next() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for &(prog, n) in map_prog`
    |
    = note: `-W clippy::while-let-on-iterator` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_on_iterator

warning: missing documentation for a struct field
   --> src/pwd.rs:190:5
    |
190 |     pub d_reclen: libc::c_ushort,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/pwd.rs:254:24
    |
254 |     let help_message = unsafe { std::ffi::CStr::from_ptr(gettext(b"GNU coreutils\0".as_ptr() as *const libc::c_char)).to_string_lossy() };
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::undocumented-unsafe-blocks` implied by `-W clippy::restriction`
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
   --> src/pwd.rs:191:5
    |
191 |     pub d_type: libc::c_uchar,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:192:5
    |
192 |     pub d_name: [libc::c_char; 256],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/pwd.rs:254:33
    |
254 |     let help_message = unsafe { std::ffi::CStr::from_ptr(gettext(b"GNU coreutils\0".as_ptr() as *const libc::c_char)).to_string_lossy() };
    |                                 ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a type alias
   --> src/pwd.rs:194:1
    |
194 | pub type DIR = __dirstream;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:254:66
    |
254 |     let help_message = unsafe { std::ffi::CStr::from_ptr(gettext(b"GNU coreutils\0".as_ptr() as *const libc::c_char)).to_string_lossy() };
    |                                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"GNU coreutils\0".as_ptr().cast::<i8>()`
    |
    = note: `-W clippy::ptr-as-ptr` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a type alias
   --> src/pwd.rs:195:1
    |
195 | pub type C2RustUnnamed = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/pwd.rs:262:5
    |
262 |     unsafe {
    |     ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/pwd.rs:196:1
    |
196 | pub const NOT_AN_INODE_NUMBER: C2RustUnnamed = 0;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/pwd.rs:263:36
    |
263 |         lc_messages = setlocale(5, std::ptr::null());
    |                                    ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a type alias
   --> src/pwd.rs:197:1
    |
197 | pub type C2RustUnnamed_0 = libc::c_int;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/pwd.rs:266:34
    |
266 |     if !lc_messages.is_null() && unsafe { std::ffi::CStr::from_ptr(lc_messages).to_string_lossy() }.starts_with("en_") {
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/pwd.rs:198:1
    |
198 | pub const GETOPT_VERSION_CHAR: C2RustUnnamed_0 = -3;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/pwd.rs:266:43
    |
266 |     if !lc_messages.is_null() && unsafe { std::ffi::CStr::from_ptr(lc_messages).to_string_lossy() }.starts_with("en_") {
    |                                           ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
   --> src/pwd.rs:267:30
    |
267 | ... = unsafe { std::ffi::CStr::from_ptr(gettext(b"Report any translation bugs to <https://translationproject.org/team/>\0".as_ptr() as *const libc::c_char)).to_string_lossy()...
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/pwd.rs:199:1
    |
199 | pub const GETOPT_HELP_CHAR: C2RustUnnamed_0 = -2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/pwd.rs:267:39
    |
267 | ...   let report_message = unsafe { std::ffi::CStr::from_ptr(gettext(b"Report any translation bugs to <https://translationproject.org/tea...
    |                                     ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:267:72
    |
267 | ...tr(gettext(b"Report any translation bugs to <https://translationproject.org/team/>\0".as_ptr() as *const libc::c_char)).to_string_loss...
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Report any translation bugs to <https://translationproject.org/team/>\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct
   --> src/pwd.rs:202:1
    |
202 | / pub struct infomap {
203 | |     pub program: *const libc::c_char,
204 | |     pub node: *const libc::c_char,
205 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
   --> src/pwd.rs:304:9
    |
304 |         return sep.is_none() || sep.unwrap() == '/';
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `sep.is_none() || sep.unwrap() == '/'`
    |
    = note: `-W clippy::needless-return` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
   --> src/pwd.rs:306:9
    |
306 |         return false;
    |         ^^^^^^^^^^^^^ help: remove `return`: `false`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe block missing a safety comment
   --> src/pwd.rs:299:17
    |
299 |     let c_str = unsafe { std::ffi::CStr::from_ptr(file_name) };
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
   --> src/pwd.rs:203:5
    |
203 |     pub program: *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/pwd.rs:299:26
    |
299 |     let c_str = unsafe { std::ffi::CStr::from_ptr(file_name) };
    |                          ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
   --> src/pwd.rs:204:5
    |
204 |     pub node: *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/pwd.rs:206:1
    |
206 | pub type quoting_style = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `an Option` value
   --> src/pwd.rs:304:33
    |
304 |         return sep.is_none() || sep.unwrap() == '/';
    |                                 ^^^^^^^^^^^^
    |
    = note: `-W clippy::unwrap-used` implied by `-W clippy::restriction`
    = help: if you don't want to handle the `None` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a constant
   --> src/pwd.rs:207:1
    |
207 | pub const custom_quoting_style: quoting_style = 10;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/pwd.rs:312:5
    |
312 |     a.st_dev == b.st_dev && a.st_ino == b.st_ino
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return a.st_dev == b.st_dev && a.st_ino == b.st_ino`
    |
    = note: `-W clippy::implicit-return` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a constant
   --> src/pwd.rs:208:1
    |
208 | pub const clocale_quoting_style: quoting_style = 9;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this could be a `const fn`
   --> src/pwd.rs:311:1
    |
311 | / fn psame_inode(a: &stat, b: &stat) -> bool {
312 | |     a.st_dev == b.st_dev && a.st_ino == b.st_ino
313 | | }
    | |_^
    |
    = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: missing documentation for a constant
   --> src/pwd.rs:209:1
    |
209 | pub const locale_quoting_style: quoting_style = 8;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
   --> src/pwd.rs:323:9
    |
317 | /         let mut init = option {
318 | |             name: b"logical\0" as *const u8 as *const libc::c_char,
319 | |             has_arg: 0 as libc::c_int,
320 | |             flag: 0 as *const libc::c_int as *mut libc::c_int,
321 | |             val: 'L' as i32,
322 | |         };
    | |__________- unnecessary `let` binding
323 |           init
    |           ^^^^
    |
    = note: `-W clippy::let-and-return` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
317 ~         
318 ~         option {
319 +             name: b"logical\0" as *const u8 as *const libc::c_char,
320 +             has_arg: 0 as libc::c_int,
321 +             flag: 0 as *const libc::c_int as *mut libc::c_int,
322 +             val: 'L' as i32,
323 +         }
    |

warning: missing documentation for a constant
   --> src/pwd.rs:210:1
    |
210 | pub const escape_quoting_style: quoting_style = 7;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:318:19
    |
318 |             name: b"logical\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"logical\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/pwd.rs:211:1
    |
211 | pub const c_maybe_quoting_style: quoting_style = 6;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
   --> src/pwd.rs:332:9
    |
326 | /         let mut init = option {
327 | |             name: b"physical\0" as *const u8 as *const libc::c_char,
328 | |             has_arg: 0 as libc::c_int,
329 | |             flag: 0 as *const libc::c_int as *mut libc::c_int,
330 | |             val: 'P' as i32,
331 | |         };
    | |__________- unnecessary `let` binding
332 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
326 ~         
327 ~         option {
328 +             name: b"physical\0" as *const u8 as *const libc::c_char,
329 +             has_arg: 0 as libc::c_int,
330 +             flag: 0 as *const libc::c_int as *mut libc::c_int,
331 +             val: 'P' as i32,
332 +         }
    |

warning: missing documentation for a constant
   --> src/pwd.rs:212:1
    |
212 | pub const c_quoting_style: quoting_style = 5;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:327:19
    |
327 |             name: b"physical\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"physical\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/pwd.rs:213:1
    |
213 | pub const shell_escape_always_quoting_style: quoting_style = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/pwd.rs:214:1
    |
214 | pub const shell_escape_quoting_style: quoting_style = 3;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
   --> src/pwd.rs:341:9
    |
335 | /         let mut init = option {
336 | |             name: b"help\0" as *const u8 as *const libc::c_char,
337 | |             has_arg: 0 as libc::c_int,
338 | |             flag: 0 as *const libc::c_int as *mut libc::c_int,
339 | |             val: GETOPT_HELP_CHAR as libc::c_int,
340 | |         };
    | |__________- unnecessary `let` binding
341 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
335 ~         
336 ~         option {
337 +             name: b"help\0" as *const u8 as *const libc::c_char,
338 +             has_arg: 0 as libc::c_int,
339 +             flag: 0 as *const libc::c_int as *mut libc::c_int,
340 +             val: GETOPT_HELP_CHAR as libc::c_int,
341 +         }
    |

warning: missing documentation for a constant
   --> src/pwd.rs:215:1
    |
215 | pub const shell_always_quoting_style: quoting_style = 2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:336:19
    |
336 |             name: b"help\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"help\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/pwd.rs:216:1
    |
216 | pub const shell_quoting_style: quoting_style = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
   --> src/pwd.rs:350:9
    |
344 | /         let mut init = option {
345 | |             name: b"version\0" as *const u8 as *const libc::c_char,
346 | |             has_arg: 0 as libc::c_int,
347 | |             flag: 0 as *const libc::c_int as *mut libc::c_int,
348 | |             val: GETOPT_VERSION_CHAR as libc::c_int,
349 | |         };
    | |__________- unnecessary `let` binding
350 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
344 ~         
345 ~         option {
346 +             name: b"version\0" as *const u8 as *const libc::c_char,
347 +             has_arg: 0 as libc::c_int,
348 +             flag: 0 as *const libc::c_int as *mut libc::c_int,
349 +             val: GETOPT_VERSION_CHAR as libc::c_int,
350 +         }
    |

warning: missing documentation for a constant
   --> src/pwd.rs:217:1
    |
217 | pub const literal_quoting_style: quoting_style = 0;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:345:19
    |
345 |             name: b"version\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"version\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct
   --> src/pwd.rs:220:1
    |
220 | / pub struct dev_ino {
221 | |     pub st_ino: ino_t,
222 | |     pub st_dev: dev_t,
223 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
   --> src/pwd.rs:359:9
    |
353 | /         let mut init = option {
354 | |             name: 0 as *const libc::c_char,
355 | |             has_arg: 0 as libc::c_int,
356 | |             flag: 0 as *const libc::c_int as *mut libc::c_int,
357 | |             val: 0 as libc::c_int,
358 | |         };
    | |__________- unnecessary `let` binding
359 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
353 ~         
354 ~         option {
355 +             name: 0 as *const libc::c_char,
356 +             has_arg: 0 as libc::c_int,
357 +             flag: 0 as *const libc::c_int as *mut libc::c_int,
358 +             val: 0 as libc::c_int,
359 +         }
    |

warning: docs for function which may panic missing `# Panics` section
   --> src/pwd.rs:363:1
    |
363 | / pub fn usage(status: i32) {
364 | |     if status != 0 {
365 | |         eprintln!(
366 | |             "{}",
...   |
404 | |     std::process::exit(status);
405 | | }
    | |_^
    |
    = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
note: first possible panic found here
   --> src/pwd.rs:367:115
    |
367 | ...lp' for more information.\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr() as *const i8)).to_string_l...
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing documentation for a struct field
   --> src/pwd.rs:221:5
    |
221 |     pub st_ino: ino_t,
    |     ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/pwd.rs:364:18
    |
364 |     if status != 0 {
    |                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
   --> src/pwd.rs:222:5
    |
222 |     pub st_dev: dev_t,
    |     ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/pwd.rs:364:5
    |
364 | /     if status != 0 {
365 | |         eprintln!(
366 | |             "{}",
367 | |             unsafe { std::ffi::CStr::from_ptr(gettext(format!("Try '{} --help' for more information.\n", unsafe { std::ffi::CStr::from_pt...
...   |
402 | |         emit_ancillary_info("pwd");
403 | |     }
    | |_____^
    |
    = note: `-W clippy::if-not-else` implied by `-W clippy::pedantic`
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct
   --> src/pwd.rs:226:1
    |
226 | / pub struct file_name {
227 | |     pub buf: *mut libc::c_char,
228 | |     pub n_alloc: size_t,
229 | |     pub start: *mut libc::c_char,
230 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/pwd.rs:367:13
    |
367 | ...   unsafe { std::ffi::CStr::from_ptr(gettext(format!("Try '{} --help' for more information.\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/pwd.rs:367:22
    |
367 | ...   unsafe { std::ffi::CStr::from_ptr(gettext(format!("Try '{} --help' for more information.\n", unsafe { std::ffi::CStr::from_ptr(prog...
    |                ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
   --> src/pwd.rs:227:5
    |
227 |     pub buf: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/pwd.rs:228:5
    |
228 |     pub n_alloc: size_t,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:367:55
    |
367 | ...xt(format!("Try '{} --help' for more information.\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr() as *const i8))....
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `format!("Try '{} --help' for more information.\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/pwd.rs:229:5
    |
229 |     pub start: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/pwd.rs:367:106
    |
367 | ...-help' for more information.\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr() as *const i8)).to_strin...
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a function
   --> src/pwd.rs:232:1
    |
232 | / fn emit_ancillary_info(program: &str) {
233 | |     let infomap_0: [( &'static str, &'static str); 7] = [
234 | |         ( "[", "test invocation" ),
235 | |         ( "coreutils", "Multi-call invocation" ),
...   |
283 | |     );
284 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:367:115
    |
367 | ...lp' for more information.\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr() as *const i8)).to_string_l...
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used import from `std` instead of `core`
   --> src/pwd.rs:367:115
    |
367 | ...   unsafe { std::ffi::CStr::from_ptr(gettext(format!("Try '{} --help' for more information.\n", unsafe { std::ffi::CStr::from_ptr(prog...
    |                                                                                                             ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
   --> src/pwd.rs:372:13
    |
372 | ...   unsafe { std::ffi::CStr::from_ptr(gettext(format!("Usage: {} [OPTION]...\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/pwd.rs:372:22
    |
372 | ...   unsafe { std::ffi::CStr::from_ptr(gettext(format!("Usage: {} [OPTION]...\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str...
    |                ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:372:55
    |
372 | ...xt(format!("Usage: {} [OPTION]...\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr() as *const i8)).to_...
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `format!("Usage: {} [OPTION]...\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/pwd.rs:372:90
    |
372 | ...rmat!("Usage: {} [OPTION]...\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr() as *const i8)).to_strin...
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:372:99
    |
372 | ...t!("Usage: {} [OPTION]...\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str().unwrap() }).as_ptr() as *const i8)).to_string_l...
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used import from `std` instead of `core`
   --> src/pwd.rs:372:99
    |
372 | ...   unsafe { std::ffi::CStr::from_ptr(gettext(format!("Usage: {} [OPTION]...\n", unsafe { std::ffi::CStr::from_ptr(program_name).to_str...
    |                                                                                             ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
   --> src/pwd.rs:376:13
    |
376 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("Print the full filename of the current working directory.\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/pwd.rs:376:22
    |
376 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("Print the full filename of the current working directory.\n\0".as_ptr() as *const i8)).t...
    |                ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:376:55
    |
376 | ...::from_ptr(gettext("Print the full filename of the current working directory.\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"Print the full filename of the current working directory.\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/pwd.rs:380:13
    |
380 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("  -L, --logical   use PWD from environment, even if it contains symlinks\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/pwd.rs:380:22
    |
380 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("  -L, --logical   use PWD from environment, even if it contains symlinks\n\0".as_ptr() a...
    |                ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:380:55
    |
380 | ..._ptr(gettext("  -L, --logical   use PWD from environment, even if it contains symlinks\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"  -L, --logical   use PWD from environment, even if it contains symlinks\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/pwd.rs:384:13
    |
384 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("  -P, --physical  resolve all symlinks\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/pwd.rs:384:22
    |
384 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("  -P, --physical  resolve all symlinks\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |                ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:384:55
    |
384 | ...fi::CStr::from_ptr(gettext("  -P, --physical  resolve all symlinks\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"  -P, --physical  resolve all symlinks\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/pwd.rs:388:13
    |
388 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("      --help        display this help and exit\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/pwd.rs:388:22
    |
388 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("      --help        display this help and exit\n\0".as_ptr() as *const i8)).to_string_lo...
    |                ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:388:55
    |
388 | ...CStr::from_ptr(gettext("      --help        display this help and exit\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"      --help        display this help and exit\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/pwd.rs:392:13
    |
392 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("      --version     output version information and exit\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/pwd.rs:392:22
    |
392 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("      --version     output version information and exit\n\0".as_ptr() as *const i8)).to_...
    |                ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:392:55
    |
392 | ...tr::from_ptr(gettext("      --version     output version information and exit\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"      --version     output version information and exit\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/pwd.rs:396:13
    |
396 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("\nIf no option is specified, -P is assumed.\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/pwd.rs:396:22
    |
396 | ...   unsafe { std::ffi::CStr::from_ptr(gettext("\nIf no option is specified, -P is assumed.\n\0".as_ptr() as *const i8)).to_string_lossy...
    |                ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:396:55
    |
396 | ...::CStr::from_ptr(gettext("\nIf no option is specified, -P is assumed.\n\0".as_ptr() as *const i8)).to_string_lossy() }
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"\nIf no option is specified, -P is assumed.\n\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/pwd.rs:400:13
    |
400 | ...   unsafe { std::ffi::CStr::from_ptr(gettext(format!("\nYour shell may have its own version of {}, which usually supersedes\nthe version described here.  Please refer to your shell's documentation\nfor details about the options it supports.\n\0", "pwd").as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/pwd.rs:400:22
    |
400 | ...   unsafe { std::ffi::CStr::from_ptr(gettext(format!("\nYour shell may have its own version of {}, which usually supersedes\nthe versi...
    |                ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:400:55
    |
400 | ...xt(format!("\nYour shell may have its own version of {}, which usually supersedes\nthe version described here.  Please refer to your shell's documentation\nfor details about the options it supports.\n\0", "pwd").as_ptr() as *const i8))....
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `format!("\nYour shell may have its own version of {}, which usually supersedes\nthe version described here.  Please refer to your shell's documentation\nfor details about the options it supports.\n\0", "pwd").as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of `process::exit`
   --> src/pwd.rs:404:5
    |
404 |     std::process::exit(status);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::exit` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exit

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:408:10
    |
408 |     free((*p).buf as *mut libc::c_void);
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(*p).buf.cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:409:10
    |
409 |     free(p as *mut libc::c_void);
    |          ^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `p.cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing `return` statement
   --> src/pwd.rs:434:5
    |
434 |     file_name
    |     ^^^^^^^^^ help: add `return` as shown: `return file_name`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: default numeric fallback might occur
   --> src/pwd.rs:412:23
    |
412 |     let n_alloc = if (2 * 4096) < (32 * 1024) {
    |                       ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:412:27
    |
412 |     let n_alloc = if (2 * 4096) < (32 * 1024) {
    |                           ^^^^ help: consider adding suffix: `4_096_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:412:36
    |
412 |     let n_alloc = if (2 * 4096) < (32 * 1024) {
    |                                    ^^ help: consider adding suffix: `32_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:412:41
    |
412 |     let n_alloc = if (2 * 4096) < (32 * 1024) {
    |                                         ^^^^ help: consider adding suffix: `1_024_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:413:9
    |
413 |         2 * 4096
    |         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:413:13
    |
413 |         2 * 4096
    |             ^^^^ help: consider adding suffix: `4_096_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:415:9
    |
415 |         32 * 1024
    |         ^^ help: consider adding suffix: `32_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:415:14
    |
415 |         32 * 1024
    |              ^^^^ help: consider adding suffix: `1_024_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/pwd.rs:412:19
    |
412 |       let n_alloc = if (2 * 4096) < (32 * 1024) {
    |  ___________________^
413 | |         2 * 4096
414 | |     } else {
415 | |         32 * 1024
416 | |     } as u64;
    | |____________^
    |
    = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
   --> src/pwd.rs:412:22
    |
412 |     let n_alloc = if (2 * 4096) < (32 * 1024) {
    |                      ^^^^^^^^^^
    |
    = note: `-W clippy::arithmetic` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/pwd.rs:412:22
    |
412 |     let n_alloc = if (2 * 4096) < (32 * 1024) {
    |                      ^^^^^^^^^^
    |
    = note: `-W clippy::integer-arithmetic` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/pwd.rs:412:35
    |
412 |     let n_alloc = if (2 * 4096) < (32 * 1024) {
    |                                   ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/pwd.rs:412:35
    |
412 |     let n_alloc = if (2 * 4096) < (32 * 1024) {
    |                                   ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/pwd.rs:413:9
    |
413 |         2 * 4096
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/pwd.rs:413:9
    |
413 |         2 * 4096
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/pwd.rs:415:9
    |
415 |         32 * 1024
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
   --> src/pwd.rs:287:1
    |
287 | / unsafe extern "C" fn readdir_ignoring_dot_and_dotdot(
288 | |     mut dirp: *mut DIR,
289 | | ) -> *const dirent {
290 | |     loop {
...   |
295 | |     };
296 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/pwd.rs:415:9
    |
415 |         32 * 1024
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
   --> src/pwd.rs:298:1
    |
298 | / fn dot_or_dotdot(file_name: *const libc::c_char) -> bool {
299 | |     let c_str = unsafe { std::ffi::CStr::from_ptr(file_name) };
300 | |     let file_name_str = c_str.to_string_lossy();
301 | |
...   |
307 | |     }
308 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/pwd.rs:418:27
    |
418 |     let mut buf = vec![0; n_alloc as usize]; // Allocate a buffer of n_alloc size initialized to 0
    |                           ^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: unsafe block missing a safety comment
   --> src/pwd.rs:421:5
    |
421 |     unsafe {
    |     ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: arithmetic detected
   --> src/pwd.rs:422:38
    |
422 |         start = buf.as_mut_ptr().add(n_alloc as usize - 1); // Pointer to the end of the buffer
    |                                      ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/pwd.rs:422:38
    |
422 |         start = buf.as_mut_ptr().add(n_alloc as usize - 1); // Pointer to the end of the buffer
    |                                      ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/pwd.rs:422:38
    |
422 |         start = buf.as_mut_ptr().add(n_alloc as usize - 1); // Pointer to the end of the buffer
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: usage of `mem::forget` on `Drop` type
   --> src/pwd.rs:432:5
    |
432 |     std::mem::forget(buf); // Prevent buf from being dropped, as we are using its pointer
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::mem-forget` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mem_forget

warning: missing documentation for a function
   --> src/pwd.rs:311:1
    |
311 | / fn psame_inode(a: &stat, b: &stat) -> bool {
312 | |     a.st_dev == b.st_dev && a.st_ino == b.st_ino
313 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/pwd.rs:432:5
    |
432 |     std::mem::forget(buf); // Prevent buf from being dropped, as we are using its pointer
    |     ^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/pwd.rs:442:30
    |
442 |       let mut n_free: size_t = ((*p).start).offset_from((*p).buf) as libc::c_long
    |  ______________________________^
443 | |         as size_t;
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/pwd.rs:444:17
    |
444 |     if n_free < (1 as libc::c_int as libc::c_ulong).wrapping_add(s_len) {
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a static
   --> src/pwd.rs:315:1
    |
315 | / static mut longopts: [option; 5] = [
316 | |     {
317 | |         let mut init = option {
318 | |             name: b"logical\0" as *const u8 as *const libc::c_char,
...   |
360 | |     },
361 | | ];
    | |__^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/pwd.rs:446:27
    |
446 |             .wrapping_add(1 as libc::c_int as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:448:40
    |
448 |           let mut q: *mut libc::c_char = xnmalloc(2 as libc::c_int as size_t, half)
    |  ________________________________________^
449 | |             as *mut libc::c_char;
    | |________________________________^ help: try `pointer::cast`, a safer alternative: `xnmalloc(2 as libc::c_int as size_t, half).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/pwd.rs:448:49
    |
448 |         let mut q: *mut libc::c_char = xnmalloc(2 as libc::c_int as size_t, half)
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/pwd.rs:453:21
    |
453 |             .offset((2 as libc::c_int as libc::c_ulong).wrapping_mul(half) as isize)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/pwd.rs:453:21
    |
453 |             .offset((2 as libc::c_int as libc::c_ulong).wrapping_mul(half) as isize)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::cast-possible-wrap` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/pwd.rs:453:21
    |
453 |             .offset((2 as libc::c_int as libc::c_ulong).wrapping_mul(half) as isize)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
   --> src/pwd.rs:454:21
    |
454 |             .offset(-(n_used as isize));
    |                     ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/pwd.rs:454:21
    |
454 |             .offset(-(n_used as isize));
    |                     ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/pwd.rs:454:22
    |
454 |             .offset(-(n_used as isize));
    |                      ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/pwd.rs:454:22
    |
454 |             .offset(-(n_used as isize));
    |                      ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:456:13
    |
456 |             (*p).start as *mut libc::c_void,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(*p).start.cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/pwd.rs:457:31
    |
457 |             ((*p).buf).offset(n_free as isize) as *const libc::c_void,
    |                               ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a function
   --> src/pwd.rs:363:1
    |
363 | / pub fn usage(status: i32) {
364 | |     if status != 0 {
365 | |         eprintln!(
366 | |             "{}",
...   |
404 | |     std::process::exit(status);
405 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/pwd.rs:457:31
    |
457 |             ((*p).buf).offset(n_free as isize) as *const libc::c_void,
    |                               ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:460:14
    |
460 |         free((*p).buf as *mut libc::c_void);
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(*p).buf.cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/pwd.rs:462:24
    |
462 |         (*p).n_alloc = (2 as libc::c_int as libc::c_ulong).wrapping_mul(half);
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
   --> src/pwd.rs:466:17
    |
466 |         .offset(-((1 as libc::c_int as libc::c_ulong).wrapping_add(s_len) as isize));
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/pwd.rs:466:17
    |
466 |         .offset(-((1 as libc::c_int as libc::c_ulong).wrapping_add(s_len) as isize));
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/pwd.rs:466:18
    |
466 |         .offset(-((1 as libc::c_int as libc::c_ulong).wrapping_add(s_len) as isize));
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/pwd.rs:466:18
    |
466 |         .offset(-((1 as libc::c_int as libc::c_ulong).wrapping_add(s_len) as isize));
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/pwd.rs:466:19
    |
466 |         .offset(-((1 as libc::c_int as libc::c_ulong).wrapping_add(s_len) as isize));
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i8` may truncate the value
   --> src/pwd.rs:467:55
    |
467 |     *((*p).start).offset(0 as libc::c_int as isize) = '/' as i32 as libc::c_char;
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:469:9
    |
469 |         ((*p).start).offset(1 as libc::c_int as isize) as *mut libc::c_void,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `((*p).start).offset(1 as libc::c_int as isize).cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:470:9
    |
470 |         s as *const libc::c_void,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `s.cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing `return` statement
   --> src/pwd.rs:481:5
    |
481 |     buf.as_ptr() as *const libc::c_char // Return a pointer to the buffer as *const libc::c_char
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return buf.as_ptr() as *const libc::c_char`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/pwd.rs:475:13
    |
475 |     let n = n as usize; // Convert u64 to usize
    |             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: `n` is shadowed
   --> src/pwd.rs:475:9
    |
475 |     let n = n as usize; // Convert u64 to usize
    |         ^
    |
    = note: `-W clippy::shadow-reuse` implied by `-W clippy::restriction`
note: previous binding is here
   --> src/pwd.rs:474:15
    |
474 | fn nth_parent(n: u64) -> *const libc::c_char {
    |               ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: arithmetic detected
   --> src/pwd.rs:476:38
    |
476 |     let mut buf = Vec::with_capacity(n * 3 + 1); // +1 for null terminator
    |                                      ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/pwd.rs:476:38
    |
476 |     let mut buf = Vec::with_capacity(n * 3 + 1); // +1 for null terminator
    |                                      ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:481:5
    |
481 |     buf.as_ptr() as *const libc::c_char // Return a pointer to the buffer as *const libc::c_char
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `buf.as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: this boolean expression can be simplified
   --> src/pwd.rs:698:16
    |
698 |             if !(!use_lstat || ent_sb.st_dev == (*dot_sb).st_dev) {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `use_lstat && ent_sb.st_dev != (*dot_sb).st_dev`
    |
    = note: `-W clippy::nonminimal-bool` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: the function has a cognitive complexity of (31/25)
   --> src/pwd.rs:484:22
    |
484 | unsafe extern "C" fn find_dir_entry(
    |                      ^^^^^^^^^^^^^^
    |
    = note: `-W clippy::cognitive-complexity` implied by `-W clippy::nursery`
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: this function has too many lines (267/100)
   --> src/pwd.rs:484:1
    |
484 | / unsafe extern "C" fn find_dir_entry(
485 | |     mut dot_sb: *mut stat,
486 | |     mut file_name: *mut file_name,
487 | |     mut parent_height: size_t,
...   |
765 | |
766 | | }
    | |_^
    |
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: default numeric fallback might occur
   --> src/pwd.rs:507:28
    |
507 |         __glibc_reserved: [0; 2],
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:513:12
    |
513 |         if 0 != 0 {
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:513:17
    |
513 |         if 0 != 0 {
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:521:16
    |
521 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:521:36
    |
521 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:534:35
    |
534 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:548:35
    |
548 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:556:12
    |
556 |     if (if 0 as libc::c_int <= fd {
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:560:10
    |
560 |     }) < 0 as libc::c_int
    |          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:562:12
    |
562 |         if 0 != 0 {
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:562:17
    |
562 |         if 0 != 0 {
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:570:16
    |
570 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:570:36
    |
570 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/pwd.rs:407:1
    |
407 | / unsafe extern "C" fn file_name_free(mut p: *mut file_name) {
408 | |     free((*p).buf as *mut libc::c_void);
409 | |     free(p as *mut libc::c_void);
410 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/pwd.rs:583:35
    |
583 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:597:35
    |
597 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:604:12
    |
604 |     if (if 0 as libc::c_int <= fd {
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:608:10
    |
608 |     }) < 0 as libc::c_int
    |          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/pwd.rs:411:1
    |
411 | / fn file_name_init() -> file_name {
412 | |     let n_alloc = if (2 * 4096) < (32 * 1024) {
413 | |         2 * 4096
414 | |     } else {
...   |
434 | |     file_name
435 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/pwd.rs:610:12
    |
610 |         if 0 != 0 {
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:610:17
    |
610 |         if 0 != 0 {
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:618:16
    |
618 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:618:36
    |
618 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:631:35
    |
631 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:645:35
    |
645 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:653:13
    |
653 |     found = 0 as libc::c_int != 0;
    |             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:653:33
    |
653 |     found = 0 as libc::c_int != 0;
    |                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:672:32
    |
672 |             __glibc_reserved: [0; 2],
    |                                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:675:31
    |
675 |         *__errno_location() = 0 as libc::c_int;
    |                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:678:39
    |
678 |             if *__errno_location() != 0 {
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:688:48
    |
688 |                 || use_lstat as libc::c_int != 0
    |                                                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:690:66
    |
690 |                 if lstat(((*dp).d_name).as_ptr(), &mut ent_sb) < 0 as libc::c_int {
    |                                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:706:21
    |
706 |             found = 1 as libc::c_int != 0;
    |                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:706:41
    |
706 |             found = 1 as libc::c_int != 0;
    |                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:710:44
    |
710 |     if dirp.is_null() || closedir(dirp) != 0 as libc::c_int {
    |                                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:711:12
    |
711 |         if 0 != 0 {
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:711:17
    |
711 |         if 0 != 0 {
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:719:16
    |
719 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:719:36
    |
719 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:732:35
    |
732 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:746:35
    |
746 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:754:21
    |
754 |     let errstatus = 1;
    |                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:760:21
    |
760 |     if errstatus != 0 {
    |                     ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `0 as *mut _` detected
   --> src/pwd.rs:489:30
    |
489 |     let mut dirp: *mut DIR = 0 as *mut DIR;
    |                              ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<DIR>()`
    |
    = note: `-W clippy::zero-ptr` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a function
   --> src/pwd.rs:437:1
    |
437 | / unsafe extern "C" fn file_name_prepend(
438 | |     mut p: *mut file_name,
439 | |     mut s: *const libc::c_char,
440 | |     mut s_len: size_t,
...   |
472 | |     );
473 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:511:20
    |
511 |     dirp = opendir(b"..\0" as *const u8 as *const libc::c_char);
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"..\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:513:9
    |
513 | /         if 0 != 0 {
514 | |             let parent_path = nth_parent(parent_height.try_into().unwrap());
515 | | error(
516 | |     1,
...   |
552 | |             });
553 | |         };
    | |_________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/pwd.rs:513:12
    |
513 |         if 0 != 0 {
    |            ^^^^^^
    |
    = note: `-W clippy::eq-op` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:514:42
    |
514 |             let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: useless conversion to the same type: `u64`
   --> src/pwd.rs:514:42
    |
514 |             let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::useless-conversion` implied by `-W clippy::all`
    = help: consider removing `.try_into()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:518:13
    |
518 |     gettext(b"cannot open directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"cannot open directory %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:521:13
    |
521 | /             if 1 as libc::c_int != 0 as libc::c_int {
522 | |                 unreachable!();
523 | |             } else {};
    | |_____________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:522:17
    |
522 |                 unreachable!();
    |                 ^^^^^^^^^^^^^^
    |
    = note: `-W clippy::unreachable` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/pwd.rs:526:17
    |
526 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::no-effect-underscore-binding` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:527:46
    |
527 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: useless conversion to the same type: `u64`
   --> src/pwd.rs:527:46
    |
527 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider removing `.try_into()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:531:13
    |
531 |     gettext(b"cannot open directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"cannot open directory %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:534:17
    |
534 | /                 if __errstatus != 0 as libc::c_int {
535 | |                     unreachable!();
536 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:535:21
    |
535 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/pwd.rs:540:17
    |
540 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:541:46
    |
541 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: useless conversion to the same type: `u64`
   --> src/pwd.rs:541:46
    |
541 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider removing `.try_into()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:545:13
    |
545 |     gettext(b"cannot open directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"cannot open directory %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:548:17
    |
548 | /                 if __errstatus != 0 as libc::c_int {
549 | |                     unreachable!();
550 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:549:21
    |
549 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:559:15
    |
559 |         chdir(b"..\0" as *const u8 as *const libc::c_char)
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"..\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:562:9
    |
562 | /         if 0 != 0 {
563 | |             let parent_path = nth_parent(parent_height.try_into().unwrap());
564 | | error(
565 | |     1,
...   |
601 | |             });
602 | |         };
    | |_________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/pwd.rs:562:12
    |
562 |         if 0 != 0 {
    |            ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:563:42
    |
563 |             let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: useless conversion to the same type: `u64`
   --> src/pwd.rs:563:42
    |
563 |             let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider removing `.try_into()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: missing documentation for a function
   --> src/pwd.rs:474:1
    |
474 | / fn nth_parent(n: u64) -> *const libc::c_char {
475 | |     let n = n as usize; // Convert u64 to usize
476 | |     let mut buf = Vec::with_capacity(n * 3 + 1); // +1 for null terminator
477 | |     for _ in 0..n {
...   |
481 | |     buf.as_ptr() as *const libc::c_char // Return a pointer to the buffer as *const libc::c_char
482 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:567:13
    |
567 |     gettext(b"failed to chdir to %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"failed to chdir to %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:570:13
    |
570 | /             if 1 as libc::c_int != 0 as libc::c_int {
571 | |                 unreachable!();
572 | |             } else {};
    | |_____________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:571:17
    |
571 |                 unreachable!();
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/pwd.rs:575:17
    |
575 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:576:46
    |
576 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: useless conversion to the same type: `u64`
   --> src/pwd.rs:576:46
    |
576 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider removing `.try_into()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:580:13
    |
580 |     gettext(b"failed to chdir to %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"failed to chdir to %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a function
   --> src/pwd.rs:484:1
    |
484 | / unsafe extern "C" fn find_dir_entry(
485 | |     mut dot_sb: *mut stat,
486 | |     mut file_name: *mut file_name,
487 | |     mut parent_height: size_t,
...   |
765 | |
766 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/pwd.rs:583:17
    |
583 | /                 if __errstatus != 0 as libc::c_int {
584 | |                     unreachable!();
585 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:584:21
    |
584 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/pwd.rs:589:17
    |
589 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:590:46
    |
590 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: useless conversion to the same type: `u64`
   --> src/pwd.rs:590:46
    |
590 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider removing `.try_into()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:594:13
    |
594 |     gettext(b"failed to chdir to %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"failed to chdir to %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:597:17
    |
597 | /                 if __errstatus != 0 as libc::c_int {
598 | |                     unreachable!();
599 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:598:21
    |
598 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:607:14
    |
607 |         stat(b".\0" as *const u8 as *const libc::c_char, &mut parent_sb)
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b".\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:610:9
    |
610 | /         if 0 != 0 {
611 | |             let parent_path = nth_parent(parent_height.try_into().unwrap());
612 | | error(
613 | |     1,
...   |
649 | |             });
650 | |         };
    | |_________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/pwd.rs:610:12
    |
610 |         if 0 != 0 {
    |            ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:611:42
    |
611 |             let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: useless conversion to the same type: `u64`
   --> src/pwd.rs:611:42
    |
611 |             let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider removing `.try_into()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:615:13
    |
615 |     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"failed to stat %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:618:13
    |
618 | /             if 1 as libc::c_int != 0 as libc::c_int {
619 | |                 unreachable!();
620 | |             } else {};
    | |_____________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:619:17
    |
619 |                 unreachable!();
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/pwd.rs:623:17
    |
623 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:624:46
    |
624 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: useless conversion to the same type: `u64`
   --> src/pwd.rs:624:46
    |
624 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider removing `.try_into()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:628:13
    |
628 |     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"failed to stat %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:631:17
    |
631 | /                 if __errstatus != 0 as libc::c_int {
632 | |                     unreachable!();
633 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:632:21
    |
632 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/pwd.rs:637:17
    |
637 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:638:46
    |
638 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: useless conversion to the same type: `u64`
   --> src/pwd.rs:638:46
    |
638 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider removing `.try_into()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:642:13
    |
642 |     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"failed to stat %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:645:17
    |
645 | /                 if __errstatus != 0 as libc::c_int {
646 | |                     unreachable!();
647 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:646:21
    |
646 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: `0 as *const _` detected
   --> src/pwd.rs:655:37
    |
655 |         let mut dp: *const dirent = 0 as *const dirent;
    |                                     ^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<dirent>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: all if blocks contain the same code at the end
   --> src/pwd.rs:707:9
    |
707 | /             break;
708 | |         }
    | |_________^
    |
    = note: `-W clippy::branches-sharing-code` implied by `-W clippy::nursery`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#branches_sharing_code
help: consider moving these statements after the if
    |
707 ~         }
708 +         break;
    |

warning: `0 as *mut _` detected
   --> src/pwd.rs:682:24
    |
682 |                 dirp = 0 as *mut DIR;
    |                        ^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<DIR>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/pwd.rs:687:23
    |
687 |             if ino == NOT_AN_INODE_NUMBER as libc::c_int as libc::c_ulong
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
   --> src/pwd.rs:687:23
    |
687 |             if ino == NOT_AN_INODE_NUMBER as libc::c_int as libc::c_ulong
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/pwd.rs:688:20
    |
688 |                 || use_lstat as libc::c_int != 0
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(use_lstat)`
    |
    = note: `-W clippy::cast-lossless` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/pwd.rs:711:9
    |
711 | /         if 0 != 0 {
712 | |             let parent_path = nth_parent(parent_height.try_into().unwrap());
713 | | error(
714 | |     1,
...   |
750 | |             });
751 | |         };
    | |_________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/pwd.rs:711:12
    |
711 |         if 0 != 0 {
    |            ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:712:42
    |
712 |             let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: useless conversion to the same type: `u64`
   --> src/pwd.rs:712:42
    |
712 |             let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider removing `.try_into()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:716:13
    |
716 |     gettext(b"reading directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"reading directory %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:719:13
    |
719 | /             if 1 as libc::c_int != 0 as libc::c_int {
720 | |                 unreachable!();
721 | |             } else {};
    | |_____________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:720:17
    |
720 |                 unreachable!();
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/pwd.rs:724:17
    |
724 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:725:46
    |
725 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: useless conversion to the same type: `u64`
   --> src/pwd.rs:725:46
    |
725 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider removing `.try_into()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:729:13
    |
729 |     gettext(b"reading directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"reading directory %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:732:17
    |
732 | /                 if __errstatus != 0 as libc::c_int {
733 | |                     unreachable!();
734 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:733:21
    |
733 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/pwd.rs:738:17
    |
738 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: used `unwrap()` on `a Result` value
   --> src/pwd.rs:739:46
    |
739 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: useless conversion to the same type: `u64`
   --> src/pwd.rs:739:46
    |
739 |                 let parent_path = nth_parent(parent_height.try_into().unwrap());
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider removing `.try_into()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:743:13
    |
743 |     gettext(b"reading directory %s\0" as *const u8 as *const libc::c_char),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"reading directory %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:746:17
    |
746 | /                 if __errstatus != 0 as libc::c_int {
747 | |                     unreachable!();
748 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:747:21
    |
747 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:756:9
    |
756 |         b"couldn't find directory entry in %s with matching i-node\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"couldn't find directory entry in %s with matching i-node\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:761:9
    |
761 |         unreachable!();
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: this boolean expression can be simplified
   --> src/pwd.rs:896:11
    |
896 |       while !(dot_sb.st_dev ^ (*root_dev_ino).st_dev
    |  ___________^
897 | |         | dot_sb.st_ino ^ (*root_dev_ino).st_ino == 0)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool
help: try
    |
896 ~     while dot_sb.st_dev ^ (*root_dev_ino).st_dev
897 +         | dot_sb.st_ino ^ (*root_dev_ino).st_ino != 0
    |

warning: this function has too many lines (140/100)
   --> src/pwd.rs:767:1
    |
767 | / unsafe extern "C" fn robust_getcwd(mut file_name: *mut file_name) {
768 | |     let mut height: size_t = 1 as libc::c_int as size_t;
769 | |     let mut dev_ino_buf: dev_ino = dev_ino { st_ino: 0, st_dev: 0 };
770 | |     let mut root_dev_ino: *mut dev_ino = get_root_dev_ino(&mut dev_ino_buf);
...   |
911 | |     }
912 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: default numeric fallback might occur
   --> src/pwd.rs:787:28
    |
787 |         __glibc_reserved: [0; 2],
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:790:12
    |
790 |         if 0 != 0 {
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:790:17
    |
790 |         if 0 != 0 {
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:803:16
    |
803 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:803:36
    |
803 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:821:35
    |
821 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:840:35
    |
840 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:847:72
    |
847 |     if stat(b".\0" as *const u8 as *const libc::c_char, &mut dot_sb) < 0 as libc::c_int {
    |                                                                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:848:12
    |
848 |         if 0 != 0 {
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:848:17
    |
848 |         if 0 != 0 {
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:858:16
    |
858 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:858:36
    |
858 |             if 1 as libc::c_int != 0 as libc::c_int {
    |                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:873:35
    |
873 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:889:35
    |
889 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/pwd.rs:768:30
    |
768 |     let mut height: size_t = 1 as libc::c_int as size_t;
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unnecessary `!=` operation
   --> src/pwd.rs:790:9
    |
790 | /         if 0 != 0 {
791 | |             error(
792 | |                 1 as libc::c_int,
793 | |                 *__errno_location(),
...   |
844 | |             });
845 | |         };
    | |_________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/pwd.rs:790:12
    |
790 |         if 0 != 0 {
    |            ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:795:21
    |
795 | /                     b"failed to get attributes of %s\0" as *const u8
796 | |                         as *const libc::c_char,
    | |______________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"failed to get attributes of %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:800:21
    |
800 |                     b"/\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"/\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:803:13
    |
803 | /             if 1 as libc::c_int != 0 as libc::c_int {
804 | |                 unreachable!();
805 | |             } else {};
    | |_____________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:804:17
    |
804 |                 unreachable!();
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/pwd.rs:808:17
    |
808 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:813:25
    |
813 | /                         b"failed to get attributes of %s\0" as *const u8
814 | |                             as *const libc::c_char,
    | |__________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"failed to get attributes of %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:818:25
    |
818 |                         b"/\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"/\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:821:17
    |
821 | /                 if __errstatus != 0 as libc::c_int {
822 | |                     unreachable!();
823 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:822:21
    |
822 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/pwd.rs:827:17
    |
827 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:832:25
    |
832 | /                         b"failed to get attributes of %s\0" as *const u8
833 | |                             as *const libc::c_char,
    | |__________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"failed to get attributes of %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:837:25
    |
837 |                         b"/\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"/\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:840:17
    |
840 | /                 if __errstatus != 0 as libc::c_int {
841 | |                     unreachable!();
842 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:841:21
    |
841 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:847:13
    |
847 |     if stat(b".\0" as *const u8 as *const libc::c_char, &mut dot_sb) < 0 as libc::c_int {
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b".\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:848:9
    |
848 | /         if 0 != 0 {
849 | |             error(
850 | |                 1 as libc::c_int,
851 | |                 *__errno_location(),
...   |
893 | |             });
894 | |         };
    | |_________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/pwd.rs:848:12
    |
848 |         if 0 != 0 {
    |            ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:852:25
    |
852 |                 gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"failed to stat %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:855:21
    |
855 |                     b".\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b".\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:858:13
    |
858 | /             if 1 as libc::c_int != 0 as libc::c_int {
859 | |                 unreachable!();
860 | |             } else {};
    | |_____________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:859:17
    |
859 |                 unreachable!();
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/pwd.rs:863:17
    |
863 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:867:29
    |
867 |                     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"failed to stat %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:870:25
    |
870 |                         b".\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b".\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:873:17
    |
873 | /                 if __errstatus != 0 as libc::c_int {
874 | |                     unreachable!();
875 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:874:21
    |
874 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/pwd.rs:879:17
    |
879 |                 let __errstatus: libc::c_int = 1 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:883:29
    |
883 |                     gettext(b"failed to stat %s\0" as *const u8 as *const libc::c_char),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"failed to stat %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:886:25
    |
886 |                         b".\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b".\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/pwd.rs:889:17
    |
889 | /                 if __errstatus != 0 as libc::c_int {
890 | |                     unreachable!();
891 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/pwd.rs:890:21
    |
890 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/pwd.rs:903:8
    |
903 |     if *((*file_name).start).offset(0 as libc::c_int as isize) as libc::c_int
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*((*file_name).start).offset(0 as libc::c_int as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:908:13
    |
908 |             b"\0" as *const u8 as *const libc::c_char,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/pwd.rs:909:13
    |
909 |             0 as libc::c_int as size_t,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unneeded `return` statement
   --> src/pwd.rs:979:5
    |
979 |     return 0 as *mut libc::c_char;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut libc::c_char`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
   --> src/pwd.rs:930:28
    |
930 |         __glibc_reserved: [0; 2],
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:948:28
    |
948 |         __glibc_reserved: [0; 2],
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:973:30
    |
973 |     if stat(wd, &mut st1) == 0 as libc::c_int
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:974:74
    |
974 |         && stat(b".\0" as *const u8 as *const libc::c_char, &mut st2) == 0 as libc::c_int
    |                                                                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/pwd.rs:975:62
    |
975 |         && psame_inode(&mut st1, &mut st2) as libc::c_int != 0
    |                                                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:950:44
    |
950 |     let mut wd: *mut libc::c_char = getenv(b"PWD\0" as *const u8 as *const libc::c_char);
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"PWD\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `0 as *mut _` detected
   --> src/pwd.rs:951:36
    |
951 |     let mut p: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/pwd.rs:952:24
    |
952 |     if wd.is_null() || *wd.offset(0 as libc::c_int as isize) as libc::c_int != '/' as i32
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*wd.offset(0 as libc::c_int as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: `0 as *mut _` detected
   --> src/pwd.rs:954:16
    |
954 |         return 0 as *mut libc::c_char;
    |                ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:958:23
    |
958 |         p = strstr(p, b"/.\0" as *const u8 as *const libc::c_char);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"/.\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/pwd.rs:963:16
    |
963 |             || *p.offset(2 as libc::c_int as isize) as libc::c_int == '/' as i32
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*p.offset(2 as libc::c_int as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/pwd.rs:964:16
    |
964 |             || *p.offset(2 as libc::c_int as isize) as libc::c_int == '.' as i32
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*p.offset(2 as libc::c_int as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/pwd.rs:966:24
    |
966 |                     || *p.offset(3 as libc::c_int as isize) as libc::c_int == '/' as i32)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*p.offset(3 as libc::c_int as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: `0 as *mut _` detected
   --> src/pwd.rs:968:20
    |
968 |             return 0 as *mut libc::c_char;
    |                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: statement with no effect
   --> src/pwd.rs:971:9
    |
971 |         p;
    |         ^^
    |
    = note: `-W clippy::no-effect` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:974:17
    |
974 |         && stat(b".\0" as *const u8 as *const libc::c_char, &mut st2) == 0 as libc::c_int
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b".\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/pwd.rs:975:12
    |
975 |         && psame_inode(&mut st1, &mut st2) as libc::c_int != 0
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(psame_inode(&mut st1, &mut st2))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: the function `psame_inode` doesn't need a mutable reference
   --> src/pwd.rs:975:24
    |
975 |         && psame_inode(&mut st1, &mut st2) as libc::c_int != 0
    |                        ^^^^^^^^
    |
    = note: `-W clippy::unnecessary-mut-passed` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: the function `psame_inode` doesn't need a mutable reference
   --> src/pwd.rs:975:34
    |
975 |         && psame_inode(&mut st1, &mut st2) as libc::c_int != 0
    |                                  ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: `0 as *mut _` detected
   --> src/pwd.rs:979:12
    |
979 |     return 0 as *mut libc::c_char;
    |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: this function has too many lines (115/100)
    --> src/pwd.rs:981:1
     |
981  | / unsafe fn main_0(
982  | |     mut argc: libc::c_int,
983  | |     mut argv: *mut *mut libc::c_char,
984  | | ) -> libc::c_int {
...    |
1101 | |     return 0 as libc::c_int;
1102 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: unneeded `return` statement
    --> src/pwd.rs:1101:5
     |
1101 |     return 0 as libc::c_int;
     |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as libc::c_int`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
    --> src/pwd.rs:1006:19
     |
1006 |         if c == -(1 as libc::c_int) {
     |                   ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1010:13
     |
1010 |             76 => {
     |             ^^ help: consider adding suffix: `76_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1011:27
     |
1011 |                 logical = 1 as libc::c_int != 0;
     |                           ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/pwd.rs:767:1
    |
767 | / unsafe extern "C" fn robust_getcwd(mut file_name: *mut file_name) {
768 | |     let mut height: size_t = 1 as libc::c_int as size_t;
769 | |     let mut dev_ino_buf: dev_ino = dev_ino { st_ino: 0, st_dev: 0 };
770 | |     let mut root_dev_ino: *mut dev_ino = get_root_dev_ino(&mut dev_ino_buf);
...   |
911 | |     }
912 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/pwd.rs:1011:47
     |
1011 |                 logical = 1 as libc::c_int != 0;
     |                                               ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1013:13
     |
1013 |             80 => {
     |             ^^ help: consider adding suffix: `80_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1014:27
     |
1014 |                 logical = 0 as libc::c_int != 0;
     |                           ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1014:47
     |
1014 |                 logical = 0 as libc::c_int != 0;
     |                                               ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1016:14
     |
1016 |             -2 => {
     |              ^ help: consider adding suffix: `2_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1019:14
     |
1019 |             -3 => {
     |              ^ help: consider adding suffix: `3_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1039:12
     |
1039 |         if 0 != 0 {
     |            ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1039:17
     |
1039 |         if 0 != 0 {
     |                 ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1048:16
     |
1048 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1048:36
     |
1048 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                                    ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1062:35
     |
1062 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1077:35
     |
1077 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1088:20
     |
1088 |             return 0 as libc::c_int;
     |                    ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/pwd.rs:1101:12
     |
1101 |     return 0 as libc::c_int;
     |            ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `0 as *mut _` detected
   --> src/pwd.rs:985:37
    |
985 |     let mut wd: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:987:9
    |
987 |         b"POSIXLY_CORRECT\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"POSIXLY_CORRECT\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:991:33
    |
991 |     setlocale(6 as libc::c_int, b"\0" as *const u8 as *const libc::c_char);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:993:9
    |
993 |         b"coreutils\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"coreutils\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:994:9
    |
994 |         b"/usr/local/share/locale\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"/usr/local/share/locale\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/pwd.rs:996:16
    |
996 |     textdomain(b"coreutils\0" as *const u8 as *const libc::c_char);
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"coreutils\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/pwd.rs:1002:13
     |
1002 |             b"LP\0" as *const u8 as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"LP\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `0 as *mut _` detected
    --> src/pwd.rs:1004:13
     |
1004 |             0 as *mut libc::c_int,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_int>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: arithmetic detected
    --> src/pwd.rs:1006:17
     |
1006 |         if c == -(1 as libc::c_int) {
     |                 ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/pwd.rs:1006:17
     |
1006 |         if c == -(1 as libc::c_int) {
     |                 ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: `as` casting between raw pointers without changing its mutability
    --> src/pwd.rs:1022:21
     |
1022 |                     b"pwd\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"pwd\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/pwd.rs:1023:21
     |
1023 |                     b"GNU coreutils\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"GNU coreutils\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/pwd.rs:1026:25
     |
1026 |                         b"Jim Meyering\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Jim Meyering\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/pwd.rs:1027:25
     |
1027 |                         b"Jim Meyering\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Jim Meyering\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/pwd.rs:1029:21
     |
1029 |                     0 as *mut libc::c_void as *mut libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(0 as *mut libc::c_void).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `0 as *mut _` detected
    --> src/pwd.rs:1029:21
     |
1029 |                     0 as *mut libc::c_void as *mut libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unnecessary `!=` operation
    --> src/pwd.rs:1039:9
     |
1039 | /         if 0 != 0 {
1040 | |             error(
1041 | |                 0 as libc::c_int,
1042 | |                 0 as libc::c_int,
...    |
1081 | |             });
1082 | |         };
     | |_________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
    --> src/pwd.rs:1039:12
     |
1039 |         if 0 != 0 {
     |            ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: `as` casting between raw pointers without changing its mutability
    --> src/pwd.rs:1044:21
     |
1044 | /                     b"ignoring non-option arguments\0" as *const u8
1045 | |                         as *const libc::c_char,
     | |______________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"ignoring non-option arguments\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/pwd.rs:1048:13
     |
1048 | /             if 0 as libc::c_int != 0 as libc::c_int {
1049 | |                 unreachable!();
1050 | |             } else {};
     | |_____________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
    --> src/pwd.rs:1048:16
     |
1048 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: usage of the `unreachable!` macro
    --> src/pwd.rs:1049:17
     |
1049 |                 unreachable!();
     |                 ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
    --> src/pwd.rs:1053:17
     |
1053 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
    --> src/pwd.rs:1058:25
     |
1058 | /                         b"ignoring non-option arguments\0" as *const u8
1059 | |                             as *const libc::c_char,
     | |__________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"ignoring non-option arguments\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/pwd.rs:1062:17
     |
1062 | /                 if __errstatus != 0 as libc::c_int {
1063 | |                     unreachable!();
1064 | |                 } else {};
     | |_________________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
    --> src/pwd.rs:1063:21
     |
1063 |                     unreachable!();
     |                     ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
    --> src/pwd.rs:1068:17
     |
1068 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
    --> src/pwd.rs:1073:25
     |
1073 | /                         b"ignoring non-option arguments\0" as *const u8
1074 | |                             as *const libc::c_char,
     | |__________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"ignoring non-option arguments\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/pwd.rs:1077:17
     |
1077 | /                 if __errstatus != 0 as libc::c_int {
1078 | |                     unreachable!();
1079 | |                 } else {};
     | |_________________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
    --> src/pwd.rs:1078:21
     |
1078 |                     unreachable!();
     |                     ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: unnecessary boolean `not` operation
    --> src/pwd.rs:1092:5
     |
1092 | /     if !wd.is_null() {
1093 | |         puts(wd);
1094 | |         free(wd as *mut libc::c_void);
1095 | |     } else {
...    |
1099 | |         file_name_free(file_name);
1100 | |     }
     | |_____^
     |
     = help: remove the `!` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: `as` casting between raw pointers without changing its mutability
    --> src/pwd.rs:1094:14
     |
1094 |         free(wd as *mut libc::c_void);
     |              ^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `wd.cast::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: used `expect()` on `a Result` value
    --> src/pwd.rs:1108:24
     |
1108 |         let c_string = ::std::ffi::CString::new(arg).expect("Failed to convert argument into CString.");
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: `-W clippy::expect-used` implied by `-W clippy::restriction`
     = help: if this value is an `Err`, it will panic
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: used import from `std` instead of `alloc`
    --> src/pwd.rs:1108:24
     |
1108 |         let c_string = ::std::ffi::CString::new(arg).expect("Failed to convert argument into CString.");
     |                        ^^^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `alloc`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `core`
    --> src/pwd.rs:1112:17
     |
1112 |     c_args.push(::std::ptr::null_mut());
     |                 ^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
    --> src/pwd.rs:1115:5
     |
1115 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
    --> src/pwd.rs:1117:13
     |
1117 |             (c_args.len() - 1) as libc::c_int,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
    --> src/pwd.rs:1117:13
     |
1117 |             (c_args.len() - 1) as libc::c_int,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: arithmetic detected
    --> src/pwd.rs:1117:13
     |
1117 |             (c_args.len() - 1) as libc::c_int,
     |             ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/pwd.rs:1117:13
     |
1117 |             (c_args.len() - 1) as libc::c_int,
     |             ^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: usage of `process::exit`
    --> src/pwd.rs:1122:5
     |
1122 |     ::std::process::exit(status as i32);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exit

warning: missing documentation for a function
   --> src/pwd.rs:913:1
    |
913 | / unsafe extern "C" fn logical_getcwd() -> *mut libc::c_char {
914 | |     let mut st1: stat = stat {
915 | |         st_dev: 0,
916 | |         st_ino: 0,
...   |
979 | |     return 0 as *mut libc::c_char;
980 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: path statement with no effect
   --> src/pwd.rs:971:9
    |
971 |         p;
    |         ^^
    |
    = note: `#[warn(path_statements)]` on by default

warning: missing documentation for a function
    --> src/pwd.rs:981:1
     |
981  | / unsafe fn main_0(
982  | |     mut argc: libc::c_int,
983  | |     mut argv: *mut *mut libc::c_char,
984  | | ) -> libc::c_int {
...    |
1101 | |     return 0 as libc::c_int;
1102 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `rust` (bin "pwd" test) generated 709 warnings (306 duplicates)
warning: `rust` (bin "pwd") generated 829 warnings (402 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 14.48s
