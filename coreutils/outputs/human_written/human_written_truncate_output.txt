warning: `clippy::restriction` is not meant to be enabled as a group
  |
  = note: because of the command line `--warn clippy::restriction`
  = help: enable the restriction lints you need individually
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blanket_clippy_restriction_lints
  = note: `-W clippy::blanket-clippy-restriction-lints` implied by `-W clippy::all`
  = help: to override `-W clippy::all` add `#[allow(clippy::blanket_clippy_restriction_lints)]`

warning: package `uucore` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata
  = note: `-W clippy::cargo-common-metadata` implied by `-W clippy::cargo`
  = help: to override `-W clippy::cargo` add `#[allow(clippy::cargo_common_metadata)]`

warning: package `uucore_procs` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uucore_procs` is missing `package.categories` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uuhelp_parser` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uuhelp_parser` is missing `package.keywords` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uuhelp_parser` is missing `package.categories` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uu_stdbuf_libstdbuf` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uutests` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: missing documentation for a constant
  --> src/uuhelp_parser/src/lib.rs:27:1
   |
27 | const MARKDOWN_CODE_FENCES: &str = "```";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items
   = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_docs_in_private_items)]`

warning: this function could have a `#[must_use]` attribute
  --> src/uuhelp_parser/src/lib.rs:31:1
   |
31 | pub fn parse_about(content: &str) -> String {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parse_about(content: &str) -> String`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
   = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: missing `#[inline]` for a function
  --> src/uuhelp_parser/src/lib.rs:31:1
   |
31 | / pub fn parse_about(content: &str) -> String {
32 | |     content
33 | |         .lines()
34 | |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
...  |
42 | |         .to_string()
43 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items
   = note: `-W clippy::missing-inline-in-public-items` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_inline_in_public_items)]`

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:32:5
   |
32 | /     content
33 | |         .lines()
34 | |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
35 | |         .skip(1)
...  |
41 | |         .trim()
42 | |         .to_string()
   | |____________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
   = note: `-W clippy::implicit-return` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::implicit_return)]`
help: add `return` as shown
   |
32 |     return content
   |     ++++++

warning: `to_string()` called on a `&str`
  --> src/uuhelp_parser/src/lib.rs:32:5
   |
32 | /     content
33 | |         .lines()
34 | |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
35 | |         .skip(1)
...  |
41 | |         .trim()
42 | |         .to_string()
   | |____________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
   = note: `-W clippy::str-to-string` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::str_to_string)]`
help: try
   |
32 ~     content
33 +         .lines()
34 +         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
35 +         .skip(1)
36 +         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
37 +         .skip(1)
38 +         .take_while(|l| !l.starts_with('#'))
39 +         .collect::<Vec<_>>()
40 +         .join("\n")
41 +         .trim().to_owned()
   |

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:34:25
   |
34 |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
34 |         .skip_while(|l| return !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:34:22
   |
34 |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars
   = note: `-W clippy::min-ident-chars` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::min_ident_chars)]`

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:36:25
   |
36 |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
36 |         .skip_while(|l| return !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:36:22
   |
36 |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:38:25
   |
38 |         .take_while(|l| !l.starts_with('#'))
   |                         ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
38 |         .take_while(|l| return !l.starts_with('#'))
   |                         ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:38:22
   |
38 |         .take_while(|l| !l.starts_with('#'))
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this function could have a `#[must_use]` attribute
  --> src/uuhelp_parser/src/lib.rs:50:1
   |
50 | pub fn parse_usage(content: &str) -> String {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parse_usage(content: &str) -> String`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
  --> src/uuhelp_parser/src/lib.rs:50:1
   |
50 | / pub fn parse_usage(content: &str) -> String {
51 | |     content
52 | |         .lines()
53 | |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
...  |
67 | |         .to_string()
68 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:51:5
   |
51 | /     content
52 | |         .lines()
53 | |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
54 | |         .skip(1)
...  |
66 | |         .trim()
67 | |         .to_string()
   | |____________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
51 |     return content
   |     ++++++

warning: `to_string()` called on a `&str`
  --> src/uuhelp_parser/src/lib.rs:51:5
   |
51 | /     content
52 | |         .lines()
53 | |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
54 | |         .skip(1)
...  |
66 | |         .trim()
67 | |         .to_string()
   | |____________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
help: try
   |
51 ~     content
52 +         .lines()
53 +         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
54 +         .skip(1)
55 +         .take_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
56 +         .map(|l| {
57 +             // Replace the util name (assumed to be the first word) with "{}"
58 +             // to be replaced with the runtime value later.
59 +             if let Some((_util, args)) = l.split_once(' ') {
60 +                 format!("{{}} {args}\n")
61 +             } else {
62 +                 "{}\n".to_string()
63 +             }
64 +         })
65 +         .collect::<String>()
66 +         .trim().to_owned()
   |

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:53:25
   |
53 |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
53 |         .skip_while(|l| return !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:53:22
   |
53 |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:55:25
   |
55 |         .take_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
55 |         .take_while(|l| return !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:55:22
   |
55 |         .take_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:60:17
   |
60 |                 format!("{{}} {args}\n")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
60 |                 return format!("{{}} {args}\n")
   |                 ++++++

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:62:17
   |
62 |                 "{}\n".to_string()
   |                 ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
62 |                 return "{}\n".to_string()
   |                 ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:56:15
   |
56 |         .map(|l| {
   |               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `to_string()` called on a `&str`
  --> src/uuhelp_parser/src/lib.rs:62:17
   |
62 |                 "{}\n".to_string()
   |                 ^^^^^^^^^^^^^^^^^^ help: try: `"{}\n".to_owned()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: this function could have a `#[must_use]` attribute
  --> src/uuhelp_parser/src/lib.rs:73:1
   |
73 | pub fn parse_section(section: &str, content: &str) -> Option<String> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parse_section(section: &str, content: &str) -> Option<String>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uuhelp_parser/src/lib.rs:73:1
    |
73  | / pub fn parse_section(section: &str, content: &str) -> Option<String> {
74  | |     fn is_section_header(line: &str, section: &str) -> bool {
75  | |         line.strip_prefix("##")
76  | |             .is_some_and(|l| l.trim().to_lowercase() == section)
...   |
101 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uuhelp_parser/src/lib.rs:90:5
    |
90  | /     Some(
91  | |         content
92  | |             .lines()
93  | |             .skip_while(|&l| !is_section_header(l, section))
...   |
99  | |             .to_string(),
100 | |     )
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
90  |     return Some(
    |     ++++++

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:75:9
   |
75 | /         line.strip_prefix("##")
76 | |             .is_some_and(|l| l.trim().to_lowercase() == section)
   | |________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
75 |         return line.strip_prefix("##")
   |         ++++++

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:76:30
   |
76 |             .is_some_and(|l| l.trim().to_lowercase() == section)
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
76 |             .is_some_and(|l| return l.trim().to_lowercase() == section)
   |                              ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:76:27
   |
76 |             .is_some_and(|l| l.trim().to_lowercase() == section)
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `section` is shadowed
  --> src/uuhelp_parser/src/lib.rs:79:9
   |
79 |     let section = &section.to_lowercase();
   |         ^^^^^^^
   |
note: previous binding is here
  --> src/uuhelp_parser/src/lib.rs:73:22
   |
73 | pub fn parse_section(section: &str, content: &str) -> Option<String> {
   |                      ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse
   = note: `-W clippy::shadow-reuse` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_reuse)]`

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:83:32
   |
83 |     if content.lines().all(|l| !is_section_header(l, section)) {
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
83 |     if content.lines().all(|l| return !is_section_header(l, section)) {
   |                                ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:83:29
   |
83 |     if content.lines().all(|l| !is_section_header(l, section)) {
   |                             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `to_string()` called on a `&str`
  --> src/uuhelp_parser/src/lib.rs:91:9
   |
91 | /         content
92 | |             .lines()
93 | |             .skip_while(|&l| !is_section_header(l, section))
94 | |             .skip(1)
...  |
98 | |             .trim()
99 | |             .to_string(),
   | |________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
help: try
   |
91 ~         content
92 +             .lines()
93 +             .skip_while(|&l| !is_section_header(l, section))
94 +             .skip(1)
95 +             .take_while(|l| !l.starts_with(section_header_prefix))
96 +             .collect::<Vec<_>>()
97 +             .join("\n")
98 ~             .trim().to_owned(),
   |

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:93:30
   |
93 |             .skip_while(|&l| !is_section_header(l, section))
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
93 |             .skip_while(|&l| return !is_section_header(l, section))
   |                              ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:93:27
   |
93 |             .skip_while(|&l| !is_section_header(l, section))
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:95:29
   |
95 |             .take_while(|l| !l.starts_with(section_header_prefix))
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
95 |             .take_while(|l| return !l.starts_with(section_header_prefix))
   |                             ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:95:26
   |
95 |             .take_while(|l| !l.starts_with(section_header_prefix))
   |                          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `uuhelp_parser` (lib) generated 46 warnings (run `cargo clippy --fix --lib -p uuhelp_parser` to apply 22 suggestions)
warning: importing trait that is only used anonymously
  --> src/uucore_procs/src/lib.rs:11:25
   |
11 | use std::{fs::File, io::Read, path::PathBuf};
   |                         ^^^^ help: use: `Read as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names
   = note: `-W clippy::unused-trait-names` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::unused_trait_names)]`

warning: missing `return` statement
  --> src/uucore_procs/src/lib.rs:49:5
   |
49 |     TokenStream::from(new)
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
   = note: `-W clippy::implicit-return` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::implicit_return)]`
help: add `return` as shown
   |
49 |     return TokenStream::from(new)
   |     ++++++

warning: `stream` is shadowed
  --> src/uucore_procs/src/lib.rs:23:9
   |
23 |     let stream = proc_macro2::TokenStream::from(stream);
   |         ^^^^^^
   |
note: previous binding is here
  --> src/uucore_procs/src/lib.rs:22:33
   |
22 | pub fn main(_args: TokenStream, stream: TokenStream) -> TokenStream {
   |                                 ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse
   = note: `-W clippy::shadow-reuse` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_reuse)]`

warning: missing `return` statement
  --> src/uucore_procs/src/lib.rs:62:5
   |
62 |     s.replace('`', "")
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
62 |     return s.replace('`', "")
   |     ++++++

warning: this ident consists of a single char
  --> src/uucore_procs/src/lib.rs:61:20
   |
61 | fn render_markdown(s: &str) -> String {
   |                    ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars
   = note: `-W clippy::min-ident-chars` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::min_ident_chars)]`

warning: docs for function which may panic missing `# Panics` section
  --> src/uucore_procs/src/lib.rs:70:1
   |
70 | pub fn help_about(input: TokenStream) -> TokenStream {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uucore_procs/src/lib.rs:74:5
   |
74 | /     assert!(
75 | |         !text.is_empty(),
76 | |         "About text not found! Make sure the markdown format is correct"
77 | |     );
   | |_____^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: missing `return` statement
  --> src/uucore_procs/src/lib.rs:78:5
   |
78 |     TokenTree::Literal(Literal::string(&text)).into()
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
78 |     return TokenTree::Literal(Literal::string(&text)).into()
   |     ++++++

warning: `input` is shadowed
  --> src/uucore_procs/src/lib.rs:71:9
   |
71 |     let input: Vec<TokenTree> = input.into_iter().collect();
   |         ^^^^^
   |
note: previous binding is here
  --> src/uucore_procs/src/lib.rs:70:19
   |
70 | pub fn help_about(input: TokenStream) -> TokenStream {
   |                   ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: redundant type annotation
  --> src/uucore_procs/src/lib.rs:73:5
   |
73 |     let text: String = uuhelp_parser::parse_about(&read_help(&filename));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_type_annotations
   = note: `-W clippy::redundant-type-annotations` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::redundant_type_annotations)]`

warning: docs for function which may panic missing `# Panics` section
  --> src/uucore_procs/src/lib.rs:88:1
   |
88 | pub fn help_usage(input: TokenStream) -> TokenStream {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uucore_procs/src/lib.rs:92:5
   |
92 | /     assert!(
93 | |         !text.is_empty(),
94 | |         "Usage text not found! Make sure the markdown format is correct"
95 | |     );
   | |_____^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `return` statement
  --> src/uucore_procs/src/lib.rs:96:5
   |
96 |     TokenTree::Literal(Literal::string(&text)).into()
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
96 |     return TokenTree::Literal(Literal::string(&text)).into()
   |     ++++++

warning: `input` is shadowed
  --> src/uucore_procs/src/lib.rs:89:9
   |
89 |     let input: Vec<TokenTree> = input.into_iter().collect();
   |         ^^^^^
   |
note: previous binding is here
  --> src/uucore_procs/src/lib.rs:88:19
   |
88 | pub fn help_usage(input: TokenStream) -> TokenStream {
   |                   ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: redundant type annotation
  --> src/uucore_procs/src/lib.rs:91:5
   |
91 |     let text: String = uuhelp_parser::parse_usage(&read_help(&filename));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_type_annotations

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore_procs/src/lib.rs:124:1
    |
124 | pub fn help_section(input: TokenStream) -> TokenStream {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore_procs/src/lib.rs:133:9
    |
133 | /         panic!(
134 | |             "The section '{section}' could not be found in the help file. Maybe it is spelled wrong?"
135 | |         )
    | |_________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `return` statement
   --> src/uucore_procs/src/lib.rs:131:9
    |
131 |         TokenTree::Literal(Literal::string(&rendered)).into()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
131 |         return TokenTree::Literal(Literal::string(&rendered)).into()
    |         ++++++

warning: `input` is shadowed
   --> src/uucore_procs/src/lib.rs:125:9
    |
125 |     let input: Vec<TokenTree> = input.into_iter().collect();
    |         ^^^^^
    |
note: previous binding is here
   --> src/uucore_procs/src/lib.rs:124:21
    |
124 | pub fn help_section(input: TokenStream) -> TokenStream {
    |                     ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore_procs/src/lib.rs:129:5
    |
129 | /     if let Some(text) = uuhelp_parser::parse_section(&section, &read_help(&filename)) {
130 | |         let rendered = render_markdown(&text);
131 | |         TokenTree::Literal(Literal::string(&rendered)).into()
132 | |     } else {
...   |
136 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
129 ~     uuhelp_parser::parse_section(&section, &read_help(&filename)).map_or_else(|| panic!(
130 +             "The section '{section}' could not be found in the help file. Maybe it is spelled wrong?"
131 +         ), |text| {
132 +         let rendered = render_markdown(&text);
133 +         TokenTree::Literal(Literal::string(&rendered)).into()
134 +     })
    |

warning: `panic` should not be present in production code
   --> src/uucore_procs/src/lib.rs:133:9
    |
133 | /         panic!(
134 | |             "The section '{section}' could not be found in the help file. Maybe it is spelled wrong?"
135 | |         )
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#panic
    = note: `-W clippy::panic` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::panic)]`

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore_procs/src/lib.rs:143:1
    |
143 | fn get_argument(input: &[TokenTree], index: usize, name: &str) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore_procs/src/lib.rs:147:20
    |
147 |         Some(_) => panic!("Argument {index} should be a string literal."),
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `return` statement
   --> src/uucore_procs/src/lib.rs:151:5
    |
151 | /     string
152 | |         .parse::<String>()
153 | |         .unwrap()
154 | |         .strip_prefix('"')
...   |
157 | |         .unwrap()
158 | |         .to_string()
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
151 |     return string
    |     ++++++

warning: type of pattern does not match the expression type
   --> src/uucore_procs/src/lib.rs:146:9
    |
146 |         Some(TokenTree::Literal(lit)) => lit.to_string(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch
    = note: `-W clippy::pattern-type-mismatch` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::pattern_type_mismatch)]`

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore_procs/src/lib.rs:145:35
    |
145 |     let string = match &input.get(index * 2) {
    |                                   ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::arithmetic_side_effects)]`

warning: `panic` should not be present in production code
   --> src/uucore_procs/src/lib.rs:147:20
    |
147 |         Some(_) => panic!("Argument {index} should be a string literal."),
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#panic

warning: `panic` should not be present in production code
   --> src/uucore_procs/src/lib.rs:148:17
    |
148 |         None => panic!("Missing argument at index {index} for {name}"),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#panic

warning: `to_string()` called on a `&str`
   --> src/uucore_procs/src/lib.rs:151:5
    |
151 | /     string
152 | |         .parse::<String>()
153 | |         .unwrap()
154 | |         .strip_prefix('"')
...   |
157 | |         .unwrap()
158 | |         .to_string()
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
    = note: `-W clippy::str-to-string` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::str_to_string)]`
help: try
    |
151 ~     string
152 +         .parse::<String>()
153 +         .unwrap()
154 +         .strip_prefix('"')
155 +         .unwrap()
156 +         .strip_suffix('"')
157 +         .unwrap().to_owned()
    |

warning: used `unwrap()` on an `Option` value
   --> src/uucore_procs/src/lib.rs:151:5
    |
151 | /     string
152 | |         .parse::<String>()
153 | |         .unwrap()
154 | |         .strip_prefix('"')
155 | |         .unwrap()
156 | |         .strip_suffix('"')
157 | |         .unwrap()
    | |_________________^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used
    = note: `-W clippy::unwrap-used` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::unwrap_used)]`

warning: used `unwrap()` on an `Option` value
   --> src/uucore_procs/src/lib.rs:151:5
    |
151 | /     string
152 | |         .parse::<String>()
153 | |         .unwrap()
154 | |         .strip_prefix('"')
155 | |         .unwrap()
    | |_________________^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore_procs/src/lib.rs:162:1
    |
162 | fn read_help(filename: &str) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore_procs/src/lib.rs:165:34
    |
165 |     let mut path = PathBuf::from(std::env::var("CARGO_MANIFEST_DIR").unwrap());
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `return` statement
   --> src/uucore_procs/src/lib.rs:173:5
    |
173 |     content
    |     ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
173 |     return content
    |     ++++++

warning: used `unwrap()` on a `Result` value
   --> src/uucore_procs/src/lib.rs:165:34
    |
165 |     let mut path = PathBuf::from(std::env::var("CARGO_MANIFEST_DIR").unwrap());
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore_procs/src/lib.rs:165:34
    |
165 |     let mut path = PathBuf::from(std::env::var("CARGO_MANIFEST_DIR").unwrap());
    |                                  ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths
    = note: `-W clippy::absolute-paths` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::absolute_paths)]`

warning: calls to `push` immediately after creation
   --> src/uucore_procs/src/lib.rs:165:5
    |
165 | /     let mut path = PathBuf::from(std::env::var("CARGO_MANIFEST_DIR").unwrap());
166 | |     path.push(filename);
    | |________________________^ help: consider using the `.join()`: `let mut path = PathBuf::from(std::env::var("CARGO_MANIFEST_DIR").unwrap()).join(filename);`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pathbuf_init_then_push
    = note: `-W clippy::pathbuf-init-then-push` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::pathbuf_init_then_push)]`

warning: used `unwrap()` on a `Result` value
   --> src/uucore_procs/src/lib.rs:168:5
    |
168 | /     File::open(path)
169 | |         .unwrap()
170 | |         .read_to_string(&mut content)
171 | |         .unwrap();
    | |_________________^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on a `Result` value
   --> src/uucore_procs/src/lib.rs:168:5
    |
168 | /     File::open(path)
169 | |         .unwrap()
    | |_________________^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: this function is only used once
   --> src/uucore_procs/src/lib.rs:61:1
    |
61  | / fn render_markdown(s: &str) -> String {
62  | |     s.replace('`', "")
63  | | }
    | |_^
    |
note: used here
   --> src/uucore_procs/src/lib.rs:130:24
    |
130 |         let rendered = render_markdown(&text);
    |                        ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn
    = note: `-W clippy::single-call-fn` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::single_call_fn)]`

warning: this function is only used once
  --> src/uucore_procs/src/lib.rs:22:1
   |
22 | / pub fn main(_args: TokenStream, stream: TokenStream) -> TokenStream {
23 | |     let stream = proc_macro2::TokenStream::from(stream);
24 | |
25 | |     let new = quote!(
...  |
49 | |     TokenStream::from(new)
50 | | }
   | |_^
   |
note: used here
  --> src/uucore_procs/src/lib.rs:22:1
   |
22 | / pub fn main(_args: TokenStream, stream: TokenStream) -> TokenStream {
23 | |     let stream = proc_macro2::TokenStream::from(stream);
24 | |
25 | |     let new = quote!(
...  |
49 | |     TokenStream::from(new)
50 | | }
   | |_^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uucore_procs/src/lib.rs:70:1
   |
70 | / pub fn help_about(input: TokenStream) -> TokenStream {
71 | |     let input: Vec<TokenTree> = input.into_iter().collect();
72 | |     let filename = get_argument(&input, 0, "filename");
73 | |     let text: String = uuhelp_parser::parse_about(&read_help(&filename));
...  |
78 | |     TokenTree::Literal(Literal::string(&text)).into()
79 | | }
   | |_^
   |
note: used here
  --> src/uucore_procs/src/lib.rs:70:1
   |
70 | / pub fn help_about(input: TokenStream) -> TokenStream {
71 | |     let input: Vec<TokenTree> = input.into_iter().collect();
72 | |     let filename = get_argument(&input, 0, "filename");
73 | |     let text: String = uuhelp_parser::parse_about(&read_help(&filename));
...  |
78 | |     TokenTree::Literal(Literal::string(&text)).into()
79 | | }
   | |_^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uucore_procs/src/lib.rs:88:1
   |
88 | / pub fn help_usage(input: TokenStream) -> TokenStream {
89 | |     let input: Vec<TokenTree> = input.into_iter().collect();
90 | |     let filename = get_argument(&input, 0, "filename");
91 | |     let text: String = uuhelp_parser::parse_usage(&read_help(&filename));
...  |
96 | |     TokenTree::Literal(Literal::string(&text)).into()
97 | | }
   | |_^
   |
note: used here
  --> src/uucore_procs/src/lib.rs:88:1
   |
88 | / pub fn help_usage(input: TokenStream) -> TokenStream {
89 | |     let input: Vec<TokenTree> = input.into_iter().collect();
90 | |     let filename = get_argument(&input, 0, "filename");
91 | |     let text: String = uuhelp_parser::parse_usage(&read_help(&filename));
...  |
96 | |     TokenTree::Literal(Literal::string(&text)).into()
97 | | }
   | |_^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore_procs/src/lib.rs:124:1
    |
124 | / pub fn help_section(input: TokenStream) -> TokenStream {
125 | |     let input: Vec<TokenTree> = input.into_iter().collect();
126 | |     let section = get_argument(&input, 0, "section");
127 | |     let filename = get_argument(&input, 1, "filename");
...   |
137 | | }
    | |_^
    |
note: used here
   --> src/uucore_procs/src/lib.rs:124:1
    |
124 | / pub fn help_section(input: TokenStream) -> TokenStream {
125 | |     let input: Vec<TokenTree> = input.into_iter().collect();
126 | |     let section = get_argument(&input, 0, "section");
127 | |     let filename = get_argument(&input, 1, "filename");
...   |
137 | | }
    | |_^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: `uucore_procs` (lib) generated 48 warnings (9 duplicates) (run `cargo clippy --fix --lib -p uucore_procs` to apply 9 suggestions)
    Checking uucore v0.1.0 (/mnt/c/Users/sebir/Documents/summer/Research/coreutils/src/uucore)
warning: `mod.rs` files are not allowed, found `src/uucore/src/lib/features/parser/mod.rs`
 --> src/uucore/src/lib/features/parser/mod.rs:1:1
  |
1 | // This file is part of the uutils coreutils package.
  | ^
  |
  = help: move `src/uucore/src/lib/features/parser/mod.rs` to `src/uucore/src/lib/features/parser.rs`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mod_module_files
  = note: `-W clippy::mod-module-files` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::mod_module_files)]`

warning: `mod.rs` files are required, found `src/uucore/src/lib/lib.rs`
 --> src/uucore/src/lib/lib.rs:1:1
  |
1 | // This file is part of the uutils coreutils package.
  | ^
  |
  = help: move `src/uucore/src/lib/lib.rs` to `src/uucore/src/lib/lib/mod.rs`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#self_named_module_files
  = note: `-W clippy::self-named-module-files` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::self_named_module_files)]`

warning: `mod.rs` files are required, found `src/uucore/src/lib/features.rs`
 --> src/uucore/src/lib/features.rs:1:1
  |
1 | // This file is part of the uutils coreutils package.
  | ^
  |
  = help: move `src/uucore/src/lib/features.rs` to `src/uucore/src/lib/features/mod.rs`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#self_named_module_files

warning: `mod.rs` files are required, found `src/uucore/src/lib/mods.rs`
 --> src/uucore/src/lib/mods.rs:1:1
  |
1 | // This file is part of the uutils coreutils package.
  | ^
  |
  = help: move `src/uucore/src/lib/mods.rs` to `src/uucore/src/lib/mods/mod.rs`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#self_named_module_files

warning: integer type suffix should be separated by an underscore
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:50
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                                                  ^^^^^ help: add an underscore: `10_u32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix
    = note: `-W clippy::unseparated-literal-suffix` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::unseparated_literal_suffix)]`

warning: single-character lifetime names are likely uninformative
  --> src/uucore/src/lib/features/parser/num_parser.rs:56:21
   |
56 |     fn parse_digits<'a>(&self, str: &'a str) -> (Option<BigUint>, &'a str) {
   |                     ^^
   |
   = help: use a more informative name
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names
   = note: `-W clippy::single-char-lifetime-names` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::single_char_lifetime_names)]`

warning: single-character lifetime names are likely uninformative
  --> src/uucore/src/lib/features/parser/num_parser.rs:64:27
   |
64 |     fn parse_digits_count<'a>(
   |                           ^^
   |
   = help: use a more informative name
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
  --> src/uucore/src/lib/features/parser/num_parser.rs:85:30
   |
85 | pub enum ExtendedParserError<'a, T> {
   |                              ^^
   |
   = help: use a more informative name
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:100:6
    |
100 | impl<'a, T> ExtendedParserError<'a, T>
    |      ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:156:21
    |
156 |         fn into_i64<'a>(ebd: ExtendedBigDecimal) -> Result<i64, ExtendedParserError<'a, i64>> {
    |                     ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:191:21
    |
191 |         fn into_u64<'a>(ebd: ExtendedBigDecimal) -> Result<u64, ExtendedParserError<'a, u64>> {
    |                     ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:228:21
    |
228 |         fn into_f64<'a>(ebd: ExtendedBigDecimal) -> Result<f64, ExtendedParserError<'a, f64>> {
    |                     ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:311:28
    |
311 | fn parse_suffix_multiplier<'a>(str: &'a str, allowed_suffixes: &[(char, u32)]) -> (u32, &'a str) {
    |                            ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:325:24
    |
325 | fn parse_special_value<'a>(
    |                        ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:362:15
    |
362 | fn make_error<'a>(overflow: bool, negative: bool) -> ExtendedParserError<'a, ExtendedBigDecimal> {
    |               ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:405:35
    |
405 | fn construct_extended_big_decimal<'a>(
    |                                   ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: `if` expression with an `else if`, but without a final `else`
   --> src/uucore/src/lib/features/parser/num_parser.rs:433:16
    |
433 |           } else if new_scale < i64::MIN.into() {
    |  ________________^
434 | |             return Err(make_error(true, negative));
435 | |         }
    | |_________^
    |
    = help: add an `else` block here
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else
    = note: `-W clippy::else-if-without-else` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::else_if_without_else)]`

warning: usage of `pub` without `in`
   --> src/uucore/src/lib/features/parser/num_parser.rs:473:1
    |
473 | pub(crate) enum ParseTarget {
    | ^^^^^^^^^^ help: add it: `pub(in crate)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_with_shorthand
    = note: `-W clippy::pub-with-shorthand` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::pub_with_shorthand)]`

warning: usage of `pub` without `in`
   --> src/uucore/src/lib/features/parser/num_parser.rs:479:1
    |
479 | pub(crate) fn parse<'a>(
    | ^^^^^^^^^^ help: add it: `pub(in crate)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_with_shorthand

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:479:21
    |
479 | pub(crate) fn parse<'a>(
    |                     ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: usage of ref pattern
   --> src/uucore/src/lib/features/parser/parse_size.rs:401:33
    |
401 |             Self::InvalidSuffix(ref s) => s,
    |                                 ^^^^^
    |
    = help: consider using `&` for clarity instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns
    = note: `-W clippy::ref-patterns` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::ref_patterns)]`

warning: usage of ref pattern
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:32
    |
402 |             Self::ParseFailure(ref s) => s,
    |                                ^^^^^
    |
    = help: consider using `&` for clarity instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns

warning: usage of ref pattern
   --> src/uucore/src/lib/features/parser/parse_size.rs:403:30
    |
403 |             Self::SizeTooBig(ref s) => s,
    |                              ^^^^^
    |
    = help: consider using `&` for clarity instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns

warning: usage of ref pattern
   --> src/uucore/src/lib/features/parser/parse_size.rs:404:31
    |
404 |             Self::PhysicalMem(ref s) => s,
    |                               ^^^^^
    |
    = help: consider using `&` for clarity instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns

warning: `if` expression with an `else if`, but without a final `else`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:75:16
   |
75 |           } else if i < possible_values.len() - 1 {
   |  ________________^
76 | |             formatted_possible_values.push_str(" or ");
77 | |         }
   | |_________^
   |
   = help: add an `else` block here
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else

warning: using `pub use`
  --> src/uucore/src/lib/mods/display.rs:37:1
   |
37 | pub use os_display::{Quotable, Quoted};
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use
   = note: `-W clippy::pub-use` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::pub_use)]`

warning: #[allow] attribute found
   --> src/uucore/src/lib/mods/error.rs:297:7
    |
297 |     #[allow(clippy::new_ret_no_self)]
    |       ^^^^^ help: replace it with: `expect`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes
    = note: `-W clippy::allow-attributes` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::allow_attributes)]`

warning: `allow` attribute without specifying a reason
   --> src/uucore/src/lib/mods/error.rs:297:5
    |
297 |     #[allow(clippy::new_ret_no_self)]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try adding a reason at the end with `, reason = ".."`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason
    = note: `-W clippy::allow-attributes-without-reason` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::allow_attributes_without_reason)]`

warning: #[allow] attribute found
   --> src/uucore/src/lib/mods/error.rs:331:7
    |
331 |     #[allow(clippy::new_ret_no_self)]
    |       ^^^^^ help: replace it with: `expect`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes

warning: `allow` attribute without specifying a reason
   --> src/uucore/src/lib/mods/error.rs:331:5
    |
331 |     #[allow(clippy::new_ret_no_self)]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try adding a reason at the end with `, reason = ".."`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason

warning: #[allow] attribute found
   --> src/uucore/src/lib/mods/error.rs:392:7
    |
392 |     #[allow(clippy::new_ret_no_self)]
    |       ^^^^^ help: replace it with: `expect`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes

warning: `allow` attribute without specifying a reason
   --> src/uucore/src/lib/mods/error.rs:392:5
    |
392 |     #[allow(clippy::new_ret_no_self)]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try adding a reason at the end with `, reason = ".."`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason

warning: #[allow] attribute found
   --> src/uucore/src/lib/mods/error.rs:653:7
    |
653 |     #[allow(clippy::new_ret_no_self)]
    |       ^^^^^ help: replace it with: `expect`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes

warning: `allow` attribute without specifying a reason
   --> src/uucore/src/lib/mods/error.rs:653:5
    |
653 |     #[allow(clippy::new_ret_no_self)]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try adding a reason at the end with `, reason = ".."`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason

warning: usage of ref pattern
  --> src/uucore/src/lib/mods/locale.rs:82:21
   |
82 |         if let Some(ref fallback) = self.fallback_bundle {
   |                     ^^^^^^^^^^^^
   |
   = help: consider using `&` for clarity instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:22:1
   |
22 | pub use uucore_procs::*;
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:25:1
   |
25 | pub use crate::mods::display;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:26:1
   |
26 | pub use crate::mods::error;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:29:1
   |
29 | pub use crate::mods::line_ending;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:30:1
   |
30 | pub use crate::mods::locale;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:31:1
   |
31 | pub use crate::mods::os;
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:32:1
   |
32 | pub use crate::mods::panic;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:33:1
   |
33 | pub use crate::mods::posix;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:49:1
   |
49 | pub use crate::features::extendedbigdecimal;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:59:1
   |
59 | pub use crate::features::parser;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: multiple versions for dependency `thiserror`: 1.0.69, 2.0.12
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions
  = note: `-W clippy::multiple-crate-versions` implied by `-W clippy::cargo`
  = help: to override `-W clippy::cargo` add `#[allow(clippy::multiple_crate_versions)]`

warning: multiple versions for dependency `thiserror-impl`: 1.0.69, 2.0.12
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows-sys`: 0.48.0, 0.52.0, 0.59.0
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows-targets`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_aarch64_gnullvm`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_aarch64_msvc`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_i686_gnu`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_i686_msvc`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_x86_64_gnu`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_x86_64_gnullvm`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_x86_64_msvc`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/lib.rs:153:14
    |
153 | macro_rules! bin {
    |              ^^^
    |
note: should be placed before `disable_rust_signal_handlers`
   --> src/uucore/src/lib/lib.rs:132:8
    |
132 | pub fn disable_rust_signal_handlers() -> Result<(), Errno> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering
    = note: `-W clippy::arbitrary-source-item-ordering` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::arbitrary_source_item_ordering)]`

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/lib.rs:216:8
    |
216 | static ARGV: LazyLock<Vec<OsString>> = LazyLock::new(|| wild::args_os().collect());
    |        ^^^^
    |
note: should be placed before `set_utility_is_second_arg`
   --> src/uucore/src/lib/lib.rs:210:8
    |
210 | pub fn set_utility_is_second_arg() {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/lib.rs:231:8
    |
231 | static EXECUTION_PHRASE: LazyLock<String> = LazyLock::new(|| {
    |        ^^^^^^^^^^^^^^^^
    |
note: should be placed before `util_name`
   --> src/uucore/src/lib/lib.rs:227:8
    |
227 | pub fn util_name() -> &'static str {
    |        ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/lib.rs:252:11
    |
252 | pub trait Args: Iterator<Item = OsString> + Sized {
    |           ^^^^
    |
note: should be placed before `execution_phrase`
   --> src/uucore/src/lib/lib.rs:244:8
    |
244 | pub fn execution_phrase() -> &'static str {
    |        ^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/lib.rs:400:14
    |
400 | macro_rules! prompt_yes(
    |              ^^^^^^^^^^
    |
note: should be placed before `read_os_string_lines`
   --> src/uucore/src/lib/lib.rs:376:8
    |
376 | pub fn read_os_string_lines<R: std::io::Read>(
    |        ^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing documentation for a module
  --> src/uucore/src/lib/lib.rs:18:1
   |
18 | mod features; // feature-gated code modules
   | ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items
   = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_docs_in_private_items)]`

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:23:5
   |
23 | use std::cmp::Ordering;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core
   = note: `-W clippy::std-instead-of-core` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::std_instead_of_core)]`

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:24:5
   |
24 | use std::ops::Add;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:25:5
   |
25 | use std::ops::Neg;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:29:17
   |
29 | use num_traits::FromPrimitive;
   |                 ^^^^^^^^^^^^^ help: use: `FromPrimitive as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names
   = note: `-W clippy::unused-trait-names` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::unused_trait_names)]`

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:30:17
   |
30 | use num_traits::Signed;
   |                 ^^^^^^ help: use: `Signed as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: exported enums should not be exhaustive
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:34:1
   |
34 | / pub enum ExtendedBigDecimal {
35 | |     /// Arbitrary precision floating point number.
36 | |     BigDecimal(BigDecimal),
...  |
79 | |     MinusNan,
80 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
   = note: `-W clippy::exhaustive-enums` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::exhaustive_enums)]`
help: try adding #[non_exhaustive]
   |
34 + #[non_exhaustive]
35 | pub enum ExtendedBigDecimal {
   |

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:79:5
   |
79 |     MinusNan,
   |     ^^^^^^^^
   |
note: should be placed before `Nan`
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:70:5
   |
70 |     Nan,
   |     ^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: consider implementing `TryFrom` instead
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:82:1
    |
82  | / impl From<f64> for ExtendedBigDecimal {
83  | |     fn from(val: f64) -> Self {
84  | |         if val.is_nan() {
85  | |             if val.is_sign_negative() {
...   |
102 | | }
    | |_^
    |
    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail
note: potential failure(s)
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:99:44
    |
99  |             ExtendedBigDecimal::BigDecimal(BigDecimal::from_f64(val).unwrap())
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#fallible_impl_from
    = note: `-W clippy::fallible-impl-from` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::fallible_impl_from)]`

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:83:5
    |
83  | /     fn from(val: f64) -> Self {
84  | |         if val.is_nan() {
85  | |             if val.is_sign_negative() {
86  | |                 ExtendedBigDecimal::MinusNan
...   |
101 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items
    = note: `-W clippy::missing-inline-in-public-items` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_inline_in_public_items)]`

warning: missing `return` statement
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:86:17
   |
86 |                 ExtendedBigDecimal::MinusNan
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
   = note: `-W clippy::implicit-return` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::implicit_return)]`
help: add `return` as shown
   |
86 |                 return ExtendedBigDecimal::MinusNan
   |                 ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:88:17
   |
88 |                 ExtendedBigDecimal::Nan
   |                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
88 |                 return ExtendedBigDecimal::Nan
   |                 ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:92:17
   |
92 |                 ExtendedBigDecimal::MinusInfinity
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
92 |                 return ExtendedBigDecimal::MinusInfinity
   |                 ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:94:17
   |
94 |                 ExtendedBigDecimal::Infinity
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
94 |                 return ExtendedBigDecimal::Infinity
   |                 ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:97:13
   |
97 |             ExtendedBigDecimal::MinusZero
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
97 |             return ExtendedBigDecimal::MinusZero
   |             ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:99:13
   |
99 |             ExtendedBigDecimal::BigDecimal(BigDecimal::from_f64(val).unwrap())
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
99 |             return ExtendedBigDecimal::BigDecimal(BigDecimal::from_f64(val).unwrap())
   |             ++++++

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:86:17
   |
86 |                 ExtendedBigDecimal::MinusNan
   |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self
   = note: `-W clippy::use-self` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::use_self)]`

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:88:17
   |
88 |                 ExtendedBigDecimal::Nan
   |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:92:17
   |
92 |                 ExtendedBigDecimal::MinusInfinity
   |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:94:17
   |
94 |                 ExtendedBigDecimal::Infinity
   |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:97:13
   |
97 |             ExtendedBigDecimal::MinusZero
   |             ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:99:13
   |
99 |             ExtendedBigDecimal::BigDecimal(BigDecimal::from_f64(val).unwrap())
   |             ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: used `unwrap()` on an `Option` value
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:99:44
   |
99 |             ExtendedBigDecimal::BigDecimal(BigDecimal::from_f64(val).unwrap())
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used
   = note: `-W clippy::unwrap-used` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::unwrap_used)]`

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:109:12
    |
109 |     pub fn one() -> Self {
    |            ^^^
    |
note: should be placed before `zero`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:105:12
    |
105 |     pub fn zero() -> Self {
    |            ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:105:5
    |
105 |     pub fn zero() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn zero() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:105:5
    |
105 | /     pub fn zero() -> Self {
106 | |         Self::BigDecimal(0.into())
107 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:106:9
    |
106 |         Self::BigDecimal(0.into())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
106 |         return Self::BigDecimal(0.into())
    |         ++++++

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:109:5
    |
109 |     pub fn one() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn one() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:109:5
    |
109 | /     pub fn one() -> Self {
110 | |         Self::BigDecimal(1.into())
111 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:110:9
    |
110 |         Self::BigDecimal(1.into())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
110 |         return Self::BigDecimal(1.into())
    |         ++++++

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:113:5
    |
113 |     pub fn to_biguint(&self) -> Option<BigUint> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn to_biguint(&self) -> Option<BigUint>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:113:5
    |
113 | /     pub fn to_biguint(&self) -> Option<BigUint> {
114 | |         match self {
115 | |             ExtendedBigDecimal::BigDecimal(big_decimal) => {
116 | |                 let (bi, scale) = big_decimal.as_bigint_and_scale();
...   |
125 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:120:17
    |
120 | /                 bi.to_biguint()
121 | |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    | |___________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
120 |                 return bi.to_biguint()
    |                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:123:18
    |
123 |             _ => None,
    |                  ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
123 |             _ => return None,
    |                  ++++++

warning: wildcard match will also match any future added variants
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:123:13
    |
123 |             _ => None,
    |             ^ help: try: `ExtendedBigDecimal::Infinity | ExtendedBigDecimal::MinusInfinity | ExtendedBigDecimal::MinusZero | ExtendedBigDecimal::Nan | ExtendedBigDecimal::MinusNan`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm
    = note: `-W clippy::wildcard-enum-match-arm` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::wildcard_enum_match_arm)]`

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:115:13
    |
115 |             ExtendedBigDecimal::BigDecimal(big_decimal) => {
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch
    = note: `-W clippy::pattern-type-mismatch` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::pattern_type_mismatch)]`

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:115:13
    |
115 |             ExtendedBigDecimal::BigDecimal(big_decimal) => {
    |             ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:117:61
    |
117 |                 if bi.is_negative() || scale > 0 || scale < -(u32::MAX as i64) {
    |                                                             ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::arithmetic_side_effects)]`

warning: casts from `u32` to `i64` can be expressed infallibly using `From`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:117:62
    |
117 |                 if bi.is_negative() || scale > 0 || scale < -(u32::MAX as i64) {
    |                                                              ^^^^^^^^^^^^^^^^^
    |
    = help: an `as` cast can become silently lossy if the types change in the future
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
    = note: `-W clippy::cast-lossless` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_lossless)]`
help: use `i64::from` instead
    |
117 -                 if bi.is_negative() || scale > 0 || scale < -(u32::MAX as i64) {
117 +                 if bi.is_negative() || scale > 0 || scale < -i64::from(u32::MAX) {
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:117:62
    |
117 |                 if bi.is_negative() || scale > 0 || scale < -(u32::MAX as i64) {
    |                                                              ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
    = note: `-W clippy::as-conversions` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::as_conversions)]`

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:31
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
121 |                     .map(|bi| return bi * BigUint::from(10u32).pow(-scale as u32))
    |                               ++++++

warning: `bi` is shadowed
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:27
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                           ^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:116:22
    |
116 |                 let (bi, scale) = big_decimal.as_bigint_and_scale();
    |                      ^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse
    = note: `-W clippy::shadow-reuse` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_reuse)]`

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:31
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i64` to `u32` may truncate the value
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:61
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                                                             ^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_truncation)]`
help: ... or use `try_from` and handle the error accordingly
    |
121 -                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
121 +                     .map(|bi| bi * BigUint::from(10u32).pow(u32::try_from(-scale)))
    |

warning: casting `i64` to `u32` may lose the sign of the value
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:61
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                                                             ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_sign_loss)]`

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:61
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                                                             ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: missing trait method provided by default: `set_zero`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:128:1
    |
128 | impl Zero for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /home/sebir/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/src/identities.rs:23:5
    |
23  |     fn set_zero(&mut self) {
    |     ^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods
    = note: `-W clippy::missing-trait-methods` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_trait_methods)]`

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:132:8
    |
132 |     fn is_zero(&self) -> bool {
    |        ^^^^^^^
    |
note: should be placed before `zero`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:129:8
    |
129 |     fn zero() -> Self {
    |        ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:129:5
    |
129 | /     fn zero() -> Self {
130 | |         Self::BigDecimal(BigDecimal::zero())
131 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:130:9
    |
130 |         Self::BigDecimal(BigDecimal::zero())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
130 |         return Self::BigDecimal(BigDecimal::zero())
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:132:5
    |
132 | /     fn is_zero(&self) -> bool {
133 | |         match self {
134 | |             Self::BigDecimal(n) => n.is_zero(),
135 | |             Self::MinusZero => true,
...   |
138 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:134:36
    |
134 |             Self::BigDecimal(n) => n.is_zero(),
    |                                    ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
134 |             Self::BigDecimal(n) => return n.is_zero(),
    |                                    ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:135:32
    |
135 |             Self::MinusZero => true,
    |                                ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
135 |             Self::MinusZero => return true,
    |                                ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:136:18
    |
136 |             _ => false,
    |                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
136 |             _ => return false,
    |                  ++++++

warning: wildcard match will also match any future added variants
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:136:13
    |
136 |             _ => false,
    |             ^ help: try: `Self::Infinity | Self::MinusInfinity | Self::Nan | Self::MinusNan`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:134:13
    |
134 |             Self::BigDecimal(n) => n.is_zero(),
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:142:5
    |
142 | /     fn default() -> Self {
143 | |         Self::zero()
144 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:143:9
    |
143 |         Self::zero()
    |         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
143 |         return Self::zero()
    |         ++++++

warning: renamed function parameter of trait impl
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:150:18
    |
150 |     fn add(self, other: Self) -> Self {
    |                  ^^^^^ help: consider using the default name: `rhs`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#renamed_function_params
    = note: `-W clippy::renamed-function-params` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::renamed_function_params)]`

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:150:5
    |
150 | /     fn add(self, other: Self) -> Self {
151 | |         match (self, other) {
152 | |             (Self::BigDecimal(m), Self::BigDecimal(n)) => Self::BigDecimal(m.add(n)),
153 | |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
...   |
170 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:152:59
    |
152 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => Self::BigDecimal(m.add(n)),
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
152 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => return Self::BigDecimal(m.add(n)),
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:153:59
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
    |                                                           ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => return Self::MinusInfinity,
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:154:54
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
    |                                                      ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => return Self::Infinity,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:155:55
    |
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
    |                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
155 |             (Self::BigDecimal(m), Self::MinusZero) => return Self::BigDecimal(m),
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:156:54
    |
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
    |                                                      ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
156 |             (Self::Infinity, Self::BigDecimal(_)) => return Self::Infinity,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:157:49
    |
157 |             (Self::Infinity, Self::Infinity) => Self::Infinity,
    |                                                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
157 |             (Self::Infinity, Self::Infinity) => return Self::Infinity,
    |                                                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:158:50
    |
158 |             (Self::Infinity, Self::MinusZero) => Self::Infinity,
    |                                                  ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
158 |             (Self::Infinity, Self::MinusZero) => return Self::Infinity,
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:159:54
    |
159 |             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |                                                      ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
159 |             (Self::Infinity, Self::MinusInfinity) => return Self::Nan,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:160:59
    |
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
    |                                                           ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => return Self::MinusInfinity,
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:161:59
    |
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
    |                                                           ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
161 |             (Self::MinusInfinity, Self::MinusInfinity) => return Self::MinusInfinity,
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:162:55
    |
162 |             (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
    |                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
162 |             (Self::MinusInfinity, Self::MinusZero) => return Self::MinusInfinity,
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:163:54
    |
163 |             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |                                                      ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
163 |             (Self::MinusInfinity, Self::Infinity) => return Self::Nan,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:164:31
    |
164 |             (Self::Nan, _) => Self::Nan,
    |                               ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
164 |             (Self::Nan, _) => return Self::Nan,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:165:31
    |
165 |             (_, Self::Nan) => Self::Nan,
    |                               ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
165 |             (_, Self::Nan) => return Self::Nan,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:166:36
    |
166 |             (Self::MinusNan, _) => Self::MinusNan,
    |                                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
166 |             (Self::MinusNan, _) => return Self::MinusNan,
    |                                    ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:167:36
    |
167 |             (_, Self::MinusNan) => Self::MinusNan,
    |                                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
167 |             (_, Self::MinusNan) => return Self::MinusNan,
    |                                    ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:168:41
    |
168 |             (Self::MinusZero, other) => other,
    |                                         ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
168 |             (Self::MinusZero, other) => return other,
    |                                         ++++++

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:154:13
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
    = note: `-W clippy::match-same-arms` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_same_arms)]`
help: or try merging the arm patterns and removing the obsolete arm
    |
154 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
156 ~             (Self::Infinity, Self::Infinity) => Self::Infinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:154:13
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
154 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::Infinity) => Self::Infinity,
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
157 ~             (Self::Infinity, Self::MinusZero) => Self::Infinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:156:13
    |
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
156 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::Infinity) => Self::Infinity,
157 ~             (Self::Infinity, Self::MinusZero) => Self::Infinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:154:13
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
154 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::MinusZero) => Self::Infinity,
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
157 |             (Self::Infinity, Self::Infinity) => Self::Infinity,
158 ~             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:156:13
    |
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
156 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusZero) => Self::Infinity,
157 |             (Self::Infinity, Self::Infinity) => Self::Infinity,
158 ~             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:157:13
    |
157 |             (Self::Infinity, Self::Infinity) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
157 ~             (Self::Infinity, Self::Infinity) | (Self::Infinity, Self::MinusZero) => Self::Infinity,
158 ~             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:153:13
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
153 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
...
159 |             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
160 ~             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:153:13
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
153 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
...
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
161 ~             (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:160:13
    |
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
160 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
161 ~             (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:153:13
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
153 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
...
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
162 ~             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:160:13
    |
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
160 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
162 ~             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:161:13
    |
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
161 ~             (Self::MinusInfinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
162 ~             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:159:13
    |
159 |             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
159 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::Infinity) => Self::Nan,
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
162 |             (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
163 ~             (Self::Nan, _) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:159:13
    |
159 |             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
159 ~             (Self::Infinity, Self::MinusInfinity) | (Self::Nan, _) => Self::Nan,
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
...
163 |             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
164 ~             (_, Self::Nan) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:163:13
    |
163 |             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
163 ~             (Self::MinusInfinity, Self::Infinity) | (Self::Nan, _) => Self::Nan,
164 ~             (_, Self::Nan) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:165:13
    |
165 |             (_, Self::Nan) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
159 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
160 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
...
163 |             (Self::Nan, _) => Self::Nan,
164 ~             (_, Self::Nan) | (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:165:13
    |
165 |             (_, Self::Nan) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
163 ~             (Self::Nan, _) => Self::Nan,
164 ~             (_, Self::Nan) | (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:165:13
    |
165 |             (_, Self::Nan) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
164 -             (Self::Nan, _) => Self::Nan,
165 -             (_, Self::Nan) => Self::Nan,
164 +             (_, Self::Nan) | (Self::Nan, _) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:167:13
    |
167 |             (_, Self::MinusNan) => Self::MinusNan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
166 -             (Self::MinusNan, _) => Self::MinusNan,
167 -             (_, Self::MinusNan) => Self::MinusNan,
166 +             (_, Self::MinusNan) | (Self::MinusNan, _) => Self::MinusNan,
    |

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:152:31
    |
152 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => Self::BigDecimal(m.add(n)),
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars
    = note: `-W clippy::min-ident-chars` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::min_ident_chars)]`

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:155:31
    |
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `other` is shadowed
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:168:31
    |
168 |             (Self::MinusZero, other) => other,
    |                               ^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:150:18
    |
150 |     fn add(self, other: Self) -> Self {
    |                  ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing trait method provided by default: `ne`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:173:1
    |
173 | impl PartialEq for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:262:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:174:5
    |
174 | /     fn eq(&self, other: &Self) -> bool {
175 | |         match (self, other) {
176 | |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.eq(n),
177 | |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
...   |
197 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:176:59
    |
176 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.eq(n),
    |                                                           ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
176 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => return m.eq(n),
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:59
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |                                                           ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => return false,
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:54
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |                                                      ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => return false,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:55
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |                                                       ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => return false,
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:54
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |                                                      ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => return false,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:181:49
    |
181 |             (Self::Infinity, Self::Infinity) => true,
    |                                                 ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
181 |             (Self::Infinity, Self::Infinity) => return true,
    |                                                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:50
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |                                                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
182 |             (Self::Infinity, Self::MinusZero) => return false,
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:54
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |                                                      ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
183 |             (Self::Infinity, Self::MinusInfinity) => return false,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:59
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |                                                           ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => return false,
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:54
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |                                                      ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
185 |             (Self::MinusInfinity, Self::Infinity) => return false,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:55
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |                                                       ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => return false,
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:187:59
    |
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |                                                           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
187 |             (Self::MinusInfinity, Self::MinusInfinity) => return true,
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:55
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |                                                       ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => return false,
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:189:50
    |
189 |             (Self::MinusZero, Self::Infinity) => false,
    |                                                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
189 |             (Self::MinusZero, Self::Infinity) => return false,
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:190:51
    |
190 |             (Self::MinusZero, Self::MinusZero) => true,
    |                                                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
190 |             (Self::MinusZero, Self::MinusZero) => return true,
    |                                                   ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:191:55
    |
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
    |                                                       ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
191 |             (Self::MinusZero, Self::MinusInfinity) => return false,
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:192:31
    |
192 |             (Self::Nan, _) => false,
    |                               ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
192 |             (Self::Nan, _) => return false,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:193:36
    |
193 |             (Self::MinusNan, _) => false,
    |                                    ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
193 |             (Self::MinusNan, _) => return false,
    |                                    ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:31
    |
194 |             (_, Self::Nan) => false,
    |                               ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
194 |             (_, Self::Nan) => return false,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:36
    |
195 |             (_, Self::MinusNan) => false,
    |                                    ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
195 |             (_, Self::MinusNan) => return false,
    |                                    ++++++

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::BigDecimal(_), Self::Infinity) => false,
178 ~             (Self::BigDecimal(_), Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::BigDecimal(_), Self::MinusZero) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
179 ~             (Self::Infinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::BigDecimal(_), Self::MinusZero) => false,
179 ~             (Self::Infinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::BigDecimal(_)) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
180 ~             (Self::Infinity, Self::Infinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::BigDecimal(_)) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
180 ~             (Self::Infinity, Self::Infinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::Infinity, Self::BigDecimal(_)) => false,
180 ~             (Self::Infinity, Self::Infinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::MinusZero) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
181 |             (Self::Infinity, Self::Infinity) => true,
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::MinusZero) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::Infinity, Self::MinusZero) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusZero) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::MinusInfinity) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
182 |             (Self::Infinity, Self::MinusZero) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::MinusInfinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
182 |             (Self::Infinity, Self::MinusZero) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::Infinity, Self::MinusInfinity) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusInfinity) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::Infinity, Self::MinusInfinity) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::Infinity) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::Infinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusInfinity, Self::Infinity) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::Infinity) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusInfinity, Self::Infinity) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::Infinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::Infinity) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusZero) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::MinusZero) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusInfinity, Self::MinusZero) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusZero) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusInfinity, Self::MinusZero) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusZero) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusZero) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusInfinity, Self::MinusZero) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:181:13
    |
181 |             (Self::Infinity, Self::Infinity) => true,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
181 ~             (Self::Infinity, Self::Infinity) | (Self::MinusInfinity, Self::MinusInfinity) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
...
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
187 ~             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusZero, Self::BigDecimal(_)) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusZero, Self::BigDecimal(_)) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusZero, Self::BigDecimal(_)) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusZero, Self::BigDecimal(_)) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusZero, Self::BigDecimal(_)) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::BigDecimal(_)) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusZero, Self::BigDecimal(_)) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusZero, Self::BigDecimal(_)) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusZero, Self::Infinity) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusZero, Self::Infinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusZero, Self::Infinity) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::Infinity) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusZero, Self::Infinity) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusZero, Self::Infinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::Infinity) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusZero, Self::Infinity) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusZero, Self::Infinity) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:13
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::BigDecimal(_)) | (Self::MinusZero, Self::Infinity) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:181:13
    |
181 |             (Self::Infinity, Self::Infinity) => true,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
181 ~             (Self::Infinity, Self::Infinity) | (Self::MinusZero, Self::MinusZero) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
...
189 |             (Self::MinusZero, Self::Infinity) => false,
190 ~             (Self::MinusZero, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:187:13
    |
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
187 ~             (Self::MinusInfinity, Self::MinusInfinity) | (Self::MinusZero, Self::MinusZero) => true,
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 |             (Self::MinusZero, Self::Infinity) => false,
190 ~             (Self::MinusZero, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusZero, Self::MinusInfinity) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusZero, Self::MinusInfinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusZero, Self::MinusInfinity) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::MinusInfinity) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusZero, Self::MinusInfinity) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusZero, Self::MinusInfinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::MinusInfinity) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusZero, Self::MinusInfinity) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusZero, Self::MinusInfinity) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:13
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::BigDecimal(_)) | (Self::MinusZero, Self::MinusInfinity) => false,
189 |             (Self::MinusZero, Self::Infinity) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:189:13
    |
189 |             (Self::MinusZero, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::Infinity) | (Self::MinusZero, Self::MinusInfinity) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Nan, _) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Nan, _) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::Nan, _) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Nan, _) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::Nan, _) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::Nan, _) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::Nan, _) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::Nan, _) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::Nan, _) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:13
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::BigDecimal(_)) | (Self::Nan, _) => false,
189 |             (Self::MinusZero, Self::Infinity) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:189:13
    |
189 |             (Self::MinusZero, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::Infinity) | (Self::Nan, _) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:191:13
    |
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
191 ~             (Self::MinusZero, Self::MinusInfinity) | (Self::Nan, _) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusNan, _) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusNan, _) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusNan, _) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusNan, _) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusNan, _) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusNan, _) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusNan, _) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusNan, _) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusNan, _) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:13
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::BigDecimal(_)) | (Self::MinusNan, _) => false,
189 |             (Self::MinusZero, Self::Infinity) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:189:13
    |
189 |             (Self::MinusZero, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::Infinity) | (Self::MinusNan, _) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:191:13
    |
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
191 ~             (Self::MinusZero, Self::MinusInfinity) | (Self::MinusNan, _) => false,
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:192:13
    |
192 |             (Self::Nan, _) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
192 ~             (Self::Nan, _) | (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::Infinity) => false,
178 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::MinusZero) => false,
179 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::BigDecimal(_), Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::Infinity, Self::BigDecimal(_)) => false,
180 |             (Self::Infinity, Self::Infinity) => true,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::BigDecimal(_), Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::Infinity) => true,
181 |             (Self::Infinity, Self::MinusZero) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::Infinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
183 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::Infinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
184 |             (Self::MinusInfinity, Self::Infinity) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
185 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
186 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
187 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::Infinity) => false,
189 |             (Self::MinusZero, Self::MinusZero) => true,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusZero, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::MinusZero) => true,
190 |             (Self::MinusZero, Self::MinusInfinity) => false,
191 |             (Self::Nan, _) => false,
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
191 ~             (Self::Nan, _) => false,
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusZero, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
192 ~             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
193 -             (Self::MinusNan, _) => false,
194 -             (_, Self::Nan) => false,
193 +             (_, Self::Nan) | (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::Infinity) => false,
178 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::MinusZero) => false,
179 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::BigDecimal(_), Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::Infinity, Self::BigDecimal(_)) => false,
180 |             (Self::Infinity, Self::Infinity) => true,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::BigDecimal(_), Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::Infinity) => true,
181 |             (Self::Infinity, Self::MinusZero) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::Infinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
183 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::Infinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
184 |             (Self::MinusInfinity, Self::Infinity) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
185 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
186 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
187 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::Infinity) => false,
189 |             (Self::MinusZero, Self::MinusZero) => true,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusZero, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::MinusZero) => true,
190 |             (Self::MinusZero, Self::MinusInfinity) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
191 ~             (Self::Nan, _) => false,
192 |             (Self::MinusNan, _) => false,
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusZero, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
193 ~             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
194 ~             (_, Self::Nan) | (_, Self::MinusNan) => false,
195 ~             }
    |

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:176:14
    |
176 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.eq(n),
    |              ^^^^^^^^^^^^^^^^^^^
    |
    = help: explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:176:31
    |
176 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.eq(n),
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing trait method provided by default: `lt`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1382:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `le`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1400:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `gt`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1418:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `ge`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1436:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `__chaining_lt`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1452:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `__chaining_le`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1461:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `__chaining_gt`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1470:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `__chaining_ge`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1479:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:201:5
    |
201 | /     fn partial_cmp(&self, other: &Self) -> Option<Ordering> {
202 | |         match (self, other) {
203 | |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.partial_cmp(n),
204 | |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
...   |
224 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:203:59
    |
203 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.partial_cmp(n),
    |                                                           ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
203 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => return m.partial_cmp(n),
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:59
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => return Some(Ordering::Greater),
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:54
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |                                                      ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => return Some(Ordering::Less),
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:206:55
    |
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
206 |             (Self::BigDecimal(m), Self::MinusZero) => return m.partial_cmp(&BigDecimal::zero()),
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:207:54
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => return Some(Ordering::Greater),
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:208:49
    |
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
    |                                                 ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
208 |             (Self::Infinity, Self::Infinity) => return Some(Ordering::Equal),
    |                                                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:209:50
    |
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
209 |             (Self::Infinity, Self::MinusZero) => return Some(Ordering::Greater),
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:210:54
    |
210 |             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
210 |             (Self::Infinity, Self::MinusInfinity) => return Some(Ordering::Greater),
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:211:59
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |                                                           ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => return Some(Ordering::Less),
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:212:54
    |
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
    |                                                      ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
212 |             (Self::MinusInfinity, Self::Infinity) => return Some(Ordering::Less),
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:213:55
    |
213 |             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
    |                                                       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
213 |             (Self::MinusInfinity, Self::MinusZero) => return Some(Ordering::Less),
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:214:59
    |
214 |             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |                                                           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
214 |             (Self::MinusInfinity, Self::MinusInfinity) => return Some(Ordering::Equal),
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:215:55
    |
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
215 |             (Self::MinusZero, Self::BigDecimal(n)) => return BigDecimal::zero().partial_cmp(n),
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:216:50
    |
216 |             (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
    |                                                  ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
216 |             (Self::MinusZero, Self::Infinity) => return Some(Ordering::Less),
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:217:51
    |
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |                                                   ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
217 |             (Self::MinusZero, Self::MinusZero) => return Some(Ordering::Equal),
    |                                                   ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:218:55
    |
218 |             (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
218 |             (Self::MinusZero, Self::MinusInfinity) => return Some(Ordering::Greater),
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:219:31
    |
219 |             (Self::Nan, _) => None,
    |                               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
219 |             (Self::Nan, _) => return None,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:220:36
    |
220 |             (Self::MinusNan, _) => None,
    |                                    ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
220 |             (Self::MinusNan, _) => return None,
    |                                    ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:221:31
    |
221 |             (_, Self::Nan) => None,
    |                               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
221 |             (_, Self::Nan) => return None,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:222:36
    |
222 |             (_, Self::MinusNan) => None,
    |                                    ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
222 |             (_, Self::MinusNan) => return None,
    |                                    ++++++

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:13
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
204 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
207 ~             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:13
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
204 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
...
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
209 ~             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:207:13
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
207 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
209 ~             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:13
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
204 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
...
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
210 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:207:13
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
207 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
210 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:209:13
    |
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
209 ~             (Self::Infinity, Self::MinusZero) | (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
210 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:13
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
205 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
...
210 |             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
211 ~             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:13
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
205 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
...
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
212 ~             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:211:13
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
211 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
212 ~             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:13
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
205 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
...
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
213 ~             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:211:13
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
211 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
213 ~             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:212:13
    |
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
212 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
213 ~             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:208:13
    |
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
208 ~             (Self::Infinity, Self::Infinity) | (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
...
213 |             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
214 ~             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:13
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
205 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
...
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 ~             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:211:13
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
211 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
...
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 ~             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:212:13
    |
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
212 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
213 |             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
214 |             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 ~             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:213:13
    |
213 |             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
213 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
214 |             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 ~             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:208:13
    |
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
208 ~             (Self::Infinity, Self::Infinity) | (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
...
216 |             (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
217 ~             (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:214:13
    |
214 |             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
214 ~             (Self::MinusInfinity, Self::MinusInfinity) | (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 |             (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
217 ~             (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:13
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
204 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
...
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
218 ~             (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:207:13
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
207 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
...
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
218 ~             (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:209:13
    |
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
209 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
210 |             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
...
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
218 ~             (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:210:13
    |
210 |             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
210 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
...
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
218 ~             (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:219:13
    |
219 |             (Self::Nan, _) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
219 ~             (Self::Nan, _) | (Self::MinusNan, _) => None,
220 ~             (_, Self::Nan) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:221:13
    |
221 |             (_, Self::Nan) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
219 ~             (Self::MinusNan, _) => None,
220 ~             (_, Self::Nan) | (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:221:13
    |
221 |             (_, Self::Nan) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
220 -             (Self::MinusNan, _) => None,
221 -             (_, Self::Nan) => None,
220 +             (_, Self::Nan) | (Self::MinusNan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:222:13
    |
222 |             (_, Self::MinusNan) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
220 ~             (_, Self::Nan) => None,
221 ~             (_, Self::MinusNan) | (Self::MinusNan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:221:13
    |
221 |             (_, Self::Nan) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
221 ~             (_, Self::Nan) | (_, Self::MinusNan) => None,
222 ~             }
    |

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:203:14
    |
203 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.partial_cmp(n),
    |              ^^^^^^^^^^^^^^^^^^^
    |
    = help: explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:203:31
    |
203 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.partial_cmp(n),
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:206:31
    |
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:230:5
    |
230 | /     fn neg(self) -> Self::Output {
231 | |         match self {
232 | |             Self::BigDecimal(bd) => {
233 | |                 if bd.is_zero() {
...   |
245 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:234:21
    |
234 |                     Self::MinusZero
    |                     ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
234 |                     return Self::MinusZero
    |                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:236:21
    |
236 |                     Self::BigDecimal(bd.neg())
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
236 |                     return Self::BigDecimal(bd.neg())
    |                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:239:32
    |
239 |             Self::MinusZero => Self::BigDecimal(BigDecimal::zero()),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
239 |             Self::MinusZero => return Self::BigDecimal(BigDecimal::zero()),
    |                                ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:240:31
    |
240 |             Self::Infinity => Self::MinusInfinity,
    |                               ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
240 |             Self::Infinity => return Self::MinusInfinity,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:241:36
    |
241 |             Self::MinusInfinity => Self::Infinity,
    |                                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
241 |             Self::MinusInfinity => return Self::Infinity,
    |                                    ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:242:26
    |
242 |             Self::Nan => Self::MinusNan,
    |                          ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
242 |             Self::Nan => return Self::MinusNan,
    |                          ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:243:31
    |
243 |             Self::MinusNan => Self::Nan,
    |                               ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
243 |             Self::MinusNan => return Self::Nan,
    |                               ++++++

warning: item name ends with its containing module's name
 --> src/uucore/src/lib/features/parser/mod.rs:7:9
  |
7 | pub mod num_parser;
  |         ^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions
  = note: `-W clippy::module-name-repetitions` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::module_name_repetitions)]`

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/features/parser/num_parser.rs:473:17
    |
473 | pub(crate) enum ParseTarget {
    |                 ^^^^^^^^^^^
    |
note: should be placed before `construct_extended_big_decimal`
   --> src/uucore/src/lib/features/parser/num_parser.rs:405:4
    |
405 | fn construct_extended_big_decimal<'a>(
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/num_parser.rs:14:17
   |
14 | use num_traits::Signed;
   |                 ^^^^^^ help: use: `Signed as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/num_parser.rs:15:17
   |
15 | use num_traits::ToPrimitive;
   |                 ^^^^^^^^^^^ help: use: `ToPrimitive as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/num_parser.rs:30:5
   |
30 |     Decimal = 10,
   |     ^^^^^^^
   |
note: should be placed before `Octal`
  --> src/uucore/src/lib/features/parser/num_parser.rs:27:5
   |
27 |     Octal = 8,
   |     ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:43:29
   |
43 |             Self::Binary => ('0'..='1').contains(&c).then(|| from_decimal(c)),
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
43 |             Self::Binary => return ('0'..='1').contains(&c).then(|| from_decimal(c)),
   |                             ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:44:28
   |
44 |             Self::Octal => ('0'..='7').contains(&c).then(|| from_decimal(c)),
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
44 |             Self::Octal => return ('0'..='7').contains(&c).then(|| from_decimal(c)),
   |                            ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:45:30
   |
45 |             Self::Decimal => c.is_ascii_digit().then(|| from_decimal(c)),
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
45 |             Self::Decimal => return c.is_ascii_digit().then(|| from_decimal(c)),
   |                              ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:47:30
   |
47 |                 '0'..='9' => Some(from_decimal(c)),
   |                              ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
47 |                 '0'..='9' => return Some(from_decimal(c)),
   |                              ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:48:34
   |
48 |                 c @ 'a'..='f' => Some(u64::from(c) - u64::from('a') + 10),
   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
48 |                 c @ 'a'..='f' => return Some(u64::from(c) - u64::from('a') + 10),
   |                                  ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:49:22
   |
49 |                 _ => None,
   |                      ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
49 |                 _ => return None,
   |                      ++++++

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
  --> src/uucore/src/lib/features/parser/num_parser.rs:38:14
   |
38 |     fn digit(&self, c: char) -> Option<u64> {
   |              ^^^^^ help: consider passing by value instead: `self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref
   = note: `-W clippy::trivially-copy-pass-by-ref` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::trivially_copy_pass_by_ref)]`

warning: this ident consists of a single char
  --> src/uucore/src/lib/features/parser/num_parser.rs:38:21
   |
38 |     fn digit(&self, c: char) -> Option<u64> {
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:40:13
   |
40 |             u64::from(c) - u64::from('0')
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
40 |             return u64::from(c) - u64::from('0')
   |             ++++++

warning: this ident consists of a single char
  --> src/uucore/src/lib/features/parser/num_parser.rs:39:25
   |
39 |         fn from_decimal(c: char) -> u64 {
   |                         ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/num_parser.rs:40:13
   |
40 |             u64::from(c) - u64::from('0')
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: type of pattern does not match the expression type
  --> src/uucore/src/lib/features/parser/num_parser.rs:43:13
   |
43 |             Self::Binary => ('0'..='1').contains(&c).then(|| from_decimal(c)),
   |             ^^^^^^^^^^^^
   |
   = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:43:62
   |
43 |             Self::Binary => ('0'..='1').contains(&c).then(|| from_decimal(c)),
   |                                                              ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
43 |             Self::Binary => ('0'..='1').contains(&c).then(|| return from_decimal(c)),
   |                                                              ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:44:61
   |
44 |             Self::Octal => ('0'..='7').contains(&c).then(|| from_decimal(c)),
   |                                                             ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
44 |             Self::Octal => ('0'..='7').contains(&c).then(|| return from_decimal(c)),
   |                                                             ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:45:57
   |
45 |             Self::Decimal => c.is_ascii_digit().then(|| from_decimal(c)),
   |                                                         ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
45 |             Self::Decimal => c.is_ascii_digit().then(|| return from_decimal(c)),
   |                                                         ++++++

warning: `c @ 'a'..='f'` is shadowed
  --> src/uucore/src/lib/features/parser/num_parser.rs:48:17
   |
48 |                 c @ 'a'..='f' => Some(u64::from(c) - u64::from('a') + 10),
   |                 ^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/num_parser.rs:38:21
   |
38 |     fn digit(&self, c: char) -> Option<u64> {
   |                     ^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: this ident consists of a single char
  --> src/uucore/src/lib/features/parser/num_parser.rs:48:17
   |
48 |                 c @ 'a'..='f' => Some(u64::from(c) - u64::from('a') + 10),
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/num_parser.rs:48:39
   |
48 |                 c @ 'a'..='f' => Some(u64::from(c) - u64::from('a') + 10),
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:58:9
   |
58 |         (digits, rest)
   |         ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
58 |         return (digits, rest)
   |         ++++++

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
  --> src/uucore/src/lib/features/parser/num_parser.rs:56:25
   |
56 |     fn parse_digits<'a>(&self, str: &'a str) -> (Option<BigUint>, &'a str) {
   |                         ^^^^^ help: consider passing by value instead: `self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:79:9
   |
79 |         (digits, count, rest)
   |         ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
79 |         return (digits, count, rest)
   |         ++++++

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
  --> src/uucore/src/lib/features/parser/num_parser.rs:65:9
   |
65 |         &self,
   |         ^^^^^ help: consider passing by value instead: `self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref

warning: `mut digits` is shadowed by itself in `digits`
  --> src/uucore/src/lib/features/parser/num_parser.rs:69:17
   |
69 |         let mut digits: Option<BigUint> = digits;
   |                 ^^^^^^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/num_parser.rs:67:9
   |
67 |         digits: Option<BigUint>,
   |         ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_same
   = note: `-W clippy::shadow-same` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_same)]`

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:72:62
   |
72 |         while let Some(d) = rest.chars().next().and_then(|c| self.digit(c)) {
   |                                                              ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
72 |         while let Some(d) = rest.chars().next().and_then(|c| return self.digit(c)) {
   |                                                              ++++++

warning: this ident consists of a single char
  --> src/uucore/src/lib/features/parser/num_parser.rs:72:59
   |
72 |         while let Some(d) = rest.chars().next().and_then(|c| self.digit(c)) {
   |                                                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
  --> src/uucore/src/lib/features/parser/num_parser.rs:72:24
   |
72 |         while let Some(d) = rest.chars().next().and_then(|c| self.digit(c)) {
   |                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/num_parser.rs:74:22
   |
74 |                 Some(digits.unwrap_or_default() * *self as u8 + d),
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/uucore/src/lib/features/parser/num_parser.rs:74:51
   |
74 |                 Some(digits.unwrap_or_default() * *self as u8 + d),
   |                                                   ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/num_parser.rs:75:17
   |
75 |                 count + 1,
   |                 ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `count` shadows a previous, unrelated binding
  --> src/uucore/src/lib/features/parser/num_parser.rs:73:22
   |
73 |             (digits, count) = (
   |                      ^^^^^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/num_parser.rs:73:14
   |
73 |             (digits, count) = (
   |              ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated
   = note: `-W clippy::shadow-unrelated` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_unrelated)]`

warning: indexing into a string may panic if the index is within a UTF-8 character
  --> src/uucore/src/lib/features/parser/num_parser.rs:77:21
   |
77 |             rest = &rest[1..];
   |                     ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice
   = note: `-W clippy::string-slice` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::string_slice)]`

warning: exported enums should not be exhaustive
  --> src/uucore/src/lib/features/parser/num_parser.rs:85:1
   |
85 | / pub enum ExtendedParserError<'a, T> {
86 | |     /// The input as a whole makes no sense
87 | |     NotNumeric,
88 | |     /// The beginning of the input made sense and has been parsed,
...  |
97 | |     Underflow(T),
98 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
help: try adding #[non_exhaustive]
   |
85 + #[non_exhaustive]
86 | pub enum ExtendedParserError<'a, T> {
   |

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/num_parser.rs:94:5
   |
94 |     Overflow(T),
   |     ^^^^^^^^
   |
note: should be placed before `PartialMatch`
  --> src/uucore/src/lib/features/parser/num_parser.rs:90:5
   |
90 |     PartialMatch(T, &'a str),
   |     ^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: you are deriving `PartialEq` and can implement `Eq`
  --> src/uucore/src/lib/features/parser/num_parser.rs:84:17
   |
84 | #[derive(Debug, PartialEq)]
   |                 ^^^^^^^^^ help: consider deriving `Eq` as well: `PartialEq, Eq`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq
   = note: `-W clippy::derive-partial-eq-without-eq` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::derive_partial_eq_without_eq)]`

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:107:33
    |
107 |             Self::NotNumeric => T::zero(),
    |                                 ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
107 |             Self::NotNumeric => return T::zero(),
    |                                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:108:41
    |
108 |             Self::PartialMatch(v, _) => v,
    |                                         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
108 |             Self::PartialMatch(v, _) => return v,
    |                                         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:109:34
    |
109 |             Self::Overflow(v) => v,
    |                                  ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
109 |             Self::Overflow(v) => return v,
    |                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:110:35
    |
110 |             Self::Underflow(v) => v,
    |                                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
110 |             Self::Underflow(v) => return v,
    |                                   ++++++

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/num_parser.rs:108:13
    |
108 |             Self::PartialMatch(v, _) => v,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
108 ~             Self::PartialMatch(v, _) | Self::Overflow(v) => v,
109 ~             Self::Underflow(v) => v,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/num_parser.rs:108:13
    |
108 |             Self::PartialMatch(v, _) => v,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
108 ~             Self::PartialMatch(v, _) | Self::Underflow(v) => v,
109 |             Self::Overflow(v) => v,
110 ~             }
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/num_parser.rs:109:13
    |
109 |             Self::Overflow(v) => v,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
109 ~             Self::Overflow(v) | Self::Underflow(v) => v,
110 ~             }
    |

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:108:32
    |
108 |             Self::PartialMatch(v, _) => v,
    |                                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:109:28
    |
109 |             Self::Overflow(v) => v,
    |                            ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:110:29
    |
110 |             Self::Underflow(v) => v,
    |                             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:132:48
    |
132 |             ExtendedParserError::NotNumeric => ExtendedParserError::NotNumeric,
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
132 |             ExtendedParserError::NotNumeric => return ExtendedParserError::NotNumeric,
    |                                                ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:134:17
    |
134 |                 ExtendedParserError::PartialMatch(extract(f(v)), rest)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
134 |                 return ExtendedParserError::PartialMatch(extract(f(v)), rest)
    |                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:136:49
    |
136 |             ExtendedParserError::Overflow(v) => ExtendedParserError::Overflow(extract(f(v))),
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
136 |             ExtendedParserError::Overflow(v) => return ExtendedParserError::Overflow(extract(f(v))),
    |                                                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:137:50
    |
137 |             ExtendedParserError::Underflow(v) => ExtendedParserError::Underflow(extract(f(v))),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
137 |             ExtendedParserError::Underflow(v) => return ExtendedParserError::Underflow(extract(f(v))),
    |                                                  ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:119:9
    |
119 |         f: impl FnOnce(T) -> Result<U, ExtendedParserError<'a, U>>,
    |         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:128:13
    |
128 |             v.unwrap_or_else(|e| e.extract())
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
128 |             return v.unwrap_or_else(|e| e.extract())
    |             ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:124:23
    |
124 |         fn extract<U>(v: Result<U, ExtendedParserError<'_, U>>) -> U
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: redundant closure
   --> src/uucore/src/lib/features/parser/num_parser.rs:128:30
    |
128 |             v.unwrap_or_else(|e| e.extract())
    |                              ^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `ExtendedParserError::extract`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:128:34
    |
128 |             v.unwrap_or_else(|e| e.extract())
    |                                  ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
128 |             v.unwrap_or_else(|e| return e.extract())
    |                                  ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:128:31
    |
128 |             v.unwrap_or_else(|e| e.extract())
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:133:47
    |
133 |             ExtendedParserError::PartialMatch(v, rest) => {
    |                                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:136:43
    |
136 |             ExtendedParserError::Overflow(v) => ExtendedParserError::Overflow(extract(f(v))),
    |                                           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:137:44
    |
137 |             ExtendedParserError::Underflow(v) => ExtendedParserError::Underflow(extract(f(v))),
    |                                            ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:148:5
    |
148 | /     fn extended_parse(input: &str) -> Result<Self, ExtendedParserError<'_, Self>>
149 | |     where
150 | |         Self: Sized;
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
    = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/num_parser.rs:155:5
    |
155 | /     fn extended_parse(input: &str) -> Result<i64, ExtendedParserError<'_, i64>> {
156 | |         fn into_i64<'a>(ebd: ExtendedBigDecimal) -> Result<i64, ExtendedParserError<'a, i64>> {
157 | |             match ebd {
158 | |                 ExtendedBigDecimal::BigDecimal(bd) => {
...   |
185 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:182:22
    |
182 |             Ok(v) => into_i64(v),
    |                      ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
182 |             Ok(v) => return into_i64(v),
    |                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:183:23
    |
183 |             Err(e) => Err(e.map(into_i64)),
    |                       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
183 |             Err(e) => return Err(e.map(into_i64)),
    |                       ++++++

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:155:46
    |
155 |     fn extended_parse(input: &str) -> Result<i64, ExtendedParserError<'_, i64>> {
    |                                              ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:155:75
    |
155 |     fn extended_parse(input: &str) -> Result<i64, ExtendedParserError<'_, i64>> {
    |                                                                           ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:156:9
    |
156 |         fn into_i64<'a>(ebd: ExtendedBigDecimal) -> Result<i64, ExtendedParserError<'a, i64>> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:163:38
    |
163 | ...                   Ok(i) => Ok(i),
    |                                ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
163 |                             Ok(i) => return Ok(i),
    |                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:164:34
    |
164 |   ...                   _ => Err(ExtendedParserError::Overflow(if negative {
    |  ____________________________^
165 | | ...                       i64::MIN
166 | | ...                   } else {
167 | | ...                       i64::MAX
168 | | ...                   })),
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
164 |                             _ => return Err(ExtendedParserError::Overflow(if negative {
    |                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:172:25
    |
172 |                         Err(ExtendedParserError::NotNumeric)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
172 |                         return Err(ExtendedParserError::NotNumeric)
    |                         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:175:50
    |
175 |                 ExtendedBigDecimal::MinusZero => Ok(0),
    |                                                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
175 |                 ExtendedBigDecimal::MinusZero => return Ok(0),
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:177:22
    |
177 |                 _ => Err(ExtendedParserError::NotNumeric),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
177 |                 _ => return Err(ExtendedParserError::NotNumeric),
    |                      ++++++

warning: wildcard match will also match any future added variants
   --> src/uucore/src/lib/features/parser/num_parser.rs:177:17
    |
177 |                 _ => Err(ExtendedParserError::NotNumeric),
    |                 ^ help: try: `ExtendedBigDecimal::Infinity | ExtendedBigDecimal::MinusInfinity | ExtendedBigDecimal::Nan | ExtendedBigDecimal::MinusNan`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:162:25
    |
162 | /                         match i64::try_from(digits) {
163 | |                             Ok(i) => Ok(i),
164 | |                             _ => Err(ExtendedParserError::Overflow(if negative {
165 | |                                 i64::MIN
...   |
168 | |                             })),
169 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
162 ~                         i64::try_from(digits).map_or(Err(ExtendedParserError::Overflow(if negative {
163 +                                 i64::MIN
164 +                             } else {
165 +                                 i64::MAX
166 +                             })), |i| Ok(i))
    |

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:182:16
    |
182 |             Ok(v) => into_i64(v),
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:183:17
    |
183 |             Err(e) => Err(e.map(into_i64)),
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/num_parser.rs:190:5
    |
190 | /     fn extended_parse(input: &str) -> Result<u64, ExtendedParserError<'_, u64>> {
191 | |         fn into_u64<'a>(ebd: ExtendedBigDecimal) -> Result<u64, ExtendedParserError<'a, u64>> {
192 | |             match ebd {
193 | |                 ExtendedBigDecimal::BigDecimal(bd) => {
...   |
222 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:219:22
    |
219 |             Ok(v) => into_u64(v),
    |                      ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
219 |             Ok(v) => return into_u64(v),
    |                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:220:23
    |
220 |             Err(e) => Err(e.map(into_u64)),
    |                       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
220 |             Err(e) => return Err(e.map(into_u64)),
    |                       ++++++

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:190:46
    |
190 |     fn extended_parse(input: &str) -> Result<u64, ExtendedParserError<'_, u64>> {
    |                                              ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:190:75
    |
190 |     fn extended_parse(input: &str) -> Result<u64, ExtendedParserError<'_, u64>> {
    |                                                                           ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:191:9
    |
191 |         fn into_u64<'a>(ebd: ExtendedBigDecimal) -> Result<u64, ExtendedParserError<'a, u64>> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:201:37
    |
201 | ...                   Ok(!i + 1)
    |                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
201 |                                     return Ok(!i + 1)
    |                                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:203:37
    |
203 | ...                   Ok(i)
    |                       ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
203 |                                     return Ok(i)
    |                                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:206:34
    |
206 | ...                   _ => Err(ExtendedParserError::Overflow(u64::MAX)),
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
206 |                             _ => return Err(ExtendedParserError::Overflow(u64::MAX)),
    |                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:210:25
    |
210 |                         Err(ExtendedParserError::NotNumeric)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
210 |                         return Err(ExtendedParserError::NotNumeric)
    |                         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:213:50
    |
213 |                 ExtendedBigDecimal::MinusZero => Ok(0),
    |                                                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
213 |                 ExtendedBigDecimal::MinusZero => return Ok(0),
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:214:22
    |
214 |                 _ => Err(ExtendedParserError::NotNumeric),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
214 |                 _ => return Err(ExtendedParserError::NotNumeric),
    |                      ++++++

warning: wildcard match will also match any future added variants
   --> src/uucore/src/lib/features/parser/num_parser.rs:214:17
    |
214 |                 _ => Err(ExtendedParserError::NotNumeric),
    |                 ^ help: try: `ExtendedBigDecimal::Infinity | ExtendedBigDecimal::MinusInfinity | ExtendedBigDecimal::Nan | ExtendedBigDecimal::MinusNan`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: `digits` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:196:36
    |
196 |                         let (sign, digits) = digits.into_parts();
    |                                    ^^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:194:26
    |
194 |                     let (digits, scale) = bd.into_bigint_and_scale();
    |                          ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:198:25
    |
198 | /                         match u64::try_from(digits) {
199 | |                             Ok(i) => {
200 | |                                 if sign == Sign::Minus {
201 | |                                     Ok(!i + 1)
...   |
206 | |                             _ => Err(ExtendedParserError::Overflow(u64::MAX)),
207 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
198 ~                         u64::try_from(digits).map_or(Err(ExtendedParserError::Overflow(u64::MAX)), |i| if sign == Sign::Minus {
199 +                                     Ok(!i + 1)
200 +                                 } else {
201 +                                     Ok(i)
202 +                                 })
    |

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:201:40
    |
201 | ...                   Ok(!i + 1)
    |                          ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:219:16
    |
219 |             Ok(v) => into_u64(v),
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:220:17
    |
220 |             Err(e) => Err(e.map(into_u64)),
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/num_parser.rs:227:5
    |
227 | /     fn extended_parse(input: &str) -> Result<f64, ExtendedParserError<'_, f64>> {
228 | |         fn into_f64<'a>(ebd: ExtendedBigDecimal) -> Result<f64, ExtendedParserError<'a, f64>> {
229 | |             // TODO: _Some_ of this is generic, so this should probably be implemented as an ExtendedBigDecimal trait (ToPrimitive).
230 | |             let v = match ebd {
...   |
254 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:251:22
    |
251 |             Ok(v) => into_f64(v),
    |                      ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
251 |             Ok(v) => return into_f64(v),
    |                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:252:23
    |
252 |             Err(e) => Err(e.map(into_f64)),
    |                       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
252 |             Err(e) => return Err(e.map(into_f64)),
    |                       ++++++

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:227:46
    |
227 |     fn extended_parse(input: &str) -> Result<f64, ExtendedParserError<'_, f64>> {
    |                                              ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:227:75
    |
227 |     fn extended_parse(input: &str) -> Result<f64, ExtendedParserError<'_, f64>> {
    |                                                                           ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:228:9
    |
228 |         fn into_f64<'a>(ebd: ExtendedBigDecimal) -> Result<f64, ExtendedParserError<'a, f64>> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/parser/num_parser.rs:232:29
    |
232 |                     let f = bd.to_f64().unwrap();
    |                             ^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:228:9
    |
228 |         fn into_f64<'a>(ebd: ExtendedBigDecimal) -> Result<f64, ExtendedParserError<'a, f64>> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:247:13
    |
247 |             Ok(v)
    |             ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
247 |             return Ok(v)
    |             ++++++

warning: default numeric fallback might occur
   --> src/uucore/src/lib/features/parser/num_parser.rs:241:51
    |
241 |                 ExtendedBigDecimal::MinusZero => -0.0,
    |                                                   ^^^ help: consider adding suffix: `0.0_f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback
    = note: `-W clippy::default-numeric-fallback` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::default_numeric_fallback)]`

warning: used `unwrap()` on an `Option` value
   --> src/uucore/src/lib/features/parser/num_parser.rs:232:29
    |
232 |                     let f = bd.to_f64().unwrap();
    |                             ^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:232:25
    |
232 |                     let f = bd.to_f64().unwrap();
    |                         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: floating-point arithmetic detected
   --> src/uucore/src/lib/features/parser/num_parser.rs:243:49
    |
243 |                 ExtendedBigDecimal::MinusNan => -f64::NAN,
    |                                                 ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
    = note: `-W clippy::float-arithmetic` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::float_arithmetic)]`

warning: floating-point arithmetic detected
   --> src/uucore/src/lib/features/parser/num_parser.rs:245:54
    |
245 |                 ExtendedBigDecimal::MinusInfinity => -f64::INFINITY,
    |                                                      ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:230:17
    |
230 |             let v = match ebd {
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:251:16
    |
251 |             Ok(v) => into_f64(v),
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:252:17
    |
252 |             Err(e) => Err(e.map(into_f64)),
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/num_parser.rs:258:30
    |
258 |     /// Parse a number as an ExtendedBigDecimal
    |                              ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
    = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
    |
258 -     /// Parse a number as an ExtendedBigDecimal
258 +     /// Parse a number as an `ExtendedBigDecimal`
    |

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/num_parser.rs:259:5
    |
259 | /     fn extended_parse(
260 | |         input: &str,
261 | |     ) -> Result<ExtendedBigDecimal, ExtendedParserError<'_, ExtendedBigDecimal>> {
262 | |         parse(input, ParseTarget::Decimal, &[])
263 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:262:9
    |
262 |         parse(input, ParseTarget::Decimal, &[])
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
262 |         return parse(input, ParseTarget::Decimal, &[])
    |         ++++++

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:261:17
    |
261 |     ) -> Result<ExtendedBigDecimal, ExtendedParserError<'_, ExtendedBigDecimal>> {
    |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:261:61
    |
261 |     ) -> Result<ExtendedBigDecimal, ExtendedParserError<'_, ExtendedBigDecimal>> {
    |                                                             ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:278:5
    |
278 |     (digits, 0, rest)
    |     ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
278 |     return (digits, 0, rest)
    |     ++++++

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:273:21
    |
273 |         if let Some(rest) = rest.strip_prefix('.') {
    |                     ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:268:18
    |
268 |     let (digits, rest) = base.parse_digits(str);
    |                  ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:307:5
    |
307 |     (None, str)
    |     ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
307 |     return (None, str)
    |     ++++++

warning: wildcard match will also match any future added variants
   --> src/uucore/src/lib/features/parser/num_parser.rs:285:9
    |
285 |         _ => unreachable!(),
    |         ^ help: try: `Base::Binary | Base::Octal`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: usage of the `unreachable!` macro
   --> src/uucore/src/lib/features/parser/num_parser.rs:285:14
    |
285 |         _ => unreachable!(),
    |              ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable
    = note: `-W clippy::unreachable` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::unreachable)]`

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:291:28
    |
291 |           let (sign, rest) = if let Some(rest) = rest.strip_prefix('-') {
    |  ____________________________^
292 | |             (Sign::Minus, rest)
293 | |         } else if let Some(rest) = rest.strip_prefix('+') {
294 | |             (Sign::Plus, rest)
...   |
297 | |             (Sign::Plus, rest) // No explicit sign is equivalent to `+`.
298 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
291 ~         let (sign, rest) = rest.strip_prefix('-').map_or_else(|| if let Some(rest) = rest.strip_prefix('+') {
292 +             (Sign::Plus, rest)
293 +         } else {
294 +             // Something else, or nothing at all: keep going.
295 +             (Sign::Plus, rest) // No explicit sign is equivalent to `+`.
296 ~         }, |rest| (Sign::Minus, rest));
    |

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:291:40
    |
291 |         let (sign, rest) = if let Some(rest) = rest.strip_prefix('-') {
    |                                        ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:290:17
    |
290 |     if let Some(rest) = str.strip_prefix(exp_chars) {
    |                 ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:293:28
    |
293 |         } else if let Some(rest) = rest.strip_prefix('+') {
    |                            ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:290:17
    |
290 |     if let Some(rest) = str.strip_prefix(exp_chars) {
    |                 ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:291:20
    |
291 |         let (sign, rest) = if let Some(rest) = rest.strip_prefix('-') {
    |                    ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:290:17
    |
290 |     if let Some(rest) = str.strip_prefix(exp_chars) {
    |                 ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:300:24
    |
300 |         let (exp_uint, rest) = Base::Decimal.parse_digits(rest);
    |                        ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:291:20
    |
291 |         let (sign, rest) = if let Some(rest) = rest.strip_prefix('-') {
    |                    ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `exp_uint` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:301:21
    |
301 |         if let Some(exp_uint) = exp_uint {
    |                     ^^^^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:300:14
    |
300 |         let (exp_uint, rest) = Base::Decimal.parse_digits(rest);
    |              ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:322:5
    |
322 |     (1, str)
    |     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
322 |     return (1, str)
    |     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:315:32
    |
315 |             .find_map(|(c, t)| (ch == *c).then_some(*t))
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
315 |             .find_map(|(c, t)| return (ch == *c).then_some(*t))
    |                                ++++++

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/parser/num_parser.rs:315:24
    |
315 |             .find_map(|(c, t)| (ch == *c).then_some(*t))
    |                        ^^^^^^
    |
    = help: explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:315:25
    |
315 |             .find_map(|(c, t)| (ch == *c).then_some(*t))
    |                         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:315:28
    |
315 |             .find_map(|(c, t)| (ch == *c).then_some(*t))
    |                            ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: indexing into a string may panic if the index is within a UTF-8 character
   --> src/uucore/src/lib/features/parser/num_parser.rs:317:27
    |
317 |             return (mul, &str[1..]);
    |                           ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:325:1
    |
325 | / fn parse_special_value<'a>(
326 | |     input: &'a str,
327 | |     negative: bool,
328 | |     allowed_suffixes: &[(char, u32)],
329 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:357:5
    |
357 |     Err(ExtendedParserError::NotNumeric)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
357 |     return Err(ExtendedParserError::NotNumeric)
    |     ++++++

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> src/uucore/src/lib/features/parser/num_parser.rs:333:5
    |
333 | /     const MATCH_TABLE: &[(&str, ExtendedBigDecimal)] = &[
334 | |         ("infinity", ExtendedBigDecimal::Infinity),
335 | |         ("inf", ExtendedBigDecimal::Infinity),
336 | |         ("nan", ExtendedBigDecimal::Nan),
337 | |     ];
    | |______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: it is more concise to loop over references to containers instead of using explicit iteration methods
   --> src/uucore/src/lib/features/parser/num_parser.rs:339:23
    |
339 |     for (str, ebd) in MATCH_TABLE.iter() {
    |                       ^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `MATCH_TABLE`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop
    = note: `-W clippy::explicit-iter-loop` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::explicit_iter_loop)]`

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/parser/num_parser.rs:339:9
    |
339 |     for (str, ebd) in MATCH_TABLE.iter() {
    |         ^^^^^^^^^^
    |
    = help: explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:343:27
    |
343 |                 special = -special;
    |                           ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: indexing into a string may panic if the index is within a UTF-8 character
   --> src/uucore/src/lib/features/parser/num_parser.rs:347:54
    |
347 |             let (_, rest) = parse_suffix_multiplier(&input[str.len()..], allowed_suffixes);
    |                                                      ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:372:9
    |
372 |         ExtendedParserError::Overflow(v)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
372 |         return ExtendedParserError::Overflow(v)
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:374:9
    |
374 |         ExtendedParserError::Underflow(v)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
374 |         return ExtendedParserError::Underflow(v)
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:363:13
    |
363 |     let mut v = if overflow {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:369:13
    |
369 |         v = -v;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:401:5
    |
401 |     trim_precision(ret, ctx)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
401 |     return trim_precision(ret, ctx)
    |     ++++++

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> src/uucore/src/lib/features/parser/num_parser.rs:387:5
    |
387 | /     fn trim_precision(bd: BigDecimal, ctx: &bigdecimal::Context) -> BigDecimal {
388 | |         if bd.digits() > ctx.precision().get() {
389 | |             bd.with_precision_round(ctx.precision(), ctx.rounding_mode())
390 | |         } else {
...   |
393 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:389:13
    |
389 |             bd.with_precision_round(ctx.precision(), ctx.rounding_mode())
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
389 |             return bd.with_precision_round(ctx.precision(), ctx.rounding_mode())
    |             ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:391:13
    |
391 |             bd
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
391 |             return bd
    |             ++++++

warning: `bd` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:395:9
    |
395 |     let bd = trim_precision(bd, ctx);
    |         ^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:382:21
    |
382 | fn pow_with_context(bd: BigDecimal, exp: u32, ctx: &bigdecimal::Context) -> BigDecimal {
    |                     ^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: use of % has been disallowed in this context
   --> src/uucore/src/lib/features/parser/num_parser.rs:396:18
    |
396 |     let ret = if exp % 2 == 0 {
    |                  ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division_remainder_used
    = note: `-W clippy::integer-division-remainder-used` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::integer_division_remainder_used)]`

warning: integer division
   --> src/uucore/src/lib/features/parser/num_parser.rs:397:39
    |
397 |         pow_with_context(bd.square(), exp / 2, ctx)
    |                                       ^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division
    = note: `-W clippy::integer-division` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::integer_division)]`

warning: use of / has been disallowed in this context
   --> src/uucore/src/lib/features/parser/num_parser.rs:397:39
    |
397 |         pow_with_context(bd.square(), exp / 2, ctx)
    |                                       ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division_remainder_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:399:9
    |
399 |         &bd * pow_with_context(bd.square(), (exp - 1) / 2, ctx)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: integer division
   --> src/uucore/src/lib/features/parser/num_parser.rs:399:45
    |
399 |         &bd * pow_with_context(bd.square(), (exp - 1) / 2, ctx)
    |                                             ^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: use of / has been disallowed in this context
   --> src/uucore/src/lib/features/parser/num_parser.rs:399:45
    |
399 |         &bd * pow_with_context(bd.square(), (exp - 1) / 2, ctx)
    |                                             ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division_remainder_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:405:1
    |
405 | / fn construct_extended_big_decimal<'a>(
406 | |     digits: BigUint,
407 | |     negative: bool,
408 | |     base: Base,
409 | |     scale: u64,
410 | |     exponent: BigInt,
411 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/parser/num_parser.rs:436:48
    |
436 |         BigDecimal::from_bigint(signed_digits, new_scale.to_i64().unwrap())
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:405:1
    |
405 | / fn construct_extended_big_decimal<'a>(
406 | |     digits: BigUint,
407 | |     negative: bool,
408 | |     base: Base,
409 | |     scale: u64,
410 | |     exponent: BigInt,
411 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:469:5
    |
469 |     Ok(ExtendedBigDecimal::BigDecimal(bd))
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
469 |     return Ok(ExtendedBigDecimal::BigDecimal(bd))
    |     ++++++

warning: default numeric fallback might occur
   --> src/uucore/src/lib/features/parser/num_parser.rs:445:52
    |
445 |             / BigDecimal::from_bigint(BigInt::from(16).pow(scale as u32), 0);
    |                                                    ^^ help: consider adding suffix: `16_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/uucore/src/lib/features/parser/num_parser.rs:458:13
    |
458 |             2.into()
    |             ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/uucore/src/lib/features/parser/num_parser.rs:460:30
    |
460 |             BigDecimal::from(2).inverse()
    |                              ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:427:25
    |
427 |         let new_scale = BigInt::from(scale) - exponent;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: used `unwrap()` on an `Option` value
   --> src/uucore/src/lib/features/parser/num_parser.rs:436:48
    |
436 |         BigDecimal::from_bigint(signed_digits, new_scale.to_i64().unwrap())
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:444:18
    |
444 |           let bd = BigDecimal::from_bigint(signed_digits, 0)
    |  __________________^
445 | |             / BigDecimal::from_bigint(BigInt::from(16).pow(scale as u32), 0);
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `u64` to `u32` may truncate the value
   --> src/uucore/src/lib/features/parser/num_parser.rs:445:60
    |
445 |             / BigDecimal::from_bigint(BigInt::from(16).pow(scale as u32), 0);
    |                                                            ^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
445 -             / BigDecimal::from_bigint(BigInt::from(16).pow(scale as u32), 0);
445 +             / BigDecimal::from_bigint(BigInt::from(16).pow(u32::try_from(scale)), 0);
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/features/parser/num_parser.rs:445:60
    |
445 |             / BigDecimal::from_bigint(BigInt::from(16).pow(scale as u32), 0);
    |                                                            ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: unnecessary boolean `not` operation
   --> src/uucore/src/lib/features/parser/num_parser.rs:457:32
    |
457 |           let base: BigDecimal = if !exponent.is_negative() {
    |  ________________________________^
458 | |             2.into()
459 | |         } else {
460 | |             BigDecimal::from(2).inverse()
461 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
    = note: `-W clippy::if-not-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::if_not_else)]`
help: try
    |
457 ~         let base: BigDecimal = if exponent.is_negative() {
458 +             BigDecimal::from(2).inverse()
459 +         } else {
460 +             2.into()
461 ~         };
    |

warning: `base` shadows a previous, unrelated binding
   --> src/uucore/src/lib/features/parser/num_parser.rs:457:13
    |
457 |         let base: BigDecimal = if !exponent.is_negative() {
    |             ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:408:5
    |
408 |     base: Base,
    |     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: used `unwrap()` on an `Option` value
   --> src/uucore/src/lib/features/parser/num_parser.rs:462:43
    |
462 |         let pow2 = pow_with_context(base, abs_exponent.to_u32().unwrap(), &Context::default());
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:464:9
    |
464 |         bd * pow2
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: usage of the `unreachable!` macro
   --> src/uucore/src/lib/features/parser/num_parser.rs:467:9
    |
467 |         unreachable!();
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: missing documentation for an enum
   --> src/uucore/src/lib/features/parser/num_parser.rs:473:1
    |
473 | / pub(crate) enum ParseTarget {
474 | |     Decimal,
475 | |     Integral,
476 | |     Duration,
477 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/num_parser.rs:476:5
    |
476 |     Duration,
    |     ^^^^^^^^
    |
note: should be placed before `Integral`
   --> src/uucore/src/lib/features/parser/num_parser.rs:475:5
    |
475 |     Integral,
    |     ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing documentation for a variant
   --> src/uucore/src/lib/features/parser/num_parser.rs:474:5
    |
474 |     Decimal,
    |     ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a variant
   --> src/uucore/src/lib/features/parser/num_parser.rs:475:5
    |
475 |     Integral,
    |     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a variant
   --> src/uucore/src/lib/features/parser/num_parser.rs:476:5
    |
476 |     Duration,
    |     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:479:1
    |
479 | / pub(crate) fn parse<'a>(
480 | |     input: &'a str,
481 | |     target: ParseTarget,
482 | |     allowed_suffixes: &[(char, u32)],
483 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/parser/num_parser.rs:566:18
    |
566 |     let digits = digits.unwrap() * mul;
    |                  ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:479:1
    |
479 | / pub(crate) fn parse<'a>(
480 | |     input: &'a str,
481 | |     target: ParseTarget,
482 | |     allowed_suffixes: &[(char, u32)],
483 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing documentation for a function
   --> src/uucore/src/lib/features/parser/num_parser.rs:479:1
    |
479 | / pub(crate) fn parse<'a>(
480 | |     input: &'a str,
481 | |     target: ParseTarget,
482 | |     allowed_suffixes: &[(char, u32)],
...   |
581 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:574:9
    |
574 | /         Err(ExtendedParserError::PartialMatch(
575 | |             ebd_result.unwrap_or_else(|e| e.extract()),
576 | |             rest,
577 | |         ))
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
574 |         return Err(ExtendedParserError::PartialMatch(
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:579:9
    |
579 |         ebd_result
    |         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
579 |         return ebd_result
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:490:31
    |
490 |                 .map(|(_, c)| ExtendedBigDecimal::BigDecimal(u32::from(c).into()));
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
490 |                 .map(|(_, c)| return ExtendedBigDecimal::BigDecimal(u32::from(c).into()));
    |                               ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:490:27
    |
490 |                 .map(|(_, c)| ExtendedBigDecimal::BigDecimal(u32::from(c).into()));
    |                           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:488:17
    |
488 |             let v = chars
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `v` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:492:23
    |
492 |                 (Some(v), None) => Ok(v),
    |                       ^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:488:17
    |
488 |             let v = chars
    |                 ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:492:23
    |
492 |                 (Some(v), None) => Ok(v),
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `v` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:493:23
    |
493 |                 (Some(v), Some((i, _))) => Err(ExtendedParserError::PartialMatch(v, &rest[i..])),
    |                       ^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:488:17
    |
488 |             let v = chars
    |                 ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:493:23
    |
493 |                 (Some(v), Some((i, _))) => Err(ExtendedParserError::PartialMatch(v, &rest[i..])),
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: indexing into a string may panic if the index is within a UTF-8 character
   --> src/uucore/src/lib/features/parser/num_parser.rs:493:86
    |
493 |                 (Some(v), Some((i, _))) => Err(ExtendedParserError::PartialMatch(v, &rest[i..])),
    |                                                                                      ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:502:32
    |
502 |       let (negative, unsigned) = if let Some(trimmed_input) = trimmed_input.strip_prefix('-') {
    |  ________________________________^
503 | |         (true, trimmed_input)
504 | |     } else if let Some(trimmed_input) = trimmed_input.strip_prefix('+') {
505 | |         (false, trimmed_input)
506 | |     } else {
507 | |         (false, trimmed_input)
508 | |     };
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
502 ~     let (negative, unsigned) = trimmed_input.strip_prefix('-').map_or_else(|| if let Some(trimmed_input) = trimmed_input.strip_prefix('+') {
503 +         (false, trimmed_input)
504 +     } else {
505 +         (false, trimmed_input)
506 ~     }, |trimmed_input| (true, trimmed_input));
    |

warning: `trimmed_input` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:502:44
    |
502 |     let (negative, unsigned) = if let Some(trimmed_input) = trimmed_input.strip_prefix('-') {
    |                                            ^^^^^^^^^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:499:9
    |
499 |     let trimmed_input = input.trim_ascii_start();
    |         ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `trimmed_input` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:504:24
    |
504 |     } else if let Some(trimmed_input) = trimmed_input.strip_prefix('+') {
    |                        ^^^^^^^^^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:499:9
    |
499 |     let trimmed_input = input.trim_ascii_start();
    |         ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:514:24
    |
514 |       let (base, rest) = if let Some(rest) = unsigned.strip_prefix('0') {
    |  ________________________^
515 | |         if let Some(rest) = rest.strip_prefix(['x', 'X']) {
516 | |             (Base::Hexadecimal, rest)
517 | |         } else if target == ParseTarget::Integral {
...   |
528 | |         (Base::Decimal, unsigned)
529 | |     };
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
514 ~     let (base, rest) = unsigned.strip_prefix('0').map_or((Base::Decimal, unsigned), |rest| if let Some(rest) = rest.strip_prefix(['x', 'X']) {
515 +             (Base::Hexadecimal, rest)
516 +         } else if target == ParseTarget::Integral {
517 +             // Binary/Octal only allowed for integer parsing.
518 +             if let Some(rest) = rest.strip_prefix(['b', 'B']) {
519 +                 (Base::Binary, rest)
520 +             } else {
521 +                 (Base::Octal, unsigned)
522 +             }
523 +         } else {
524 +             (Base::Decimal, unsigned)
525 ~         });
    |

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:515:9
    |
515 | /         if let Some(rest) = rest.strip_prefix(['x', 'X']) {
516 | |             (Base::Hexadecimal, rest)
517 | |         } else if target == ParseTarget::Integral {
...   |
525 | |             (Base::Decimal, unsigned)
526 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
515 ~         rest.strip_prefix(['x', 'X']).map_or_else(|| if target == ParseTarget::Integral {
516 +             // Binary/Octal only allowed for integer parsing.
517 +             if let Some(rest) = rest.strip_prefix(['b', 'B']) {
518 +                 (Base::Binary, rest)
519 +             } else {
520 +                 (Base::Octal, unsigned)
521 +             }
522 +         } else {
523 +             (Base::Decimal, unsigned)
524 +         }, |rest| (Base::Hexadecimal, rest))
    |

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:515:21
    |
515 |         if let Some(rest) = rest.strip_prefix(['x', 'X']) {
    |                     ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:514:36
    |
514 |     let (base, rest) = if let Some(rest) = unsigned.strip_prefix('0') {
    |                                    ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:519:13
    |
519 | /             if let Some(rest) = rest.strip_prefix(['b', 'B']) {
520 | |                 (Base::Binary, rest)
521 | |             } else {
522 | |                 (Base::Octal, unsigned)
523 | |             }
    | |_____________^ help: try: `rest.strip_prefix(['b', 'B']).map_or((Base::Octal, unsigned), |rest| (Base::Binary, rest))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:519:25
    |
519 |             if let Some(rest) = rest.strip_prefix(['b', 'B']) {
    |                         ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:514:36
    |
514 |     let (base, rest) = if let Some(rest) = unsigned.strip_prefix('0') {
    |                                    ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:536:25
    |
536 |     let (digits, scale, rest) = parse_digits(base, rest, parse_frac_exp);
    |                         ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:514:16
    |
514 |     let (base, rest) = if let Some(rest) = unsigned.strip_prefix('0') {
    |                ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:539:20
    |
539 |     let (exponent, rest) = if parse_frac_exp {
    |                    ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:536:25
    |
536 |     let (digits, scale, rest) = parse_digits(base, rest, parse_frac_exp);
    |                         ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:564:15
    |
564 |     let (mul, rest) = parse_suffix_multiplier(rest, allowed_suffixes);
    |               ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:539:20
    |
539 |     let (exponent, rest) = if parse_frac_exp {
    |                    ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:566:18
    |
566 |     let digits = digits.unwrap() * mul;
    |                  ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: used `unwrap()` on an `Option` value
   --> src/uucore/src/lib/features/parser/num_parser.rs:566:18
    |
566 |     let digits = digits.unwrap() * mul;
    |                  ^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: `digits` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:566:9
    |
566 |     let digits = digits.unwrap() * mul;
    |         ^^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:536:10
    |
536 |     let (digits, scale, rest) = parse_digits(base, rest, parse_frac_exp);
    |          ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: unnecessary boolean `not` operation
   --> src/uucore/src/lib/features/parser/num_parser.rs:573:5
    |
573 | /     if !rest.is_empty() {
574 | |         Err(ExtendedParserError::PartialMatch(
575 | |             ebd_result.unwrap_or_else(|e| e.extract()),
576 | |             rest,
...   |
579 | |         ebd_result
580 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
help: try
    |
573 ~     if rest.is_empty() {
574 +         ebd_result
575 +     } else {
576 +         Err(ExtendedParserError::PartialMatch(
577 +             ebd_result.unwrap_or_else(|e| e.extract()),
578 +             rest,
579 +         ))
580 +     }
    |

warning: redundant closure
   --> src/uucore/src/lib/features/parser/num_parser.rs:575:39
    |
575 |             ebd_result.unwrap_or_else(|e| e.extract()),
    |                                       ^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `ExtendedParserError::extract`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:575:43
    |
575 |             ebd_result.unwrap_or_else(|e| e.extract()),
    |                                           ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
575 |             ebd_result.unwrap_or_else(|e| return e.extract()),
    |                                           ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:575:40
    |
575 |             ebd_result.unwrap_or_else(|e| e.extract()),
    |                                        ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/parse_glob.rs:37:5
   |
37 |     chars.into_iter().collect::<String>()
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
37 |     return chars.into_iter().collect::<String>()
   |     ++++++

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_glob.rs:18:11
   |
18 |     while i + 3 < chars.len() {
   |           ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: indexing may panic
  --> src/uucore/src/lib/features/parser/parse_glob.rs:19:12
   |
19 |         if chars[i] == '[' && chars[i + 1] == '^' {
   |            ^^^^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing
   = note: `-W clippy::indexing-slicing` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::indexing_slicing)]`

warning: indexing may panic
  --> src/uucore/src/lib/features/parser/parse_glob.rs:19:31
   |
19 |         if chars[i] == '[' && chars[i + 1] == '^' {
   |                               ^^^^^^^^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_glob.rs:19:37
   |
19 |         if chars[i] == '[' && chars[i + 1] == '^' {
   |                                     ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: slicing may panic
  --> src/uucore/src/lib/features/parser/parse_glob.rs:20:19
   |
20 |             match chars[i + 3..].iter().position(|x| *x == ']') {
   |                   ^^^^^^^^^^^^^^
   |
   = help: consider using `.get(n..)` or .get_mut(n..)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_glob.rs:20:25
   |
20 |             match chars[i + 3..].iter().position(|x| *x == ']') {
   |                         ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/parse_glob.rs:20:54
   |
20 |             match chars[i + 3..].iter().position(|x| *x == ']') {
   |                                                      ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
20 |             match chars[i + 3..].iter().position(|x| return *x == ']') {
   |                                                      ++++++

warning: indexing may panic
  --> src/uucore/src/lib/features/parser/parse_glob.rs:27:21
   |
27 |                     chars[i + 1] = '!';
   |                     ^^^^^^^^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_glob.rs:27:27
   |
27 |                     chars[i + 1] = '!';
   |                           ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_glob.rs:28:21
   |
28 |                     i += j + 4;
   |                     ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_glob.rs:34:9
   |
34 |         i += 1;
   |         ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/features/parser/parse_glob.rs:55:1
   |
55 | pub fn from_str(glob: &str) -> Result<Pattern, PatternError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/features/parser/parse_glob.rs:55:1
   |
55 | / pub fn from_str(glob: &str) -> Result<Pattern, PatternError> {
56 | |     Pattern::new(&fix_negation(glob))
57 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/parse_glob.rs:56:5
   |
56 |     Pattern::new(&fix_negation(glob))
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
56 |     return Pattern::new(&fix_negation(glob))
   |     ++++++

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uucore/src/lib/features/parser/parse_size.rs:79:12
   |
79 | pub struct Parser<'parser> {
   |            ^^^^^^
   |
note: should be placed before `total_physical_memory`
  --> src/uucore/src/lib/features/parser/parse_size.rs:45:4
   |
45 | fn total_physical_memory() -> Result<u128, SystemError> {
   |    ^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/features/parser/parse_size.rs:384:10
    |
384 | pub enum ParseSizeError {
    |          ^^^^^^^^^^^^^^
    |
note: should be placed before `parse_size_u128_max`
   --> src/uucore/src/lib/features/parser/parse_size.rs:378:8
    |
378 | pub fn parse_size_u128_max(size: &str) -> Result<u128, ParseSizeError> {
    |        ^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: used import from `std` instead of `core`
 --> src/uucore/src/lib/features/parser/parse_size.rs:9:5
  |
9 | use std::error::Error;
  |     ^^^ help: consider importing the item from `core`: `core`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `alloc`
  --> src/uucore/src/lib/features/parser/parse_size.rs:10:5
   |
10 | use std::fmt;
   |     ^^^ help: consider importing the item from `alloc`: `alloc`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc
   = note: `-W clippy::std-instead-of-alloc` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::std_instead_of_alloc)]`

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/parse_size.rs:12:14
   |
12 | use std::io::BufRead;
   |              ^^^^^^^ help: use: `BufRead as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/features/parser/parse_size.rs:13:5
   |
13 | use std::num::{IntErrorKind, ParseIntError};
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/parse_size.rs:15:21
   |
15 | use crate::display::Quotable;
   |                     ^^^^^^^^ help: use: `Quotable as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/parse_size.rs:21:5
   |
21 |     NotFound,
   |     ^^^^^^^^
   |
note: should be placed before `ParseError`
  --> src/uucore/src/lib/features/parser/parse_size.rs:20:5
   |
20 |     ParseError,
   |     ^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/features/parser/parse_size.rs:24:11
   |
24 | impl From<std::io::Error> for SystemError {
   |           ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths
   = note: `-W clippy::absolute-paths` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::absolute_paths)]`

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/parse_size.rs:26:9
   |
26 |         Self::IOError
   |         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
26 |         return Self::IOError
   |         ++++++

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/features/parser/parse_size.rs:25:16
   |
25 |     fn from(_: std::io::Error) -> Self {
   |                ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/parse_size.rs:32:9
   |
32 |         Self::ParseError
   |         ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
32 |         return Self::ParseError
   |         ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/parse_size.rs:64:5
   |
64 |     Err(SystemError::NotFound)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
64 |     return Err(SystemError::NotFound)
   |     ++++++

warning: question mark operator was used
  --> src/uucore/src/lib/features/parser/parse_size.rs:55:17
   |
55 |     let table = std::fs::read("/proc/meminfo")?;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used
   = note: `-W clippy::question-mark-used` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::question_mark_used)]`

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/features/parser/parse_size.rs:55:17
   |
55 |     let table = std::fs::read("/proc/meminfo")?;
   |                 ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: question mark operator was used
  --> src/uucore/src/lib/features/parser/parse_size.rs:57:20
   |
57 |         let line = line?;
   |                    ^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: `line` is shadowed
  --> src/uucore/src/lib/features/parser/parse_size.rs:57:13
   |
57 |         let line = line?;
   |             ^^^^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/parse_size.rs:56:9
   |
56 |     for line in table.lines() {
   |         ^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: question mark operator was used
  --> src/uucore/src/lib/features/parser/parse_size.rs:59:39
   |
59 |             let num_kilobytes: u128 = line[9..line.len() - 2].trim().parse()?;
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: indexing into a string may panic if the index is within a UTF-8 character
  --> src/uucore/src/lib/features/parser/parse_size.rs:59:39
   |
59 |             let num_kilobytes: u128 = line[9..line.len() - 2].trim().parse()?;
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_size.rs:59:47
   |
59 |             let num_kilobytes: u128 = line[9..line.len() - 2].trim().parse()?;
   |                                               ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_size.rs:60:29
   |
60 |             let num_bytes = 1024 * num_kilobytes;
   |                             ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: exported structs should not be exhaustive
  --> src/uucore/src/lib/features/parser/parse_size.rs:79:1
   |
79 | / pub struct Parser<'parser> {
80 | |     /// Whether to allow empty numeric strings.
81 | |     pub no_empty_numeric: bool,
82 | |     /// Whether to treat the suffix "B" as meaning "bytes".
...  |
89 | |     pub default_unit: Option<&'parser str>,
90 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: `-W clippy::exhaustive-structs` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::exhaustive_structs)]`
help: try adding #[non_exhaustive]
   |
79 + #[non_exhaustive]
80 | pub struct Parser<'parser> {
   |

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/parse_size.rs:83:9
   |
83 |     pub capital_b_bytes: bool,
   |         ^^^^^^^^^^^^^^^
   |
note: should be placed before `no_empty_numeric`
  --> src/uucore/src/lib/features/parser/parse_size.rs:81:9
   |
81 |     pub no_empty_numeric: bool,
   |         ^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/parse_size.rs:85:9
   |
85 |     pub b_byte_count: bool,
   |         ^^^^^^^^^^^^
   |
note: should be placed before `capital_b_bytes`
  --> src/uucore/src/lib/features/parser/parse_size.rs:83:9
   |
83 |     pub capital_b_bytes: bool,
   |         ^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/parse_size.rs:87:9
   |
87 |     pub allow_list: Option<&'parser [&'parser str]>,
   |         ^^^^^^^^^^
   |
note: should be placed before `b_byte_count`
  --> src/uucore/src/lib/features/parser/parse_size.rs:85:9
   |
85 |     pub b_byte_count: bool,
   |         ^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/parse_size.rs:95:5
   |
95 |     Hexadecimal,
   |     ^^^^^^^^^^^
   |
note: should be placed before `Octal`
  --> src/uucore/src/lib/features/parser/parse_size.rs:94:5
   |
94 |     Octal,
   |     ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/parse_size.rs:112:12
    |
112 |     pub fn with_b_byte_count(&mut self, value: bool) -> &mut Self {
    |            ^^^^^^^^^^^^^^^^^
    |
note: should be placed before `with_default_unit`
   --> src/uucore/src/lib/features/parser/parse_size.rs:106:12
    |
106 |     pub fn with_default_unit(&mut self, default_unit: &'parser str) -> &mut Self {
    |            ^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/parse_size.rs:118:12
    |
118 |     pub fn with_allow_empty_numeric(&mut self, value: bool) -> &mut Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: should be placed before `with_b_byte_count`
   --> src/uucore/src/lib/features/parser/parse_size.rs:112:12
    |
112 |     pub fn with_b_byte_count(&mut self, value: bool) -> &mut Self {
    |            ^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/parse_size.rs:150:12
    |
150 |     pub fn parse(&self, size: &str) -> Result<u128, ParseSizeError> {
    |            ^^^^^
    |
note: should be placed before `with_allow_empty_numeric`
   --> src/uucore/src/lib/features/parser/parse_size.rs:118:12
    |
118 |     pub fn with_allow_empty_numeric(&mut self, value: bool) -> &mut Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/parse_size.rs:295:12
    |
295 |     pub fn parse_u128_max(&self, size: &str) -> Result<u128, ParseSizeError> {
    |            ^^^^^^^^^^^^^^
    |
note: should be placed before `parse_u64_max`
   --> src/uucore/src/lib/features/parser/parse_size.rs:280:12
    |
280 |     pub fn parse_u64_max(&self, size: &str) -> Result<u64, ParseSizeError> {
    |            ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/parse_size.rs:309:8
    |
309 |     fn determine_number_system(size: &str) -> NumberSystem {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
note: should be placed before `parse_u128_max`
   --> src/uucore/src/lib/features/parser/parse_size.rs:295:12
    |
295 |     pub fn parse_u128_max(&self, size: &str) -> Result<u128, ParseSizeError> {
    |            ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: item in documentation is missing backticks
  --> src/uucore/src/lib/features/parser/parse_size.rs:99:16
   |
99 |     /// Change allow_list of the parser - whitelist for the suffix
   |                ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
99 -     /// Change allow_list of the parser - whitelist for the suffix
99 +     /// Change `allow_list` of the parser - whitelist for the suffix
   |

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:100:5
    |
100 | /     pub fn with_allow_list(&mut self, allow_list: &'parser [&str]) -> &mut Self {
101 | |         self.allow_list = Some(allow_list);
102 | |         self
103 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:102:9
    |
102 |         self
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
102 |         return self
    |         ++++++

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/parser/parse_size.rs:100:5
    |
100 | /     pub fn with_allow_list(&mut self, allow_list: &'parser [&str]) -> &mut Self {
101 | |         self.allow_list = Some(allow_list);
102 | |         self
103 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
    = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::missing_const_for_fn)]`
help: make the function `const`
    |
100 |     pub const fn with_allow_list(&mut self, allow_list: &'parser [&str]) -> &mut Self {
    |         +++++

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/parse_size.rs:105:16
    |
105 |     /// Change default_unit of the parser - when no suffix is provided
    |                ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
105 -     /// Change default_unit of the parser - when no suffix is provided
105 +     /// Change `default_unit` of the parser - when no suffix is provided
    |

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:106:5
    |
106 | /     pub fn with_default_unit(&mut self, default_unit: &'parser str) -> &mut Self {
107 | |         self.default_unit = Some(default_unit);
108 | |         self
109 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:108:9
    |
108 |         self
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
108 |         return self
    |         ++++++

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/parser/parse_size.rs:106:5
    |
106 | /     pub fn with_default_unit(&mut self, default_unit: &'parser str) -> &mut Self {
107 | |         self.default_unit = Some(default_unit);
108 | |         self
109 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
106 |     pub const fn with_default_unit(&mut self, default_unit: &'parser str) -> &mut Self {
    |         +++++

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/parse_size.rs:111:16
    |
111 |     /// Change b_byte_count of the parser - to treat "b" as a "byte count" instead of "block"
    |                ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
111 -     /// Change b_byte_count of the parser - to treat "b" as a "byte count" instead of "block"
111 +     /// Change `b_byte_count` of the parser - to treat "b" as a "byte count" instead of "block"
    |

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:112:5
    |
112 | /     pub fn with_b_byte_count(&mut self, value: bool) -> &mut Self {
113 | |         self.b_byte_count = value;
114 | |         self
115 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:114:9
    |
114 |         self
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
114 |         return self
    |         ++++++

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/parser/parse_size.rs:112:5
    |
112 | /     pub fn with_b_byte_count(&mut self, value: bool) -> &mut Self {
113 | |         self.b_byte_count = value;
114 | |         self
115 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
112 |     pub const fn with_b_byte_count(&mut self, value: bool) -> &mut Self {
    |         +++++

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/parse_size.rs:117:16
    |
117 |     /// Change no_empty_numeric of the parser - to allow empty numeric strings
    |                ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
117 -     /// Change no_empty_numeric of the parser - to allow empty numeric strings
117 +     /// Change `no_empty_numeric` of the parser - to allow empty numeric strings
    |

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:118:5
    |
118 | /     pub fn with_allow_empty_numeric(&mut self, value: bool) -> &mut Self {
119 | |         self.no_empty_numeric = value;
120 | |         self
121 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:120:9
    |
120 |         self
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
120 |         return self
    |         ++++++

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/parser/parse_size.rs:118:5
    |
118 | /     pub fn with_allow_empty_numeric(&mut self, value: bool) -> &mut Self {
119 | |         self.no_empty_numeric = value;
120 | |         self
121 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
118 |     pub const fn with_allow_empty_numeric(&mut self, value: bool) -> &mut Self {
    |         +++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:150:5
    |
150 | /     pub fn parse(&self, size: &str) -> Result<u128, ParseSizeError> {
151 | |         if size.is_empty() {
152 | |             return Err(ParseSizeError::parse_failure(size));
...   |
262 | |             .ok_or_else(|| ParseSizeError::size_too_big(size))
263 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:260:9
    |
260 | /         number
261 | |             .checked_mul(factor)
262 | |             .ok_or_else(|| ParseSizeError::size_too_big(size))
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
260 |         return number
    |         ++++++

warning: wildcard match will also match any future added variants
   --> src/uucore/src/lib/features/parser/parse_size.rs:166:13
    |
166 |             _ => size.chars().take_while(char::is_ascii_digit).collect(),
    |             ^ help: try: `NumberSystem::Decimal | NumberSystem::Octal`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: indexing into a string may panic if the index is within a UTF-8 character
   --> src/uucore/src/lib/features/parser/parse_size.rs:168:31
    |
168 |         let mut unit: &str = &size[numeric_string.len()..];
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: indexing into a string may panic if the index is within a UTF-8 character
   --> src/uucore/src/lib/features/parser/parse_size.rs:183:21
    |
183 |             unit = &unit[0..unit.len() - 1];
    |                     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/parse_size.rs:183:29
    |
183 |             unit = &unit[0..unit.len() - 1];
    |                             ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: question mark operator was used
   --> src/uucore/src/lib/features/parser/parse_size.rs:199:32
    |
199 |             let number: u128 = Self::parse_number(&numeric_string, 10, size)?;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/parse_size.rs:200:20
    |
200 |               return match total_physical_memory() {
    |  ____________________^
201 | |                 Ok(total) => Ok((number / 100) * total),
202 | |                 Err(_) => Err(ParseSizeError::PhysicalMem(size.to_string())),
203 | |             };
    | |_____________^ help: try: `total_physical_memory().map_or_else(|_| Err(ParseSizeError::PhysicalMem(size.to_string())), |total| Ok((number / 100) * total))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/parse_size.rs:201:33
    |
201 |                 Ok(total) => Ok((number / 100) * total),
    |                                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: integer division
   --> src/uucore/src/lib/features/parser/parse_size.rs:201:33
    |
201 |                 Ok(total) => Ok((number / 100) * total),
    |                                 ^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: use of / has been disallowed in this context
   --> src/uucore/src/lib/features/parser/parse_size.rs:201:33
    |
201 |                 Ok(total) => Ok((number / 100) * total),
    |                                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division_remainder_used

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/features/parser/parse_size.rs:202:59
    |
202 |                 Err(_) => Err(ParseSizeError::PhysicalMem(size.to_string())),
    |                                                           ^^^^^^^^^^^^^^^^ help: try: `size.to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
    = note: `-W clippy::str-to-string` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::str_to_string)]`

warning: question mark operator was used
   --> src/uucore/src/lib/features/parser/parse_size.rs:247:21
    |
247 |                     Self::parse_number(&numeric_string, 10, size)?
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uucore/src/lib/features/parser/parse_size.rs:252:17
    |
252 |                 Self::parse_number(trimmed_string, 8, size)?
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uucore/src/lib/features/parser/parse_size.rs:256:17
    |
256 |                 Self::parse_number(trimmed_string, 16, size)?
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:262:28
    |
262 |             .ok_or_else(|| ParseSizeError::size_too_big(size))
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
262 |             .ok_or_else(|| return ParseSizeError::size_too_big(size))
    |                            ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:266:5
    |
266 |     pub fn parse_u128(&self, size: &str) -> Result<u128, ParseSizeError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:266:5
    |
266 | /     pub fn parse_u128(&self, size: &str) -> Result<u128, ParseSizeError> {
267 | |         self.parse(size)
268 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:267:9
    |
267 |         self.parse(size)
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
267 |         return self.parse(size)
    |         ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:271:5
    |
271 |     pub fn parse_u64(&self, size: &str) -> Result<u64, ParseSizeError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:271:5
    |
271 | /     pub fn parse_u64(&self, size: &str) -> Result<u64, ParseSizeError> {
272 | |         self.parse(size).and_then(|num_u128| {
273 | |             u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
274 | |         })
275 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:272:9
    |
272 | /         self.parse(size).and_then(|num_u128| {
273 | |             u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
274 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
272 |         return self.parse(size).and_then(|num_u128| {
    |         ++++++

warning: use the question mark operator instead of an `and_then` call
   --> src/uucore/src/lib/features/parser/parse_size.rs:272:9
    |
272 | /         self.parse(size).and_then(|num_u128| {
273 | |             u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
274 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_and_then
    = note: `-W clippy::return-and-then` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::return_and_then)]`
help: try
    |
272 ~         let num_u128 = self.parse(size)?;
273 +         u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
    |

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:273:13
    |
273 |             u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
273 |             return u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
    |             ++++++

warning: `map_err(|_|...` wildcard pattern discards the original error
   --> src/uucore/src/lib/features/parser/parse_size.rs:273:45
    |
273 |             u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
    |                                             ^^^
    |
    = help: consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_err_ignore
    = note: `-W clippy::map-err-ignore` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::map_err_ignore)]`

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:273:49
    |
273 |             u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
273 |             u64::try_from(num_u128).map_err(|_| return ParseSizeError::size_too_big(size))
    |                                                 ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:280:5
    |
280 |     pub fn parse_u64_max(&self, size: &str) -> Result<u64, ParseSizeError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:280:5
    |
280 | /     pub fn parse_u64_max(&self, size: &str) -> Result<u64, ParseSizeError> {
281 | |         let result = self.parse_u64(size);
282 | |         match result {
283 | |             Ok(_) => result,
...   |
292 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:283:22
    |
283 |             Ok(_) => result,
    |                      ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
283 |             Ok(_) => return result,
    |                        +++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:286:21
    |
286 |                     Ok(u64::MAX)
    |                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
286 |                     return Ok(u64::MAX)
    |                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:288:21
    |
288 |                     Err(error)
    |                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
288 |                     return Err(error)
    |                     ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:295:5
    |
295 |     pub fn parse_u128_max(&self, size: &str) -> Result<u128, ParseSizeError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:295:5
    |
295 | /     pub fn parse_u128_max(&self, size: &str) -> Result<u128, ParseSizeError> {
296 | |         let result = self.parse_u128(size);
297 | |         match result {
298 | |             Ok(_) => result,
...   |
307 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:298:22
    |
298 |             Ok(_) => result,
    |                      ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
298 |             Ok(_) => return result,
    |                        +++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:301:21
    |
301 |                     Ok(u128::MAX)
    |                     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
301 |                     return Ok(u128::MAX)
    |                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:303:21
    |
303 |                     Err(error)
    |                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
303 |                     return Err(error)
    |                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:328:9
    |
328 |         NumberSystem::Decimal
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
328 |         return NumberSystem::Decimal
    |         ++++++

warning: redundant type annotation
   --> src/uucore/src/lib/features/parser/parse_size.rs:318:9
    |
318 | /         let num_digits: usize = size
319 | |             .chars()
320 | |             .take_while(char::is_ascii_digit)
321 | |             .collect::<String>()
322 | |             .len();
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_type_annotations
    = note: `-W clippy::redundant-type-annotations` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::redundant_type_annotations)]`

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:323:46
    |
323 |         let all_zeros = size.chars().all(|c| c == '0');
    |                                              ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
323 |         let all_zeros = size.chars().all(|c| return c == '0');
    |                                              ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:323:43
    |
323 |         let all_zeros = size.chars().all(|c| c == '0');
    |                                           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:331:5
    |
331 | /     fn parse_number(
332 | |         numeric_string: &str,
333 | |         radix: u32,
334 | |         original_size: &str,
335 | |     ) -> Result<u128, ParseSizeError> {
    | |_____________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:336:9
    |
336 | /         u128::from_str_radix(numeric_string, radix).map_err(|e| match e.kind() {
337 | |             IntErrorKind::PosOverflow => ParseSizeError::size_too_big(original_size),
338 | |             _ => ParseSizeError::ParseFailure(original_size.to_string()),
339 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
336 |         return u128::from_str_radix(numeric_string, radix).map_err(|e| match e.kind() {
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:337:42
    |
337 |             IntErrorKind::PosOverflow => ParseSizeError::size_too_big(original_size),
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
337 |             IntErrorKind::PosOverflow => return ParseSizeError::size_too_big(original_size),
    |                                          ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:338:18
    |
338 |             _ => ParseSizeError::ParseFailure(original_size.to_string()),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
338 |             _ => return ParseSizeError::ParseFailure(original_size.to_string()),
    |                  ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:336:62
    |
336 |         u128::from_str_radix(numeric_string, radix).map_err(|e| match e.kind() {
    |                                                              ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: wildcard matches known variants and will also match future added variants
   --> src/uucore/src/lib/features/parser/parse_size.rs:338:13
    |
338 |             _ => ParseSizeError::ParseFailure(original_size.to_string()),
    |             ^ help: try: `IntErrorKind::Empty | IntErrorKind::InvalidDigit | IntErrorKind::NegOverflow | IntErrorKind::Zero | _`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/parser/parse_size.rs:337:13
    |
337 |             IntErrorKind::PosOverflow => ParseSizeError::size_too_big(original_size),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/features/parser/parse_size.rs:338:47
    |
338 |             _ => ParseSizeError::ParseFailure(original_size.to_string()),
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `original_size.to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:355:1
    |
355 | pub fn parse_size_u128(size: &str) -> Result<u128, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/features/parser/parse_size.rs:355:1
    |
355 | / pub fn parse_size_u128(size: &str) -> Result<u128, ParseSizeError> {
356 | |     Parser::default().parse(size)
357 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name starts with its containing module's name
   --> src/uucore/src/lib/features/parser/parse_size.rs:355:8
    |
355 | pub fn parse_size_u128(size: &str) -> Result<u128, ParseSizeError> {
    |        ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:356:5
    |
356 |     Parser::default().parse(size)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
356 |     return Parser::default().parse(size)
    |     ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:360:1
    |
360 | pub fn parse_size_u64(size: &str) -> Result<u64, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/features/parser/parse_size.rs:360:1
    |
360 | / pub fn parse_size_u64(size: &str) -> Result<u64, ParseSizeError> {
361 | |     Parser::default().parse_u64(size)
362 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name starts with its containing module's name
   --> src/uucore/src/lib/features/parser/parse_size.rs:360:8
    |
360 | pub fn parse_size_u64(size: &str) -> Result<u64, ParseSizeError> {
    |        ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:361:5
    |
361 |     Parser::default().parse_u64(size)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
361 |     return Parser::default().parse_u64(size)
    |     ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:366:1
    |
366 | pub fn parse_size(size: &str) -> Result<u64, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/features/parser/parse_size.rs:366:1
    |
366 | / pub fn parse_size(size: &str) -> Result<u64, ParseSizeError> {
367 | |     parse_size_u64(size)
368 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:367:5
    |
367 |     parse_size_u64(size)
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
367 |     return parse_size_u64(size)
    |     ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:373:1
    |
373 | pub fn parse_size_u64_max(size: &str) -> Result<u64, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/features/parser/parse_size.rs:373:1
    |
373 | / pub fn parse_size_u64_max(size: &str) -> Result<u64, ParseSizeError> {
374 | |     Parser::default().parse_u64_max(size)
375 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name starts with its containing module's name
   --> src/uucore/src/lib/features/parser/parse_size.rs:373:8
    |
373 | pub fn parse_size_u64_max(size: &str) -> Result<u64, ParseSizeError> {
    |        ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:374:5
    |
374 |     Parser::default().parse_u64_max(size)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
374 |     return Parser::default().parse_u64_max(size)
    |     ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:378:1
    |
378 | pub fn parse_size_u128_max(size: &str) -> Result<u128, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/features/parser/parse_size.rs:378:1
    |
378 | / pub fn parse_size_u128_max(size: &str) -> Result<u128, ParseSizeError> {
379 | |     Parser::default().parse_u128_max(size)
380 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name starts with its containing module's name
   --> src/uucore/src/lib/features/parser/parse_size.rs:378:8
    |
378 | pub fn parse_size_u128_max(size: &str) -> Result<u128, ParseSizeError> {
    |        ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:379:5
    |
379 |     Parser::default().parse_u128_max(size)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
379 |     return Parser::default().parse_u128_max(size)
    |     ++++++

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/parse_size.rs:382:20
    |
382 | /// Error type for parse_size
    |                    ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
382 - /// Error type for parse_size
382 + /// Error type for `parse_size`
    |

warning: exported enums should not be exhaustive
   --> src/uucore/src/lib/features/parser/parse_size.rs:384:1
    |
384 | / pub enum ParseSizeError {
385 | |     /// Suffix
386 | |     InvalidSuffix(String),
...   |
395 | |     PhysicalMem(String),
396 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
help: try adding #[non_exhaustive]
    |
384 + #[non_exhaustive]
385 | pub enum ParseSizeError {
    |

warning: item name starts with its containing module's name
   --> src/uucore/src/lib/features/parser/parse_size.rs:384:10
    |
384 | pub enum ParseSizeError {
    |          ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/parse_size.rs:395:5
    |
395 |     PhysicalMem(String),
    |     ^^^^^^^^^^^
    |
note: should be placed before `SizeTooBig`
   --> src/uucore/src/lib/features/parser/parse_size.rs:392:5
    |
392 |     SizeTooBig(String),
    |     ^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing trait method provided by default: `source`
   --> src/uucore/src/lib/features/parser/parse_size.rs:398:1
    |
398 | impl Error for ParseSizeError {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:105:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `type_id`
   --> src/uucore/src/lib/features/parser/parse_size.rs:398:1
    |
398 | impl Error for ParseSizeError {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:116:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cause`
   --> src/uucore/src/lib/features/parser/parse_size.rs:398:1
    |
398 | impl Error for ParseSizeError {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:141:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `provide`
   --> src/uucore/src/lib/features/parser/parse_size.rs:398:1
    |
398 | impl Error for ParseSizeError {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:204:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:399:5
    |
399 | /     fn description(&self) -> &str {
400 | |         match *self {
401 | |             Self::InvalidSuffix(ref s) => s,
402 | |             Self::ParseFailure(ref s) => s,
...   |
406 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:401:43
    |
401 |             Self::InvalidSuffix(ref s) => s,
    |                                           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
401 |             Self::InvalidSuffix(ref s) => return s,
    |                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:42
    |
402 |             Self::ParseFailure(ref s) => s,
    |                                          ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
402 |             Self::ParseFailure(ref s) => return s,
    |                                          ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:403:40
    |
403 |             Self::SizeTooBig(ref s) => s,
    |                                        ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
403 |             Self::SizeTooBig(ref s) => return s,
    |                                        ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:404:41
    |
404 |             Self::PhysicalMem(ref s) => s,
    |                                         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
404 |             Self::PhysicalMem(ref s) => return s,
    |                                         ++++++

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:13
    |
402 |             Self::ParseFailure(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
401 -             Self::InvalidSuffix(ref s) => s,
402 -             Self::ParseFailure(ref s) => s,
401 +             Self::ParseFailure(ref s) | Self::InvalidSuffix(ref s) => s,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:403:13
    |
403 |             Self::SizeTooBig(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
401 ~             Self::ParseFailure(ref s) => s,
402 ~             Self::SizeTooBig(ref s) | Self::InvalidSuffix(ref s) => s,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:13
    |
402 |             Self::ParseFailure(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
402 ~             Self::ParseFailure(ref s) | Self::SizeTooBig(ref s) => s,
403 ~             Self::PhysicalMem(ref s) => s,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:404:13
    |
404 |             Self::PhysicalMem(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
401 ~             Self::ParseFailure(ref s) => s,
402 |             Self::SizeTooBig(ref s) => s,
403 ~             Self::PhysicalMem(ref s) | Self::InvalidSuffix(ref s) => s,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:13
    |
402 |             Self::ParseFailure(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
402 ~             Self::ParseFailure(ref s) | Self::PhysicalMem(ref s) => s,
403 |             Self::SizeTooBig(ref s) => s,
404 ~             }
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:403:13
    |
403 |             Self::SizeTooBig(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
403 ~             Self::SizeTooBig(ref s) | Self::PhysicalMem(ref s) => s,
404 ~             }
    |

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:401:37
    |
401 |             Self::InvalidSuffix(ref s) => s,
    |                                     ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:36
    |
402 |             Self::ParseFailure(ref s) => s,
    |                                    ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:403:34
    |
403 |             Self::SizeTooBig(ref s) => s,
    |                                  ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:404:35
    |
404 |             Self::PhysicalMem(ref s) => s,
    |                                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:410:5
    |
410 | /     fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
411 | |         let s = match self {
412 | |             Self::InvalidSuffix(s)
413 | |             | Self::ParseFailure(s)
...   |
417 | |         write!(f, "{s}")
418 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:417:9
    |
417 |         write!(f, "{s}")
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
417 |         return write!(f, "{s}")
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:410:19
    |
410 |     fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/parser/parse_size.rs:412:13
    |
412 | /             Self::InvalidSuffix(s)
413 | |             | Self::ParseFailure(s)
414 | |             | Self::SizeTooBig(s)
415 | |             | Self::PhysicalMem(s) => s,
    | |__________________________________^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:412:33
    |
412 |             Self::InvalidSuffix(s)
    |                                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:413:34
    |
413 |             | Self::ParseFailure(s)
    |                                  ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:414:32
    |
414 |             | Self::SizeTooBig(s)
    |                                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:415:33
    |
415 |             | Self::PhysicalMem(s) => s,
    |                                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:411:13
    |
411 |         let s = match self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:426:9
    |
426 |         Self::InvalidSuffix(format!("{}", s.quote()))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
426 |         return Self::InvalidSuffix(format!("{}", s.quote()))
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:425:23
    |
425 |     fn invalid_suffix(s: &str) -> Self {
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:461:9
    |
461 |         Self::ParseFailure(format!("{}", s.quote()))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
461 |         return Self::ParseFailure(format!("{}", s.quote()))
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:429:22
    |
429 |     fn parse_failure(s: &str) -> Self {
    |                      ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:481:9
    |
481 | /         Self::SizeTooBig(format!(
482 | |             "{}: Value too large for defined data type",
483 | |             s.quote()
484 | |         ))
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
481 |         return Self::SizeTooBig(format!(
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:464:21
    |
464 |     fn size_too_big(s: &str) -> Self {
    |                     ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/parse_time.rs:12:14
   |
12 |     display::Quotable,
   |              ^^^^^^^^ help: use: `Quotable as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/parse_time.rs:16:17
   |
16 | use num_traits::Signed;
   |                 ^^^^^^ help: use: `Signed as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/parse_time.rs:17:17
   |
17 | use num_traits::ToPrimitive;
   |                 ^^^^^^^^^^^ help: use: `ToPrimitive as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/parse_time.rs:18:17
   |
18 | use num_traits::Zero;
   |                 ^^^^ help: use: `Zero as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/features/parser/parse_time.rs:19:5
   |
19 | use std::time::Duration;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/parser/parse_time.rs:56:1
    |
56  | pub fn from_str(string: &str, allow_suffixes: bool) -> Result<Duration, String> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/parser/parse_time.rs:102:22
    |
102 |     let nanos: u32 = (&nanos_bi % NANOS_PER_SEC).to_u32().unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/features/parser/parse_time.rs:56:1
    |
56  | / pub fn from_str(string: &str, allow_suffixes: bool) -> Result<Duration, String> {
57  | |     // TODO: Switch to Duration::NANOSECOND if that ever becomes stable
58  | |     // https://github.com/rust-lang/rust/issues/57391
59  | |     const NANOSECOND_DURATION: Duration = Duration::from_nanos(1);
...   |
103 | |     Ok(Duration::new(whole_secs, nanos))
104 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_time.rs:103:5
    |
103 |     Ok(Duration::new(whole_secs, nanos))
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
103 |     return Ok(Duration::new(whole_secs, nanos))
    |     ++++++

warning: default numeric fallback might occur
  --> src/uucore/src/lib/features/parser/parse_time.rs:84:42
   |
84 |         ExtendedBigDecimal::MinusZero => 0.into(),
   |                                          ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: adding items after statements is confusing, since items exist from the start of the scope
  --> src/uucore/src/lib/features/parser/parse_time.rs:97:5
   |
97 |     const NANOS_PER_SEC: u32 = 1_000_000_000;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: wildcard match will also match any future added variants
  --> src/uucore/src/lib/features/parser/parse_time.rs:86:9
   |
86 |         _ => return Err(format!("invalid time interval {}", string.quote())),
   |         ^ help: try: `ExtendedBigDecimal::BigDecimal(_) | ExtendedBigDecimal::MinusInfinity | ExtendedBigDecimal::Nan | ExtendedBigDecimal::MinusNan`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: `num` is shadowed
  --> src/uucore/src/lib/features/parser/parse_time.rs:82:9
   |
82 |     let num = match num {
   |         ^^^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/parse_time.rs:65:9
   |
65 |     let num = match num_parser::parse(
   |         ^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_time.rs:98:33
   |
98 |     let whole_secs: u64 = match (&nanos_bi / NANOS_PER_SEC).try_into() {
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: used `unwrap()` on an `Option` value
   --> src/uucore/src/lib/features/parser/parse_time.rs:102:22
    |
102 |     let nanos: u32 = (&nanos_bi % NANOS_PER_SEC).to_u32().unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/parse_time.rs:102:22
    |
102 |     let nanos: u32 = (&nanos_bi % NANOS_PER_SEC).to_u32().unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: item name ends with its containing module's name
  --> src/uucore/src/lib/features/parser/mod.rs:11:9
   |
11 | pub mod shortcut_value_parser;
   |         ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:88:1
    |
88  | / impl TypedValueParser for ShortcutValueParser {
89  | |     type Value = String;
90  | |
91  | |     fn parse_ref(
...   |
123 | | }
    | |_^
    |
note: should be placed before `add_ambiguous_value_tip`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:65:4
    |
65  | fn add_ambiguous_value_tip(
    |    ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:30:8
   |
30 |     fn generate_clap_error(
   |        ^^^^^^^^^^^^^^^^^^^
   |
note: should be placed before `new`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:26:12
   |
26 |     pub fn new(values: impl Into<Self>) -> Self {
   |            ^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: `impl Trait` used as a function parameter
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:26:24
   |
26 |     pub fn new(values: impl Into<Self>) -> Self {
   |                        ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
   = note: `-W clippy::impl-trait-in-params` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::impl_trait_in_params)]`
help: add a type parameter
   |
26 |     pub fn new<{ /* Generic name */ }: Into<Self>>(values: impl Into<Self>) -> Self {
   |               ++++++++++++++++++++++++++++++++++++

warning: missing `#[inline]` for a method
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:26:5
   |
26 | /     pub fn new(values: impl Into<Self>) -> Self {
27 | |         values.into()
28 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:27:9
   |
27 |         values.into()
   |         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
27 |         return values.into()
   |         ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:60:9
   |
60 |         err
   |         ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
60 |         return err
   |         ++++++

warning: `arg` is shadowed
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:39:21
   |
39 |         if let Some(arg) = arg {
   |                     ^^^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:33:9
   |
33 |         arg: Option<&clap::Arg>,
   |         ^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `to_string()` called on a `&str`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:48:34
   |
48 |             ContextValue::String(value.to_string()),
   |                                  ^^^^^^^^^^^^^^^^^ help: try: `value.to_owned()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:53:57
   |
53 |             ContextValue::Strings(self.0.iter().map(|x| x.get_name().to_string()).collect()),
   |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
53 |             ContextValue::Strings(self.0.iter().map(|x| return x.get_name().to_string()).collect()),
   |                                                         ++++++

warning: `to_string()` called on a `&str`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:53:57
   |
53 |             ContextValue::Strings(self.0.iter().map(|x| x.get_name().to_string()).collect()),
   |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `x.get_name().to_owned()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:67:15
   |
67 |     err: &mut clap::error::Error,
   |               ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:71:13
   |
71 |     for (i, s) in possible_values.iter().enumerate() {
   |             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `format!(..)` appended to existing `String`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:72:9
   |
72 |         formatted_possible_values.push_str(&format!("'{}'", s.get_name()));
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using `write!` to avoid the extra allocation
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#format_push_string
   = note: `-W clippy::format-push-string` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::format_push_string)]`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:73:16
   |
73 |         if i < possible_values.len() - 2 {
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:75:23
   |
75 |         } else if i < possible_values.len() - 1 {
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: missing trait method provided by default: `parse_ref_`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:88:1
    |
88  | impl TypedValueParser for ShortcutValueParser {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /home/sebir/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.39/src/builder/value_parser.rs:728:5
    |
728 | /     fn parse_ref_(
729 | |         &self,
730 | |         cmd: &crate::Command,
731 | |         arg: Option<&crate::Arg>,
732 | |         value: &std::ffi::OsStr,
733 | |         _source: ValueSource,
734 | |     ) -> Result<Self::Value, crate::Error> {
    | |__________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `parse`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:88:1
    |
88  | impl TypedValueParser for ShortcutValueParser {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /home/sebir/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.39/src/builder/value_parser.rs:741:5
    |
741 | /     fn parse(
742 | |         &self,
743 | |         cmd: &crate::Command,
744 | |         arg: Option<&crate::Arg>,
745 | |         value: std::ffi::OsString,
746 | |     ) -> Result<Self::Value, crate::Error> {
    | |__________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `parse_`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:88:1
    |
88  | impl TypedValueParser for ShortcutValueParser {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /home/sebir/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.39/src/builder/value_parser.rs:753:5
    |
753 | /     fn parse_(
754 | |         &self,
755 | |         cmd: &crate::Command,
756 | |         arg: Option<&crate::Arg>,
757 | |         value: std::ffi::OsString,
758 | |         _source: ValueSource,
759 | |     ) -> Result<Self::Value, crate::Error> {
    | |__________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `map`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:88:1
    |
88  | impl TypedValueParser for ShortcutValueParser {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /home/sebir/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.39/src/builder/value_parser.rs:810:5
    |
810 | /     fn map<T, F>(self, func: F) -> MapValueParser<Self, F>
811 | |     where
812 | |         T: Send + Sync + Clone,
813 | |         F: Fn(Self::Value) -> T + Clone,
    | |________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `try_map`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:88:1
    |
88  | impl TypedValueParser for ShortcutValueParser {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /home/sebir/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.39/src/builder/value_parser.rs:860:5
    |
860 | /     fn try_map<T, E, F>(self, func: F) -> TryMapValueParser<Self, F>
861 | |     where
862 | |         F: Fn(Self::Value) -> Result<T, E> + Clone + Send + Sync + 'static,
863 | |         T: Send + Sync + Clone,
864 | |         E: Into<Box<dyn std::error::Error + Send + Sync + 'static>>,
    | |____________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:91:5
    |
91  | /     fn parse_ref(
92  | |         &self,
93  | |         cmd: &clap::Command,
94  | |         arg: Option<&clap::Arg>,
...   |
118 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:108:18
    |
108 |             0 => Err(self.generate_clap_error(cmd, arg, value, &[])),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
108 |             0 => return Err(self.generate_clap_error(cmd, arg, value, &[])),
    |                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:109:18
    |
109 |             1 => Ok(matched_values[0].get_name().to_string()),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
109 |             1 => return Ok(matched_values[0].get_name().to_string()),
    |                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:112:21
    |
112 |                     Ok(direct_match.get_name().to_string())
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
112 |                     return Ok(direct_match.get_name().to_string())
    |                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:114:21
    |
114 |                     Err(self.generate_clap_error(cmd, arg, value, &matched_values))
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
114 |                     return Err(self.generate_clap_error(cmd, arg, value, &matched_values))
    |                     ++++++

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:95:17
   |
95 |         value: &std::ffi::OsStr,
   |                 ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: question mark operator was used
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:97:21
   |
97 |           let value = value
   |  _____________________^
98 | |             .to_str()
99 | |             .ok_or(clap::Error::new(ErrorKind::InvalidUtf8))?;
   | |_____________________________________________________________^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: function call inside of `ok_or`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:99:14
   |
99 |             .ok_or(clap::Error::new(ErrorKind::InvalidUtf8))?;
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ok_or_else(|| clap::Error::new(ErrorKind::InvalidUtf8))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call
   = note: `-W clippy::or-fun-call` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::or_fun_call)]`

warning: `value` is shadowed
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:97:13
   |
97 |         let value = value
   |             ^^^^^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:95:9
   |
95 |         value: &std::ffi::OsStr,
   |         ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:104:25
    |
104 |             .filter(|x| x.get_name_and_aliases().any(|name| name.starts_with(value)))
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
104 |             .filter(|x| return x.get_name_and_aliases().any(|name| name.starts_with(value)))
    |                         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:104:61
    |
104 |             .filter(|x| x.get_name_and_aliases().any(|name| name.starts_with(value)))
    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
104 |             .filter(|x| x.get_name_and_aliases().any(|name| return name.starts_with(value)))
    |                                                             ++++++

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:109:21
    |
109 |             1 => Ok(matched_values[0].get_name().to_string()),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `matched_values[0].get_name().to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: indexing may panic
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:109:21
    |
109 |             1 => Ok(matched_values[0].get_name().to_string()),
    |                     ^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:111:17
    |
111 | /                 if let Some(direct_match) = matched_values.iter().find(|x| x.get_name() == value) {
112 | |                     Ok(direct_match.get_name().to_string())
113 | |                 } else {
114 | |                     Err(self.generate_clap_error(cmd, arg, value, &matched_values))
115 | |                 }
    | |_________________^ help: try: `matched_values.iter().find(|x| x.get_name() == value).map_or_else(|| Err(self.generate_clap_error(cmd, arg, value, &matched_values)), |direct_match| Ok(direct_match.get_name().to_string()))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:111:76
    |
111 |                 if let Some(direct_match) = matched_values.iter().find(|x| x.get_name() == value) {
    |                                                                            ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
111 |                 if let Some(direct_match) = matched_values.iter().find(|x| return x.get_name() == value) {
    |                                                                            ++++++

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:112:24
    |
112 |                     Ok(direct_match.get_name().to_string())
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `direct_match.get_name().to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:120:5
    |
120 | /     fn possible_values(&self) -> Option<Box<dyn Iterator<Item = PossibleValue> + '_>> {
121 | |         Some(Box::new(self.0.iter().cloned()))
122 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:121:9
    |
121 |         Some(Box::new(self.0.iter().cloned()))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
121 |         return Some(Box::new(self.0.iter().cloned()))
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:130:5
    |
130 | /     fn from(values: I) -> Self {
131 | |         Self(values.into_iter().map(|t| t.into()).collect())
132 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:131:9
    |
131 |         Self(values.into_iter().map(|t| t.into()).collect())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
131 |         return Self(values.into_iter().map(|t| t.into()).collect())
    |         ++++++

warning: redundant closure
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:131:37
    |
131 |         Self(values.into_iter().map(|t| t.into()).collect())
    |                                     ^^^^^^^^^^^^ help: replace the closure with the method itself: `std::convert::Into::into`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:131:41
    |
131 |         Self(values.into_iter().map(|t| t.into()).collect())
    |                                         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
131 |         Self(values.into_iter().map(|t| return t.into()).collect())
    |                                         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:131:38
    |
131 |         Self(values.into_iter().map(|t| t.into()).collect())
    |                                      ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uucore/src/lib/macros.rs:88:14
   |
88 | macro_rules! show(
   |              ^^^^
   |
note: should be placed before `UTILITY_IS_SECOND_ARG`
  --> src/uucore/src/lib/macros.rs:44:12
   |
44 | pub static UTILITY_IS_SECOND_ARG: AtomicBool = AtomicBool::new(false);
   |            ^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/macros.rs:36:5
   |
36 | use std::sync::atomic::AtomicBool;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a module
  --> src/uucore/src/lib/lib.rs:20:1
   |
20 | mod mods; // core cross-platform modules
   | ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uucore/src/lib/mods/display.rs:67:11
   |
67 | pub trait OsWrite: io::Write {
   |           ^^^^^^^
   |
note: should be placed before `print_verbatim`
  --> src/uucore/src/lib/mods/display.rs:57:8
   |
57 | pub fn print_verbatim<S: AsRef<OsStr>>(text: S) -> io::Result<()> {
   |        ^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/mods/display.rs:29:52
   |
29 | use std::io::{self, BufWriter, Stdout, StdoutLock, Write as IoWrite};
   |                                                    ^^^^^^^^^^^^^^^^ help: use: `Write as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/mods/display.rs:32:25
   |
32 | use std::os::unix::ffi::OsStrExt;
   |                         ^^^^^^^^ help: use: `OsStrExt as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/mods/display.rs:49:1
   |
49 | pub fn println_verbatim<S: AsRef<OsStr>>(text: S) -> io::Result<()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/display.rs:49:1
   |
49 | / pub fn println_verbatim<S: AsRef<OsStr>>(text: S) -> io::Result<()> {
50 | |     let mut stdout = io::stdout().lock();
51 | |     stdout.write_all_os(text.as_ref())?;
52 | |     stdout.write_all(b"\n")?;
53 | |     Ok(())
54 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/display.rs:53:5
   |
53 |     Ok(())
   |     ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
53 |     return Ok(())
   |     ++++++

warning: question mark operator was used
  --> src/uucore/src/lib/mods/display.rs:51:5
   |
51 |     stdout.write_all_os(text.as_ref())?;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
  --> src/uucore/src/lib/mods/display.rs:52:5
   |
52 |     stdout.write_all(b"\n")?;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/mods/display.rs:57:1
   |
57 | pub fn print_verbatim<S: AsRef<OsStr>>(text: S) -> io::Result<()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/display.rs:57:1
   |
57 | / pub fn print_verbatim<S: AsRef<OsStr>>(text: S) -> io::Result<()> {
58 | |     io::stdout().write_all_os(text.as_ref())
59 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/display.rs:58:5
   |
58 |     io::stdout().write_all_os(text.as_ref())
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
58 |     return io::stdout().write_all_os(text.as_ref())
   |     ++++++

warning: missing `#[inline]` for a default trait method
   --> src/uucore/src/lib/mods/display.rs:76:5
    |
76  | /     fn write_all_os(&mut self, buf: &OsStr) -> io::Result<()> {
77  | |         #[cfg(any(unix, target_os = "wasi"))]
78  | |         {
79  | |             self.write_all(buf.as_bytes())
...   |
102 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/display.rs:79:13
   |
79 |             self.write_all(buf.as_bytes())
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
79 |             return self.write_all(buf.as_bytes())
   |             ++++++

warning: missing trait method provided by default: `write_all_os`
   --> src/uucore/src/lib/mods/display.rs:107:1
    |
107 | impl OsWrite for File {}
    | ^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/display.rs:76:5
    |
76  |     fn write_all_os(&mut self, buf: &OsStr) -> io::Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `write_all_os`
   --> src/uucore/src/lib/mods/display.rs:108:1
    |
108 | impl OsWrite for Stdout {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/display.rs:76:5
    |
76  |     fn write_all_os(&mut self, buf: &OsStr) -> io::Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `write_all_os`
   --> src/uucore/src/lib/mods/display.rs:109:1
    |
109 | impl OsWrite for StdoutLock<'_> {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/display.rs:76:5
    |
76  |     fn write_all_os(&mut self, buf: &OsStr) -> io::Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `write_all_os`
   --> src/uucore/src/lib/mods/display.rs:112:1
    |
112 | impl<W: OsWrite> OsWrite for BufWriter<W> {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/display.rs:76:5
    |
76  |     fn write_all_os(&mut self, buf: &OsStr) -> io::Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/display.rs:115:5
    |
115 | /     fn write_all_os(&mut self, buf: &OsStr) -> io::Result<()> {
116 | |         let this: &mut dyn OsWrite = self;
117 | |         this.write_all_os(buf)
118 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/display.rs:117:9
    |
117 |         this.write_all_os(buf)
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
117 |         return this.write_all_os(buf)
    |         ++++++

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uucore/src/lib/mods/error.rs:95:10
   |
95 | pub type UResult<T> = Result<T, Box<dyn UError>>;
   |          ^^^^^^^
   |
note: should be placed before `set_exit_code`
  --> src/uucore/src/lib/mods/error.rs:90:8
   |
90 | pub fn set_exit_code(code: i32) {
   |        ^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/mods/error.rs:469:11
    |
469 | pub trait FromIo<T> {
    |           ^^^^^^
    |
note: should be placed before `strip_errno`
   --> src/uucore/src/lib/mods/error.rs:459:8
    |
459 | pub fn strip_errno(err: &std::io::Error) -> String {
    |        ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/mods/error.rs:626:14
    |
626 | macro_rules! uio_error(
    |              ^^^^^^^^^
    |
note: should be placed before the following item
   --> src/uucore/src/lib/mods/error.rs:561:1
    |
561 | / impl From<nix::Error> for Box<dyn UError> {
562 | |     fn from(f: nix::Error) -> Self {
563 | |         let u_error: UIoError = f.into();
564 | |         Box::new(u_error) as Self
565 | |     }
566 | | }
    | |_^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/mods/error.rs:57:5
   |
57 | use std::{
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/error.rs:67:1
   |
67 | / pub fn get_exit_code() -> i32 {
68 | |     EXIT_CODE.load(Ordering::SeqCst)
69 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/error.rs:68:5
   |
68 |     EXIT_CODE.load(Ordering::SeqCst)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
68 |     return EXIT_CODE.load(Ordering::SeqCst)
   |     ++++++

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/error.rs:90:1
   |
90 | / pub fn set_exit_code(code: i32) {
91 | |     EXIT_CODE.store(code, Ordering::SeqCst);
92 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `#[inline]` for a default trait method
   --> src/uucore/src/lib/mods/error.rs:209:5
    |
209 | /     fn code(&self) -> i32 {
210 | |         1
211 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `#[inline]` for a default trait method
   --> src/uucore/src/lib/mods/error.rs:263:5
    |
263 | /     fn usage(&self) -> bool {
264 | |         false
265 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name ends with its containing module's name
   --> src/uucore/src/lib/mods/error.rs:158:11
    |
158 | pub trait UError: Error + Send {
    |           ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:210:9
    |
210 |         1
    |         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
210 |         return 1
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:264:9
    |
264 |         false
    |         ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
264 |         return false
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:272:5
    |
272 | /     fn from(t: T) -> Self {
273 | |         Box::new(t)
274 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:273:9
    |
273 |         Box::new(t)
    |         ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
273 |         return Box::new(t)
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:272:13
    |
272 |     fn from(t: T) -> Self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: exported structs should not be exhaustive
   --> src/uucore/src/lib/mods/error.rs:287:1
    |
287 | / pub struct USimpleError {
288 | |     /// Exit code of the error.
289 | |     pub code: i32,
...   |
292 | |     pub message: String,
293 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
287 + #[non_exhaustive]
288 | pub struct USimpleError {
    |

warning: item name ends with its containing module's name
   --> src/uucore/src/lib/mods/error.rs:287:12
    |
287 | pub struct USimpleError {
    |            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:298:5
    |
298 | /     pub fn new<S: Into<String>>(code: i32, message: S) -> Box<dyn UError> {
299 | |         Box::new(Self {
300 | |             code,
301 | |             message: message.into(),
302 | |         })
303 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:299:9
    |
299 | /         Box::new(Self {
300 | |             code,
301 | |             message: message.into(),
302 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
299 |         return Box::new(Self {
    |         ++++++

warning: missing trait method provided by default: `source`
   --> src/uucore/src/lib/mods/error.rs:306:1
    |
306 | impl Error for USimpleError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:105:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `type_id`
   --> src/uucore/src/lib/mods/error.rs:306:1
    |
306 | impl Error for USimpleError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:116:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `description`
   --> src/uucore/src/lib/mods/error.rs:306:1
    |
306 | impl Error for USimpleError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:131:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cause`
   --> src/uucore/src/lib/mods/error.rs:306:1
    |
306 | impl Error for USimpleError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:141:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `provide`
   --> src/uucore/src/lib/mods/error.rs:306:1
    |
306 | impl Error for USimpleError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:204:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:309:5
    |
309 | /     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
310 | |         self.message.fmt(f)
311 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:310:9
    |
310 |         self.message.fmt(f)
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
310 |         return self.message.fmt(f)
    |         ++++++

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/mods/error.rs:309:56
    |
309 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:309:56
    |
309 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:309:19
    |
309 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing trait method provided by default: `usage`
   --> src/uucore/src/lib/mods/error.rs:314:1
    |
314 | impl UError for USimpleError {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/error.rs:263:5
    |
263 |     fn usage(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:315:5
    |
315 | /     fn code(&self) -> i32 {
316 | |         self.code
317 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:316:9
    |
316 |         self.code
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
316 |         return self.code
    |         ++++++

warning: exported structs should not be exhaustive
   --> src/uucore/src/lib/mods/error.rs:322:1
    |
322 | / pub struct UUsageError {
323 | |     /// Exit code of the error.
324 | |     pub code: i32,
...   |
327 | |     pub message: String,
328 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
322 + #[non_exhaustive]
323 | pub struct UUsageError {
    |

warning: item name ends with its containing module's name
   --> src/uucore/src/lib/mods/error.rs:322:12
    |
322 | pub struct UUsageError {
    |            ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:333:5
    |
333 | /     pub fn new<S: Into<String>>(code: i32, message: S) -> Box<dyn UError> {
334 | |         Box::new(Self {
335 | |             code,
336 | |             message: message.into(),
337 | |         })
338 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:334:9
    |
334 | /         Box::new(Self {
335 | |             code,
336 | |             message: message.into(),
337 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
334 |         return Box::new(Self {
    |         ++++++

warning: missing trait method provided by default: `source`
   --> src/uucore/src/lib/mods/error.rs:341:1
    |
341 | impl Error for UUsageError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:105:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `type_id`
   --> src/uucore/src/lib/mods/error.rs:341:1
    |
341 | impl Error for UUsageError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:116:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `description`
   --> src/uucore/src/lib/mods/error.rs:341:1
    |
341 | impl Error for UUsageError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:131:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cause`
   --> src/uucore/src/lib/mods/error.rs:341:1
    |
341 | impl Error for UUsageError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:141:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `provide`
   --> src/uucore/src/lib/mods/error.rs:341:1
    |
341 | impl Error for UUsageError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:204:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:344:5
    |
344 | /     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
345 | |         self.message.fmt(f)
346 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:345:9
    |
345 |         self.message.fmt(f)
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
345 |         return self.message.fmt(f)
    |         ++++++

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/mods/error.rs:344:56
    |
344 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:344:56
    |
344 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:344:19
    |
344 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:350:5
    |
350 | /     fn code(&self) -> i32 {
351 | |         self.code
352 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:351:9
    |
351 |         self.code
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
351 |         return self.code
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:354:5
    |
354 | /     fn usage(&self) -> bool {
355 | |         true
356 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:355:9
    |
355 |         true
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
355 |         return true
    |         ++++++

warning: item name ends with its containing module's name
   --> src/uucore/src/lib/mods/error.rs:386:12
    |
386 | pub struct UIoError {
    |            ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:388:12
    |
388 |     inner: std::io::Error,
    |            ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:394:5
    |
394 | /     pub fn new<S: Into<String>>(kind: std::io::ErrorKind, context: S) -> Box<dyn UError> {
395 | |         Box::new(Self {
396 | |             context: Some(context.into()),
397 | |             inner: kind.into(),
398 | |         })
399 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:395:9
    |
395 | /         Box::new(Self {
396 | |             context: Some(context.into()),
397 | |             inner: kind.into(),
398 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
395 |         return Box::new(Self {
    |         ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:394:39
    |
394 |     pub fn new<S: Into<String>>(kind: std::io::ErrorKind, context: S) -> Box<dyn UError> {
    |                                       ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing trait method provided by default: `code`
   --> src/uucore/src/lib/mods/error.rs:402:1
    |
402 | impl UError for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/error.rs:209:5
    |
209 |     fn code(&self) -> i32 {
    |     ^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `usage`
   --> src/uucore/src/lib/mods/error.rs:402:1
    |
402 | impl UError for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/error.rs:263:5
    |
263 |     fn usage(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `source`
   --> src/uucore/src/lib/mods/error.rs:404:1
    |
404 | impl Error for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:105:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `type_id`
   --> src/uucore/src/lib/mods/error.rs:404:1
    |
404 | impl Error for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:116:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `description`
   --> src/uucore/src/lib/mods/error.rs:404:1
    |
404 | impl Error for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:131:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cause`
   --> src/uucore/src/lib/mods/error.rs:404:1
    |
404 | impl Error for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:141:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `provide`
   --> src/uucore/src/lib/mods/error.rs:404:1
    |
404 | impl Error for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:204:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:407:5
    |
407 | /     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
408 | |         use std::io::ErrorKind::*;
409 | |
410 | |         let message;
...   |
455 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:451:13
    |
451 |             write!(f, "{ctx}: {message}")
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
451 |             return write!(f, "{ctx}: {message}")
    |             ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:453:13
    |
453 |             write!(f, "{message}")
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
453 |             return write!(f, "{message}")
    |             ++++++

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/mods/error.rs:407:56
    |
407 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:407:56
    |
407 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:407:19
    |
407 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: usage of wildcard import for enum variants
   --> src/uucore/src/lib/mods/error.rs:408:13
    |
408 |         use std::io::ErrorKind::*;
    |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::io::ErrorKind::{AddrInUse, AddrNotAvailable, AlreadyExists, BrokenPipe, ConnectionAborted, ConnectionRefused, ConnectionReset, Interrupted, InvalidData, InvalidInput, NotConnected, NotFound, PermissionDenied, TimedOut, UnexpectedEof, WouldBlock, WriteZero}`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_glob_use
    = note: `-W clippy::enum-glob-use` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::enum_glob_use)]`

warning: wildcard matches known variants and will also match future added variants
   --> src/uucore/src/lib/mods/error.rs:433:17
    |
433 |                 _ => {
    |                 ^ help: try: `HostUnreachable | NetworkUnreachable | NetworkDown | NotADirectory | IsADirectory | DirectoryNotEmpty | ReadOnlyFilesystem | FilesystemLoop | StaleNetworkFileHandle | StorageFull | NotSeekable | QuotaExceeded | FileTooLarge | ResourceBusy | ExecutableFileBusy | Deadlock | CrossesDevices | TooManyLinks | InvalidFilename | ArgumentListTooLong | Unsupported | OutOfMemory | InProgress | Other | _`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: `message` is shadowed
   --> src/uucore/src/lib/mods/error.rs:411:13
    |
411 |         let message = if self.inner.raw_os_error().is_some() {
    |             ^^^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/mods/error.rs:410:13
    |
410 |         let message;
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/mods/error.rs:450:16
    |
450 |         if let Some(ctx) = &self.context {
    |                ^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/mods/error.rs:459:1
    |
459 | pub fn strip_errno(err: &std::io::Error) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn strip_errno(err: &std::io::Error) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/mods/error.rs:459:1
    |
459 | / pub fn strip_errno(err: &std::io::Error) -> String {
460 | |     let mut msg = err.to_string();
461 | |     if let Some(pos) = msg.find(" (os error ") {
462 | |         msg.truncate(pos);
463 | |     }
464 | |     msg
465 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:464:5
    |
464 |     msg
    |     ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
464 |     return msg
    |     ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:459:26
    |
459 | pub fn strip_errno(err: &std::io::Error) -> String {
    |                          ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: `impl Trait` used as a function parameter
   --> src/uucore/src/lib/mods/error.rs:471:39
    |
471 |     fn map_err_context(self, context: impl FnOnce() -> String) -> T;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
help: add a type parameter
    |
471 |     fn map_err_context<{ /* Generic name */ }: FnOnce() -> String>(self, context: impl FnOnce() -> String) -> T;
    |                       ++++++++++++++++++++++++++++++++++++++++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:474:32
    |
474 | impl FromIo<Box<UIoError>> for std::io::Error {
    |                                ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:475:5
    |
475 | /     fn map_err_context(self, context: impl FnOnce() -> String) -> Box<UIoError> {
476 | |         Box::new(UIoError {
477 | |             context: Some(context()),
478 | |             inner: self,
479 | |         })
480 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:476:9
    |
476 | /         Box::new(UIoError {
477 | |             context: Some(context()),
478 | |             inner: self,
479 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
476 |         return Box::new(UIoError {
    |         ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:483:32
    |
483 | impl<T> FromIo<UResult<T>> for std::io::Result<T> {
    |                                ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:484:5
    |
484 | /     fn map_err_context(self, context: impl FnOnce() -> String) -> UResult<T> {
485 | |         self.map_err(|e| e.map_err_context(context) as Box<dyn UError>)
486 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:485:9
    |
485 |         self.map_err(|e| e.map_err_context(context) as Box<dyn UError>)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
485 |         return self.map_err(|e| e.map_err_context(context) as Box<dyn UError>)
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:485:26
    |
485 |         self.map_err(|e| e.map_err_context(context) as Box<dyn UError>)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
485 |         self.map_err(|e| return e.map_err_context(context) as Box<dyn UError>)
    |                          ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:485:23
    |
485 |         self.map_err(|e| e.map_err_context(context) as Box<dyn UError>)
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:485:26
    |
485 |         self.map_err(|e| e.map_err_context(context) as Box<dyn UError>)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:489:32
    |
489 | impl FromIo<Box<UIoError>> for std::io::ErrorKind {
    |                                ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:490:5
    |
490 | /     fn map_err_context(self, context: impl FnOnce() -> String) -> Box<UIoError> {
491 | |         Box::new(UIoError {
492 | |             context: Some(context()),
493 | |             inner: std::io::Error::new(self, ""),
494 | |         })
495 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:491:9
    |
491 | /         Box::new(UIoError {
492 | |             context: Some(context()),
493 | |             inner: std::io::Error::new(self, ""),
494 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
491 |         return Box::new(UIoError {
    |         ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:493:20
    |
493 |             inner: std::io::Error::new(self, ""),
    |                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:498:11
    |
498 | impl From<std::io::Error> for UIoError {
    |           ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:499:5
    |
499 | /     fn from(f: std::io::Error) -> Self {
500 | |         Self {
501 | |             context: None,
502 | |             inner: f,
503 | |         }
504 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:500:9
    |
500 | /         Self {
501 | |             context: None,
502 | |             inner: f,
503 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
500 |         return Self {
    |         ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:499:16
    |
499 |     fn from(f: std::io::Error) -> Self {
    |                ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:499:13
    |
499 |     fn from(f: std::io::Error) -> Self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:507:11
    |
507 | impl From<std::io::Error> for Box<dyn UError> {
    |           ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:508:5
    |
508 | /     fn from(f: std::io::Error) -> Self {
509 | |         let u_error: UIoError = f.into();
510 | |         Box::new(u_error) as Self
511 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:510:9
    |
510 |         Box::new(u_error) as Self
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
510 |         return Box::new(u_error) as Self
    |         ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:508:16
    |
508 |     fn from(f: std::io::Error) -> Self {
    |                ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:508:13
    |
508 |     fn from(f: std::io::Error) -> Self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:510:9
    |
510 |         Box::new(u_error) as Self
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:530:5
    |
530 | /     fn map_err_context(self, context: impl FnOnce() -> String) -> UResult<T> {
531 | |         self.map_err(|e| {
532 | |             Box::new(UIoError {
533 | |                 context: Some(context()),
...   |
536 | |         })
537 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:531:9
    |
531 | /         self.map_err(|e| {
532 | |             Box::new(UIoError {
533 | |                 context: Some(context()),
534 | |                 inner: std::io::Error::from_raw_os_error(e as i32),
535 | |             }) as Box<dyn UError>
536 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
531 |         return self.map_err(|e| {
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:532:13
    |
532 | /             Box::new(UIoError {
533 | |                 context: Some(context()),
534 | |                 inner: std::io::Error::from_raw_os_error(e as i32),
535 | |             }) as Box<dyn UError>
    | |_________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
532 |             return Box::new(UIoError {
    |             ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:531:23
    |
531 |         self.map_err(|e| {
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:532:13
    |
532 | /             Box::new(UIoError {
533 | |                 context: Some(context()),
534 | |                 inner: std::io::Error::from_raw_os_error(e as i32),
535 | |             }) as Box<dyn UError>
    | |_________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:534:24
    |
534 |                 inner: std::io::Error::from_raw_os_error(e as i32),
    |                        ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:534:58
    |
534 |                 inner: std::io::Error::from_raw_os_error(e as i32),
    |                                                          ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:542:5
    |
542 | /     fn map_err_context(self, context: impl FnOnce() -> String) -> UResult<T> {
543 | |         Err(Box::new(UIoError {
544 | |             context: Some(context()),
545 | |             inner: std::io::Error::from_raw_os_error(self as i32),
546 | |         }) as Box<dyn UError>)
547 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:543:9
    |
543 | /         Err(Box::new(UIoError {
544 | |             context: Some(context()),
545 | |             inner: std::io::Error::from_raw_os_error(self as i32),
546 | |         }) as Box<dyn UError>)
    | |______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
543 |         return Err(Box::new(UIoError {
    |         ++++++

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:543:13
    |
543 |           Err(Box::new(UIoError {
    |  _____________^
544 | |             context: Some(context()),
545 | |             inner: std::io::Error::from_raw_os_error(self as i32),
546 | |         }) as Box<dyn UError>)
    | |_____________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:545:20
    |
545 |             inner: std::io::Error::from_raw_os_error(self as i32),
    |                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:545:54
    |
545 |             inner: std::io::Error::from_raw_os_error(self as i32),
    |                                                      ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:552:5
    |
552 | /     fn from(f: nix::Error) -> Self {
553 | |         Self {
554 | |             context: None,
555 | |             inner: std::io::Error::from_raw_os_error(f as i32),
556 | |         }
557 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:553:9
    |
553 | /         Self {
554 | |             context: None,
555 | |             inner: std::io::Error::from_raw_os_error(f as i32),
556 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
553 |         return Self {
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:552:13
    |
552 |     fn from(f: nix::Error) -> Self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:555:20
    |
555 |             inner: std::io::Error::from_raw_os_error(f as i32),
    |                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:555:54
    |
555 |             inner: std::io::Error::from_raw_os_error(f as i32),
    |                                                      ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:562:5
    |
562 | /     fn from(f: nix::Error) -> Self {
563 | |         let u_error: UIoError = f.into();
564 | |         Box::new(u_error) as Self
565 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:564:9
    |
564 |         Box::new(u_error) as Self
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
564 |         return Box::new(u_error) as Self
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:562:13
    |
562 |     fn from(f: nix::Error) -> Self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:564:9
    |
564 |         Box::new(u_error) as Self
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: item name ends with its containing module's name
   --> src/uucore/src/lib/mods/error.rs:626:14
    |
626 | macro_rules! uio_error(
    |              ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: exported structs should not be exhaustive
   --> src/uucore/src/lib/mods/error.rs:650:1
    |
650 | pub struct ExitCode(pub i32);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
650 + #[non_exhaustive]
651 | pub struct ExitCode(pub i32);
    |

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/mods/error.rs:655:5
    |
655 |     pub fn new(code: i32) -> Box<dyn UError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(code: i32) -> Box<dyn UError>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:655:5
    |
655 | /     pub fn new(code: i32) -> Box<dyn UError> {
656 | |         Box::new(Self(code))
657 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:656:9
    |
656 |         Box::new(Self(code))
    |         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
656 |         return Box::new(Self(code))
    |         ++++++

warning: missing trait method provided by default: `source`
   --> src/uucore/src/lib/mods/error.rs:660:1
    |
660 | impl Error for ExitCode {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:105:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `type_id`
   --> src/uucore/src/lib/mods/error.rs:660:1
    |
660 | impl Error for ExitCode {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:116:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `description`
   --> src/uucore/src/lib/mods/error.rs:660:1
    |
660 | impl Error for ExitCode {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:131:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cause`
   --> src/uucore/src/lib/mods/error.rs:660:1
    |
660 | impl Error for ExitCode {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:141:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `provide`
   --> src/uucore/src/lib/mods/error.rs:660:1
    |
660 | impl Error for ExitCode {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:204:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:663:5
    |
663 | /     fn fmt(&self, _: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
664 | |         Ok(())
665 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:664:9
    |
664 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
664 |         return Ok(())
    |         ++++++

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/mods/error.rs:663:56
    |
663 |     fn fmt(&self, _: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:663:56
    |
663 |     fn fmt(&self, _: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing trait method provided by default: `usage`
   --> src/uucore/src/lib/mods/error.rs:668:1
    |
668 | impl UError for ExitCode {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/error.rs:263:5
    |
263 |     fn usage(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:669:5
    |
669 | /     fn code(&self) -> i32 {
670 | |         self.0
671 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:670:9
    |
670 |         self.0
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
670 |         return self.0
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:675:5
    |
675 | /     fn from(i: i32) -> Self {
676 | |         ExitCode::new(i)
677 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:676:9
    |
676 |         ExitCode::new(i)
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
676 |         return ExitCode::new(i)
    |         ++++++

warning: item name ends with its containing module's name
   --> src/uucore/src/lib/mods/error.rs:706:11
    |
706 | pub trait UClapError<T> {
    |           ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:712:5
    |
712 | /     fn from(e: clap::Error) -> Self {
713 | |         Box::new(ClapErrorWrapper { code: 1, error: e })
714 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:713:9
    |
713 |         Box::new(ClapErrorWrapper { code: 1, error: e })
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
713 |         return Box::new(ClapErrorWrapper { code: 1, error: e })
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:712:13
    |
712 |     fn from(e: clap::Error) -> Self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:718:5
    |
718 | /     fn with_exit_code(self, code: i32) -> ClapErrorWrapper {
719 | |         ClapErrorWrapper { code, error: self }
720 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:719:9
    |
719 |         ClapErrorWrapper { code, error: self }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
719 |         return ClapErrorWrapper { code, error: self }
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:726:5
    |
726 | /     fn with_exit_code(self, code: i32) -> Result<clap::ArgMatches, ClapErrorWrapper> {
727 | |         self.map_err(|e| e.with_exit_code(code))
728 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:727:9
    |
727 |         self.map_err(|e| e.with_exit_code(code))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
727 |         return self.map_err(|e| e.with_exit_code(code))
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:727:26
    |
727 |         self.map_err(|e| e.with_exit_code(code))
    |                          ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
727 |         self.map_err(|e| return e.with_exit_code(code))
    |                          ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:727:23
    |
727 |         self.map_err(|e| e.with_exit_code(code))
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing trait method provided by default: `usage`
   --> src/uucore/src/lib/mods/error.rs:731:1
    |
731 | impl UError for ClapErrorWrapper {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/error.rs:263:5
    |
263 |     fn usage(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:732:5
    |
732 | /     fn code(&self) -> i32 {
...   |
743 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:739:13
    |
739 |             0
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
739 |             return 0
    |             ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:741:13
    |
741 |             self.code
    |             ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
741 |             return self.code
    |             ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:736:16
    |
736 |         if let clap::error::ErrorKind::DisplayHelp | clap::error::ErrorKind::DisplayVersion =
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:736:54
    |
736 |         if let clap::error::ErrorKind::DisplayHelp | clap::error::ErrorKind::DisplayVersion =
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing trait method provided by default: `source`
   --> src/uucore/src/lib/mods/error.rs:746:1
    |
746 | impl Error for ClapErrorWrapper {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:105:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `type_id`
   --> src/uucore/src/lib/mods/error.rs:746:1
    |
746 | impl Error for ClapErrorWrapper {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:116:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `description`
   --> src/uucore/src/lib/mods/error.rs:746:1
    |
746 | impl Error for ClapErrorWrapper {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:131:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cause`
   --> src/uucore/src/lib/mods/error.rs:746:1
    |
746 | impl Error for ClapErrorWrapper {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:141:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `provide`
   --> src/uucore/src/lib/mods/error.rs:746:1
    |
746 | impl Error for ClapErrorWrapper {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:204:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:750:5
    |
750 | /     fn fmt(&self, _f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
751 | |         self.error.print().unwrap();
752 | |         Ok(())
753 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: used unwrap or expect in a function that returns result or option
   --> src/uucore/src/lib/mods/error.rs:750:5
    |
750 | /     fn fmt(&self, _f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
751 | |         self.error.print().unwrap();
752 | |         Ok(())
753 | |     }
    | |_____^
    |
    = help: unwrap and expect should not be used in a function that returns result or option
note: potential non-recoverable error(s)
   --> src/uucore/src/lib/mods/error.rs:751:9
    |
751 |         self.error.print().unwrap();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_in_result
    = note: `-W clippy::unwrap-in-result` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::unwrap_in_result)]`

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:752:9
    |
752 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
752 |         return Ok(())
    |         ++++++

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/mods/error.rs:750:57
    |
750 |     fn fmt(&self, _f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                         ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:750:57
    |
750 |     fn fmt(&self, _f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                         ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: used `unwrap()` on a `Result` value
   --> src/uucore/src/lib/mods/error.rs:751:9
    |
751 |         self.error.print().unwrap();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used import from `std` instead of `core`
 --> src/uucore/src/lib/mods/line_ending.rs:8:5
  |
8 | use std::fmt::Display;
  |     ^^^ help: consider importing the item from `core`: `core`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: exported enums should not be exhaustive
  --> src/uucore/src/lib/mods/line_ending.rs:20:1
   |
20 | / pub enum LineEnding {
21 | |     #[default]
22 | |     /// Newline character (`\n`)
23 | |     Newline = b'\n',
...  |
26 | |     Nul = 0,
27 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
help: try adding #[non_exhaustive]
   |
20 + #[non_exhaustive]
21 | pub enum LineEnding {
   |

warning: you are deriving `PartialEq` and can implement `Eq`
  --> src/uucore/src/lib/mods/line_ending.rs:19:39
   |
19 | #[derive(Clone, Copy, Debug, Default, PartialEq)]
   |                                       ^^^^^^^^^ help: consider deriving `Eq` as well: `PartialEq, Eq`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq

warning: missing `#[inline]` for a method
  --> src/uucore/src/lib/mods/line_ending.rs:30:5
   |
30 | /     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
31 | |         match self {
32 | |             Self::Newline => writeln!(f),
33 | |             Self::Nul => write!(f, "\0"),
34 | |         }
35 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/line_ending.rs:32:30
   |
32 |             Self::Newline => writeln!(f),
   |                              ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
32 |             Self::Newline => return writeln!(f),
   |                              ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/mods/line_ending.rs:33:26
   |
33 |             Self::Nul => write!(f, "\0"),
   |                          ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
33 |             Self::Nul => return write!(f, "\0"),
   |                          ++++++

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/mods/line_ending.rs:30:27
   |
30 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
   |                           ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/line_ending.rs:30:27
   |
30 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
   |                           ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/mods/line_ending.rs:30:55
   |
30 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
   |                                                       ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/line_ending.rs:30:55
   |
30 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
   |                                                       ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/line_ending.rs:30:19
   |
30 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
   |                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: type of pattern does not match the expression type
  --> src/uucore/src/lib/mods/line_ending.rs:32:13
   |
32 |             Self::Newline => writeln!(f),
   |             ^^^^^^^^^^^^^
   |
   = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: missing `#[inline]` for a method
  --> src/uucore/src/lib/mods/line_ending.rs:39:5
   |
39 | /     fn from(line_ending: LineEnding) -> Self {
40 | |         line_ending as Self
41 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/line_ending.rs:40:9
   |
40 |         line_ending as Self
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
40 |         return line_ending as Self
   |         ++++++

warning: using a potentially dangerous silent `as` conversion
  --> src/uucore/src/lib/mods/line_ending.rs:40:9
   |
40 |         line_ending as Self
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this method could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/line_ending.rs:49:5
   |
49 |     pub fn from_zero_flag(is_zero_terminated: bool) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn from_zero_flag(is_zero_terminated: bool) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
  --> src/uucore/src/lib/mods/line_ending.rs:49:5
   |
49 | /     pub fn from_zero_flag(is_zero_terminated: bool) -> Self {
50 | |         if is_zero_terminated {
51 | |             Self::Nul
52 | |         } else {
...  |
55 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/line_ending.rs:51:13
   |
51 |             Self::Nul
   |             ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
51 |             return Self::Nul
   |             ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/mods/line_ending.rs:53:13
   |
53 |             Self::Newline
   |             ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
53 |             return Self::Newline
   |             ++++++

warning: this could be a `const fn`
  --> src/uucore/src/lib/mods/line_ending.rs:49:5
   |
49 | /     pub fn from_zero_flag(is_zero_terminated: bool) -> Self {
50 | |         if is_zero_terminated {
51 | |             Self::Nul
52 | |         } else {
...  |
55 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
49 |     pub const fn from_zero_flag(is_zero_terminated: bool) -> Self {
   |         +++++

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uucore/src/lib/mods/locale.rs:50:11
   |
50 | pub const DEFAULT_LOCALE: &str = "en-US";
   |           ^^^^^^^^^^^^^^
   |
note: should be placed before the following item
  --> src/uucore/src/lib/mods/locale.rs:44:1
   |
44 | / impl UError for LocalizationError {
45 | |     fn code(&self) -> i32 {
46 | |         1
47 | |     }
48 | | }
   | |_^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/mods/locale.rs:12:15
   |
12 | use std::str::FromStr;
   |               ^^^^^^^ help: use: `FromStr as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/mods/locale.rs:12:5
   |
12 | use std::str::FromStr;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: exported enums should not be exhaustive
  --> src/uucore/src/lib/mods/locale.rs:18:1
   |
18 | / pub enum LocalizationError {
19 | |     #[error("I/O error loading '{path}': {source}")]
20 | |     Io {
21 | |         source: std::io::Error,
...  |
31 | |     PathResolution(String),
32 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
help: try adding #[non_exhaustive]
   |
18 + #[non_exhaustive]
19 | pub enum LocalizationError {
   |

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/mods/locale.rs:27:5
   |
27 |     Bundle(String),
   |     ^^^^^^
   |
note: should be placed before `Parse`
  --> src/uucore/src/lib/mods/locale.rs:25:5
   |
25 |     Parse(String),
   |     ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/locale.rs:21:17
   |
21 |         source: std::io::Error,
   |                 ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/locale.rs:34:11
   |
34 | impl From<std::io::Error> for LocalizationError {
   |           ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
  --> src/uucore/src/lib/mods/locale.rs:35:5
   |
35 | /     fn from(error: std::io::Error) -> Self {
36 | |         LocalizationError::Io {
37 | |             source: error,
38 | |             path: PathBuf::from("<unknown>"),
39 | |         }
40 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:36:9
   |
36 | /         LocalizationError::Io {
37 | |             source: error,
38 | |             path: PathBuf::from("<unknown>"),
39 | |         }
   | |_________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
36 |         return LocalizationError::Io {
   |         ++++++

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/locale.rs:35:20
   |
35 |     fn from(error: std::io::Error) -> Self {
   |                    ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/mods/locale.rs:36:9
   |
36 |         LocalizationError::Io {
   |         ^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing trait method provided by default: `usage`
   --> src/uucore/src/lib/mods/locale.rs:44:1
    |
44  | impl UError for LocalizationError {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/error.rs:263:5
    |
263 |     fn usage(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
  --> src/uucore/src/lib/mods/locale.rs:45:5
   |
45 | /     fn code(&self) -> i32 {
46 | |         1
47 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:46:9
   |
46 |         1
   |         ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
46 |         return 1
   |         ++++++

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/mods/locale.rs:55:5
   |
55 |     fallback_bundle: Option<FluentBundle<FluentResource>>,
   |     ^^^^^^^^^^^^^^^
   |
note: should be placed before `primary_bundle`
  --> src/uucore/src/lib/mods/locale.rs:54:5
   |
54 |     primary_bundle: FluentBundle<FluentResource>,
   |     ^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/mods/locale.rs:71:8
   |
71 |     fn format(&self, id: &str, args: Option<&FluentArgs>) -> String {
   |        ^^^^^^
   |
note: should be placed before `with_fallback`
  --> src/uucore/src/lib/mods/locale.rs:66:8
   |
66 |     fn with_fallback(mut self, fallback_bundle: FluentBundle<FluentResource>) -> Self {
   |        ^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:60:9
   |
60 | /         Self {
61 | |             primary_bundle,
62 | |             fallback_bundle: None,
63 | |         }
   | |_________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
60 |         return Self {
   |         ++++++

warning: this could be a `const fn`
  --> src/uucore/src/lib/mods/locale.rs:59:5
   |
59 | /     fn new(primary_bundle: FluentBundle<FluentResource>) -> Self {
60 | |         Self {
61 | |             primary_bundle,
62 | |             fallback_bundle: None,
63 | |         }
64 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
59 |     const fn new(primary_bundle: FluentBundle<FluentResource>) -> Self {
   |     +++++

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:68:9
   |
68 |         self
   |         ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
68 |         return self
   |         ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:92:9
   |
92 |         id.to_string()
   |         ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
92 |         return id.to_string()
   |         ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:73:81
   |
73 |         if let Some(message) = self.primary_bundle.get_message(id).and_then(|m| m.value()) {
   |                                                                                 ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
73 |         if let Some(message) = self.primary_bundle.get_message(id).and_then(|m| return m.value()) {
   |                                                                                 ++++++

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/locale.rs:73:78
   |
73 |         if let Some(message) = self.primary_bundle.get_message(id).and_then(|m| m.value()) {
   |                                                                              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:83:74
   |
83 |             if let Some(message) = fallback.get_message(id).and_then(|m| m.value()) {
   |                                                                          ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
83 |             if let Some(message) = fallback.get_message(id).and_then(|m| return m.value()) {
   |                                                                          ++++++

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/locale.rs:83:71
   |
83 |             if let Some(message) = fallback.get_message(id).and_then(|m| m.value()) {
   |                                                                       ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `to_string()` called on a `&str`
  --> src/uucore/src/lib/mods/locale.rs:92:9
   |
92 |         id.to_string()
   |         ^^^^^^^^^^^^^^ help: try: `id.to_owned()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/mods/locale.rs:102:1
    |
102 | / fn init_localization(
103 | |     locale: &LanguageIdentifier,
104 | |     locales_dir: &Path,
105 | | ) -> Result<(), LocalizationError> {
    | |__________________________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/mods/locale.rs:106:21
    |
106 |       let en_locale = LanguageIdentifier::from_str(DEFAULT_LOCALE)
    |  _____________________^
107 | |         .expect("Default locale should always be valid");
    | |________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/mods/locale.rs:102:1
    |
102 | / fn init_localization(
103 | |     locale: &LanguageIdentifier,
104 | |     locales_dir: &Path,
105 | | ) -> Result<(), LocalizationError> {
    | |__________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:128:5
    |
128 |     Ok(())
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
128 |     return Ok(())
    |     ++++++

warning: used `expect()` on a `Result` value
   --> src/uucore/src/lib/mods/locale.rs:106:21
    |
106 |       let en_locale = LanguageIdentifier::from_str(DEFAULT_LOCALE)
    |  _____________________^
107 | |         .expect("Default locale should always be valid");
    | |________________________________________________________^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: `-W clippy::expect-used` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::expect_used)]`

warning: question mark operator was used
   --> src/uucore/src/lib/mods/locale.rs:109:26
    |
109 |     let english_bundle = create_bundle(&en_locale, locales_dir)?;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uucore/src/lib/mods/locale.rs:124:5
    |
124 | /     LOCALIZER.with(|lock| {
125 | |         lock.set(loc)
126 | |             .map_err(|_| LocalizationError::Bundle("Localizer already initialized".into()))
127 | |     })?;
    | |_______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:125:9
    |
125 | /         lock.set(loc)
126 | |             .map_err(|_| LocalizationError::Bundle("Localizer already initialized".into()))
    | |___________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
125 |         return lock.set(loc)
    |         ++++++

warning: `map_err(|_|...` wildcard pattern discards the original error
   --> src/uucore/src/lib/mods/locale.rs:126:22
    |
126 |             .map_err(|_| LocalizationError::Bundle("Localizer already initialized".into()))
    |                      ^^^
    |
    = help: consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_err_ignore

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:126:26
    |
126 |             .map_err(|_| LocalizationError::Bundle("Localizer already initialized".into()))
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
126 |             .map_err(|_| return LocalizationError::Bundle("Localizer already initialized".into()))
    |                          ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/mods/locale.rs:132:1
    |
132 | / fn create_bundle(
133 | |     locale: &LanguageIdentifier,
134 | |     locales_dir: &Path,
135 | | ) -> Result<FluentBundle<FluentResource>, LocalizationError> {
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:160:5
    |
160 |     Ok(bundle)
    |     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
160 |     return Ok(bundle)
    |     ++++++

warning: question mark operator was used
   --> src/uucore/src/lib/mods/locale.rs:138:20
    |
138 |       let ftl_file = fs::read_to_string(&locale_path).map_err(|e| LocalizationError::Io {
    |  ____________________^
139 | |         source: e,
140 | |         path: locale_path.clone(),
141 | |     })?;
    | |_______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:138:65
    |
138 |       let ftl_file = fs::read_to_string(&locale_path).map_err(|e| LocalizationError::Io {
    |  _________________________________________________________________^
139 | |         source: e,
140 | |         path: locale_path.clone(),
141 | |     })?;
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
138 |     let ftl_file = fs::read_to_string(&locale_path).map_err(|e| return LocalizationError::Io {
    |                                                                 ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/locale.rs:138:62
    |
138 |     let ftl_file = fs::read_to_string(&locale_path).map_err(|e| LocalizationError::Io {
    |                                                              ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: question mark operator was used
   --> src/uucore/src/lib/mods/locale.rs:143:20
    |
143 |       let resource = FluentResource::try_new(ftl_file).map_err(|_| {
    |  ____________________^
144 | |         LocalizationError::Parse(format!(
145 | |             "Failed to parse localization resource for {}: {}",
146 | |             locale,
147 | |             locale_path.display()
148 | |         ))
149 | |     })?;
    | |_______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: `map_err(|_|...` wildcard pattern discards the original error
   --> src/uucore/src/lib/mods/locale.rs:143:62
    |
143 |     let resource = FluentResource::try_new(ftl_file).map_err(|_| {
    |                                                              ^^^
    |
    = help: consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_err_ignore

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:144:9
    |
144 | /         LocalizationError::Parse(format!(
145 | |             "Failed to parse localization resource for {}: {}",
146 | |             locale,
147 | |             locale_path.display()
148 | |         ))
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
144 |         return LocalizationError::Parse(format!(
    |         ++++++

warning: question mark operator was used
   --> src/uucore/src/lib/mods/locale.rs:153:5
    |
153 | /     bundle.add_resource(resource).map_err(|errs| {
154 | |         LocalizationError::Bundle(format!(
155 | |             "Failed to add resource to bundle for {}: {:?}",
156 | |             locale, errs
157 | |         ))
158 | |     })?;
    | |_______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:154:9
    |
154 | /         LocalizationError::Bundle(format!(
155 | |             "Failed to add resource to bundle for {}: {:?}",
156 | |             locale, errs
157 | |         ))
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
154 |         return LocalizationError::Bundle(format!(
    |         ++++++

warning: variables can be used directly in the `format!` string
   --> src/uucore/src/lib/mods/locale.rs:154:35
    |
154 |           LocalizationError::Bundle(format!(
    |  ___________________________________^
155 | |             "Failed to add resource to bundle for {}: {:?}",
156 | |             locale, errs
157 | |         ))
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:164:5
    |
164 | /     LOCALIZER.with(|lock| {
165 | |         lock.get()
166 | |             .map(|loc| loc.format(id, args.as_ref()))
167 | |             .unwrap_or_else(|| id.to_string()) // Return the key ID if localizer not initialized
168 | |     })
    | |______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
164 |     return LOCALIZER.with(|lock| {
    |     ++++++

warning: this argument is passed by value, but not consumed in the function body
   --> src/uucore/src/lib/mods/locale.rs:163:41
    |
163 | fn get_message_internal(id: &str, args: Option<FluentArgs>) -> String {
    |                                         ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
    = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`
help: consider taking a reference instead
    |
163 | fn get_message_internal(id: &str, args: Option<&FluentArgs>) -> String {
    |                                                +

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:165:9
    |
165 | /         lock.get()
166 | |             .map(|loc| loc.format(id, args.as_ref()))
167 | |             .unwrap_or_else(|| id.to_string()) // Return the key ID if localizer not initialized
    | |______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
165 |         return lock.get()
    |         ++++++

warning: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value
   --> src/uucore/src/lib/mods/locale.rs:165:9
    |
165 | /         lock.get()
166 | |             .map(|loc| loc.format(id, args.as_ref()))
167 | |             .unwrap_or_else(|| id.to_string()) // Return the key ID if localizer not initialized
    | |______________________________________________^ help: try: `lock.get().map_or_else(|| id.to_string(), |loc| loc.format(id, args.as_ref()))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
    = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:166:24
    |
166 |             .map(|loc| loc.format(id, args.as_ref()))
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
166 |             .map(|loc| return loc.format(id, args.as_ref()))
    |                        ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:167:32
    |
167 |             .unwrap_or_else(|| id.to_string()) // Return the key ID if localizer not initialized
    |                                ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
167 |             .unwrap_or_else(|| return id.to_string()) // Return the key ID if localizer not initialized
    |                                ++++++

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/mods/locale.rs:167:32
    |
167 |             .unwrap_or_else(|| id.to_string()) // Return the key ID if localizer not initialized
    |                                ^^^^^^^^^^^^^^ help: try: `id.to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/mods/locale.rs:195:1
    |
195 | pub fn get_message(id: &str) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_message(id: &str) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/mods/locale.rs:195:1
    |
195 | / pub fn get_message(id: &str) -> String {
196 | |     get_message_internal(id, None)
197 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:196:5
    |
196 |     get_message_internal(id, None)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
196 |     return get_message_internal(id, None)
    |     ++++++

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/mods/locale.rs:230:1
    |
230 | pub fn get_message_with_args(id: &str, ftl_args: HashMap<String, String>) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_message_with_args(id: &str, ftl_args: HashMap<String, String>) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/mods/locale.rs:230:1
    |
230 | / pub fn get_message_with_args(id: &str, ftl_args: HashMap<String, String>) -> String {
231 | |     let mut args = FluentArgs::new();
232 | |
233 | |     for (key, value) in ftl_args {
...   |
245 | |     get_message_internal(id, Some(args))
246 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: parameter of type `HashMap` should be generalized over different hashers
   --> src/uucore/src/lib/mods/locale.rs:230:50
    |
230 | pub fn get_message_with_args(id: &str, ftl_args: HashMap<String, String>) -> String {
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_hasher
    = note: `-W clippy::implicit-hasher` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::implicit_hasher)]`
help: add a type parameter for `BuildHasher`
    |
230 | pub fn get_message_with_args<S: ::std::hash::BuildHasher>(id: &str, ftl_args: HashMap<String, String, S>) -> String {
    |                             +++++++++++++++++++++++++++++                                           +++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:245:5
    |
245 |     get_message_internal(id, Some(args))
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
245 |     return get_message_internal(id, Some(args))
    |     ++++++

warning: iteration over unordered hash-based type
   --> src/uucore/src/lib/mods/locale.rs:233:5
    |
233 | /     for (key, value) in ftl_args {
234 | |         // Try to parse as number first for proper pluralization support
235 | |         if let Ok(num_val) = value.parse::<i64>() {
236 | |             args.set(key, num_val);
...   |
243 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_over_hash_type
    = note: `-W clippy::iter-over-hash-type` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::iter_over_hash_type)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/mods/locale.rs:249:1
    |
249 | fn detect_system_locale() -> Result<LanguageIdentifier, LocalizationError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:257:5
    |
257 | /     LanguageIdentifier::from_str(&locale_str)
258 | |         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
    | |_________________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
257 |     return LanguageIdentifier::from_str(&locale_str)
    |     ++++++

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/mods/locale.rs:250:22
    |
250 |       let locale_str = std::env::var("LANG")
    |  ______________________^
251 | |         .unwrap_or_else(|_| DEFAULT_LOCALE.to_string())
252 | |         .split('.')
253 | |         .next()
254 | |         .unwrap_or(DEFAULT_LOCALE)
255 | |         .to_string();
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
help: try
    |
250 ~     let locale_str = std::env::var("LANG")
251 +         .unwrap_or_else(|_| DEFAULT_LOCALE.to_string())
252 +         .split('.')
253 +         .next()
254 ~         .unwrap_or(DEFAULT_LOCALE).to_owned();
    |

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/locale.rs:250:22
    |
250 |     let locale_str = std::env::var("LANG")
    |                      ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:251:29
    |
251 |         .unwrap_or_else(|_| DEFAULT_LOCALE.to_string())
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
251 |         .unwrap_or_else(|_| return DEFAULT_LOCALE.to_string())
    |                             ++++++

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/mods/locale.rs:251:29
    |
251 |         .unwrap_or_else(|_| DEFAULT_LOCALE.to_string())
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `DEFAULT_LOCALE.to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: `map_err(|_|...` wildcard pattern discards the original error
   --> src/uucore/src/lib/mods/locale.rs:258:18
    |
258 |         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
    |                  ^^^
    |
    = help: consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_err_ignore

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:258:22
    |
258 |         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
258 |         .map_err(|_| return LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
    |                      ++++++

warning: variables can be used directly in the `format!` string
   --> src/uucore/src/lib/mods/locale.rs:258:47
    |
258 |         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
258 -         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
258 +         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {locale_str}")))
    |

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/mods/locale.rs:297:1
    |
297 | pub fn setup_localization(p: &str) -> Result<(), LocalizationError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore/src/lib/mods/locale.rs:299:9
    |
299 |         LanguageIdentifier::from_str(DEFAULT_LOCALE).expect("Default locale should always be valid")
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/mods/locale.rs:297:1
    |
297 | / pub fn setup_localization(p: &str) -> Result<(), LocalizationError> {
298 | |     let locale = detect_system_locale().unwrap_or_else(|_| {
299 | |         LanguageIdentifier::from_str(DEFAULT_LOCALE).expect("Default locale should always be valid")
300 | |     });
...   |
303 | |     init_localization(&locale, &locales_dir)
304 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:303:5
    |
303 |     init_localization(&locale, &locales_dir)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
303 |     return init_localization(&locale, &locales_dir)
    |     ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/locale.rs:297:27
    |
297 | pub fn setup_localization(p: &str) -> Result<(), LocalizationError> {
    |                           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:299:9
    |
299 |         LanguageIdentifier::from_str(DEFAULT_LOCALE).expect("Default locale should always be valid")
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
299 |         return LanguageIdentifier::from_str(DEFAULT_LOCALE).expect("Default locale should always be valid")
    |         ++++++

warning: used `expect()` on a `Result` value
   --> src/uucore/src/lib/mods/locale.rs:299:9
    |
299 |         LanguageIdentifier::from_str(DEFAULT_LOCALE).expect("Default locale should always be valid")
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: question mark operator was used
   --> src/uucore/src/lib/mods/locale.rs:302:23
    |
302 |     let locales_dir = get_locales_dir(p)?;
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/mods/locale.rs:307:1
    |
307 | fn get_locales_dir(p: &str) -> Result<PathBuf, LocalizationError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:328:9
    |
328 | /         Err(LocalizationError::LocalesDirNotFound(format!(
329 | |             "Development locales directory not found at {} or {}",
330 | |             dev_path.display(),
331 | |             fallback_dev_path.display()
332 | |         )))
    | |___________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
328 |         return Err(LocalizationError::LocalesDirNotFound(format!(
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/locale.rs:307:20
    |
307 | fn get_locales_dir(p: &str) -> Result<PathBuf, LocalizationError> {
    |                    ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this function could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/os.rs:11:1
   |
11 | pub fn is_wsl_1() -> bool {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_wsl_1() -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/os.rs:11:1
   |
11 | / pub fn is_wsl_1() -> bool {
12 | |     #[cfg(target_os = "linux")]
13 | |     {
14 | |         if is_wsl_2() {
...  |
24 | |     false
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/os.rs:24:5
   |
24 |     false
   |     ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
24 |     return false
   |     ++++++

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/os.rs:17:24
   |
17 |         if let Ok(b) = std::fs::read("/proc/sys/kernel/osrelease") {
   |                        ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/os.rs:17:19
   |
17 |         if let Ok(b) = std::fs::read("/proc/sys/kernel/osrelease") {
   |                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/mods/os.rs:18:28
   |
18 |             if let Ok(s) = std::str::from_utf8(&b) {
   |                            ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/os.rs:18:28
   |
18 |             if let Ok(s) = std::str::from_utf8(&b) {
   |                            ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/os.rs:18:23
   |
18 |             if let Ok(s) = std::str::from_utf8(&b) {
   |                       ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/os.rs:19:21
   |
19 |                 let a = s.to_ascii_lowercase();
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this function could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/os.rs:28:1
   |
28 | pub fn is_wsl_2() -> bool {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_wsl_2() -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/os.rs:28:1
   |
28 | / pub fn is_wsl_2() -> bool {
29 | |     #[cfg(target_os = "linux")]
30 | |     {
31 | |         if let Ok(b) = std::fs::read("/proc/sys/kernel/osrelease") {
...  |
38 | |     false
39 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/os.rs:38:5
   |
38 |     false
   |     ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
38 |     return false
   |     ++++++

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/os.rs:31:24
   |
31 |         if let Ok(b) = std::fs::read("/proc/sys/kernel/osrelease") {
   |                        ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/os.rs:31:19
   |
31 |         if let Ok(b) = std::fs::read("/proc/sys/kernel/osrelease") {
   |                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/mods/os.rs:32:28
   |
32 |             if let Ok(s) = std::str::from_utf8(&b) {
   |                            ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/os.rs:32:28
   |
32 |             if let Ok(s) = std::str::from_utf8(&b) {
   |                            ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/os.rs:32:23
   |
32 |             if let Ok(s) = std::str::from_utf8(&b) {
   |                       ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/os.rs:33:21
   |
33 |                 let a = s.to_ascii_lowercase();
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uucore/src/lib/mods/panic.rs:25:5
   |
25 |     false
   |     ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
25 |     return false
   |     ++++++

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/panic.rs:38:1
   |
38 | / pub fn mute_sigpipe_panic() {
39 | |     let hook = panic::take_hook();
40 | |     panic::set_hook(Box::new(move |info| {
41 | |         if !is_broken_pipe(info) {
...  |
44 | |     }));
45 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name ends with its containing module's name
  --> src/uucore/src/lib/mods/panic.rs:38:8
   |
38 | pub fn mute_sigpipe_panic() {
   |        ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: this function could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/posix.rs:33:1
   |
33 | pub fn posix_version() -> Option<usize> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn posix_version() -> Option<usize>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/posix.rs:33:1
   |
33 | / pub fn posix_version() -> Option<usize> {
34 | |     env::var("_POSIX2_VERSION")
35 | |         .ok()
36 | |         .and_then(|v| v.parse::<usize>().ok())
37 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name starts with its containing module's name
  --> src/uucore/src/lib/mods/posix.rs:33:8
   |
33 | pub fn posix_version() -> Option<usize> {
   |        ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
  --> src/uucore/src/lib/mods/posix.rs:34:5
   |
34 | /     env::var("_POSIX2_VERSION")
35 | |         .ok()
36 | |         .and_then(|v| v.parse::<usize>().ok())
   | |______________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
34 |     return env::var("_POSIX2_VERSION")
   |     ++++++

warning: use the question mark operator instead of an `and_then` call
  --> src/uucore/src/lib/mods/posix.rs:34:5
   |
34 | /     env::var("_POSIX2_VERSION")
35 | |         .ok()
36 | |         .and_then(|v| v.parse::<usize>().ok())
   | |______________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_and_then
help: try
   |
34 ~     let v = env::var("_POSIX2_VERSION")
35 +         .ok()?;
36 +     v.parse::<usize>().ok()
   |

warning: missing `return` statement
  --> src/uucore/src/lib/mods/posix.rs:36:23
   |
36 |         .and_then(|v| v.parse::<usize>().ok())
   |                       ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
36 |         .and_then(|v| return v.parse::<usize>().ok())
   |                       ++++++

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/posix.rs:36:20
   |
36 |         .and_then(|v| v.parse::<usize>().ok())
   |                    ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: used import from `std` instead of `alloc`
   --> src/uucore/src/lib/lib.rs:120:5
    |
120 | use std::borrow::Cow;
    |     ^^^ help: consider importing the item from `alloc`: `alloc`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: importing trait that is only used anonymously
   --> src/uucore/src/lib/lib.rs:122:15
    |
122 | use std::io::{BufRead, BufReader};
    |               ^^^^^^^ help: use: `BufRead as _`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/lib.rs:123:5
    |
123 | use std::iter;
    |     ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: importing trait that is only used anonymously
   --> src/uucore/src/lib/lib.rs:125:26
    |
125 | use std::os::unix::ffi::{OsStrExt, OsStringExt};
    |                          ^^^^^^^^ help: use: `OsStrExt as _`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
   --> src/uucore/src/lib/lib.rs:125:36
    |
125 | use std::os::unix::ffi::{OsStrExt, OsStringExt};
    |                                    ^^^^^^^^^^^ help: use: `OsStringExt as _`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: used import from `std` instead of `alloc`
   --> src/uucore/src/lib/lib.rs:126:5
    |
126 | use std::str;
    |     ^^^ help: consider importing the item from `alloc`: `alloc`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/lib.rs:127:5
    |
127 | use std::sync::{LazyLock, atomic::Ordering};
    |     ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: first doc comment paragraph is too long
   --> src/uucore/src/lib/lib.rs:129:1
    |
129 | / /// Disables the custom signal handlers installed by Rust for stack-overflow handling. With those custom signal handlers processes ignore...
130 | | /// See <https://github.com/rust-lang/rust/blob/8ac1525e091d3db28e67adcbbd6db1e1deaa37fb/src/libstd/sys/unix/stack_overflow.rs#L71-L92> f...
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph
    = note: `-W clippy::too-long-first-doc-paragraph` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::too_long_first_doc_paragraph)]`
help: add an empty line
    |
130 | /// Disables the custom signal handlers installed by Rust for stack-overflow handling. With those custom signal handlers processes ignore the first SIGBUS and SIGSEGV signal they receive.
131 + ///
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/lib.rs:132:1
    |
132 | pub fn disable_rust_signal_handlers() -> Result<(), Errno> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:132:1
    |
132 | / pub fn disable_rust_signal_handlers() -> Result<(), Errno> {
133 | |     unsafe {
134 | |         sigaction(
135 | |             SIGSEGV,
...   |
145 | |     Ok(())
146 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:145:5
    |
145 |     Ok(())
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
145 |     return Ok(())
    |     ++++++

warning: question mark operator was used
   --> src/uucore/src/lib/lib.rs:133:5
    |
133 | /     unsafe {
134 | |         sigaction(
135 | |             SIGSEGV,
136 | |             &SigAction::new(SigDfl, SaFlags::empty(), SigSet::all()),
137 | |         )
138 | |     }?;
    | |______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: unsafe block missing a safety comment
   --> src/uucore/src/lib/lib.rs:133:5
    |
133 |     unsafe {
    |     ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks
    = note: `-W clippy::undocumented-unsafe-blocks` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::undocumented_unsafe_blocks)]`

warning: question mark operator was used
   --> src/uucore/src/lib/lib.rs:139:5
    |
139 | /     unsafe {
140 | |         sigaction(
141 | |             SIGBUS,
142 | |             &SigAction::new(SigDfl, SaFlags::empty(), SigSet::all()),
143 | |         )
144 | |     }?;
    | |______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: unsafe block missing a safety comment
   --> src/uucore/src/lib/lib.rs:139:5
    |
139 |     unsafe {
    |     ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:197:1
    |
197 | pub fn format_usage(s: &str) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn format_usage(s: &str) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:197:1
    |
197 | / pub fn format_usage(s: &str) -> String {
198 | |     let s = s.replace('\n', &format!("\n{}", " ".repeat(7)));
199 | |     s.replace("{}", crate::execution_phrase())
200 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:199:5
    |
199 |     s.replace("{}", crate::execution_phrase())
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
199 |     return s.replace("{}", crate::execution_phrase())
    |     ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/lib.rs:197:21
    |
197 | pub fn format_usage(s: &str) -> String {
    |                     ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `s` is shadowed
   --> src/uucore/src/lib/lib.rs:198:9
    |
198 |     let s = s.replace('\n', &format!("\n{}", " ".repeat(7)));
    |         ^
    |
note: previous binding is here
   --> src/uucore/src/lib/lib.rs:197:21
    |
197 | pub fn format_usage(s: &str) -> String {
    |                     ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: this ident consists of a single char
   --> src/uucore/src/lib/lib.rs:198:9
    |
198 |     let s = s.replace('\n', &format!("\n{}", " ".repeat(7)));
    |         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:204:1
    |
204 | / pub fn get_utility_is_second_arg() -> bool {
205 | |     crate::macros::UTILITY_IS_SECOND_ARG.load(Ordering::SeqCst)
206 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:205:5
    |
205 |     crate::macros::UTILITY_IS_SECOND_ARG.load(Ordering::SeqCst)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
205 |     return crate::macros::UTILITY_IS_SECOND_ARG.load(Ordering::SeqCst)
    |     ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/lib.rs:205:5
    |
205 |     crate::macros::UTILITY_IS_SECOND_ARG.load(Ordering::SeqCst)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:210:1
    |
210 | / pub fn set_utility_is_second_arg() {
211 | |     crate::macros::UTILITY_IS_SECOND_ARG.store(true, Ordering::SeqCst);
212 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/lib.rs:211:5
    |
211 |     crate::macros::UTILITY_IS_SECOND_ARG.store(true, Ordering::SeqCst);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing documentation for a static
   --> src/uucore/src/lib/lib.rs:216:1
    |
216 | static ARGV: LazyLock<Vec<OsString>> = LazyLock::new(|| wild::args_os().collect());
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:216:57
    |
216 | static ARGV: LazyLock<Vec<OsString>> = LazyLock::new(|| wild::args_os().collect());
    |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
216 | static ARGV: LazyLock<Vec<OsString>> = LazyLock::new(|| return wild::args_os().collect());
    |                                                         ++++++

warning: missing documentation for a static
   --> src/uucore/src/lib/lib.rs:218:1
    |
218 | / static UTIL_NAME: LazyLock<String> = LazyLock::new(|| {
219 | |     let base_index = usize::from(get_utility_is_second_arg());
220 | |     let is_man = usize::from(ARGV[base_index].eq("manpage"));
221 | |     let argv_index = base_index + is_man;
222 | |
223 | |     ARGV[argv_index].to_string_lossy().into_owned()
224 | | });
    | |___^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:223:5
    |
223 |     ARGV[argv_index].to_string_lossy().into_owned()
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
223 |     return ARGV[argv_index].to_string_lossy().into_owned()
    |     ++++++

warning: indexing may panic
   --> src/uucore/src/lib/lib.rs:220:30
    |
220 |     let is_man = usize::from(ARGV[base_index].eq("manpage"));
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: indexing may panic
   --> src/uucore/src/lib/lib.rs:223:5
    |
223 |     ARGV[argv_index].to_string_lossy().into_owned()
    |     ^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:227:1
    |
227 | pub fn util_name() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn util_name() -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:227:1
    |
227 | / pub fn util_name() -> &'static str {
228 | |     &UTIL_NAME
229 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:228:5
    |
228 |     &UTIL_NAME
    |     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
228 |     return &UTIL_NAME
    |     ++++++

warning: missing documentation for a static
   --> src/uucore/src/lib/lib.rs:231:1
    |
231 | / static EXECUTION_PHRASE: LazyLock<String> = LazyLock::new(|| {
232 | |     if get_utility_is_second_arg() {
233 | |         ARGV.iter()
234 | |             .take(2)
...   |
241 | | });
    | |___^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:233:9
    |
233 | /         ARGV.iter()
234 | |             .take(2)
235 | |             .map(|os_str| os_str.to_string_lossy().into_owned())
236 | |             .collect::<Vec<_>>()
237 | |             .join(" ")
    | |______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
233 |         return ARGV.iter()
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:239:9
    |
239 |         ARGV[0].to_string_lossy().into_owned()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
239 |         return ARGV[0].to_string_lossy().into_owned()
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:235:27
    |
235 |             .map(|os_str| os_str.to_string_lossy().into_owned())
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
235 |             .map(|os_str| return os_str.to_string_lossy().into_owned())
    |                           ++++++

warning: indexing may panic
   --> src/uucore/src/lib/lib.rs:239:9
    |
239 |         ARGV[0].to_string_lossy().into_owned()
    |         ^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:244:1
    |
244 | pub fn execution_phrase() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn execution_phrase() -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:244:1
    |
244 | / pub fn execution_phrase() -> &'static str {
245 | |     &EXECUTION_PHRASE
246 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:245:5
    |
245 |     &EXECUTION_PHRASE
    |     ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
245 |     return &EXECUTION_PHRASE
    |     ++++++

warning: first doc comment paragraph is too long
   --> src/uucore/src/lib/lib.rs:248:1
    |
248 | / /// Args contains arguments passed to the utility.
249 | | /// It is a trait that extends `Iterator<Item = OsString>`.
250 | | /// It provides utility functions to collect the arguments into a `Vec<String>`.
251 | | /// The collected `Vec<String>` can be lossy or ignore invalid encoding.
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph
help: add an empty line
    |
249 | /// Args contains arguments passed to the utility.
250 + ///
    |

warning: missing `#[inline]` for a default trait method
   --> src/uucore/src/lib/lib.rs:254:5
    |
254 | /     fn collect_lossy(self) -> Vec<String> {
255 | |         self.map(|s| s.to_string_lossy().into_owned()).collect()
256 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `#[inline]` for a default trait method
   --> src/uucore/src/lib/lib.rs:259:5
    |
259 | /     fn collect_ignore(self) -> Vec<String> {
260 | |         self.filter_map(|s| s.into_string().ok()).collect()
261 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/lib.rs:259:8
    |
259 |     fn collect_ignore(self) -> Vec<String> {
    |        ^^^^^^^^^^^^^^
    |
note: should be placed before `collect_lossy`
   --> src/uucore/src/lib/lib.rs:254:8
    |
254 |     fn collect_lossy(self) -> Vec<String> {
    |        ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:255:9
    |
255 |         self.map(|s| s.to_string_lossy().into_owned()).collect()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
255 |         return self.map(|s| s.to_string_lossy().into_owned()).collect()
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:255:22
    |
255 |         self.map(|s| s.to_string_lossy().into_owned()).collect()
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
255 |         self.map(|s| return s.to_string_lossy().into_owned()).collect()
    |                      ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/lib.rs:255:19
    |
255 |         self.map(|s| s.to_string_lossy().into_owned()).collect()
    |                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:260:9
    |
260 |         self.filter_map(|s| s.into_string().ok()).collect()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
260 |         return self.filter_map(|s| s.into_string().ok()).collect()
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:260:29
    |
260 |         self.filter_map(|s| s.into_string().ok()).collect()
    |                             ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
260 |         self.filter_map(|s| return s.into_string().ok()).collect()
    |                             ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/lib.rs:260:26
    |
260 |         self.filter_map(|s| s.into_string().ok()).collect()
    |                          ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing trait method provided by default: `collect_lossy`
   --> src/uucore/src/lib/lib.rs:264:1
    |
264 | impl<T: Iterator<Item = OsString> + Sized> Args for T {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/lib.rs:254:5
    |
254 |     fn collect_lossy(self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `collect_ignore`
   --> src/uucore/src/lib/lib.rs:264:1
    |
264 | impl<T: Iterator<Item = OsString> + Sized> Args for T {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/lib.rs:259:5
    |
259 |     fn collect_ignore(self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/lib.rs:267:5
    |
267 | /// args_os() can be expensive to call
    |     ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
267 - /// args_os() can be expensive to call
267 + /// `args_os()` can be expensive to call
    |

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:268:1
    |
268 | / pub fn args_os() -> impl Iterator<Item = OsString> {
269 | |     ARGV.iter().cloned()
270 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:269:5
    |
269 |     ARGV.iter().cloned()
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
269 |     return ARGV.iter().cloned()
    |     ++++++

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:273:1
    |
273 | pub fn read_yes() -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn read_yes() -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:273:1
    |
273 | / pub fn read_yes() -> bool {
274 | |     let mut s = String::new();
275 | |     match std::io::stdin().read_line(&mut s) {
276 | |         Ok(_) => matches!(s.chars().next(), Some('y' | 'Y')),
...   |
279 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:276:18
    |
276 |         Ok(_) => matches!(s.chars().next(), Some('y' | 'Y')),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
276 |         Ok(_) => return matches!(s.chars().next(), Some('y' | 'Y')),
    |                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:277:14
    |
277 |         _ => false,
    |              ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
277 |         _ => return false,
    |              ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/lib.rs:274:13
    |
274 |     let mut s = String::new();
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/lib.rs:275:11
    |
275 |     match std::io::stdin().read_line(&mut s) {
    |           ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/lib.rs:285:1
    |
285 | pub fn os_str_as_bytes(os_string: &OsStr) -> mods::error::UResult<&[u8]> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:285:1
    |
285 | / pub fn os_str_as_bytes(os_string: &OsStr) -> mods::error::UResult<&[u8]> {
286 | |     #[cfg(unix)]
287 | |     let bytes = os_string.as_bytes();
...   |
297 | |     Ok(bytes)
298 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:297:5
    |
297 |     Ok(bytes)
    |     ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
297 |     return Ok(bytes)
    |     ++++++

warning: this function's return value is unnecessarily wrapped by `Result`
   --> src/uucore/src/lib/lib.rs:285:1
    |
285 | / pub fn os_str_as_bytes(os_string: &OsStr) -> mods::error::UResult<&[u8]> {
286 | |     #[cfg(unix)]
287 | |     let bytes = os_string.as_bytes();
...   |
297 | |     Ok(bytes)
298 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
    = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Result` from the return type...
    |
285 - pub fn os_str_as_bytes(os_string: &OsStr) -> mods::error::UResult<&[u8]> {
285 + pub fn os_str_as_bytes(os_string: &OsStr) -> &[u8] {
    |
help: ...and then change returning expressions
    |
297 -     Ok(bytes)
297 +     bytes
    |

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:304:1
    |
304 | pub fn os_str_as_bytes_lossy(os_string: &OsStr) -> Cow<[u8]> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn os_str_as_bytes_lossy(os_string: &OsStr) -> Cow<[u8]>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:304:1
    |
304 | / pub fn os_str_as_bytes_lossy(os_string: &OsStr) -> Cow<[u8]> {
305 | |     #[cfg(unix)]
306 | |     let bytes = Cow::from(os_string.as_bytes());
...   |
314 | |     bytes
315 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:314:5
    |
314 |     bytes
    |     ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
314 |     return bytes
    |     ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/lib.rs:322:1
    |
322 | pub fn os_str_from_bytes(bytes: &[u8]) -> mods::error::UResult<Cow<'_, OsStr>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:322:1
    |
322 | / pub fn os_str_from_bytes(bytes: &[u8]) -> mods::error::UResult<Cow<'_, OsStr>> {
323 | |     #[cfg(unix)]
324 | |     let os_str = Cow::Borrowed(OsStr::from_bytes(bytes));
325 | |     #[cfg(not(unix))]
...   |
330 | |     Ok(os_str)
331 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:330:5
    |
330 |     Ok(os_str)
    |     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
330 |     return Ok(os_str)
    |     ++++++

warning: this function's return value is unnecessarily wrapped by `Result`
   --> src/uucore/src/lib/lib.rs:322:1
    |
322 | / pub fn os_str_from_bytes(bytes: &[u8]) -> mods::error::UResult<Cow<'_, OsStr>> {
323 | |     #[cfg(unix)]
324 | |     let os_str = Cow::Borrowed(OsStr::from_bytes(bytes));
325 | |     #[cfg(not(unix))]
...   |
330 | |     Ok(os_str)
331 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
322 - pub fn os_str_from_bytes(bytes: &[u8]) -> mods::error::UResult<Cow<'_, OsStr>> {
322 + pub fn os_str_from_bytes(bytes: &[u8]) -> std::borrow::Cow<'_, std::ffi::OsStr> {
    |
help: ...and then change returning expressions
    |
330 -     Ok(os_str)
330 +     os_str
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/lib.rs:337:1
    |
337 | pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:337:1
    |
337 | / pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
338 | |     #[cfg(unix)]
339 | |     let s = OsString::from_vec(vec);
340 | |     #[cfg(not(unix))]
...   |
345 | |     Ok(s)
346 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:345:5
    |
345 |     Ok(s)
    |     ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
345 |     return Ok(s)
    |     ++++++

warning: this function's return value is unnecessarily wrapped by `Result`
   --> src/uucore/src/lib/lib.rs:337:1
    |
337 | / pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
338 | |     #[cfg(unix)]
339 | |     let s = OsString::from_vec(vec);
340 | |     #[cfg(not(unix))]
...   |
345 | |     Ok(s)
346 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
337 - pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
337 + pub fn os_string_from_vec(vec: Vec<u8>) -> std::ffi::OsString {
    |
help: ...and then change returning expressions
    |
345 -     Ok(s)
345 +     s
    |

warning: this ident consists of a single char
   --> src/uucore/src/lib/lib.rs:339:9
    |
339 |     let s = OsString::from_vec(vec);
    |         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:350:1
    |
350 | / pub fn read_byte_lines<R: std::io::Read>(
351 | |     mut buf_reader: BufReader<R>,
352 | | ) -> impl Iterator<Item = Vec<u8>> {
353 | |     iter::from_fn(move || {
...   |
370 | |     })
371 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:353:5
    |
353 | /     iter::from_fn(move || {
354 | |         let mut buf = Vec::with_capacity(256);
355 | |         let size = buf_reader.read_until(b'\n', &mut buf).ok()?;
...   |
369 | |         Some(buf)
370 | |     })
    | |______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
353 |     return iter::from_fn(move || {
    |     ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/lib.rs:350:27
    |
350 | pub fn read_byte_lines<R: std::io::Read>(
    |                           ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:369:9
    |
369 |         Some(buf)
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
369 |         return Some(buf)
    |         ++++++

warning: question mark operator was used
   --> src/uucore/src/lib/lib.rs:355:20
    |
355 |         let size = buf_reader.read_until(b'\n', &mut buf).ok()?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/lib.rs:376:1
    |
376 | / pub fn read_os_string_lines<R: std::io::Read>(
377 | |     buf_reader: BufReader<R>,
378 | | ) -> impl Iterator<Item = OsString> {
    | |___________________________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/lib.rs:379:49
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:376:1
    |
376 | / pub fn read_os_string_lines<R: std::io::Read>(
377 | |     buf_reader: BufReader<R>,
378 | | ) -> impl Iterator<Item = OsString> {
379 | |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
380 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:379:5
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
379 |     return read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |       +++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/lib.rs:376:32
    |
376 | pub fn read_os_string_lines<R: std::io::Read>(
    |                                ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:379:49
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| return os_string_from_vec(byte_line).expect("UTF-8 error"))
    |                                                 ++++++

warning: used `expect()` on a `Result` value
   --> src/uucore/src/lib/lib.rs:379:49
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: method's name is the same as an existing method in a trait
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:105:5
    |
105 | /     pub fn zero() -> Self {
106 | |         Self::BigDecimal(0.into())
107 | |     }
    | |_____^
    |
note: existing `zero` defined here
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:129:5
    |
129 | /     fn zero() -> Self {
130 | |         Self::BigDecimal(BigDecimal::zero())
131 | |     }
    | |_____^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#same_name_method
    = note: `-W clippy::same-name-method` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::same_name_method)]`

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/num_parser.rs:266:1
    |
266 | / fn parse_digits(base: Base, str: &str, fractional: bool) -> (Option<BigUint>, u64, &str) {
267 | |     // Parse the integral part of the number
268 | |     let (digits, rest) = base.parse_digits(str);
...   |
278 | |     (digits, 0, rest)
279 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/features/parser/num_parser.rs:536:33
    |
536 |     let (digits, scale, rest) = parse_digits(base, rest, parse_frac_exp);
    |                                 ^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn
    = note: `-W clippy::single-call-fn` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::single_call_fn)]`

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/num_parser.rs:281:1
    |
281 | / fn parse_exponent(base: Base, str: &str) -> (Option<BigInt>, &str) {
282 | |     let exp_chars = match base {
283 | |         Base::Decimal => ['e', 'E'],
284 | |         Base::Hexadecimal => ['p', 'P'],
...   |
307 | |     (None, str)
308 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/features/parser/num_parser.rs:540:9
    |
540 |         parse_exponent(base, rest)
    |         ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/num_parser.rs:325:1
    |
325 | / fn parse_special_value<'a>(
326 | |     input: &'a str,
327 | |     negative: bool,
328 | |     allowed_suffixes: &[(char, u32)],
...   |
357 | |     Err(ExtendedParserError::NotNumeric)
358 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/features/parser/num_parser.rs:560:13
    |
560 |             parse_special_value(unsigned, negative, allowed_suffixes)
    |             ^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/num_parser.rs:405:1
    |
405 | / fn construct_extended_big_decimal<'a>(
406 | |     digits: BigUint,
407 | |     negative: bool,
408 | |     base: Base,
...   |
469 | |     Ok(ExtendedBigDecimal::BigDecimal(bd))
470 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/features/parser/num_parser.rs:569:9
    |
569 |         construct_extended_big_decimal(digits, negative, base, scale, exponent.unwrap_or_default());
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uucore/src/lib/features/parser/parse_glob.rs:13:1
   |
13 | / fn fix_negation(glob: &str) -> String {
14 | |     let mut chars = glob.chars().collect::<Vec<_>>();
15 | |
16 | |     let mut i = 0;
...  |
37 | |     chars.into_iter().collect::<String>()
38 | | }
   | |_^
   |
note: used here
  --> src/uucore/src/lib/features/parser/parse_glob.rs:56:19
   |
56 |     Pattern::new(&fix_negation(glob))
   |                   ^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/parse_size.rs:309:5
    |
309 | /     fn determine_number_system(size: &str) -> NumberSystem {
310 | |         if size.len() <= 1 {
311 | |             return NumberSystem::Decimal;
...   |
328 | |         NumberSystem::Decimal
329 | |     }
    | |_____^
    |
note: used here
   --> src/uucore/src/lib/features/parser/parse_size.rs:155:29
    |
155 |         let number_system = Self::determine_number_system(size);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/parse_size.rs:45:1
    |
45  | / fn total_physical_memory() -> Result<u128, SystemError> {
...   |
64  | |     Err(SystemError::NotFound)
65  | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/features/parser/parse_size.rs:200:26
    |
200 |             return match total_physical_memory() {
    |                          ^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/parse_size.rs:360:1
    |
360 | / pub fn parse_size_u64(size: &str) -> Result<u64, ParseSizeError> {
361 | |     Parser::default().parse_u64(size)
362 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/features/parser/parse_size.rs:367:5
    |
367 |     parse_size_u64(size)
    |     ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:65:1
   |
65 | / fn add_ambiguous_value_tip(
66 | |     possible_values: &[&PossibleValue],
67 | |     err: &mut clap::error::Error,
68 | |     value: &str,
...  |
85 | |     );
86 | | }
   | |_^
   |
note: used here
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:58:13
   |
58 |             add_ambiguous_value_tip(possible_values, &mut err, value);
   |             ^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/mods/error.rs:459:1
    |
459 | / pub fn strip_errno(err: &std::io::Error) -> String {
460 | |     let mut msg = err.to_string();
461 | |     if let Some(pos) = msg.find(" (os error ") {
462 | |         msg.truncate(pos);
463 | |     }
464 | |     msg
465 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/mods/error.rs:437:31
    |
437 |                     message = strip_errno(&self.inner);
    |                               ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/mods/error.rs:655:5
    |
655 | /     pub fn new(code: i32) -> Box<dyn UError> {
656 | |         Box::new(Self(code))
657 | |     }
    | |_____^
    |
note: used here
   --> src/uucore/src/lib/mods/error.rs:676:9
    |
676 |         ExitCode::new(i)
    |         ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/mods/locale.rs:249:1
    |
249 | / fn detect_system_locale() -> Result<LanguageIdentifier, LocalizationError> {
250 | |     let locale_str = std::env::var("LANG")
251 | |         .unwrap_or_else(|_| DEFAULT_LOCALE.to_string())
252 | |         .split('.')
...   |
258 | |         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
259 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/mods/locale.rs:298:18
    |
298 |     let locale = detect_system_locale().unwrap_or_else(|_| {
    |                  ^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/mods/locale.rs:307:1
    |
307 | / fn get_locales_dir(p: &str) -> Result<PathBuf, LocalizationError> {
308 | |     #[cfg(debug_assertions)]
...   |
365 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/mods/locale.rs:302:23
    |
302 |     let locales_dir = get_locales_dir(p)?;
    |                       ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/mods/locale.rs:102:1
    |
102 | / fn init_localization(
103 | |     locale: &LanguageIdentifier,
104 | |     locales_dir: &Path,
105 | | ) -> Result<(), LocalizationError> {
...   |
128 | |     Ok(())
129 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/mods/locale.rs:303:5
    |
303 |     init_localization(&locale, &locales_dir)
    |     ^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uucore/src/lib/mods/os.rs:28:1
   |
28 | / pub fn is_wsl_2() -> bool {
29 | |     #[cfg(target_os = "linux")]
30 | |     {
31 | |         if let Ok(b) = std::fs::read("/proc/sys/kernel/osrelease") {
...  |
38 | |     false
39 | | }
   | |_^
   |
note: used here
  --> src/uucore/src/lib/mods/os.rs:14:12
   |
14 |         if is_wsl_2() {
   |            ^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uucore/src/lib/mods/panic.rs:19:1
   |
19 | / fn is_broken_pipe(info: &PanicHookInfo) -> bool {
20 | |     if let Some(res) = info.payload().downcast_ref::<String>() {
21 | |         if res.contains("BrokenPipe") || res.contains("Broken pipe") {
22 | |             return true;
...  |
25 | |     false
26 | | }
   | |_^
   |
note: used here
  --> src/uucore/src/lib/mods/panic.rs:41:13
   |
41 |         if !is_broken_pipe(info) {
   |             ^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/lib.rs:244:1
    |
244 | / pub fn execution_phrase() -> &'static str {
245 | |     &EXECUTION_PHRASE
246 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/lib.rs:199:21
    |
199 |     s.replace("{}", crate::execution_phrase())
    |                     ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/lib.rs:350:1
    |
350 | / pub fn read_byte_lines<R: std::io::Read>(
351 | |     mut buf_reader: BufReader<R>,
352 | | ) -> impl Iterator<Item = Vec<u8>> {
353 | |     iter::from_fn(move || {
...   |
370 | |     })
371 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/lib.rs:379:5
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |     ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/lib.rs:337:1
    |
337 | / pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
338 | |     #[cfg(unix)]
339 | |     let s = OsString::from_vec(vec);
340 | |     #[cfg(not(unix))]
...   |
345 | |     Ok(s)
346 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/lib.rs:379:49
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |                                                 ^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: `uucore` (lib) generated 1250 warnings (14 duplicates) (run `cargo clippy --fix --lib -p uucore` to apply 412 suggestions)
    Checking uu_truncate v0.1.0 (/mnt/c/Users/sebir/Documents/summer/Research/coreutils/src/uu/truncate)
warning: `mod.rs` files are required, found `src/uu/truncate/src/truncate.rs`
 --> src/uu/truncate/src/truncate.rs:1:1
  |
1 | // This file is part of the uutils coreutils package.
  | ^
  |
  = help: move `src/uu/truncate/src/truncate.rs` to `src/uu/truncate/src/truncate/mod.rs`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#self_named_module_files
  = note: `-W clippy::self-named-module-files` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::self_named_module_files)]`

warning: missing documentation for the crate
   --> src/uu/truncate/src/truncate.rs:7:1
    |
7   | / use clap::{Arg, ArgAction, Command};
8   | | use std::fs::{OpenOptions, metadata};
9   | | use std::io::ErrorKind;
10  | | #[cfg(unix)]
...   |
431 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items
    = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_docs_in_private_items)]`

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uu/truncate/src/truncate.rs:74:7
   |
74 | const ABOUT: &str = help_about!("truncate.md");
   |       ^^^^^
   |
note: should be placed before the following item
  --> src/uu/truncate/src/truncate.rs:29:1
   |
29 | / impl TruncateMode {
30 | |     /// Compute a target size in bytes for this truncate mode.
31 | |     ///
32 | |     /// `fsize` is the size of the reference file, in bytes.
...  |
72 | | }
   | |_^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering
   = note: `-W clippy::arbitrary-source-item-ordering` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::arbitrary_source_item_ordering)]`

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uu/truncate/src/truncate.rs:78:9
   |
78 | pub mod options {
   |         ^^^^^^^
   |
note: should be placed before `USAGE`
  --> src/uu/truncate/src/truncate.rs:76:7
   |
76 | const USAGE: &str = help_usage!("truncate.md");
   |       ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: importing trait that is only used anonymously
  --> src/uu/truncate/src/truncate.rs:11:24
   |
11 | use std::os::unix::fs::FileTypeExt;
   |                        ^^^^^^^^^^^ help: use: `FileTypeExt as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names
   = note: `-W clippy::unused-trait-names` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::unused_trait_names)]`

warning: importing trait that is only used anonymously
  --> src/uu/truncate/src/truncate.rs:13:22
   |
13 | use uucore::display::Quotable;
   |                      ^^^^^^^^ help: use: `Quotable as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uu/truncate/src/truncate.rs:14:21
   |
14 | use uucore::error::{FromIo, UResult, USimpleError, UUsageError};
   |                     ^^^^^^ help: use: `FromIo as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: missing documentation for an enum
  --> src/uu/truncate/src/truncate.rs:19:1
   |
19 | / enum TruncateMode {
20 | |     Absolute(u64),
21 | |     Extend(u64),
22 | |     Reduce(u64),
...  |
26 | |     RoundUp(u64),
27 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/truncate/src/truncate.rs:23:5
   |
23 |     AtMost(u64),
   |     ^^^^^^
   |
note: should be placed before `Reduce`
  --> src/uu/truncate/src/truncate.rs:22:5
   |
22 |     Reduce(u64),
   |     ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/truncate/src/truncate.rs:24:5
   |
24 |     AtLeast(u64),
   |     ^^^^^^^
   |
note: should be placed before `AtMost`
  --> src/uu/truncate/src/truncate.rs:23:5
   |
23 |     AtMost(u64),
   |     ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing documentation for a variant
  --> src/uu/truncate/src/truncate.rs:20:5
   |
20 |     Absolute(u64),
   |     ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a variant
  --> src/uu/truncate/src/truncate.rs:21:5
   |
21 |     Extend(u64),
   |     ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a variant
  --> src/uu/truncate/src/truncate.rs:22:5
   |
22 |     Reduce(u64),
   |     ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a variant
  --> src/uu/truncate/src/truncate.rs:23:5
   |
23 |     AtMost(u64),
   |     ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a variant
  --> src/uu/truncate/src/truncate.rs:24:5
   |
24 |     AtLeast(u64),
   |     ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a variant
  --> src/uu/truncate/src/truncate.rs:25:5
   |
25 |     RoundDown(u64),
   |     ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a variant
  --> src/uu/truncate/src/truncate.rs:26:5
   |
26 |     RoundUp(u64),
   |     ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/uu/truncate/src/truncate.rs:57:37
   |
57 |             Self::Absolute(size) => *size,
   |                                     ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
   = note: `-W clippy::implicit-return` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::implicit_return)]`
help: add `return` as shown
   |
57 |             Self::Absolute(size) => return *size,
   |                                     ++++++

warning: missing `return` statement
  --> src/uu/truncate/src/truncate.rs:58:35
   |
58 |             Self::Extend(size) => fsize + size,
   |                                   ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
58 |             Self::Extend(size) => return fsize + size,
   |                                   ++++++

warning: missing `return` statement
  --> src/uu/truncate/src/truncate.rs:61:21
   |
61 |                     0
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
61 |                     return 0
   |                     ++++++

warning: missing `return` statement
  --> src/uu/truncate/src/truncate.rs:63:21
   |
63 |                     fsize - size
   |                     ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
63 |                     return fsize - size
   |                     ++++++

warning: missing `return` statement
  --> src/uu/truncate/src/truncate.rs:66:35
   |
66 |             Self::AtMost(size) => fsize.min(*size),
   |                                   ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
66 |             Self::AtMost(size) => return fsize.min(*size),
   |                                   ++++++

warning: missing `return` statement
  --> src/uu/truncate/src/truncate.rs:67:36
   |
67 |             Self::AtLeast(size) => fsize.max(*size),
   |                                    ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
67 |             Self::AtLeast(size) => return fsize.max(*size),
   |                                    ++++++

warning: missing `return` statement
  --> src/uu/truncate/src/truncate.rs:68:38
   |
68 |             Self::RoundDown(size) => fsize - fsize % size,
   |                                      ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
68 |             Self::RoundDown(size) => return fsize - fsize % size,
   |                                      ++++++

warning: missing `return` statement
  --> src/uu/truncate/src/truncate.rs:69:36
   |
69 |             Self::RoundUp(size) => fsize + fsize % size,
   |                                    ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
69 |             Self::RoundUp(size) => return fsize + fsize % size,
   |                                    ++++++

warning: type of pattern does not match the expression type
  --> src/uu/truncate/src/truncate.rs:57:13
   |
57 |             Self::Absolute(size) => *size,
   |             ^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch
   = note: `-W clippy::pattern-type-mismatch` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::pattern_type_mismatch)]`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uu/truncate/src/truncate.rs:58:35
   |
58 |             Self::Extend(size) => fsize + size,
   |                                   ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::arithmetic_side_effects)]`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uu/truncate/src/truncate.rs:63:21
   |
63 |                     fsize - size
   |                     ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uu/truncate/src/truncate.rs:68:38
   |
68 |             Self::RoundDown(size) => fsize - fsize % size,
   |                                      ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: use of % has been disallowed in this context
  --> src/uu/truncate/src/truncate.rs:68:46
   |
68 |             Self::RoundDown(size) => fsize - fsize % size,
   |                                              ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division_remainder_used
   = note: `-W clippy::integer-division-remainder-used` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::integer_division_remainder_used)]`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uu/truncate/src/truncate.rs:69:36
   |
69 |             Self::RoundUp(size) => fsize + fsize % size,
   |                                    ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: use of % has been disallowed in this context
  --> src/uu/truncate/src/truncate.rs:69:44
   |
69 |             Self::RoundUp(size) => fsize + fsize % size,
   |                                            ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division_remainder_used

warning: missing documentation for a constant
  --> src/uu/truncate/src/truncate.rs:74:1
   |
74 | const ABOUT: &str = help_about!("truncate.md");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/uu/truncate/src/truncate.rs:75:1
   |
75 | const AFTER_HELP: &str = help_section!("after help", "truncate.md");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/uu/truncate/src/truncate.rs:76:1
   |
76 | const USAGE: &str = help_usage!("truncate.md");
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `impl Trait` used as a function parameter
  --> src/uu/truncate/src/truncate.rs:86:1
   |
86 | #[uucore::main]
   | ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
   = note: `-W clippy::impl-trait-in-params` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::impl_trait_in_params)]`
   = note: this warning originates in the attribute macro `uucore::main` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: docs for function which may panic missing `# Panics` section
  --> src/uu/truncate/src/truncate.rs:87:1
   |
87 | pub fn uumain(args: impl uucore::Args) -> UResult<()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uu/truncate/src/truncate.rs:92:13
   |
92 |             e.print().expect("Error writing clap::Error");
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uu/truncate/src/truncate.rs:87:1
   |
87 | pub fn uumain(args: impl uucore::Args) -> UResult<()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
   = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:105:9
    |
105 |         Err(UUsageError::new(1, "missing file operand"))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
105 |         return Err(UUsageError::new(1, "missing file operand"))
    |         ++++++

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:113:9
    |
113 |         truncate(no_create, io_blocks, reference, size, &files)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
113 |         return truncate(no_create, io_blocks, reference, size, &files)
    |         ++++++

warning: `impl Trait` used as a function parameter
  --> src/uu/truncate/src/truncate.rs:87:21
   |
87 | pub fn uumain(args: impl uucore::Args) -> UResult<()> {
   |                     ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
help: add a type parameter
   |
87 | pub fn uumain<{ /* Generic name */ }: uucore::Args>(args: impl uucore::Args) -> UResult<()> {
   |              ++++++++++++++++++++++++++++++++++++++

warning: question mark operator was used
  --> src/uu/truncate/src/truncate.rs:88:19
   |
88 |       let matches = uu_app()
   |  ___________________^
89 | |         .after_help(AFTER_HELP)
90 | |         .try_get_matches_from(args)
91 | |         .map_err(|e| {
...  |
97 | |         })?;
   | |___________^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used
   = note: `-W clippy::question-mark-used` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::question_mark_used)]`

warning: missing `return` statement
  --> src/uu/truncate/src/truncate.rs:94:97
   |
94 |                 clap::error::ErrorKind::DisplayHelp | clap::error::ErrorKind::DisplayVersion => 0,
   |                                                                                                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
94 |                 clap::error::ErrorKind::DisplayHelp | clap::error::ErrorKind::DisplayVersion => return 0,
   |                                                                                                 ++++++

warning: missing `return` statement
  --> src/uu/truncate/src/truncate.rs:95:22
   |
95 |                 _ => 1,
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
95 |                 _ => return 1,
   |                      ++++++

warning: default numeric fallback might occur
  --> src/uu/truncate/src/truncate.rs:94:97
   |
94 |                 clap::error::ErrorKind::DisplayHelp | clap::error::ErrorKind::DisplayVersion => 0,
   |                                                                                                 ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback
   = note: `-W clippy::default-numeric-fallback` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::default_numeric_fallback)]`

warning: default numeric fallback might occur
  --> src/uu/truncate/src/truncate.rs:95:22
   |
95 |                 _ => 1,
   |                      ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: this ident consists of a single char
  --> src/uu/truncate/src/truncate.rs:91:19
   |
91 |         .map_err(|e| {
   |                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars
   = note: `-W clippy::min-ident-chars` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::min_ident_chars)]`

warning: used `expect()` on a `Result` value
  --> src/uu/truncate/src/truncate.rs:92:13
   |
92 |             e.print().expect("Error writing clap::Error");
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
   = note: `-W clippy::expect-used` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::expect_used)]`

warning: wildcard matches known variants and will also match future added variants
  --> src/uu/truncate/src/truncate.rs:95:17
   |
95 |                 _ => 1,
   |                 ^ help: try: `clap::error::ErrorKind::InvalidValue | clap::error::ErrorKind::UnknownArgument | clap::error::ErrorKind::InvalidSubcommand | clap::error::ErrorKind::NoEquals | clap::error::ErrorKind::ValueValidation | clap::error::ErrorKind::TooManyValues | clap::error::ErrorKind::TooFewValues | clap::error::ErrorKind::WrongNumberOfValues | clap::error::ErrorKind::ArgumentConflict | clap::error::ErrorKind::MissingRequiredArgument | clap::error::ErrorKind::MissingSubcommand | clap::error::ErrorKind::InvalidUtf8 | clap::error::ErrorKind::DisplayHelpOnMissingArgumentOrSubcommand | clap::error::ErrorKind::Io | clap::error::ErrorKind::Format | _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm
   = note: `-W clippy::wildcard-enum-match-arm` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::wildcard_enum_match_arm)]`

warning: consider bringing this path into scope with the `use` keyword
  --> src/uu/truncate/src/truncate.rs:94:17
   |
94 |                 clap::error::ErrorKind::DisplayHelp | clap::error::ErrorKind::DisplayVersion => 0,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths
   = note: `-W clippy::absolute-paths` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::absolute_paths)]`

warning: consider bringing this path into scope with the `use` keyword
  --> src/uu/truncate/src/truncate.rs:94:55
   |
94 |                 clap::error::ErrorKind::DisplayHelp | clap::error::ErrorKind::DisplayVersion => 0,
   |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:101:18
    |
101 |         .map(|v| v.map(ToString::to_string).collect())
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
101 |         .map(|v| return v.map(ToString::to_string).collect())
    |                  ++++++

warning: this ident consists of a single char
   --> src/uu/truncate/src/truncate.rs:101:15
    |
101 |         .map(|v| v.map(ToString::to_string).collect())
    |               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this function could have a `#[must_use]` attribute
   --> src/uu/truncate/src/truncate.rs:117:1
    |
117 | pub fn uu_app() -> Command {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn uu_app() -> Command`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: missing `#[inline]` for a function
   --> src/uu/truncate/src/truncate.rs:117:1
    |
117 | / pub fn uu_app() -> Command {
118 | |     Command::new(uucore::util_name())
119 | |         .version(uucore::crate_version!())
120 | |         .about(ABOUT)
...   |
167 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items
    = note: `-W clippy::missing-inline-in-public-items` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_inline_in_public_items)]`

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:118:5
    |
118 | /     Command::new(uucore::util_name())
119 | |         .version(uucore::crate_version!())
120 | |         .about(ABOUT)
121 | |         .override_usage(format_usage(USAGE))
...   |
165 | |                 .value_hint(clap::ValueHint::FilePath),
166 | |         )
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
118 |     return Command::new(uucore::util_name())
    |     ++++++

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:195:5
    |
195 | /     match OpenOptions::new().write(true).create(create).open(path) {
196 | |         Ok(file) => file.set_len(size),
197 | |         Err(e) if e.kind() == ErrorKind::NotFound && !create => Ok(()),
198 | |         Err(e) => Err(e),
199 | |     }
200 | |     .map_err_context(|| format!("cannot open {} for writing", filename.quote()))
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
195 |     return match OpenOptions::new().write(true).create(create).open(path) {
    |     ++++++

warning: this ident consists of a single char
   --> src/uu/truncate/src/truncate.rs:197:13
    |
197 |         Err(e) if e.kind() == ErrorKind::NotFound && !create => Ok(()),
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uu/truncate/src/truncate.rs:198:13
    |
198 |         Err(e) => Err(e),
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:254:5
    |
254 |     Ok(())
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
254 |     return Ok(())
    |     ++++++

warning: this ident consists of a single char
   --> src/uu/truncate/src/truncate.rs:227:13
    |
227 |         Err(e) => return Err(USimpleError::new(1, format!("Invalid number: {e}"))),
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uu/truncate/src/truncate.rs:234:12
    |
234 |         Ok(m) => m,
    |            ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: question mark operator was used
   --> src/uu/truncate/src/truncate.rs:239:20
    |
239 |       let metadata = metadata(rfilename).map_err(|e| match e.kind() {
    |  ____________________^
240 | |         ErrorKind::NotFound => USimpleError::new(
241 | |             1,
242 | |             format!(
...   |
247 | |         _ => e.map_err_context(String::new),
248 | |     })?;
    | |_______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:240:32
    |
240 |           ErrorKind::NotFound => USimpleError::new(
    |  ________________________________^
241 | |             1,
242 | |             format!(
243 | |                 "cannot stat {}: No such file or directory",
244 | |                 rfilename.quote()
245 | |             ),
246 | |         ),
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
240 |         ErrorKind::NotFound => return USimpleError::new(
    |                                ++++++

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:247:14
    |
247 |         _ => e.map_err_context(String::new),
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
247 |         _ => return e.map_err_context(String::new),
    |              ++++++

warning: this ident consists of a single char
   --> src/uu/truncate/src/truncate.rs:239:49
    |
239 |     let metadata = metadata(rfilename).map_err(|e| match e.kind() {
    |                                                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: wildcard matches known variants and will also match future added variants
   --> src/uu/truncate/src/truncate.rs:247:9
    |
247 |         _ => e.map_err_context(String::new),
    |         ^ help: try: `ErrorKind::PermissionDenied | ErrorKind::ConnectionRefused | ErrorKind::ConnectionReset | ErrorKind::HostUnreachable | ErrorKind::NetworkUnreachable | ErrorKind::ConnectionAborted | ErrorKind::NotConnected | ErrorKind::AddrInUse | ErrorKind::AddrNotAvailable | ErrorKind::NetworkDown | ErrorKind::BrokenPipe | ErrorKind::AlreadyExists | ErrorKind::WouldBlock | ErrorKind::NotADirectory | ErrorKind::IsADirectory | ErrorKind::DirectoryNotEmpty | ErrorKind::ReadOnlyFilesystem | ErrorKind::FilesystemLoop | ErrorKind::StaleNetworkFileHandle | ErrorKind::InvalidInput | ErrorKind::InvalidData | ErrorKind::TimedOut | ErrorKind::WriteZero | ErrorKind::StorageFull | ErrorKind::NotSeekable | ErrorKind::QuotaExceeded | ErrorKind::FileTooLarge | ErrorKind::ResourceBusy | ErrorKind::ExecutableFileBusy | ErrorKind::Deadlock | ErrorKind::CrossesDevices | ErrorKind::TooManyLinks | ErrorKind::InvalidFilename | ErrorKind::ArgumentListTooLong | ErrorKind::Interrupted | ErrorKind::Unsupported | ErrorKind::UnexpectedEof | ErrorKind::OutOfMemory | ErrorKind::InProgress | ErrorKind::Other | _`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: question mark operator was used
   --> src/uu/truncate/src/truncate.rs:252:9
    |
252 |         file_truncate(filename, create, tsize)?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:289:5
    |
289 |     Ok(())
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
289 |     return Ok(())
    |     ++++++

warning: question mark operator was used
   --> src/uu/truncate/src/truncate.rs:275:20
    |
275 |       let metadata = metadata(rfilename).map_err(|e| match e.kind() {
    |  ____________________^
276 | |         ErrorKind::NotFound => USimpleError::new(
277 | |             1,
278 | |             format!(
...   |
283 | |         _ => e.map_err_context(String::new),
284 | |     })?;
    | |_______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:276:32
    |
276 |           ErrorKind::NotFound => USimpleError::new(
    |  ________________________________^
277 | |             1,
278 | |             format!(
279 | |                 "cannot stat {}: No such file or directory",
280 | |                 rfilename.quote()
281 | |             ),
282 | |         ),
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
276 |         ErrorKind::NotFound => return USimpleError::new(
    |                                ++++++

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:283:14
    |
283 |         _ => e.map_err_context(String::new),
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
283 |         _ => return e.map_err_context(String::new),
    |              ++++++

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uu/truncate/src/truncate.rs:410:5
    |
410 | mod tests {
    |     ^^^^^
    |
note: should be placed before `parse_mode_and_size`
   --> src/uu/truncate/src/truncate.rs:385:4
    |
385 | fn parse_mode_and_size(size_string: &str) -> Result<TruncateMode, ParseSizeError> {
    |    ^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: this ident consists of a single char
   --> src/uu/truncate/src/truncate.rs:275:49
    |
275 |     let metadata = metadata(rfilename).map_err(|e| match e.kind() {
    |                                                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: wildcard matches known variants and will also match future added variants
   --> src/uu/truncate/src/truncate.rs:283:9
    |
283 |         _ => e.map_err_context(String::new),
    |         ^ help: try: `ErrorKind::PermissionDenied | ErrorKind::ConnectionRefused | ErrorKind::ConnectionReset | ErrorKind::HostUnreachable | ErrorKind::NetworkUnreachable | ErrorKind::ConnectionAborted | ErrorKind::NotConnected | ErrorKind::AddrInUse | ErrorKind::AddrNotAvailable | ErrorKind::NetworkDown | ErrorKind::BrokenPipe | ErrorKind::AlreadyExists | ErrorKind::WouldBlock | ErrorKind::NotADirectory | ErrorKind::IsADirectory | ErrorKind::DirectoryNotEmpty | ErrorKind::ReadOnlyFilesystem | ErrorKind::FilesystemLoop | ErrorKind::StaleNetworkFileHandle | ErrorKind::InvalidInput | ErrorKind::InvalidData | ErrorKind::TimedOut | ErrorKind::WriteZero | ErrorKind::StorageFull | ErrorKind::NotSeekable | ErrorKind::QuotaExceeded | ErrorKind::FileTooLarge | ErrorKind::ResourceBusy | ErrorKind::ExecutableFileBusy | ErrorKind::Deadlock | ErrorKind::CrossesDevices | ErrorKind::TooManyLinks | ErrorKind::InvalidFilename | ErrorKind::ArgumentListTooLong | ErrorKind::Interrupted | ErrorKind::Unsupported | ErrorKind::UnexpectedEof | ErrorKind::OutOfMemory | ErrorKind::InProgress | ErrorKind::Other | _`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: question mark operator was used
   --> src/uu/truncate/src/truncate.rs:287:9
    |
287 |         file_truncate(filename, create, tsize)?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:336:5
    |
336 |     Ok(())
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
336 |     return Ok(())
    |     ++++++

warning: question mark operator was used
   --> src/uu/truncate/src/truncate.rs:310:16
    |
310 |       let mode = parse_mode_and_size(size_string)
    |  ________________^
311 | |         .map_err(|e| USimpleError::new(1, format!("Invalid number: {e}")))?;
    | |___________________________________________________________________________^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:311:22
    |
311 |         .map_err(|e| USimpleError::new(1, format!("Invalid number: {e}")))?;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
311 |         .map_err(|e| return USimpleError::new(1, format!("Invalid number: {e}")))?;
    |                      ++++++

warning: this ident consists of a single char
   --> src/uu/truncate/src/truncate.rs:311:19
    |
311 |         .map_err(|e| USimpleError::new(1, format!("Invalid number: {e}")))?;
    |                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uu/truncate/src/truncate.rs:317:16
    |
317 |             Ok(m) => {
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: question mark operator was used
   --> src/uu/truncate/src/truncate.rs:334:9
    |
334 |         file_truncate(filename, create, tsize)?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/truncate/src/truncate.rs:339:1
    |
339 | / fn truncate(
340 | |     no_create: bool,
341 | |     _: bool,
342 | |     reference: Option<String>,
343 | |     size: Option<String>,
344 | |     filenames: &[String],
345 | | ) -> UResult<()> {
    | |________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing documentation for a function
   --> src/uu/truncate/src/truncate.rs:339:1
    |
339 | / fn truncate(
340 | |     no_create: bool,
341 | |     _: bool,
342 | |     reference: Option<String>,
...   |
360 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:354:13
    |
354 |             truncate_reference_and_size(&rfilename, &size_string, filenames, create)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
354 |             return truncate_reference_and_size(&rfilename, &size_string, filenames, create)
    |             ++++++

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:356:36
    |
356 |         (Some(rfilename), None) => truncate_reference_file_only(&rfilename, filenames, create),
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
356 |         (Some(rfilename), None) => return truncate_reference_file_only(&rfilename, filenames, create),
    |                                    ++++++

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:357:38
    |
357 |         (None, Some(size_string)) => truncate_size_only(&size_string, filenames, create),
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
357 |         (None, Some(size_string)) => return truncate_size_only(&size_string, filenames, create),
    |                                      ++++++

warning: usage of the `unreachable!` macro
   --> src/uu/truncate/src/truncate.rs:358:25
    |
358 |         (None, None) => unreachable!(), // this case cannot happen anymore because it's handled by clap
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable
    = note: `-W clippy::unreachable` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::unreachable)]`

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:364:5
    |
364 |     c == '+' || c == '-' || c == '<' || c == '>' || c == '/' || c == '%'
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
364 |     return c == '+' || c == '-' || c == '<' || c == '>' || c == '/' || c == '%'
    |     ++++++

warning: this could be a `const fn`
   --> src/uu/truncate/src/truncate.rs:363:1
    |
363 | / fn is_modifier(c: char) -> bool {
364 | |     c == '+' || c == '-' || c == '<' || c == '>' || c == '/' || c == '%'
365 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
    = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::missing_const_for_fn)]`
help: make the function `const`
    |
363 | const fn is_modifier(c: char) -> bool {
    | +++++

warning: this ident consists of a single char
   --> src/uu/truncate/src/truncate.rs:363:16
    |
363 | fn is_modifier(c: char) -> bool {
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/truncate/src/truncate.rs:385:1
    |
385 | fn parse_mode_and_size(size_string: &str) -> Result<TruncateMode, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:395:9
    |
395 | /         parse_size_u64(size_string).map(match c {
396 | |             '+' => TruncateMode::Extend,
397 | |             '-' => TruncateMode::Reduce,
398 | |             '<' => TruncateMode::AtMost,
...   |
402 | |             _ => TruncateMode::Absolute,
403 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
395 |         return parse_size_u64(size_string).map(match c {
    |         ++++++

warning: missing `return` statement
   --> src/uu/truncate/src/truncate.rs:405:9
    |
405 |         Err(ParseSizeError::ParseFailure(size_string.to_string()))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
405 |         return Err(ParseSizeError::ParseFailure(size_string.to_string()))
    |         ++++++

warning: `mut size_string` is shadowed
   --> src/uu/truncate/src/truncate.rs:387:13
    |
387 |     let mut size_string = size_string.trim();
    |             ^^^^^^^^^^^
    |
note: previous binding is here
   --> src/uu/truncate/src/truncate.rs:385:24
    |
385 | fn parse_mode_and_size(size_string: &str) -> Result<TruncateMode, ParseSizeError> {
    |                        ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse
    = note: `-W clippy::shadow-reuse` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_reuse)]`

warning: this ident consists of a single char
   --> src/uu/truncate/src/truncate.rs:391:17
    |
391 |     if let Some(c) = size_string.chars().next() {
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: indexing into a string may panic if the index is within a UTF-8 character
   --> src/uu/truncate/src/truncate.rs:393:28
    |
393 |             size_string = &size_string[1..];
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice
    = note: `-W clippy::string-slice` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::string_slice)]`

warning: `to_string()` called on a `&str`
   --> src/uu/truncate/src/truncate.rs:405:42
    |
405 |         Err(ParseSizeError::ParseFailure(size_string.to_string()))
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `size_string.to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
    = note: `-W clippy::str-to-string` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::str_to_string)]`

warning: this function is only used once
   --> src/uu/truncate/src/truncate.rs:117:1
    |
117 | / pub fn uu_app() -> Command {
118 | |     Command::new(uucore::util_name())
119 | |         .version(uucore::crate_version!())
120 | |         .about(ABOUT)
...   |
167 | | }
    | |_^
    |
note: used here
   --> src/uu/truncate/src/truncate.rs:88:19
    |
88  |     let matches = uu_app()
    |                   ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn
    = note: `-W clippy::single-call-fn` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::single_call_fn)]`

warning: this function is only used once
   --> src/uu/truncate/src/truncate.rs:339:1
    |
339 | / fn truncate(
340 | |     no_create: bool,
341 | |     _: bool,
342 | |     reference: Option<String>,
...   |
360 | | }
    | |_^
    |
note: used here
   --> src/uu/truncate/src/truncate.rs:113:9
    |
113 |         truncate(no_create, io_blocks, reference, size, &files)
    |         ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/truncate/src/truncate.rs:87:1
    |
87  | / pub fn uumain(args: impl uucore::Args) -> UResult<()> {
88  | |     let matches = uu_app()
89  | |         .after_help(AFTER_HELP)
90  | |         .try_get_matches_from(args)
...   |
115 | | }
    | |_^
    |
note: used here
   --> src/uu/truncate/src/truncate.rs:86:1
    |
86  | #[uucore::main]
    | ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn
    = note: this warning originates in the attribute macro `uucore::main` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: this function is only used once
   --> src/uu/truncate/src/truncate.rs:220:1
    |
220 | / fn truncate_reference_and_size(
221 | |     rfilename: &str,
222 | |     size_string: &str,
223 | |     filenames: &[String],
...   |
254 | |     Ok(())
255 | | }
    | |_^
    |
note: used here
   --> src/uu/truncate/src/truncate.rs:354:13
    |
354 |             truncate_reference_and_size(&rfilename, &size_string, filenames, create)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/truncate/src/truncate.rs:270:1
    |
270 | / fn truncate_reference_file_only(
271 | |     rfilename: &str,
272 | |     filenames: &[String],
273 | |     create: bool,
...   |
289 | |     Ok(())
290 | | }
    | |_^
    |
note: used here
   --> src/uu/truncate/src/truncate.rs:356:36
    |
356 |         (Some(rfilename), None) => truncate_reference_file_only(&rfilename, filenames, create),
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/truncate/src/truncate.rs:309:1
    |
309 | / fn truncate_size_only(size_string: &str, filenames: &[String], create: bool) -> UResult<()> {
310 | |     let mode = parse_mode_and_size(size_string)
311 | |         .map_err(|e| USimpleError::new(1, format!("Invalid number: {e}")))?;
312 | |     if let TruncateMode::RoundDown(0) | TruncateMode::RoundUp(0) = mode {
...   |
336 | |     Ok(())
337 | | }
    | |_^
    |
note: used here
   --> src/uu/truncate/src/truncate.rs:357:38
    |
357 |         (None, Some(size_string)) => truncate_size_only(&size_string, filenames, create),
    |                                      ^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/truncate/src/truncate.rs:363:1
    |
363 | / fn is_modifier(c: char) -> bool {
364 | |     c == '+' || c == '-' || c == '<' || c == '>' || c == '/' || c == '%'
365 | | }
    | |_^
    |
note: used here
   --> src/uu/truncate/src/truncate.rs:392:12
    |
392 |         if is_modifier(c) {
    |            ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: `uu_truncate` (lib) generated 124 warnings (20 duplicates) (run `cargo clippy --fix --lib -p uu_truncate` to apply 35 suggestions)
warning: docs for function which may panic missing `# Panics` section
   --> src/uu/truncate/src/truncate.rs:415:5
    |
415 |     fn test_parse_mode_and_size() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/truncate/src/truncate.rs:416:9
    |
416 |         assert_eq!(parse_mode_and_size("10"), Ok(TruncateMode::Absolute(10)));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/truncate/src/truncate.rs:426:5
    |
426 |     fn test_to_size() {
    |     ^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/truncate/src/truncate.rs:427:9
    |
427 |         assert_eq!(TruncateMode::Extend(5).to_size(10), 15);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: `uu_truncate` (lib test) generated 113 warnings (110 duplicates)
warning: missing documentation for the crate
 --> src/uu/truncate/src/main.rs:1:1
  |
1 | uucore::bin!(uu_truncate);
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items
  = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_docs_in_private_items)]`

warning: usage of `process::exit`
 --> src/uu/truncate/src/main.rs:1:1
  |
1 | uucore::bin!(uu_truncate);
  | ^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exit
  = note: `-W clippy::exit` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::exit)]`
  = note: this warning originates in the macro `uucore::bin` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `uu_truncate` (bin "truncate") generated 10 warnings (9 duplicates)
warning: `uu_truncate` (bin "truncate" test) generated 10 warnings (9 duplicates)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 1m 11s
