   Compiling semver v1.0.26
   Compiling syn v2.0.99
   Compiling hashbrown v0.15.2
   Compiling memchr v2.7.4
   Compiling equivalent v1.0.2
    Checking inotify-sys v0.1.5
   Compiling slab v0.4.9
   Compiling regex-syntax v0.8.5
    Checking log v0.4.26
warning: `clippy::restriction` is not meant to be enabled as a group
  |
  = note: because of the command line `--warn clippy::restriction`
  = help: enable the restriction lints you need individually
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blanket_clippy_restriction_lints
  = note: `-W clippy::blanket-clippy-restriction-lints` implied by `-W clippy::all`
  = help: to override `-W clippy::all` add `#[allow(clippy::blanket_clippy_restriction_lints)]`

warning: package `uucore` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata
  = note: `-W clippy::cargo-common-metadata` implied by `-W clippy::cargo`
  = help: to override `-W clippy::cargo` add `#[allow(clippy::cargo_common_metadata)]`

warning: package `uucore_procs` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uucore_procs` is missing `package.categories` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uuhelp_parser` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uuhelp_parser` is missing `package.keywords` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uuhelp_parser` is missing `package.categories` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uu_stdbuf_libstdbuf` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: package `uutests` is missing `package.readme` metadata
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cargo_common_metadata

warning: missing documentation for a constant
  --> src/uuhelp_parser/src/lib.rs:27:1
   |
27 | const MARKDOWN_CODE_FENCES: &str = "```";
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items
   = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_docs_in_private_items)]`

warning: this function could have a `#[must_use]` attribute
  --> src/uuhelp_parser/src/lib.rs:31:1
   |
31 | pub fn parse_about(content: &str) -> String {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parse_about(content: &str) -> String`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
   = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: missing `#[inline]` for a function
  --> src/uuhelp_parser/src/lib.rs:31:1
   |
31 | / pub fn parse_about(content: &str) -> String {
32 | |     content
33 | |         .lines()
34 | |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
...  |
42 | |         .to_string()
43 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items
   = note: `-W clippy::missing-inline-in-public-items` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_inline_in_public_items)]`

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:32:5
   |
32 | /     content
33 | |         .lines()
34 | |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
35 | |         .skip(1)
...  |
41 | |         .trim()
42 | |         .to_string()
   | |____________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
   = note: `-W clippy::implicit-return` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::implicit_return)]`
help: add `return` as shown
   |
32 |     return content
   |     ++++++

warning: `to_string()` called on a `&str`
  --> src/uuhelp_parser/src/lib.rs:32:5
   |
32 | /     content
33 | |         .lines()
34 | |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
35 | |         .skip(1)
...  |
41 | |         .trim()
42 | |         .to_string()
   | |____________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
   = note: `-W clippy::str-to-string` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::str_to_string)]`
help: try
   |
32 ~     content
33 +         .lines()
34 +         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
35 +         .skip(1)
36 +         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
37 +         .skip(1)
38 +         .take_while(|l| !l.starts_with('#'))
39 +         .collect::<Vec<_>>()
40 +         .join("\n")
41 +         .trim().to_owned()
   |

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:34:25
   |
34 |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
34 |         .skip_while(|l| return !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:34:22
   |
34 |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars
   = note: `-W clippy::min-ident-chars` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::min_ident_chars)]`

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:36:25
   |
36 |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
36 |         .skip_while(|l| return !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:36:22
   |
36 |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:38:25
   |
38 |         .take_while(|l| !l.starts_with('#'))
   |                         ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
38 |         .take_while(|l| return !l.starts_with('#'))
   |                         ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:38:22
   |
38 |         .take_while(|l| !l.starts_with('#'))
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this function could have a `#[must_use]` attribute
  --> src/uuhelp_parser/src/lib.rs:50:1
   |
50 | pub fn parse_usage(content: &str) -> String {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parse_usage(content: &str) -> String`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
  --> src/uuhelp_parser/src/lib.rs:50:1
   |
50 | / pub fn parse_usage(content: &str) -> String {
51 | |     content
52 | |         .lines()
53 | |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
...  |
67 | |         .to_string()
68 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:51:5
   |
51 | /     content
52 | |         .lines()
53 | |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
54 | |         .skip(1)
...  |
66 | |         .trim()
67 | |         .to_string()
   | |____________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
51 |     return content
   |     ++++++

warning: `to_string()` called on a `&str`
  --> src/uuhelp_parser/src/lib.rs:51:5
   |
51 | /     content
52 | |         .lines()
53 | |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
54 | |         .skip(1)
...  |
66 | |         .trim()
67 | |         .to_string()
   | |____________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
help: try
   |
51 ~     content
52 +         .lines()
53 +         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
54 +         .skip(1)
55 +         .take_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
56 +         .map(|l| {
57 +             // Replace the util name (assumed to be the first word) with "{}"
58 +             // to be replaced with the runtime value later.
59 +             if let Some((_util, args)) = l.split_once(' ') {
60 +                 format!("{{}} {args}\n")
61 +             } else {
62 +                 "{}\n".to_string()
63 +             }
64 +         })
65 +         .collect::<String>()
66 +         .trim().to_owned()
   |

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:53:25
   |
53 |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
53 |         .skip_while(|l| return !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:53:22
   |
53 |         .skip_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:55:25
   |
55 |         .take_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
55 |         .take_while(|l| return !l.starts_with(MARKDOWN_CODE_FENCES))
   |                         ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:55:22
   |
55 |         .take_while(|l| !l.starts_with(MARKDOWN_CODE_FENCES))
   |                      ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:60:17
   |
60 |                 format!("{{}} {args}\n")
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
60 |                 return format!("{{}} {args}\n")
   |                 ++++++

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:62:17
   |
62 |                 "{}\n".to_string()
   |                 ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
62 |                 return "{}\n".to_string()
   |                 ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:56:15
   |
56 |         .map(|l| {
   |               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `to_string()` called on a `&str`
  --> src/uuhelp_parser/src/lib.rs:62:17
   |
62 |                 "{}\n".to_string()
   |                 ^^^^^^^^^^^^^^^^^^ help: try: `"{}\n".to_owned()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: this function could have a `#[must_use]` attribute
  --> src/uuhelp_parser/src/lib.rs:73:1
   |
73 | pub fn parse_section(section: &str, content: &str) -> Option<String> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn parse_section(section: &str, content: &str) -> Option<String>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uuhelp_parser/src/lib.rs:73:1
    |
73  | / pub fn parse_section(section: &str, content: &str) -> Option<String> {
74  | |     fn is_section_header(line: &str, section: &str) -> bool {
75  | |         line.strip_prefix("##")
76  | |             .is_some_and(|l| l.trim().to_lowercase() == section)
...   |
101 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uuhelp_parser/src/lib.rs:90:5
    |
90  | /     Some(
91  | |         content
92  | |             .lines()
93  | |             .skip_while(|&l| !is_section_header(l, section))
...   |
99  | |             .to_string(),
100 | |     )
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
90  |     return Some(
    |     ++++++

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:75:9
   |
75 | /         line.strip_prefix("##")
76 | |             .is_some_and(|l| l.trim().to_lowercase() == section)
   | |________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
75 |         return line.strip_prefix("##")
   |         ++++++

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:76:30
   |
76 |             .is_some_and(|l| l.trim().to_lowercase() == section)
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
76 |             .is_some_and(|l| return l.trim().to_lowercase() == section)
   |                              ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:76:27
   |
76 |             .is_some_and(|l| l.trim().to_lowercase() == section)
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `section` is shadowed
  --> src/uuhelp_parser/src/lib.rs:79:9
   |
79 |     let section = &section.to_lowercase();
   |         ^^^^^^^
   |
note: previous binding is here
  --> src/uuhelp_parser/src/lib.rs:73:22
   |
73 | pub fn parse_section(section: &str, content: &str) -> Option<String> {
   |                      ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse
   = note: `-W clippy::shadow-reuse` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_reuse)]`

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:83:32
   |
83 |     if content.lines().all(|l| !is_section_header(l, section)) {
   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
83 |     if content.lines().all(|l| return !is_section_header(l, section)) {
   |                                ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:83:29
   |
83 |     if content.lines().all(|l| !is_section_header(l, section)) {
   |                             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `to_string()` called on a `&str`
  --> src/uuhelp_parser/src/lib.rs:91:9
   |
91 | /         content
92 | |             .lines()
93 | |             .skip_while(|&l| !is_section_header(l, section))
94 | |             .skip(1)
...  |
98 | |             .trim()
99 | |             .to_string(),
   | |________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
help: try
   |
91 ~         content
92 +             .lines()
93 +             .skip_while(|&l| !is_section_header(l, section))
94 +             .skip(1)
95 +             .take_while(|l| !l.starts_with(section_header_prefix))
96 +             .collect::<Vec<_>>()
97 +             .join("\n")
98 ~             .trim().to_owned(),
   |

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:93:30
   |
93 |             .skip_while(|&l| !is_section_header(l, section))
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
93 |             .skip_while(|&l| return !is_section_header(l, section))
   |                              ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:93:27
   |
93 |             .skip_while(|&l| !is_section_header(l, section))
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uuhelp_parser/src/lib.rs:95:29
   |
95 |             .take_while(|l| !l.starts_with(section_header_prefix))
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
95 |             .take_while(|l| return !l.starts_with(section_header_prefix))
   |                             ++++++

warning: this ident consists of a single char
  --> src/uuhelp_parser/src/lib.rs:95:26
   |
95 |             .take_while(|l| !l.starts_with(section_header_prefix))
   |                          ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `uuhelp_parser` (lib) generated 46 warnings (run `cargo clippy --fix --lib -p uuhelp_parser` to apply 22 suggestions)
   Compiling aho-corasick v1.1.3
   Compiling indexmap v2.7.1
   Compiling winnow v0.7.10
   Compiling toml_datetime v0.6.9
    Checking same-file v1.0.6
    Checking walkdir v2.5.0
warning: importing trait that is only used anonymously
  --> src/uucore_procs/src/lib.rs:11:25
   |
11 | use std::{fs::File, io::Read, path::PathBuf};
   |                         ^^^^ help: use: `Read as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names
   = note: `-W clippy::unused-trait-names` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::unused_trait_names)]`

warning: missing `return` statement
  --> src/uucore_procs/src/lib.rs:49:5
   |
49 |     TokenStream::from(new)
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
   = note: `-W clippy::implicit-return` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::implicit_return)]`
help: add `return` as shown
   |
49 |     return TokenStream::from(new)
   |     ++++++

warning: `stream` is shadowed
  --> src/uucore_procs/src/lib.rs:23:9
   |
23 |     let stream = proc_macro2::TokenStream::from(stream);
   |         ^^^^^^
   |
note: previous binding is here
  --> src/uucore_procs/src/lib.rs:22:33
   |
22 | pub fn main(_args: TokenStream, stream: TokenStream) -> TokenStream {
   |                                 ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse
   = note: `-W clippy::shadow-reuse` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_reuse)]`

warning: missing `return` statement
  --> src/uucore_procs/src/lib.rs:62:5
   |
62 |     s.replace('`', "")
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
62 |     return s.replace('`', "")
   |     ++++++

warning: this ident consists of a single char
  --> src/uucore_procs/src/lib.rs:61:20
   |
61 | fn render_markdown(s: &str) -> String {
   |                    ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars
   = note: `-W clippy::min-ident-chars` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::min_ident_chars)]`

warning: docs for function which may panic missing `# Panics` section
  --> src/uucore_procs/src/lib.rs:70:1
   |
70 | pub fn help_about(input: TokenStream) -> TokenStream {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uucore_procs/src/lib.rs:74:5
   |
74 | /     assert!(
75 | |         !text.is_empty(),
76 | |         "About text not found! Make sure the markdown format is correct"
77 | |     );
   | |_____^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: missing `return` statement
  --> src/uucore_procs/src/lib.rs:78:5
   |
78 |     TokenTree::Literal(Literal::string(&text)).into()
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
78 |     return TokenTree::Literal(Literal::string(&text)).into()
   |     ++++++

warning: `input` is shadowed
  --> src/uucore_procs/src/lib.rs:71:9
   |
71 |     let input: Vec<TokenTree> = input.into_iter().collect();
   |         ^^^^^
   |
note: previous binding is here
  --> src/uucore_procs/src/lib.rs:70:19
   |
70 | pub fn help_about(input: TokenStream) -> TokenStream {
   |                   ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: redundant type annotation
  --> src/uucore_procs/src/lib.rs:73:5
   |
73 |     let text: String = uuhelp_parser::parse_about(&read_help(&filename));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_type_annotations
   = note: `-W clippy::redundant-type-annotations` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::redundant_type_annotations)]`

warning: docs for function which may panic missing `# Panics` section
  --> src/uucore_procs/src/lib.rs:88:1
   |
88 | pub fn help_usage(input: TokenStream) -> TokenStream {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uucore_procs/src/lib.rs:92:5
   |
92 | /     assert!(
93 | |         !text.is_empty(),
94 | |         "Usage text not found! Make sure the markdown format is correct"
95 | |     );
   | |_____^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `return` statement
  --> src/uucore_procs/src/lib.rs:96:5
   |
96 |     TokenTree::Literal(Literal::string(&text)).into()
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
96 |     return TokenTree::Literal(Literal::string(&text)).into()
   |     ++++++

warning: `input` is shadowed
  --> src/uucore_procs/src/lib.rs:89:9
   |
89 |     let input: Vec<TokenTree> = input.into_iter().collect();
   |         ^^^^^
   |
note: previous binding is here
  --> src/uucore_procs/src/lib.rs:88:19
   |
88 | pub fn help_usage(input: TokenStream) -> TokenStream {
   |                   ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: redundant type annotation
  --> src/uucore_procs/src/lib.rs:91:5
   |
91 |     let text: String = uuhelp_parser::parse_usage(&read_help(&filename));
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_type_annotations

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore_procs/src/lib.rs:124:1
    |
124 | pub fn help_section(input: TokenStream) -> TokenStream {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore_procs/src/lib.rs:133:9
    |
133 | /         panic!(
134 | |             "The section '{section}' could not be found in the help file. Maybe it is spelled wrong?"
135 | |         )
    | |_________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `return` statement
   --> src/uucore_procs/src/lib.rs:131:9
    |
131 |         TokenTree::Literal(Literal::string(&rendered)).into()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
131 |         return TokenTree::Literal(Literal::string(&rendered)).into()
    |         ++++++

warning: `input` is shadowed
   --> src/uucore_procs/src/lib.rs:125:9
    |
125 |     let input: Vec<TokenTree> = input.into_iter().collect();
    |         ^^^^^
    |
note: previous binding is here
   --> src/uucore_procs/src/lib.rs:124:21
    |
124 | pub fn help_section(input: TokenStream) -> TokenStream {
    |                     ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore_procs/src/lib.rs:129:5
    |
129 | /     if let Some(text) = uuhelp_parser::parse_section(&section, &read_help(&filename)) {
130 | |         let rendered = render_markdown(&text);
131 | |         TokenTree::Literal(Literal::string(&rendered)).into()
132 | |     } else {
...   |
136 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
129 ~     uuhelp_parser::parse_section(&section, &read_help(&filename)).map_or_else(|| panic!(
130 +             "The section '{section}' could not be found in the help file. Maybe it is spelled wrong?"
131 +         ), |text| {
132 +         let rendered = render_markdown(&text);
133 +         TokenTree::Literal(Literal::string(&rendered)).into()
134 +     })
    |

warning: `panic` should not be present in production code
   --> src/uucore_procs/src/lib.rs:133:9
    |
133 | /         panic!(
134 | |             "The section '{section}' could not be found in the help file. Maybe it is spelled wrong?"
135 | |         )
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#panic
    = note: `-W clippy::panic` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::panic)]`

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore_procs/src/lib.rs:143:1
    |
143 | fn get_argument(input: &[TokenTree], index: usize, name: &str) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore_procs/src/lib.rs:147:20
    |
147 |         Some(_) => panic!("Argument {index} should be a string literal."),
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `return` statement
   --> src/uucore_procs/src/lib.rs:151:5
    |
151 | /     string
152 | |         .parse::<String>()
153 | |         .unwrap()
154 | |         .strip_prefix('"')
...   |
157 | |         .unwrap()
158 | |         .to_string()
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
151 |     return string
    |     ++++++

warning: type of pattern does not match the expression type
   --> src/uucore_procs/src/lib.rs:146:9
    |
146 |         Some(TokenTree::Literal(lit)) => lit.to_string(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch
    = note: `-W clippy::pattern-type-mismatch` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::pattern_type_mismatch)]`

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore_procs/src/lib.rs:145:35
    |
145 |     let string = match &input.get(index * 2) {
    |                                   ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::arithmetic_side_effects)]`

warning: `panic` should not be present in production code
   --> src/uucore_procs/src/lib.rs:147:20
    |
147 |         Some(_) => panic!("Argument {index} should be a string literal."),
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#panic

warning: `panic` should not be present in production code
   --> src/uucore_procs/src/lib.rs:148:17
    |
148 |         None => panic!("Missing argument at index {index} for {name}"),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#panic

warning: `to_string()` called on a `&str`
   --> src/uucore_procs/src/lib.rs:151:5
    |
151 | /     string
152 | |         .parse::<String>()
153 | |         .unwrap()
154 | |         .strip_prefix('"')
...   |
157 | |         .unwrap()
158 | |         .to_string()
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
    = note: `-W clippy::str-to-string` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::str_to_string)]`
help: try
    |
151 ~     string
152 +         .parse::<String>()
153 +         .unwrap()
154 +         .strip_prefix('"')
155 +         .unwrap()
156 +         .strip_suffix('"')
157 +         .unwrap().to_owned()
    |

warning: used `unwrap()` on an `Option` value
   --> src/uucore_procs/src/lib.rs:151:5
    |
151 | /     string
152 | |         .parse::<String>()
153 | |         .unwrap()
154 | |         .strip_prefix('"')
155 | |         .unwrap()
156 | |         .strip_suffix('"')
157 | |         .unwrap()
    | |_________________^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used
    = note: `-W clippy::unwrap-used` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::unwrap_used)]`

warning: used `unwrap()` on an `Option` value
   --> src/uucore_procs/src/lib.rs:151:5
    |
151 | /     string
152 | |         .parse::<String>()
153 | |         .unwrap()
154 | |         .strip_prefix('"')
155 | |         .unwrap()
    | |_________________^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore_procs/src/lib.rs:162:1
    |
162 | fn read_help(filename: &str) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore_procs/src/lib.rs:165:34
    |
165 |     let mut path = PathBuf::from(std::env::var("CARGO_MANIFEST_DIR").unwrap());
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `return` statement
   --> src/uucore_procs/src/lib.rs:173:5
    |
173 |     content
    |     ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
173 |     return content
    |     ++++++

warning: used `unwrap()` on a `Result` value
   --> src/uucore_procs/src/lib.rs:165:34
    |
165 |     let mut path = PathBuf::from(std::env::var("CARGO_MANIFEST_DIR").unwrap());
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore_procs/src/lib.rs:165:34
    |
165 |     let mut path = PathBuf::from(std::env::var("CARGO_MANIFEST_DIR").unwrap());
    |                                  ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths
    = note: `-W clippy::absolute-paths` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::absolute_paths)]`

warning: calls to `push` immediately after creation
   --> src/uucore_procs/src/lib.rs:165:5
    |
165 | /     let mut path = PathBuf::from(std::env::var("CARGO_MANIFEST_DIR").unwrap());
166 | |     path.push(filename);
    | |________________________^ help: consider using the `.join()`: `let mut path = PathBuf::from(std::env::var("CARGO_MANIFEST_DIR").unwrap()).join(filename);`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pathbuf_init_then_push
    = note: `-W clippy::pathbuf-init-then-push` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::pathbuf_init_then_push)]`

warning: used `unwrap()` on a `Result` value
   --> src/uucore_procs/src/lib.rs:168:5
    |
168 | /     File::open(path)
169 | |         .unwrap()
170 | |         .read_to_string(&mut content)
171 | |         .unwrap();
    | |_________________^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on a `Result` value
   --> src/uucore_procs/src/lib.rs:168:5
    |
168 | /     File::open(path)
169 | |         .unwrap()
    | |_________________^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: this function is only used once
   --> src/uucore_procs/src/lib.rs:61:1
    |
61  | / fn render_markdown(s: &str) -> String {
62  | |     s.replace('`', "")
63  | | }
    | |_^
    |
note: used here
   --> src/uucore_procs/src/lib.rs:130:24
    |
130 |         let rendered = render_markdown(&text);
    |                        ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn
    = note: `-W clippy::single-call-fn` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::single_call_fn)]`

warning: this function is only used once
  --> src/uucore_procs/src/lib.rs:22:1
   |
22 | / pub fn main(_args: TokenStream, stream: TokenStream) -> TokenStream {
23 | |     let stream = proc_macro2::TokenStream::from(stream);
24 | |
25 | |     let new = quote!(
...  |
49 | |     TokenStream::from(new)
50 | | }
   | |_^
   |
note: used here
  --> src/uucore_procs/src/lib.rs:22:1
   |
22 | / pub fn main(_args: TokenStream, stream: TokenStream) -> TokenStream {
23 | |     let stream = proc_macro2::TokenStream::from(stream);
24 | |
25 | |     let new = quote!(
...  |
49 | |     TokenStream::from(new)
50 | | }
   | |_^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uucore_procs/src/lib.rs:70:1
   |
70 | / pub fn help_about(input: TokenStream) -> TokenStream {
71 | |     let input: Vec<TokenTree> = input.into_iter().collect();
72 | |     let filename = get_argument(&input, 0, "filename");
73 | |     let text: String = uuhelp_parser::parse_about(&read_help(&filename));
...  |
78 | |     TokenTree::Literal(Literal::string(&text)).into()
79 | | }
   | |_^
   |
note: used here
  --> src/uucore_procs/src/lib.rs:70:1
   |
70 | / pub fn help_about(input: TokenStream) -> TokenStream {
71 | |     let input: Vec<TokenTree> = input.into_iter().collect();
72 | |     let filename = get_argument(&input, 0, "filename");
73 | |     let text: String = uuhelp_parser::parse_about(&read_help(&filename));
...  |
78 | |     TokenTree::Literal(Literal::string(&text)).into()
79 | | }
   | |_^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uucore_procs/src/lib.rs:88:1
   |
88 | / pub fn help_usage(input: TokenStream) -> TokenStream {
89 | |     let input: Vec<TokenTree> = input.into_iter().collect();
90 | |     let filename = get_argument(&input, 0, "filename");
91 | |     let text: String = uuhelp_parser::parse_usage(&read_help(&filename));
...  |
96 | |     TokenTree::Literal(Literal::string(&text)).into()
97 | | }
   | |_^
   |
note: used here
  --> src/uucore_procs/src/lib.rs:88:1
   |
88 | / pub fn help_usage(input: TokenStream) -> TokenStream {
89 | |     let input: Vec<TokenTree> = input.into_iter().collect();
90 | |     let filename = get_argument(&input, 0, "filename");
91 | |     let text: String = uuhelp_parser::parse_usage(&read_help(&filename));
...  |
96 | |     TokenTree::Literal(Literal::string(&text)).into()
97 | | }
   | |_^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore_procs/src/lib.rs:124:1
    |
124 | / pub fn help_section(input: TokenStream) -> TokenStream {
125 | |     let input: Vec<TokenTree> = input.into_iter().collect();
126 | |     let section = get_argument(&input, 0, "section");
127 | |     let filename = get_argument(&input, 1, "filename");
...   |
137 | | }
    | |_^
    |
note: used here
   --> src/uucore_procs/src/lib.rs:124:1
    |
124 | / pub fn help_section(input: TokenStream) -> TokenStream {
125 | |     let input: Vec<TokenTree> = input.into_iter().collect();
126 | |     let section = get_argument(&input, 0, "section");
127 | |     let filename = get_argument(&input, 1, "filename");
...   |
137 | | }
    | |_^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: `uucore_procs` (lib) generated 48 warnings (9 duplicates) (run `cargo clippy --fix --lib -p uucore_procs` to apply 9 suggestions)
   Compiling regex-automata v0.4.9
    Checking inotify v0.11.0
   Compiling rustc_version v0.4.1
   Compiling toml_edit v0.22.26
    Checking mio v1.0.3
    Checking filetime v0.2.25
   Compiling rstest_macros v0.25.0
    Checking notify-types v2.0.0
    Checking futures-core v0.3.31
   Compiling relative-path v1.9.3
    Checking notify v8.0.0
   Compiling glob v0.3.2
    Checking pin-project-lite v0.2.16
    Checking futures-task v0.3.31
   Compiling cfg-if v1.0.0
    Checking pin-utils v0.1.0
    Checking futures-timer v3.0.3
   Compiling regex v1.11.1
   Compiling proc-macro-crate v3.3.0
   Compiling displaydoc v0.2.5
   Compiling thiserror-impl v2.0.12
   Compiling futures-macro v0.3.31
    Checking futures-util v0.3.31
    Checking tinystr v0.8.1
    Checking unic-langid-impl v0.9.6
    Checking unic-langid v0.9.6
    Checking intl-memoizer v0.5.3
    Checking intl_pluralrules v7.0.2
    Checking fluent-langneg v0.13.0
    Checking thiserror v2.0.12
    Checking fluent-syntax v0.12.0
    Checking fluent-bundle v0.16.0
    Checking fluent v0.17.0
    Checking uucore v0.1.0 (/mnt/c/Users/sebir/Documents/summer/Research/coreutils/src/uucore)
warning: `mod.rs` files are not allowed, found `src/uucore/src/lib/features/parser/mod.rs`
 --> src/uucore/src/lib/features/parser/mod.rs:1:1
  |
1 | // This file is part of the uutils coreutils package.
  | ^
  |
  = help: move `src/uucore/src/lib/features/parser/mod.rs` to `src/uucore/src/lib/features/parser.rs`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mod_module_files
  = note: `-W clippy::mod-module-files` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::mod_module_files)]`

warning: `mod.rs` files are required, found `src/uucore/src/lib/lib.rs`
 --> src/uucore/src/lib/lib.rs:1:1
  |
1 | // This file is part of the uutils coreutils package.
  | ^
  |
  = help: move `src/uucore/src/lib/lib.rs` to `src/uucore/src/lib/lib/mod.rs`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#self_named_module_files
  = note: `-W clippy::self-named-module-files` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::self_named_module_files)]`

warning: `mod.rs` files are required, found `src/uucore/src/lib/features.rs`
 --> src/uucore/src/lib/features.rs:1:1
  |
1 | // This file is part of the uutils coreutils package.
  | ^
  |
  = help: move `src/uucore/src/lib/features.rs` to `src/uucore/src/lib/features/mod.rs`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#self_named_module_files

warning: `mod.rs` files are required, found `src/uucore/src/lib/mods.rs`
 --> src/uucore/src/lib/mods.rs:1:1
  |
1 | // This file is part of the uutils coreutils package.
  | ^
  |
  = help: move `src/uucore/src/lib/mods.rs` to `src/uucore/src/lib/mods/mod.rs`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#self_named_module_files

warning: integer type suffix should be separated by an underscore
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:50
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                                                  ^^^^^ help: add an underscore: `10_u32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix
    = note: `-W clippy::unseparated-literal-suffix` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::unseparated_literal_suffix)]`

warning: single-character lifetime names are likely uninformative
  --> src/uucore/src/lib/features/parser/num_parser.rs:56:21
   |
56 |     fn parse_digits<'a>(&self, str: &'a str) -> (Option<BigUint>, &'a str) {
   |                     ^^
   |
   = help: use a more informative name
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names
   = note: `-W clippy::single-char-lifetime-names` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::single_char_lifetime_names)]`

warning: single-character lifetime names are likely uninformative
  --> src/uucore/src/lib/features/parser/num_parser.rs:64:27
   |
64 |     fn parse_digits_count<'a>(
   |                           ^^
   |
   = help: use a more informative name
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
  --> src/uucore/src/lib/features/parser/num_parser.rs:85:30
   |
85 | pub enum ExtendedParserError<'a, T> {
   |                              ^^
   |
   = help: use a more informative name
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:100:6
    |
100 | impl<'a, T> ExtendedParserError<'a, T>
    |      ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:156:21
    |
156 |         fn into_i64<'a>(ebd: ExtendedBigDecimal) -> Result<i64, ExtendedParserError<'a, i64>> {
    |                     ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:191:21
    |
191 |         fn into_u64<'a>(ebd: ExtendedBigDecimal) -> Result<u64, ExtendedParserError<'a, u64>> {
    |                     ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:228:21
    |
228 |         fn into_f64<'a>(ebd: ExtendedBigDecimal) -> Result<f64, ExtendedParserError<'a, f64>> {
    |                     ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:311:28
    |
311 | fn parse_suffix_multiplier<'a>(str: &'a str, allowed_suffixes: &[(char, u32)]) -> (u32, &'a str) {
    |                            ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:325:24
    |
325 | fn parse_special_value<'a>(
    |                        ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:362:15
    |
362 | fn make_error<'a>(overflow: bool, negative: bool) -> ExtendedParserError<'a, ExtendedBigDecimal> {
    |               ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:405:35
    |
405 | fn construct_extended_big_decimal<'a>(
    |                                   ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: `if` expression with an `else if`, but without a final `else`
   --> src/uucore/src/lib/features/parser/num_parser.rs:433:16
    |
433 |           } else if new_scale < i64::MIN.into() {
    |  ________________^
434 | |             return Err(make_error(true, negative));
435 | |         }
    | |_________^
    |
    = help: add an `else` block here
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else
    = note: `-W clippy::else-if-without-else` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::else_if_without_else)]`

warning: usage of `pub` without `in`
   --> src/uucore/src/lib/features/parser/num_parser.rs:473:1
    |
473 | pub(crate) enum ParseTarget {
    | ^^^^^^^^^^ help: add it: `pub(in crate)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_with_shorthand
    = note: `-W clippy::pub-with-shorthand` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::pub_with_shorthand)]`

warning: usage of `pub` without `in`
   --> src/uucore/src/lib/features/parser/num_parser.rs:479:1
    |
479 | pub(crate) fn parse<'a>(
    | ^^^^^^^^^^ help: add it: `pub(in crate)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_with_shorthand

warning: single-character lifetime names are likely uninformative
   --> src/uucore/src/lib/features/parser/num_parser.rs:479:21
    |
479 | pub(crate) fn parse<'a>(
    |                     ^^
    |
    = help: use a more informative name
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: usage of ref pattern
   --> src/uucore/src/lib/features/parser/parse_size.rs:401:33
    |
401 |             Self::InvalidSuffix(ref s) => s,
    |                                 ^^^^^
    |
    = help: consider using `&` for clarity instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns
    = note: `-W clippy::ref-patterns` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::ref_patterns)]`

warning: usage of ref pattern
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:32
    |
402 |             Self::ParseFailure(ref s) => s,
    |                                ^^^^^
    |
    = help: consider using `&` for clarity instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns

warning: usage of ref pattern
   --> src/uucore/src/lib/features/parser/parse_size.rs:403:30
    |
403 |             Self::SizeTooBig(ref s) => s,
    |                              ^^^^^
    |
    = help: consider using `&` for clarity instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns

warning: usage of ref pattern
   --> src/uucore/src/lib/features/parser/parse_size.rs:404:31
    |
404 |             Self::PhysicalMem(ref s) => s,
    |                               ^^^^^
    |
    = help: consider using `&` for clarity instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns

warning: `if` expression with an `else if`, but without a final `else`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:75:16
   |
75 |           } else if i < possible_values.len() - 1 {
   |  ________________^
76 | |             formatted_possible_values.push_str(" or ");
77 | |         }
   | |_________^
   |
   = help: add an `else` block here
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else

warning: using `pub use`
  --> src/uucore/src/lib/mods/display.rs:37:1
   |
37 | pub use os_display::{Quotable, Quoted};
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use
   = note: `-W clippy::pub-use` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::pub_use)]`

warning: #[allow] attribute found
   --> src/uucore/src/lib/mods/error.rs:297:7
    |
297 |     #[allow(clippy::new_ret_no_self)]
    |       ^^^^^ help: replace it with: `expect`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes
    = note: `-W clippy::allow-attributes` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::allow_attributes)]`

warning: `allow` attribute without specifying a reason
   --> src/uucore/src/lib/mods/error.rs:297:5
    |
297 |     #[allow(clippy::new_ret_no_self)]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try adding a reason at the end with `, reason = ".."`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason
    = note: `-W clippy::allow-attributes-without-reason` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::allow_attributes_without_reason)]`

warning: #[allow] attribute found
   --> src/uucore/src/lib/mods/error.rs:331:7
    |
331 |     #[allow(clippy::new_ret_no_self)]
    |       ^^^^^ help: replace it with: `expect`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes

warning: `allow` attribute without specifying a reason
   --> src/uucore/src/lib/mods/error.rs:331:5
    |
331 |     #[allow(clippy::new_ret_no_self)]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try adding a reason at the end with `, reason = ".."`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason

warning: #[allow] attribute found
   --> src/uucore/src/lib/mods/error.rs:392:7
    |
392 |     #[allow(clippy::new_ret_no_self)]
    |       ^^^^^ help: replace it with: `expect`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes

warning: `allow` attribute without specifying a reason
   --> src/uucore/src/lib/mods/error.rs:392:5
    |
392 |     #[allow(clippy::new_ret_no_self)]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try adding a reason at the end with `, reason = ".."`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason

warning: #[allow] attribute found
   --> src/uucore/src/lib/mods/error.rs:653:7
    |
653 |     #[allow(clippy::new_ret_no_self)]
    |       ^^^^^ help: replace it with: `expect`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes

warning: `allow` attribute without specifying a reason
   --> src/uucore/src/lib/mods/error.rs:653:5
    |
653 |     #[allow(clippy::new_ret_no_self)]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try adding a reason at the end with `, reason = ".."`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason

warning: usage of ref pattern
  --> src/uucore/src/lib/mods/locale.rs:82:21
   |
82 |         if let Some(ref fallback) = self.fallback_bundle {
   |                     ^^^^^^^^^^^^
   |
   = help: consider using `&` for clarity instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:22:1
   |
22 | pub use uucore_procs::*;
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:25:1
   |
25 | pub use crate::mods::display;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:26:1
   |
26 | pub use crate::mods::error;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:29:1
   |
29 | pub use crate::mods::line_ending;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:30:1
   |
30 | pub use crate::mods::locale;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:31:1
   |
31 | pub use crate::mods::os;
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:32:1
   |
32 | pub use crate::mods::panic;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:33:1
   |
33 | pub use crate::mods::posix;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:49:1
   |
49 | pub use crate::features::extendedbigdecimal;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: using `pub use`
  --> src/uucore/src/lib/lib.rs:59:1
   |
59 | pub use crate::features::parser;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: multiple versions for dependency `thiserror`: 1.0.69, 2.0.12
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions
  = note: `-W clippy::multiple-crate-versions` implied by `-W clippy::cargo`
  = help: to override `-W clippy::cargo` add `#[allow(clippy::multiple_crate_versions)]`

warning: multiple versions for dependency `thiserror-impl`: 1.0.69, 2.0.12
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows-sys`: 0.48.0, 0.52.0, 0.59.0
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows-targets`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_aarch64_gnullvm`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_aarch64_msvc`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_i686_gnu`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_i686_msvc`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_x86_64_gnu`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_x86_64_gnullvm`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: multiple versions for dependency `windows_x86_64_msvc`: 0.48.5, 0.52.6
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/lib.rs:153:14
    |
153 | macro_rules! bin {
    |              ^^^
    |
note: should be placed before `disable_rust_signal_handlers`
   --> src/uucore/src/lib/lib.rs:132:8
    |
132 | pub fn disable_rust_signal_handlers() -> Result<(), Errno> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering
    = note: `-W clippy::arbitrary-source-item-ordering` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::arbitrary_source_item_ordering)]`

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/lib.rs:216:8
    |
216 | static ARGV: LazyLock<Vec<OsString>> = LazyLock::new(|| wild::args_os().collect());
    |        ^^^^
    |
note: should be placed before `set_utility_is_second_arg`
   --> src/uucore/src/lib/lib.rs:210:8
    |
210 | pub fn set_utility_is_second_arg() {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/lib.rs:231:8
    |
231 | static EXECUTION_PHRASE: LazyLock<String> = LazyLock::new(|| {
    |        ^^^^^^^^^^^^^^^^
    |
note: should be placed before `util_name`
   --> src/uucore/src/lib/lib.rs:227:8
    |
227 | pub fn util_name() -> &'static str {
    |        ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/lib.rs:252:11
    |
252 | pub trait Args: Iterator<Item = OsString> + Sized {
    |           ^^^^
    |
note: should be placed before `execution_phrase`
   --> src/uucore/src/lib/lib.rs:244:8
    |
244 | pub fn execution_phrase() -> &'static str {
    |        ^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/lib.rs:400:14
    |
400 | macro_rules! prompt_yes(
    |              ^^^^^^^^^^
    |
note: should be placed before `read_os_string_lines`
   --> src/uucore/src/lib/lib.rs:376:8
    |
376 | pub fn read_os_string_lines<R: std::io::Read>(
    |        ^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing documentation for a module
  --> src/uucore/src/lib/lib.rs:18:1
   |
18 | mod features; // feature-gated code modules
   | ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items
   = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_docs_in_private_items)]`

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:23:5
   |
23 | use std::cmp::Ordering;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core
   = note: `-W clippy::std-instead-of-core` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::std_instead_of_core)]`

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:24:5
   |
24 | use std::ops::Add;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:25:5
   |
25 | use std::ops::Neg;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:29:17
   |
29 | use num_traits::FromPrimitive;
   |                 ^^^^^^^^^^^^^ help: use: `FromPrimitive as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names
   = note: `-W clippy::unused-trait-names` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::unused_trait_names)]`

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:30:17
   |
30 | use num_traits::Signed;
   |                 ^^^^^^ help: use: `Signed as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: exported enums should not be exhaustive
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:34:1
   |
34 | / pub enum ExtendedBigDecimal {
35 | |     /// Arbitrary precision floating point number.
36 | |     BigDecimal(BigDecimal),
...  |
79 | |     MinusNan,
80 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
   = note: `-W clippy::exhaustive-enums` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::exhaustive_enums)]`
help: try adding #[non_exhaustive]
   |
34 + #[non_exhaustive]
35 | pub enum ExtendedBigDecimal {
   |

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:79:5
   |
79 |     MinusNan,
   |     ^^^^^^^^
   |
note: should be placed before `Nan`
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:70:5
   |
70 |     Nan,
   |     ^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: consider implementing `TryFrom` instead
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:82:1
    |
82  | / impl From<f64> for ExtendedBigDecimal {
83  | |     fn from(val: f64) -> Self {
84  | |         if val.is_nan() {
85  | |             if val.is_sign_negative() {
...   |
102 | | }
    | |_^
    |
    = help: `From` is intended for infallible conversions only. Use `TryFrom` if there's a possibility for the conversion to fail
note: potential failure(s)
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:99:44
    |
99  |             ExtendedBigDecimal::BigDecimal(BigDecimal::from_f64(val).unwrap())
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#fallible_impl_from
    = note: `-W clippy::fallible-impl-from` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::fallible_impl_from)]`

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:83:5
    |
83  | /     fn from(val: f64) -> Self {
84  | |         if val.is_nan() {
85  | |             if val.is_sign_negative() {
86  | |                 ExtendedBigDecimal::MinusNan
...   |
101 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items
    = note: `-W clippy::missing-inline-in-public-items` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_inline_in_public_items)]`

warning: missing `return` statement
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:86:17
   |
86 |                 ExtendedBigDecimal::MinusNan
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
   = note: `-W clippy::implicit-return` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::implicit_return)]`
help: add `return` as shown
   |
86 |                 return ExtendedBigDecimal::MinusNan
   |                 ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:88:17
   |
88 |                 ExtendedBigDecimal::Nan
   |                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
88 |                 return ExtendedBigDecimal::Nan
   |                 ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:92:17
   |
92 |                 ExtendedBigDecimal::MinusInfinity
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
92 |                 return ExtendedBigDecimal::MinusInfinity
   |                 ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:94:17
   |
94 |                 ExtendedBigDecimal::Infinity
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
94 |                 return ExtendedBigDecimal::Infinity
   |                 ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:97:13
   |
97 |             ExtendedBigDecimal::MinusZero
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
97 |             return ExtendedBigDecimal::MinusZero
   |             ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:99:13
   |
99 |             ExtendedBigDecimal::BigDecimal(BigDecimal::from_f64(val).unwrap())
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
99 |             return ExtendedBigDecimal::BigDecimal(BigDecimal::from_f64(val).unwrap())
   |             ++++++

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:86:17
   |
86 |                 ExtendedBigDecimal::MinusNan
   |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self
   = note: `-W clippy::use-self` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::use_self)]`

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:88:17
   |
88 |                 ExtendedBigDecimal::Nan
   |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:92:17
   |
92 |                 ExtendedBigDecimal::MinusInfinity
   |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:94:17
   |
94 |                 ExtendedBigDecimal::Infinity
   |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:97:13
   |
97 |             ExtendedBigDecimal::MinusZero
   |             ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:99:13
   |
99 |             ExtendedBigDecimal::BigDecimal(BigDecimal::from_f64(val).unwrap())
   |             ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: used `unwrap()` on an `Option` value
  --> src/uucore/src/lib/features/extendedbigdecimal.rs:99:44
   |
99 |             ExtendedBigDecimal::BigDecimal(BigDecimal::from_f64(val).unwrap())
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used
   = note: `-W clippy::unwrap-used` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::unwrap_used)]`

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:109:12
    |
109 |     pub fn one() -> Self {
    |            ^^^
    |
note: should be placed before `zero`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:105:12
    |
105 |     pub fn zero() -> Self {
    |            ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:105:5
    |
105 |     pub fn zero() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn zero() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:105:5
    |
105 | /     pub fn zero() -> Self {
106 | |         Self::BigDecimal(0.into())
107 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:106:9
    |
106 |         Self::BigDecimal(0.into())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
106 |         return Self::BigDecimal(0.into())
    |         ++++++

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:109:5
    |
109 |     pub fn one() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn one() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:109:5
    |
109 | /     pub fn one() -> Self {
110 | |         Self::BigDecimal(1.into())
111 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:110:9
    |
110 |         Self::BigDecimal(1.into())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
110 |         return Self::BigDecimal(1.into())
    |         ++++++

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:113:5
    |
113 |     pub fn to_biguint(&self) -> Option<BigUint> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn to_biguint(&self) -> Option<BigUint>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:113:5
    |
113 | /     pub fn to_biguint(&self) -> Option<BigUint> {
114 | |         match self {
115 | |             ExtendedBigDecimal::BigDecimal(big_decimal) => {
116 | |                 let (bi, scale) = big_decimal.as_bigint_and_scale();
...   |
125 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:120:17
    |
120 | /                 bi.to_biguint()
121 | |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    | |___________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
120 |                 return bi.to_biguint()
    |                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:123:18
    |
123 |             _ => None,
    |                  ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
123 |             _ => return None,
    |                  ++++++

warning: wildcard match will also match any future added variants
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:123:13
    |
123 |             _ => None,
    |             ^ help: try: `ExtendedBigDecimal::Infinity | ExtendedBigDecimal::MinusInfinity | ExtendedBigDecimal::MinusZero | ExtendedBigDecimal::Nan | ExtendedBigDecimal::MinusNan`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm
    = note: `-W clippy::wildcard-enum-match-arm` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::wildcard_enum_match_arm)]`

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:115:13
    |
115 |             ExtendedBigDecimal::BigDecimal(big_decimal) => {
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch
    = note: `-W clippy::pattern-type-mismatch` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::pattern_type_mismatch)]`

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:115:13
    |
115 |             ExtendedBigDecimal::BigDecimal(big_decimal) => {
    |             ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:117:61
    |
117 |                 if bi.is_negative() || scale > 0 || scale < -(u32::MAX as i64) {
    |                                                             ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
    = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::arithmetic_side_effects)]`

warning: casts from `u32` to `i64` can be expressed infallibly using `From`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:117:62
    |
117 |                 if bi.is_negative() || scale > 0 || scale < -(u32::MAX as i64) {
    |                                                              ^^^^^^^^^^^^^^^^^
    |
    = help: an `as` cast can become silently lossy if the types change in the future
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
    = note: `-W clippy::cast-lossless` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_lossless)]`
help: use `i64::from` instead
    |
117 -                 if bi.is_negative() || scale > 0 || scale < -(u32::MAX as i64) {
117 +                 if bi.is_negative() || scale > 0 || scale < -i64::from(u32::MAX) {
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:117:62
    |
117 |                 if bi.is_negative() || scale > 0 || scale < -(u32::MAX as i64) {
    |                                                              ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
    = note: `-W clippy::as-conversions` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::as_conversions)]`

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:31
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
121 |                     .map(|bi| return bi * BigUint::from(10u32).pow(-scale as u32))
    |                               ++++++

warning: `bi` is shadowed
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:27
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                           ^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:116:22
    |
116 |                 let (bi, scale) = big_decimal.as_bigint_and_scale();
    |                      ^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse
    = note: `-W clippy::shadow-reuse` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_reuse)]`

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:31
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `i64` to `u32` may truncate the value
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:61
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                                                             ^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
    = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_truncation)]`
help: ... or use `try_from` and handle the error accordingly
    |
121 -                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
121 +                     .map(|bi| bi * BigUint::from(10u32).pow(u32::try_from(-scale)))
    |

warning: casting `i64` to `u32` may lose the sign of the value
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:61
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                                                             ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
    = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_sign_loss)]`

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:121:61
    |
121 |                     .map(|bi| bi * BigUint::from(10u32).pow(-scale as u32))
    |                                                             ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: missing trait method provided by default: `set_zero`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:128:1
    |
128 | impl Zero for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /home/sebir/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/num-traits-0.2.19/src/identities.rs:23:5
    |
23  |     fn set_zero(&mut self) {
    |     ^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods
    = note: `-W clippy::missing-trait-methods` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_trait_methods)]`

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:132:8
    |
132 |     fn is_zero(&self) -> bool {
    |        ^^^^^^^
    |
note: should be placed before `zero`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:129:8
    |
129 |     fn zero() -> Self {
    |        ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:129:5
    |
129 | /     fn zero() -> Self {
130 | |         Self::BigDecimal(BigDecimal::zero())
131 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:130:9
    |
130 |         Self::BigDecimal(BigDecimal::zero())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
130 |         return Self::BigDecimal(BigDecimal::zero())
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:132:5
    |
132 | /     fn is_zero(&self) -> bool {
133 | |         match self {
134 | |             Self::BigDecimal(n) => n.is_zero(),
135 | |             Self::MinusZero => true,
...   |
138 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:134:36
    |
134 |             Self::BigDecimal(n) => n.is_zero(),
    |                                    ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
134 |             Self::BigDecimal(n) => return n.is_zero(),
    |                                    ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:135:32
    |
135 |             Self::MinusZero => true,
    |                                ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
135 |             Self::MinusZero => return true,
    |                                ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:136:18
    |
136 |             _ => false,
    |                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
136 |             _ => return false,
    |                  ++++++

warning: wildcard match will also match any future added variants
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:136:13
    |
136 |             _ => false,
    |             ^ help: try: `Self::Infinity | Self::MinusInfinity | Self::Nan | Self::MinusNan`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:134:13
    |
134 |             Self::BigDecimal(n) => n.is_zero(),
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:142:5
    |
142 | /     fn default() -> Self {
143 | |         Self::zero()
144 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:143:9
    |
143 |         Self::zero()
    |         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
143 |         return Self::zero()
    |         ++++++

warning: renamed function parameter of trait impl
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:150:18
    |
150 |     fn add(self, other: Self) -> Self {
    |                  ^^^^^ help: consider using the default name: `rhs`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#renamed_function_params
    = note: `-W clippy::renamed-function-params` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::renamed_function_params)]`

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:150:5
    |
150 | /     fn add(self, other: Self) -> Self {
151 | |         match (self, other) {
152 | |             (Self::BigDecimal(m), Self::BigDecimal(n)) => Self::BigDecimal(m.add(n)),
153 | |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
...   |
170 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:152:59
    |
152 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => Self::BigDecimal(m.add(n)),
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
152 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => return Self::BigDecimal(m.add(n)),
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:153:59
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
    |                                                           ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => return Self::MinusInfinity,
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:154:54
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
    |                                                      ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => return Self::Infinity,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:155:55
    |
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
    |                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
155 |             (Self::BigDecimal(m), Self::MinusZero) => return Self::BigDecimal(m),
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:156:54
    |
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
    |                                                      ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
156 |             (Self::Infinity, Self::BigDecimal(_)) => return Self::Infinity,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:157:49
    |
157 |             (Self::Infinity, Self::Infinity) => Self::Infinity,
    |                                                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
157 |             (Self::Infinity, Self::Infinity) => return Self::Infinity,
    |                                                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:158:50
    |
158 |             (Self::Infinity, Self::MinusZero) => Self::Infinity,
    |                                                  ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
158 |             (Self::Infinity, Self::MinusZero) => return Self::Infinity,
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:159:54
    |
159 |             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |                                                      ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
159 |             (Self::Infinity, Self::MinusInfinity) => return Self::Nan,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:160:59
    |
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
    |                                                           ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => return Self::MinusInfinity,
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:161:59
    |
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
    |                                                           ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
161 |             (Self::MinusInfinity, Self::MinusInfinity) => return Self::MinusInfinity,
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:162:55
    |
162 |             (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
    |                                                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
162 |             (Self::MinusInfinity, Self::MinusZero) => return Self::MinusInfinity,
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:163:54
    |
163 |             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |                                                      ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
163 |             (Self::MinusInfinity, Self::Infinity) => return Self::Nan,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:164:31
    |
164 |             (Self::Nan, _) => Self::Nan,
    |                               ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
164 |             (Self::Nan, _) => return Self::Nan,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:165:31
    |
165 |             (_, Self::Nan) => Self::Nan,
    |                               ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
165 |             (_, Self::Nan) => return Self::Nan,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:166:36
    |
166 |             (Self::MinusNan, _) => Self::MinusNan,
    |                                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
166 |             (Self::MinusNan, _) => return Self::MinusNan,
    |                                    ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:167:36
    |
167 |             (_, Self::MinusNan) => Self::MinusNan,
    |                                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
167 |             (_, Self::MinusNan) => return Self::MinusNan,
    |                                    ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:168:41
    |
168 |             (Self::MinusZero, other) => other,
    |                                         ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
168 |             (Self::MinusZero, other) => return other,
    |                                         ++++++

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:154:13
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
    = note: `-W clippy::match-same-arms` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_same_arms)]`
help: or try merging the arm patterns and removing the obsolete arm
    |
154 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
156 ~             (Self::Infinity, Self::Infinity) => Self::Infinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:154:13
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
154 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::Infinity) => Self::Infinity,
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
157 ~             (Self::Infinity, Self::MinusZero) => Self::Infinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:156:13
    |
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
156 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::Infinity) => Self::Infinity,
157 ~             (Self::Infinity, Self::MinusZero) => Self::Infinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:154:13
    |
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
154 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::MinusZero) => Self::Infinity,
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
157 |             (Self::Infinity, Self::Infinity) => Self::Infinity,
158 ~             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:156:13
    |
156 |             (Self::Infinity, Self::BigDecimal(_)) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
156 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusZero) => Self::Infinity,
157 |             (Self::Infinity, Self::Infinity) => Self::Infinity,
158 ~             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:157:13
    |
157 |             (Self::Infinity, Self::Infinity) => Self::Infinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
157 ~             (Self::Infinity, Self::Infinity) | (Self::Infinity, Self::MinusZero) => Self::Infinity,
158 ~             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:153:13
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
153 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
...
159 |             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
160 ~             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:153:13
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
153 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
...
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
161 ~             (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:160:13
    |
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
160 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
161 ~             (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:153:13
    |
153 |             (Self::BigDecimal(_), Self::MinusInfinity) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
153 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
154 |             (Self::BigDecimal(_), Self::Infinity) => Self::Infinity,
...
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
162 ~             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:160:13
    |
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
160 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
162 ~             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:161:13
    |
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
161 ~             (Self::MinusInfinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
162 ~             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:159:13
    |
159 |             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
159 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::Infinity) => Self::Nan,
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
161 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
162 |             (Self::MinusInfinity, Self::MinusZero) => Self::MinusInfinity,
163 ~             (Self::Nan, _) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:159:13
    |
159 |             (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
159 ~             (Self::Infinity, Self::MinusInfinity) | (Self::Nan, _) => Self::Nan,
160 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
...
163 |             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
164 ~             (_, Self::Nan) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:163:13
    |
163 |             (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
163 ~             (Self::MinusInfinity, Self::Infinity) | (Self::Nan, _) => Self::Nan,
164 ~             (_, Self::Nan) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:165:13
    |
165 |             (_, Self::Nan) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
159 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => Self::MinusInfinity,
160 |             (Self::MinusInfinity, Self::MinusInfinity) => Self::MinusInfinity,
...
163 |             (Self::Nan, _) => Self::Nan,
164 ~             (_, Self::Nan) | (Self::Infinity, Self::MinusInfinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:165:13
    |
165 |             (_, Self::Nan) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
163 ~             (Self::Nan, _) => Self::Nan,
164 ~             (_, Self::Nan) | (Self::MinusInfinity, Self::Infinity) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:165:13
    |
165 |             (_, Self::Nan) => Self::Nan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
164 -             (Self::Nan, _) => Self::Nan,
165 -             (_, Self::Nan) => Self::Nan,
164 +             (_, Self::Nan) | (Self::Nan, _) => Self::Nan,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:167:13
    |
167 |             (_, Self::MinusNan) => Self::MinusNan,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
166 -             (Self::MinusNan, _) => Self::MinusNan,
167 -             (_, Self::MinusNan) => Self::MinusNan,
166 +             (_, Self::MinusNan) | (Self::MinusNan, _) => Self::MinusNan,
    |

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:152:31
    |
152 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => Self::BigDecimal(m.add(n)),
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars
    = note: `-W clippy::min-ident-chars` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::min_ident_chars)]`

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:155:31
    |
155 |             (Self::BigDecimal(m), Self::MinusZero) => Self::BigDecimal(m),
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `other` is shadowed
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:168:31
    |
168 |             (Self::MinusZero, other) => other,
    |                               ^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:150:18
    |
150 |     fn add(self, other: Self) -> Self {
    |                  ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing trait method provided by default: `ne`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:173:1
    |
173 | impl PartialEq for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:262:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:174:5
    |
174 | /     fn eq(&self, other: &Self) -> bool {
175 | |         match (self, other) {
176 | |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.eq(n),
177 | |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
...   |
197 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:176:59
    |
176 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.eq(n),
    |                                                           ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
176 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => return m.eq(n),
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:59
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |                                                           ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => return false,
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:54
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |                                                      ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => return false,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:55
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |                                                       ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => return false,
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:54
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |                                                      ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => return false,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:181:49
    |
181 |             (Self::Infinity, Self::Infinity) => true,
    |                                                 ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
181 |             (Self::Infinity, Self::Infinity) => return true,
    |                                                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:50
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |                                                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
182 |             (Self::Infinity, Self::MinusZero) => return false,
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:54
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |                                                      ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
183 |             (Self::Infinity, Self::MinusInfinity) => return false,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:59
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |                                                           ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => return false,
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:54
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |                                                      ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
185 |             (Self::MinusInfinity, Self::Infinity) => return false,
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:55
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |                                                       ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => return false,
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:187:59
    |
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |                                                           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
187 |             (Self::MinusInfinity, Self::MinusInfinity) => return true,
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:55
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |                                                       ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => return false,
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:189:50
    |
189 |             (Self::MinusZero, Self::Infinity) => false,
    |                                                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
189 |             (Self::MinusZero, Self::Infinity) => return false,
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:190:51
    |
190 |             (Self::MinusZero, Self::MinusZero) => true,
    |                                                   ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
190 |             (Self::MinusZero, Self::MinusZero) => return true,
    |                                                   ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:191:55
    |
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
    |                                                       ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
191 |             (Self::MinusZero, Self::MinusInfinity) => return false,
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:192:31
    |
192 |             (Self::Nan, _) => false,
    |                               ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
192 |             (Self::Nan, _) => return false,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:193:36
    |
193 |             (Self::MinusNan, _) => false,
    |                                    ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
193 |             (Self::MinusNan, _) => return false,
    |                                    ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:31
    |
194 |             (_, Self::Nan) => false,
    |                               ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
194 |             (_, Self::Nan) => return false,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:36
    |
195 |             (_, Self::MinusNan) => false,
    |                                    ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
195 |             (_, Self::MinusNan) => return false,
    |                                    ++++++

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::BigDecimal(_), Self::Infinity) => false,
178 ~             (Self::BigDecimal(_), Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::BigDecimal(_), Self::MinusZero) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
179 ~             (Self::Infinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::BigDecimal(_), Self::MinusZero) => false,
179 ~             (Self::Infinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::BigDecimal(_)) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
180 ~             (Self::Infinity, Self::Infinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::BigDecimal(_)) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
180 ~             (Self::Infinity, Self::Infinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::Infinity, Self::BigDecimal(_)) => false,
180 ~             (Self::Infinity, Self::Infinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::MinusZero) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
181 |             (Self::Infinity, Self::Infinity) => true,
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::MinusZero) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::Infinity, Self::MinusZero) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusZero) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::MinusInfinity) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
182 |             (Self::Infinity, Self::MinusZero) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Infinity, Self::MinusInfinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
182 |             (Self::Infinity, Self::MinusZero) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::Infinity, Self::MinusInfinity) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusInfinity) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::Infinity, Self::MinusInfinity) => false,
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::Infinity) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::Infinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusInfinity, Self::Infinity) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::Infinity) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusInfinity, Self::Infinity) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::Infinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::Infinity) => false,
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusZero) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::MinusZero) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusInfinity, Self::MinusZero) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusZero) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusInfinity, Self::MinusZero) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusInfinity, Self::MinusZero) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusZero) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusInfinity, Self::MinusZero) => false,
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:181:13
    |
181 |             (Self::Infinity, Self::Infinity) => true,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
181 ~             (Self::Infinity, Self::Infinity) | (Self::MinusInfinity, Self::MinusInfinity) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
...
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
187 ~             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusZero, Self::BigDecimal(_)) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusZero, Self::BigDecimal(_)) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusZero, Self::BigDecimal(_)) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::BigDecimal(_)) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusZero, Self::BigDecimal(_)) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusZero, Self::BigDecimal(_)) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::BigDecimal(_)) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusZero, Self::BigDecimal(_)) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusZero, Self::BigDecimal(_)) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 ~             (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusZero, Self::Infinity) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusZero, Self::Infinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusZero, Self::Infinity) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::Infinity) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusZero, Self::Infinity) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusZero, Self::Infinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::Infinity) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
...
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusZero, Self::Infinity) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusZero, Self::Infinity) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:13
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::BigDecimal(_)) | (Self::MinusZero, Self::Infinity) => false,
189 ~             (Self::MinusZero, Self::MinusZero) => true,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:181:13
    |
181 |             (Self::Infinity, Self::Infinity) => true,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
181 ~             (Self::Infinity, Self::Infinity) | (Self::MinusZero, Self::MinusZero) => true,
182 |             (Self::Infinity, Self::MinusZero) => false,
...
189 |             (Self::MinusZero, Self::Infinity) => false,
190 ~             (Self::MinusZero, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:187:13
    |
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
187 ~             (Self::MinusInfinity, Self::MinusInfinity) | (Self::MinusZero, Self::MinusZero) => true,
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
189 |             (Self::MinusZero, Self::Infinity) => false,
190 ~             (Self::MinusZero, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusZero, Self::MinusInfinity) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusZero, Self::MinusInfinity) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusZero, Self::MinusInfinity) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::MinusInfinity) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusZero, Self::MinusInfinity) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusZero, Self::MinusInfinity) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::MinusInfinity) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusZero, Self::MinusInfinity) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusZero, Self::MinusInfinity) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:13
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::BigDecimal(_)) | (Self::MinusZero, Self::MinusInfinity) => false,
189 |             (Self::MinusZero, Self::Infinity) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:189:13
    |
189 |             (Self::MinusZero, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::Infinity) | (Self::MinusZero, Self::MinusInfinity) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 ~             (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Nan, _) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::Nan, _) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::Nan, _) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Nan, _) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::Nan, _) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::Nan, _) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::Nan, _) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::Nan, _) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::Nan, _) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:13
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::BigDecimal(_)) | (Self::Nan, _) => false,
189 |             (Self::MinusZero, Self::Infinity) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:189:13
    |
189 |             (Self::MinusZero, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::Infinity) | (Self::Nan, _) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:191:13
    |
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
191 ~             (Self::MinusZero, Self::MinusInfinity) | (Self::Nan, _) => false,
192 ~             (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:177:13
    |
177 |             (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusNan, _) => false,
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:178:13
    |
178 |             (Self::BigDecimal(_), Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusNan, _) => false,
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:179:13
    |
179 |             (Self::BigDecimal(_), Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::BigDecimal(_), Self::MinusZero) | (Self::MinusNan, _) => false,
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:180:13
    |
180 |             (Self::Infinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusNan, _) => false,
181 |             (Self::Infinity, Self::Infinity) => true,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:182:13
    |
182 |             (Self::Infinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusNan, _) => false,
183 |             (Self::Infinity, Self::MinusInfinity) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:183:13
    |
183 |             (Self::Infinity, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusNan, _) => false,
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:184:13
    |
184 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusNan, _) => false,
185 |             (Self::MinusInfinity, Self::Infinity) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:185:13
    |
185 |             (Self::MinusInfinity, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusNan, _) => false,
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:186:13
    |
186 |             (Self::MinusInfinity, Self::MinusZero) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusNan, _) => false,
187 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:188:13
    |
188 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::BigDecimal(_)) | (Self::MinusNan, _) => false,
189 |             (Self::MinusZero, Self::Infinity) => false,
...
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:189:13
    |
189 |             (Self::MinusZero, Self::Infinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::Infinity) | (Self::MinusNan, _) => false,
190 |             (Self::MinusZero, Self::MinusZero) => true,
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:191:13
    |
191 |             (Self::MinusZero, Self::MinusInfinity) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
191 ~             (Self::MinusZero, Self::MinusInfinity) | (Self::MinusNan, _) => false,
192 |             (Self::Nan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:192:13
    |
192 |             (Self::Nan, _) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
192 ~             (Self::Nan, _) | (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::Infinity) => false,
178 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::MinusZero) => false,
179 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::BigDecimal(_), Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::Infinity, Self::BigDecimal(_)) => false,
180 |             (Self::Infinity, Self::Infinity) => true,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::BigDecimal(_), Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::Infinity) => true,
181 |             (Self::Infinity, Self::MinusZero) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::Infinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
183 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::Infinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
184 |             (Self::MinusInfinity, Self::Infinity) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
185 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
186 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
187 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::Infinity) => false,
189 |             (Self::MinusZero, Self::MinusZero) => true,
...
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusZero, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::MinusZero) => true,
190 |             (Self::MinusZero, Self::MinusInfinity) => false,
191 |             (Self::Nan, _) => false,
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
191 ~             (Self::Nan, _) => false,
192 |             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::MinusZero, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
192 ~             (Self::MinusNan, _) => false,
193 ~             (_, Self::Nan) | (Self::Nan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
193 -             (Self::MinusNan, _) => false,
194 -             (_, Self::Nan) => false,
193 +             (_, Self::Nan) | (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
177 ~             (Self::BigDecimal(_), Self::Infinity) => false,
178 |             (Self::BigDecimal(_), Self::MinusZero) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::BigDecimal(_), Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
178 ~             (Self::BigDecimal(_), Self::MinusZero) => false,
179 |             (Self::Infinity, Self::BigDecimal(_)) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::BigDecimal(_), Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
179 ~             (Self::Infinity, Self::BigDecimal(_)) => false,
180 |             (Self::Infinity, Self::Infinity) => true,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::BigDecimal(_), Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
180 ~             (Self::Infinity, Self::Infinity) => true,
181 |             (Self::Infinity, Self::MinusZero) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::Infinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
182 ~             (Self::Infinity, Self::MinusInfinity) => false,
183 |             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::Infinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
183 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => false,
184 |             (Self::MinusInfinity, Self::Infinity) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::Infinity, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
184 ~             (Self::MinusInfinity, Self::Infinity) => false,
185 |             (Self::MinusInfinity, Self::MinusZero) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusInfinity, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
185 ~             (Self::MinusInfinity, Self::MinusZero) => false,
186 |             (Self::MinusInfinity, Self::MinusInfinity) => true,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusInfinity, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
186 ~             (Self::MinusInfinity, Self::MinusInfinity) => true,
187 |             (Self::MinusZero, Self::BigDecimal(_)) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusInfinity, Self::MinusZero) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
188 ~             (Self::MinusZero, Self::Infinity) => false,
189 |             (Self::MinusZero, Self::MinusZero) => true,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusZero, Self::BigDecimal(_)) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
189 ~             (Self::MinusZero, Self::MinusZero) => true,
190 |             (Self::MinusZero, Self::MinusInfinity) => false,
...
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusZero, Self::Infinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
191 ~             (Self::Nan, _) => false,
192 |             (Self::MinusNan, _) => false,
193 |             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusZero, Self::MinusInfinity) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:195:13
    |
195 |             (_, Self::MinusNan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
193 ~             (_, Self::Nan) => false,
194 ~             (_, Self::MinusNan) | (Self::MinusNan, _) => false,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:194:13
    |
194 |             (_, Self::Nan) => false,
    |             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
194 ~             (_, Self::Nan) | (_, Self::MinusNan) => false,
195 ~             }
    |

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:176:14
    |
176 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.eq(n),
    |              ^^^^^^^^^^^^^^^^^^^
    |
    = help: explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:176:31
    |
176 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.eq(n),
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing trait method provided by default: `lt`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1382:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `le`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1400:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `gt`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1418:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `ge`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1436:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `__chaining_lt`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1452:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `__chaining_le`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1461:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `__chaining_gt`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1470:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `__chaining_ge`
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:200:1
    |
200 | impl PartialOrd for ExtendedBigDecimal {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/cmp.rs:1479:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:201:5
    |
201 | /     fn partial_cmp(&self, other: &Self) -> Option<Ordering> {
202 | |         match (self, other) {
203 | |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.partial_cmp(n),
204 | |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
...   |
224 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:203:59
    |
203 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.partial_cmp(n),
    |                                                           ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
203 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => return m.partial_cmp(n),
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:59
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => return Some(Ordering::Greater),
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:54
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |                                                      ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => return Some(Ordering::Less),
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:206:55
    |
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
206 |             (Self::BigDecimal(m), Self::MinusZero) => return m.partial_cmp(&BigDecimal::zero()),
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:207:54
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => return Some(Ordering::Greater),
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:208:49
    |
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
    |                                                 ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
208 |             (Self::Infinity, Self::Infinity) => return Some(Ordering::Equal),
    |                                                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:209:50
    |
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
209 |             (Self::Infinity, Self::MinusZero) => return Some(Ordering::Greater),
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:210:54
    |
210 |             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
210 |             (Self::Infinity, Self::MinusInfinity) => return Some(Ordering::Greater),
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:211:59
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |                                                           ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => return Some(Ordering::Less),
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:212:54
    |
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
    |                                                      ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
212 |             (Self::MinusInfinity, Self::Infinity) => return Some(Ordering::Less),
    |                                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:213:55
    |
213 |             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
    |                                                       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
213 |             (Self::MinusInfinity, Self::MinusZero) => return Some(Ordering::Less),
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:214:59
    |
214 |             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |                                                           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
214 |             (Self::MinusInfinity, Self::MinusInfinity) => return Some(Ordering::Equal),
    |                                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:215:55
    |
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
215 |             (Self::MinusZero, Self::BigDecimal(n)) => return BigDecimal::zero().partial_cmp(n),
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:216:50
    |
216 |             (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
    |                                                  ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
216 |             (Self::MinusZero, Self::Infinity) => return Some(Ordering::Less),
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:217:51
    |
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |                                                   ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
217 |             (Self::MinusZero, Self::MinusZero) => return Some(Ordering::Equal),
    |                                                   ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:218:55
    |
218 |             (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
218 |             (Self::MinusZero, Self::MinusInfinity) => return Some(Ordering::Greater),
    |                                                       ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:219:31
    |
219 |             (Self::Nan, _) => None,
    |                               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
219 |             (Self::Nan, _) => return None,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:220:36
    |
220 |             (Self::MinusNan, _) => None,
    |                                    ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
220 |             (Self::MinusNan, _) => return None,
    |                                    ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:221:31
    |
221 |             (_, Self::Nan) => None,
    |                               ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
221 |             (_, Self::Nan) => return None,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:222:36
    |
222 |             (_, Self::MinusNan) => None,
    |                                    ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
222 |             (_, Self::MinusNan) => return None,
    |                                    ++++++

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:13
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
204 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
207 ~             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:13
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
204 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
...
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
209 ~             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:207:13
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
207 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
209 ~             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:13
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
204 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
...
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
210 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:207:13
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
207 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
210 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:209:13
    |
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
209 ~             (Self::Infinity, Self::MinusZero) | (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
210 ~             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:13
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
205 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
...
210 |             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
211 ~             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:13
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
205 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
...
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
212 ~             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:211:13
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
211 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
212 ~             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:13
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
205 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
...
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
213 ~             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:211:13
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
211 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
213 ~             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:212:13
    |
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
212 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
213 ~             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:208:13
    |
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
208 ~             (Self::Infinity, Self::Infinity) | (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
...
213 |             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
214 ~             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:205:13
    |
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
205 ~             (Self::BigDecimal(_), Self::Infinity) | (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
...
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 ~             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:211:13
    |
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
211 ~             (Self::MinusInfinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
...
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 ~             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:212:13
    |
212 |             (Self::MinusInfinity, Self::Infinity) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
212 ~             (Self::MinusInfinity, Self::Infinity) | (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
213 |             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
214 |             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 ~             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:213:13
    |
213 |             (Self::MinusInfinity, Self::MinusZero) => Some(Ordering::Less),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
213 ~             (Self::MinusInfinity, Self::MinusZero) | (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
214 |             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 ~             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:208:13
    |
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
208 ~             (Self::Infinity, Self::Infinity) | (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
...
216 |             (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
217 ~             (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:214:13
    |
214 |             (Self::MinusInfinity, Self::MinusInfinity) => Some(Ordering::Equal),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
214 ~             (Self::MinusInfinity, Self::MinusInfinity) | (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
215 |             (Self::MinusZero, Self::BigDecimal(n)) => BigDecimal::zero().partial_cmp(n),
216 |             (Self::MinusZero, Self::Infinity) => Some(Ordering::Less),
217 ~             (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:204:13
    |
204 |             (Self::BigDecimal(_), Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
204 ~             (Self::BigDecimal(_), Self::MinusInfinity) | (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
205 |             (Self::BigDecimal(_), Self::Infinity) => Some(Ordering::Less),
...
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
218 ~             (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:207:13
    |
207 |             (Self::Infinity, Self::BigDecimal(_)) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
207 ~             (Self::Infinity, Self::BigDecimal(_)) | (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
208 |             (Self::Infinity, Self::Infinity) => Some(Ordering::Equal),
...
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
218 ~             (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:209:13
    |
209 |             (Self::Infinity, Self::MinusZero) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
209 ~             (Self::Infinity, Self::MinusZero) | (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
210 |             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
...
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
218 ~             (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:210:13
    |
210 |             (Self::Infinity, Self::MinusInfinity) => Some(Ordering::Greater),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
210 ~             (Self::Infinity, Self::MinusInfinity) | (Self::MinusZero, Self::MinusInfinity) => Some(Ordering::Greater),
211 |             (Self::MinusInfinity, Self::BigDecimal(_)) => Some(Ordering::Less),
...
217 |             (Self::MinusZero, Self::MinusZero) => Some(Ordering::Equal),
218 ~             (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:219:13
    |
219 |             (Self::Nan, _) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
219 ~             (Self::Nan, _) | (Self::MinusNan, _) => None,
220 ~             (_, Self::Nan) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:221:13
    |
221 |             (_, Self::Nan) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
219 ~             (Self::MinusNan, _) => None,
220 ~             (_, Self::Nan) | (Self::Nan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:221:13
    |
221 |             (_, Self::Nan) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
220 -             (Self::MinusNan, _) => None,
221 -             (_, Self::Nan) => None,
220 +             (_, Self::Nan) | (Self::MinusNan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:222:13
    |
222 |             (_, Self::MinusNan) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
220 ~             (_, Self::Nan) => None,
221 ~             (_, Self::MinusNan) | (Self::MinusNan, _) => None,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:221:13
    |
221 |             (_, Self::Nan) => None,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
221 ~             (_, Self::Nan) | (_, Self::MinusNan) => None,
222 ~             }
    |

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:203:14
    |
203 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.partial_cmp(n),
    |              ^^^^^^^^^^^^^^^^^^^
    |
    = help: explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:203:31
    |
203 |             (Self::BigDecimal(m), Self::BigDecimal(n)) => m.partial_cmp(n),
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:206:31
    |
206 |             (Self::BigDecimal(m), Self::MinusZero) => m.partial_cmp(&BigDecimal::zero()),
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:230:5
    |
230 | /     fn neg(self) -> Self::Output {
231 | |         match self {
232 | |             Self::BigDecimal(bd) => {
233 | |                 if bd.is_zero() {
...   |
245 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:234:21
    |
234 |                     Self::MinusZero
    |                     ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
234 |                     return Self::MinusZero
    |                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:236:21
    |
236 |                     Self::BigDecimal(bd.neg())
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
236 |                     return Self::BigDecimal(bd.neg())
    |                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:239:32
    |
239 |             Self::MinusZero => Self::BigDecimal(BigDecimal::zero()),
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
239 |             Self::MinusZero => return Self::BigDecimal(BigDecimal::zero()),
    |                                ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:240:31
    |
240 |             Self::Infinity => Self::MinusInfinity,
    |                               ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
240 |             Self::Infinity => return Self::MinusInfinity,
    |                               ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:241:36
    |
241 |             Self::MinusInfinity => Self::Infinity,
    |                                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
241 |             Self::MinusInfinity => return Self::Infinity,
    |                                    ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:242:26
    |
242 |             Self::Nan => Self::MinusNan,
    |                          ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
242 |             Self::Nan => return Self::MinusNan,
    |                          ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:243:31
    |
243 |             Self::MinusNan => Self::Nan,
    |                               ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
243 |             Self::MinusNan => return Self::Nan,
    |                               ++++++

warning: item name ends with its containing module's name
 --> src/uucore/src/lib/features/parser/mod.rs:7:9
  |
7 | pub mod num_parser;
  |         ^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions
  = note: `-W clippy::module-name-repetitions` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::module_name_repetitions)]`

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/features/parser/num_parser.rs:473:17
    |
473 | pub(crate) enum ParseTarget {
    |                 ^^^^^^^^^^^
    |
note: should be placed before `construct_extended_big_decimal`
   --> src/uucore/src/lib/features/parser/num_parser.rs:405:4
    |
405 | fn construct_extended_big_decimal<'a>(
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/num_parser.rs:14:17
   |
14 | use num_traits::Signed;
   |                 ^^^^^^ help: use: `Signed as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/num_parser.rs:15:17
   |
15 | use num_traits::ToPrimitive;
   |                 ^^^^^^^^^^^ help: use: `ToPrimitive as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/num_parser.rs:30:5
   |
30 |     Decimal = 10,
   |     ^^^^^^^
   |
note: should be placed before `Octal`
  --> src/uucore/src/lib/features/parser/num_parser.rs:27:5
   |
27 |     Octal = 8,
   |     ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:43:29
   |
43 |             Self::Binary => ('0'..='1').contains(&c).then(|| from_decimal(c)),
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
43 |             Self::Binary => return ('0'..='1').contains(&c).then(|| from_decimal(c)),
   |                             ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:44:28
   |
44 |             Self::Octal => ('0'..='7').contains(&c).then(|| from_decimal(c)),
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
44 |             Self::Octal => return ('0'..='7').contains(&c).then(|| from_decimal(c)),
   |                            ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:45:30
   |
45 |             Self::Decimal => c.is_ascii_digit().then(|| from_decimal(c)),
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
45 |             Self::Decimal => return c.is_ascii_digit().then(|| from_decimal(c)),
   |                              ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:47:30
   |
47 |                 '0'..='9' => Some(from_decimal(c)),
   |                              ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
47 |                 '0'..='9' => return Some(from_decimal(c)),
   |                              ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:48:34
   |
48 |                 c @ 'a'..='f' => Some(u64::from(c) - u64::from('a') + 10),
   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
48 |                 c @ 'a'..='f' => return Some(u64::from(c) - u64::from('a') + 10),
   |                                  ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:49:22
   |
49 |                 _ => None,
   |                      ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
49 |                 _ => return None,
   |                      ++++++

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
  --> src/uucore/src/lib/features/parser/num_parser.rs:38:14
   |
38 |     fn digit(&self, c: char) -> Option<u64> {
   |              ^^^^^ help: consider passing by value instead: `self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref
   = note: `-W clippy::trivially-copy-pass-by-ref` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::trivially_copy_pass_by_ref)]`

warning: this ident consists of a single char
  --> src/uucore/src/lib/features/parser/num_parser.rs:38:21
   |
38 |     fn digit(&self, c: char) -> Option<u64> {
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:40:13
   |
40 |             u64::from(c) - u64::from('0')
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
40 |             return u64::from(c) - u64::from('0')
   |             ++++++

warning: this ident consists of a single char
  --> src/uucore/src/lib/features/parser/num_parser.rs:39:25
   |
39 |         fn from_decimal(c: char) -> u64 {
   |                         ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/num_parser.rs:40:13
   |
40 |             u64::from(c) - u64::from('0')
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: type of pattern does not match the expression type
  --> src/uucore/src/lib/features/parser/num_parser.rs:43:13
   |
43 |             Self::Binary => ('0'..='1').contains(&c).then(|| from_decimal(c)),
   |             ^^^^^^^^^^^^
   |
   = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:43:62
   |
43 |             Self::Binary => ('0'..='1').contains(&c).then(|| from_decimal(c)),
   |                                                              ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
43 |             Self::Binary => ('0'..='1').contains(&c).then(|| return from_decimal(c)),
   |                                                              ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:44:61
   |
44 |             Self::Octal => ('0'..='7').contains(&c).then(|| from_decimal(c)),
   |                                                             ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
44 |             Self::Octal => ('0'..='7').contains(&c).then(|| return from_decimal(c)),
   |                                                             ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:45:57
   |
45 |             Self::Decimal => c.is_ascii_digit().then(|| from_decimal(c)),
   |                                                         ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
45 |             Self::Decimal => c.is_ascii_digit().then(|| return from_decimal(c)),
   |                                                         ++++++

warning: `c @ 'a'..='f'` is shadowed
  --> src/uucore/src/lib/features/parser/num_parser.rs:48:17
   |
48 |                 c @ 'a'..='f' => Some(u64::from(c) - u64::from('a') + 10),
   |                 ^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/num_parser.rs:38:21
   |
38 |     fn digit(&self, c: char) -> Option<u64> {
   |                     ^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: this ident consists of a single char
  --> src/uucore/src/lib/features/parser/num_parser.rs:48:17
   |
48 |                 c @ 'a'..='f' => Some(u64::from(c) - u64::from('a') + 10),
   |                 ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/num_parser.rs:48:39
   |
48 |                 c @ 'a'..='f' => Some(u64::from(c) - u64::from('a') + 10),
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:58:9
   |
58 |         (digits, rest)
   |         ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
58 |         return (digits, rest)
   |         ++++++

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
  --> src/uucore/src/lib/features/parser/num_parser.rs:56:25
   |
56 |     fn parse_digits<'a>(&self, str: &'a str) -> (Option<BigUint>, &'a str) {
   |                         ^^^^^ help: consider passing by value instead: `self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:79:9
   |
79 |         (digits, count, rest)
   |         ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
79 |         return (digits, count, rest)
   |         ++++++

warning: this argument (1 byte) is passed by reference, but would be more efficient if passed by value (limit: 8 byte)
  --> src/uucore/src/lib/features/parser/num_parser.rs:65:9
   |
65 |         &self,
   |         ^^^^^ help: consider passing by value instead: `self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#trivially_copy_pass_by_ref

warning: `mut digits` is shadowed by itself in `digits`
  --> src/uucore/src/lib/features/parser/num_parser.rs:69:17
   |
69 |         let mut digits: Option<BigUint> = digits;
   |                 ^^^^^^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/num_parser.rs:67:9
   |
67 |         digits: Option<BigUint>,
   |         ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_same
   = note: `-W clippy::shadow-same` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_same)]`

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/num_parser.rs:72:62
   |
72 |         while let Some(d) = rest.chars().next().and_then(|c| self.digit(c)) {
   |                                                              ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
72 |         while let Some(d) = rest.chars().next().and_then(|c| return self.digit(c)) {
   |                                                              ++++++

warning: this ident consists of a single char
  --> src/uucore/src/lib/features/parser/num_parser.rs:72:59
   |
72 |         while let Some(d) = rest.chars().next().and_then(|c| self.digit(c)) {
   |                                                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
  --> src/uucore/src/lib/features/parser/num_parser.rs:72:24
   |
72 |         while let Some(d) = rest.chars().next().and_then(|c| self.digit(c)) {
   |                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/num_parser.rs:74:22
   |
74 |                 Some(digits.unwrap_or_default() * *self as u8 + d),
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
  --> src/uucore/src/lib/features/parser/num_parser.rs:74:51
   |
74 |                 Some(digits.unwrap_or_default() * *self as u8 + d),
   |                                                   ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/num_parser.rs:75:17
   |
75 |                 count + 1,
   |                 ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `count` shadows a previous, unrelated binding
  --> src/uucore/src/lib/features/parser/num_parser.rs:73:22
   |
73 |             (digits, count) = (
   |                      ^^^^^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/num_parser.rs:73:14
   |
73 |             (digits, count) = (
   |              ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated
   = note: `-W clippy::shadow-unrelated` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_unrelated)]`

warning: indexing into a string may panic if the index is within a UTF-8 character
  --> src/uucore/src/lib/features/parser/num_parser.rs:77:21
   |
77 |             rest = &rest[1..];
   |                     ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice
   = note: `-W clippy::string-slice` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::string_slice)]`

warning: exported enums should not be exhaustive
  --> src/uucore/src/lib/features/parser/num_parser.rs:85:1
   |
85 | / pub enum ExtendedParserError<'a, T> {
86 | |     /// The input as a whole makes no sense
87 | |     NotNumeric,
88 | |     /// The beginning of the input made sense and has been parsed,
...  |
97 | |     Underflow(T),
98 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
help: try adding #[non_exhaustive]
   |
85 + #[non_exhaustive]
86 | pub enum ExtendedParserError<'a, T> {
   |

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/num_parser.rs:94:5
   |
94 |     Overflow(T),
   |     ^^^^^^^^
   |
note: should be placed before `PartialMatch`
  --> src/uucore/src/lib/features/parser/num_parser.rs:90:5
   |
90 |     PartialMatch(T, &'a str),
   |     ^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: you are deriving `PartialEq` and can implement `Eq`
  --> src/uucore/src/lib/features/parser/num_parser.rs:84:17
   |
84 | #[derive(Debug, PartialEq)]
   |                 ^^^^^^^^^ help: consider deriving `Eq` as well: `PartialEq, Eq`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq
   = note: `-W clippy::derive-partial-eq-without-eq` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::derive_partial_eq_without_eq)]`

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:107:33
    |
107 |             Self::NotNumeric => T::zero(),
    |                                 ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
107 |             Self::NotNumeric => return T::zero(),
    |                                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:108:41
    |
108 |             Self::PartialMatch(v, _) => v,
    |                                         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
108 |             Self::PartialMatch(v, _) => return v,
    |                                         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:109:34
    |
109 |             Self::Overflow(v) => v,
    |                                  ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
109 |             Self::Overflow(v) => return v,
    |                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:110:35
    |
110 |             Self::Underflow(v) => v,
    |                                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
110 |             Self::Underflow(v) => return v,
    |                                   ++++++

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/num_parser.rs:108:13
    |
108 |             Self::PartialMatch(v, _) => v,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
108 ~             Self::PartialMatch(v, _) | Self::Overflow(v) => v,
109 ~             Self::Underflow(v) => v,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/num_parser.rs:108:13
    |
108 |             Self::PartialMatch(v, _) => v,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
108 ~             Self::PartialMatch(v, _) | Self::Underflow(v) => v,
109 |             Self::Overflow(v) => v,
110 ~             }
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/num_parser.rs:109:13
    |
109 |             Self::Overflow(v) => v,
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
109 ~             Self::Overflow(v) | Self::Underflow(v) => v,
110 ~             }
    |

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:108:32
    |
108 |             Self::PartialMatch(v, _) => v,
    |                                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:109:28
    |
109 |             Self::Overflow(v) => v,
    |                            ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:110:29
    |
110 |             Self::Underflow(v) => v,
    |                             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:132:48
    |
132 |             ExtendedParserError::NotNumeric => ExtendedParserError::NotNumeric,
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
132 |             ExtendedParserError::NotNumeric => return ExtendedParserError::NotNumeric,
    |                                                ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:134:17
    |
134 |                 ExtendedParserError::PartialMatch(extract(f(v)), rest)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
134 |                 return ExtendedParserError::PartialMatch(extract(f(v)), rest)
    |                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:136:49
    |
136 |             ExtendedParserError::Overflow(v) => ExtendedParserError::Overflow(extract(f(v))),
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
136 |             ExtendedParserError::Overflow(v) => return ExtendedParserError::Overflow(extract(f(v))),
    |                                                 ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:137:50
    |
137 |             ExtendedParserError::Underflow(v) => ExtendedParserError::Underflow(extract(f(v))),
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
137 |             ExtendedParserError::Underflow(v) => return ExtendedParserError::Underflow(extract(f(v))),
    |                                                  ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:119:9
    |
119 |         f: impl FnOnce(T) -> Result<U, ExtendedParserError<'a, U>>,
    |         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:128:13
    |
128 |             v.unwrap_or_else(|e| e.extract())
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
128 |             return v.unwrap_or_else(|e| e.extract())
    |             ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:124:23
    |
124 |         fn extract<U>(v: Result<U, ExtendedParserError<'_, U>>) -> U
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: redundant closure
   --> src/uucore/src/lib/features/parser/num_parser.rs:128:30
    |
128 |             v.unwrap_or_else(|e| e.extract())
    |                              ^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `ExtendedParserError::extract`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:128:34
    |
128 |             v.unwrap_or_else(|e| e.extract())
    |                                  ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
128 |             v.unwrap_or_else(|e| return e.extract())
    |                                  ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:128:31
    |
128 |             v.unwrap_or_else(|e| e.extract())
    |                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:133:47
    |
133 |             ExtendedParserError::PartialMatch(v, rest) => {
    |                                               ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:136:43
    |
136 |             ExtendedParserError::Overflow(v) => ExtendedParserError::Overflow(extract(f(v))),
    |                                           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:137:44
    |
137 |             ExtendedParserError::Underflow(v) => ExtendedParserError::Underflow(extract(f(v))),
    |                                            ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:148:5
    |
148 | /     fn extended_parse(input: &str) -> Result<Self, ExtendedParserError<'_, Self>>
149 | |     where
150 | |         Self: Sized;
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
    = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/num_parser.rs:155:5
    |
155 | /     fn extended_parse(input: &str) -> Result<i64, ExtendedParserError<'_, i64>> {
156 | |         fn into_i64<'a>(ebd: ExtendedBigDecimal) -> Result<i64, ExtendedParserError<'a, i64>> {
157 | |             match ebd {
158 | |                 ExtendedBigDecimal::BigDecimal(bd) => {
...   |
185 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:182:22
    |
182 |             Ok(v) => into_i64(v),
    |                      ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
182 |             Ok(v) => return into_i64(v),
    |                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:183:23
    |
183 |             Err(e) => Err(e.map(into_i64)),
    |                       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
183 |             Err(e) => return Err(e.map(into_i64)),
    |                       ++++++

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:155:46
    |
155 |     fn extended_parse(input: &str) -> Result<i64, ExtendedParserError<'_, i64>> {
    |                                              ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:155:75
    |
155 |     fn extended_parse(input: &str) -> Result<i64, ExtendedParserError<'_, i64>> {
    |                                                                           ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:156:9
    |
156 |         fn into_i64<'a>(ebd: ExtendedBigDecimal) -> Result<i64, ExtendedParserError<'a, i64>> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:163:38
    |
163 | ...                   Ok(i) => Ok(i),
    |                                ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
163 |                             Ok(i) => return Ok(i),
    |                                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:164:34
    |
164 |   ...                   _ => Err(ExtendedParserError::Overflow(if negative {
    |  ____________________________^
165 | | ...                       i64::MIN
166 | | ...                   } else {
167 | | ...                       i64::MAX
168 | | ...                   })),
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
164 |                             _ => return Err(ExtendedParserError::Overflow(if negative {
    |                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:172:25
    |
172 |                         Err(ExtendedParserError::NotNumeric)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
172 |                         return Err(ExtendedParserError::NotNumeric)
    |                         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:175:50
    |
175 |                 ExtendedBigDecimal::MinusZero => Ok(0),
    |                                                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
175 |                 ExtendedBigDecimal::MinusZero => return Ok(0),
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:177:22
    |
177 |                 _ => Err(ExtendedParserError::NotNumeric),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
177 |                 _ => return Err(ExtendedParserError::NotNumeric),
    |                      ++++++

warning: wildcard match will also match any future added variants
   --> src/uucore/src/lib/features/parser/num_parser.rs:177:17
    |
177 |                 _ => Err(ExtendedParserError::NotNumeric),
    |                 ^ help: try: `ExtendedBigDecimal::Infinity | ExtendedBigDecimal::MinusInfinity | ExtendedBigDecimal::Nan | ExtendedBigDecimal::MinusNan`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:162:25
    |
162 | /                         match i64::try_from(digits) {
163 | |                             Ok(i) => Ok(i),
164 | |                             _ => Err(ExtendedParserError::Overflow(if negative {
165 | |                                 i64::MIN
...   |
168 | |                             })),
169 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`
help: try
    |
162 ~                         i64::try_from(digits).map_or(Err(ExtendedParserError::Overflow(if negative {
163 +                                 i64::MIN
164 +                             } else {
165 +                                 i64::MAX
166 +                             })), |i| Ok(i))
    |

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:182:16
    |
182 |             Ok(v) => into_i64(v),
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:183:17
    |
183 |             Err(e) => Err(e.map(into_i64)),
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/num_parser.rs:190:5
    |
190 | /     fn extended_parse(input: &str) -> Result<u64, ExtendedParserError<'_, u64>> {
191 | |         fn into_u64<'a>(ebd: ExtendedBigDecimal) -> Result<u64, ExtendedParserError<'a, u64>> {
192 | |             match ebd {
193 | |                 ExtendedBigDecimal::BigDecimal(bd) => {
...   |
222 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:219:22
    |
219 |             Ok(v) => into_u64(v),
    |                      ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
219 |             Ok(v) => return into_u64(v),
    |                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:220:23
    |
220 |             Err(e) => Err(e.map(into_u64)),
    |                       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
220 |             Err(e) => return Err(e.map(into_u64)),
    |                       ++++++

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:190:46
    |
190 |     fn extended_parse(input: &str) -> Result<u64, ExtendedParserError<'_, u64>> {
    |                                              ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:190:75
    |
190 |     fn extended_parse(input: &str) -> Result<u64, ExtendedParserError<'_, u64>> {
    |                                                                           ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:191:9
    |
191 |         fn into_u64<'a>(ebd: ExtendedBigDecimal) -> Result<u64, ExtendedParserError<'a, u64>> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:201:37
    |
201 | ...                   Ok(!i + 1)
    |                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
201 |                                     return Ok(!i + 1)
    |                                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:203:37
    |
203 | ...                   Ok(i)
    |                       ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
203 |                                     return Ok(i)
    |                                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:206:34
    |
206 | ...                   _ => Err(ExtendedParserError::Overflow(u64::MAX)),
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
206 |                             _ => return Err(ExtendedParserError::Overflow(u64::MAX)),
    |                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:210:25
    |
210 |                         Err(ExtendedParserError::NotNumeric)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
210 |                         return Err(ExtendedParserError::NotNumeric)
    |                         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:213:50
    |
213 |                 ExtendedBigDecimal::MinusZero => Ok(0),
    |                                                  ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
213 |                 ExtendedBigDecimal::MinusZero => return Ok(0),
    |                                                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:214:22
    |
214 |                 _ => Err(ExtendedParserError::NotNumeric),
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
214 |                 _ => return Err(ExtendedParserError::NotNumeric),
    |                      ++++++

warning: wildcard match will also match any future added variants
   --> src/uucore/src/lib/features/parser/num_parser.rs:214:17
    |
214 |                 _ => Err(ExtendedParserError::NotNumeric),
    |                 ^ help: try: `ExtendedBigDecimal::Infinity | ExtendedBigDecimal::MinusInfinity | ExtendedBigDecimal::Nan | ExtendedBigDecimal::MinusNan`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: `digits` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:196:36
    |
196 |                         let (sign, digits) = digits.into_parts();
    |                                    ^^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:194:26
    |
194 |                     let (digits, scale) = bd.into_bigint_and_scale();
    |                          ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:198:25
    |
198 | /                         match u64::try_from(digits) {
199 | |                             Ok(i) => {
200 | |                                 if sign == Sign::Minus {
201 | |                                     Ok(!i + 1)
...   |
206 | |                             _ => Err(ExtendedParserError::Overflow(u64::MAX)),
207 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
198 ~                         u64::try_from(digits).map_or(Err(ExtendedParserError::Overflow(u64::MAX)), |i| if sign == Sign::Minus {
199 +                                     Ok(!i + 1)
200 +                                 } else {
201 +                                     Ok(i)
202 +                                 })
    |

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:201:40
    |
201 | ...                   Ok(!i + 1)
    |                          ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:219:16
    |
219 |             Ok(v) => into_u64(v),
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:220:17
    |
220 |             Err(e) => Err(e.map(into_u64)),
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/num_parser.rs:227:5
    |
227 | /     fn extended_parse(input: &str) -> Result<f64, ExtendedParserError<'_, f64>> {
228 | |         fn into_f64<'a>(ebd: ExtendedBigDecimal) -> Result<f64, ExtendedParserError<'a, f64>> {
229 | |             // TODO: _Some_ of this is generic, so this should probably be implemented as an ExtendedBigDecimal trait (ToPrimitive).
230 | |             let v = match ebd {
...   |
254 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:251:22
    |
251 |             Ok(v) => into_f64(v),
    |                      ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
251 |             Ok(v) => return into_f64(v),
    |                      ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:252:23
    |
252 |             Err(e) => Err(e.map(into_f64)),
    |                       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
252 |             Err(e) => return Err(e.map(into_f64)),
    |                       ++++++

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:227:46
    |
227 |     fn extended_parse(input: &str) -> Result<f64, ExtendedParserError<'_, f64>> {
    |                                              ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:227:75
    |
227 |     fn extended_parse(input: &str) -> Result<f64, ExtendedParserError<'_, f64>> {
    |                                                                           ^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:228:9
    |
228 |         fn into_f64<'a>(ebd: ExtendedBigDecimal) -> Result<f64, ExtendedParserError<'a, f64>> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/parser/num_parser.rs:232:29
    |
232 |                     let f = bd.to_f64().unwrap();
    |                             ^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:228:9
    |
228 |         fn into_f64<'a>(ebd: ExtendedBigDecimal) -> Result<f64, ExtendedParserError<'a, f64>> {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:247:13
    |
247 |             Ok(v)
    |             ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
247 |             return Ok(v)
    |             ++++++

warning: default numeric fallback might occur
   --> src/uucore/src/lib/features/parser/num_parser.rs:241:51
    |
241 |                 ExtendedBigDecimal::MinusZero => -0.0,
    |                                                   ^^^ help: consider adding suffix: `0.0_f64`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback
    = note: `-W clippy::default-numeric-fallback` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::default_numeric_fallback)]`

warning: used `unwrap()` on an `Option` value
   --> src/uucore/src/lib/features/parser/num_parser.rs:232:29
    |
232 |                     let f = bd.to_f64().unwrap();
    |                             ^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:232:25
    |
232 |                     let f = bd.to_f64().unwrap();
    |                         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: floating-point arithmetic detected
   --> src/uucore/src/lib/features/parser/num_parser.rs:243:49
    |
243 |                 ExtendedBigDecimal::MinusNan => -f64::NAN,
    |                                                 ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
    = note: `-W clippy::float-arithmetic` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::float_arithmetic)]`

warning: floating-point arithmetic detected
   --> src/uucore/src/lib/features/parser/num_parser.rs:245:54
    |
245 |                 ExtendedBigDecimal::MinusInfinity => -f64::INFINITY,
    |                                                      ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:230:17
    |
230 |             let v = match ebd {
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:251:16
    |
251 |             Ok(v) => into_f64(v),
    |                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:252:17
    |
252 |             Err(e) => Err(e.map(into_f64)),
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/num_parser.rs:258:30
    |
258 |     /// Parse a number as an ExtendedBigDecimal
    |                              ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
    = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
    |
258 -     /// Parse a number as an ExtendedBigDecimal
258 +     /// Parse a number as an `ExtendedBigDecimal`
    |

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/num_parser.rs:259:5
    |
259 | /     fn extended_parse(
260 | |         input: &str,
261 | |     ) -> Result<ExtendedBigDecimal, ExtendedParserError<'_, ExtendedBigDecimal>> {
262 | |         parse(input, ParseTarget::Decimal, &[])
263 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:262:9
    |
262 |         parse(input, ParseTarget::Decimal, &[])
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
262 |         return parse(input, ParseTarget::Decimal, &[])
    |         ++++++

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:261:17
    |
261 |     ) -> Result<ExtendedBigDecimal, ExtendedParserError<'_, ExtendedBigDecimal>> {
    |                 ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/uucore/src/lib/features/parser/num_parser.rs:261:61
    |
261 |     ) -> Result<ExtendedBigDecimal, ExtendedParserError<'_, ExtendedBigDecimal>> {
    |                                                             ^^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:278:5
    |
278 |     (digits, 0, rest)
    |     ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
278 |     return (digits, 0, rest)
    |     ++++++

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:273:21
    |
273 |         if let Some(rest) = rest.strip_prefix('.') {
    |                     ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:268:18
    |
268 |     let (digits, rest) = base.parse_digits(str);
    |                  ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:307:5
    |
307 |     (None, str)
    |     ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
307 |     return (None, str)
    |     ++++++

warning: wildcard match will also match any future added variants
   --> src/uucore/src/lib/features/parser/num_parser.rs:285:9
    |
285 |         _ => unreachable!(),
    |         ^ help: try: `Base::Binary | Base::Octal`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: usage of the `unreachable!` macro
   --> src/uucore/src/lib/features/parser/num_parser.rs:285:14
    |
285 |         _ => unreachable!(),
    |              ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable
    = note: `-W clippy::unreachable` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::unreachable)]`

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:291:28
    |
291 |           let (sign, rest) = if let Some(rest) = rest.strip_prefix('-') {
    |  ____________________________^
292 | |             (Sign::Minus, rest)
293 | |         } else if let Some(rest) = rest.strip_prefix('+') {
294 | |             (Sign::Plus, rest)
...   |
297 | |             (Sign::Plus, rest) // No explicit sign is equivalent to `+`.
298 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
291 ~         let (sign, rest) = rest.strip_prefix('-').map_or_else(|| if let Some(rest) = rest.strip_prefix('+') {
292 +             (Sign::Plus, rest)
293 +         } else {
294 +             // Something else, or nothing at all: keep going.
295 +             (Sign::Plus, rest) // No explicit sign is equivalent to `+`.
296 ~         }, |rest| (Sign::Minus, rest));
    |

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:291:40
    |
291 |         let (sign, rest) = if let Some(rest) = rest.strip_prefix('-') {
    |                                        ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:290:17
    |
290 |     if let Some(rest) = str.strip_prefix(exp_chars) {
    |                 ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:293:28
    |
293 |         } else if let Some(rest) = rest.strip_prefix('+') {
    |                            ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:290:17
    |
290 |     if let Some(rest) = str.strip_prefix(exp_chars) {
    |                 ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:291:20
    |
291 |         let (sign, rest) = if let Some(rest) = rest.strip_prefix('-') {
    |                    ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:290:17
    |
290 |     if let Some(rest) = str.strip_prefix(exp_chars) {
    |                 ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:300:24
    |
300 |         let (exp_uint, rest) = Base::Decimal.parse_digits(rest);
    |                        ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:291:20
    |
291 |         let (sign, rest) = if let Some(rest) = rest.strip_prefix('-') {
    |                    ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `exp_uint` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:301:21
    |
301 |         if let Some(exp_uint) = exp_uint {
    |                     ^^^^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:300:14
    |
300 |         let (exp_uint, rest) = Base::Decimal.parse_digits(rest);
    |              ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:322:5
    |
322 |     (1, str)
    |     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
322 |     return (1, str)
    |     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:315:32
    |
315 |             .find_map(|(c, t)| (ch == *c).then_some(*t))
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
315 |             .find_map(|(c, t)| return (ch == *c).then_some(*t))
    |                                ++++++

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/parser/num_parser.rs:315:24
    |
315 |             .find_map(|(c, t)| (ch == *c).then_some(*t))
    |                        ^^^^^^
    |
    = help: explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:315:25
    |
315 |             .find_map(|(c, t)| (ch == *c).then_some(*t))
    |                         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:315:28
    |
315 |             .find_map(|(c, t)| (ch == *c).then_some(*t))
    |                            ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: indexing into a string may panic if the index is within a UTF-8 character
   --> src/uucore/src/lib/features/parser/num_parser.rs:317:27
    |
317 |             return (mul, &str[1..]);
    |                           ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:325:1
    |
325 | / fn parse_special_value<'a>(
326 | |     input: &'a str,
327 | |     negative: bool,
328 | |     allowed_suffixes: &[(char, u32)],
329 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:357:5
    |
357 |     Err(ExtendedParserError::NotNumeric)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
357 |     return Err(ExtendedParserError::NotNumeric)
    |     ++++++

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> src/uucore/src/lib/features/parser/num_parser.rs:333:5
    |
333 | /     const MATCH_TABLE: &[(&str, ExtendedBigDecimal)] = &[
334 | |         ("infinity", ExtendedBigDecimal::Infinity),
335 | |         ("inf", ExtendedBigDecimal::Infinity),
336 | |         ("nan", ExtendedBigDecimal::Nan),
337 | |     ];
    | |______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements
    = note: `-W clippy::items-after-statements` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::items_after_statements)]`

warning: it is more concise to loop over references to containers instead of using explicit iteration methods
   --> src/uucore/src/lib/features/parser/num_parser.rs:339:23
    |
339 |     for (str, ebd) in MATCH_TABLE.iter() {
    |                       ^^^^^^^^^^^^^^^^^^ help: to write this more concisely, try: `MATCH_TABLE`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_iter_loop
    = note: `-W clippy::explicit-iter-loop` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::explicit_iter_loop)]`

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/parser/num_parser.rs:339:9
    |
339 |     for (str, ebd) in MATCH_TABLE.iter() {
    |         ^^^^^^^^^^
    |
    = help: explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:343:27
    |
343 |                 special = -special;
    |                           ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: indexing into a string may panic if the index is within a UTF-8 character
   --> src/uucore/src/lib/features/parser/num_parser.rs:347:54
    |
347 |             let (_, rest) = parse_suffix_multiplier(&input[str.len()..], allowed_suffixes);
    |                                                      ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:372:9
    |
372 |         ExtendedParserError::Overflow(v)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
372 |         return ExtendedParserError::Overflow(v)
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:374:9
    |
374 |         ExtendedParserError::Underflow(v)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
374 |         return ExtendedParserError::Underflow(v)
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:363:13
    |
363 |     let mut v = if overflow {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:369:13
    |
369 |         v = -v;
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:401:5
    |
401 |     trim_precision(ret, ctx)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
401 |     return trim_precision(ret, ctx)
    |     ++++++

warning: adding items after statements is confusing, since items exist from the start of the scope
   --> src/uucore/src/lib/features/parser/num_parser.rs:387:5
    |
387 | /     fn trim_precision(bd: BigDecimal, ctx: &bigdecimal::Context) -> BigDecimal {
388 | |         if bd.digits() > ctx.precision().get() {
389 | |             bd.with_precision_round(ctx.precision(), ctx.rounding_mode())
390 | |         } else {
...   |
393 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:389:13
    |
389 |             bd.with_precision_round(ctx.precision(), ctx.rounding_mode())
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
389 |             return bd.with_precision_round(ctx.precision(), ctx.rounding_mode())
    |             ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:391:13
    |
391 |             bd
    |             ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
391 |             return bd
    |             ++++++

warning: `bd` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:395:9
    |
395 |     let bd = trim_precision(bd, ctx);
    |         ^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:382:21
    |
382 | fn pow_with_context(bd: BigDecimal, exp: u32, ctx: &bigdecimal::Context) -> BigDecimal {
    |                     ^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: use of % has been disallowed in this context
   --> src/uucore/src/lib/features/parser/num_parser.rs:396:18
    |
396 |     let ret = if exp % 2 == 0 {
    |                  ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division_remainder_used
    = note: `-W clippy::integer-division-remainder-used` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::integer_division_remainder_used)]`

warning: integer division
   --> src/uucore/src/lib/features/parser/num_parser.rs:397:39
    |
397 |         pow_with_context(bd.square(), exp / 2, ctx)
    |                                       ^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division
    = note: `-W clippy::integer-division` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::integer_division)]`

warning: use of / has been disallowed in this context
   --> src/uucore/src/lib/features/parser/num_parser.rs:397:39
    |
397 |         pow_with_context(bd.square(), exp / 2, ctx)
    |                                       ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division_remainder_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:399:9
    |
399 |         &bd * pow_with_context(bd.square(), (exp - 1) / 2, ctx)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: integer division
   --> src/uucore/src/lib/features/parser/num_parser.rs:399:45
    |
399 |         &bd * pow_with_context(bd.square(), (exp - 1) / 2, ctx)
    |                                             ^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: use of / has been disallowed in this context
   --> src/uucore/src/lib/features/parser/num_parser.rs:399:45
    |
399 |         &bd * pow_with_context(bd.square(), (exp - 1) / 2, ctx)
    |                                             ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division_remainder_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:405:1
    |
405 | / fn construct_extended_big_decimal<'a>(
406 | |     digits: BigUint,
407 | |     negative: bool,
408 | |     base: Base,
409 | |     scale: u64,
410 | |     exponent: BigInt,
411 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/parser/num_parser.rs:436:48
    |
436 |         BigDecimal::from_bigint(signed_digits, new_scale.to_i64().unwrap())
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:405:1
    |
405 | / fn construct_extended_big_decimal<'a>(
406 | |     digits: BigUint,
407 | |     negative: bool,
408 | |     base: Base,
409 | |     scale: u64,
410 | |     exponent: BigInt,
411 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:469:5
    |
469 |     Ok(ExtendedBigDecimal::BigDecimal(bd))
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
469 |     return Ok(ExtendedBigDecimal::BigDecimal(bd))
    |     ++++++

warning: default numeric fallback might occur
   --> src/uucore/src/lib/features/parser/num_parser.rs:445:52
    |
445 |             / BigDecimal::from_bigint(BigInt::from(16).pow(scale as u32), 0);
    |                                                    ^^ help: consider adding suffix: `16_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/uucore/src/lib/features/parser/num_parser.rs:458:13
    |
458 |             2.into()
    |             ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/uucore/src/lib/features/parser/num_parser.rs:460:30
    |
460 |             BigDecimal::from(2).inverse()
    |                              ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:427:25
    |
427 |         let new_scale = BigInt::from(scale) - exponent;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: used `unwrap()` on an `Option` value
   --> src/uucore/src/lib/features/parser/num_parser.rs:436:48
    |
436 |         BigDecimal::from_bigint(signed_digits, new_scale.to_i64().unwrap())
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:444:18
    |
444 |           let bd = BigDecimal::from_bigint(signed_digits, 0)
    |  __________________^
445 | |             / BigDecimal::from_bigint(BigInt::from(16).pow(scale as u32), 0);
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `u64` to `u32` may truncate the value
   --> src/uucore/src/lib/features/parser/num_parser.rs:445:60
    |
445 |             / BigDecimal::from_bigint(BigInt::from(16).pow(scale as u32), 0);
    |                                                            ^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
445 -             / BigDecimal::from_bigint(BigInt::from(16).pow(scale as u32), 0);
445 +             / BigDecimal::from_bigint(BigInt::from(16).pow(u32::try_from(scale)), 0);
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/features/parser/num_parser.rs:445:60
    |
445 |             / BigDecimal::from_bigint(BigInt::from(16).pow(scale as u32), 0);
    |                                                            ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: unnecessary boolean `not` operation
   --> src/uucore/src/lib/features/parser/num_parser.rs:457:32
    |
457 |           let base: BigDecimal = if !exponent.is_negative() {
    |  ________________________________^
458 | |             2.into()
459 | |         } else {
460 | |             BigDecimal::from(2).inverse()
461 | |         };
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
    = note: `-W clippy::if-not-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::if_not_else)]`
help: try
    |
457 ~         let base: BigDecimal = if exponent.is_negative() {
458 +             BigDecimal::from(2).inverse()
459 +         } else {
460 +             2.into()
461 ~         };
    |

warning: `base` shadows a previous, unrelated binding
   --> src/uucore/src/lib/features/parser/num_parser.rs:457:13
    |
457 |         let base: BigDecimal = if !exponent.is_negative() {
    |             ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:408:5
    |
408 |     base: Base,
    |     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: used `unwrap()` on an `Option` value
   --> src/uucore/src/lib/features/parser/num_parser.rs:462:43
    |
462 |         let pow2 = pow_with_context(base, abs_exponent.to_u32().unwrap(), &Context::default());
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:464:9
    |
464 |         bd * pow2
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: usage of the `unreachable!` macro
   --> src/uucore/src/lib/features/parser/num_parser.rs:467:9
    |
467 |         unreachable!();
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: missing documentation for an enum
   --> src/uucore/src/lib/features/parser/num_parser.rs:473:1
    |
473 | / pub(crate) enum ParseTarget {
474 | |     Decimal,
475 | |     Integral,
476 | |     Duration,
477 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/num_parser.rs:476:5
    |
476 |     Duration,
    |     ^^^^^^^^
    |
note: should be placed before `Integral`
   --> src/uucore/src/lib/features/parser/num_parser.rs:475:5
    |
475 |     Integral,
    |     ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing documentation for a variant
   --> src/uucore/src/lib/features/parser/num_parser.rs:474:5
    |
474 |     Decimal,
    |     ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a variant
   --> src/uucore/src/lib/features/parser/num_parser.rs:475:5
    |
475 |     Integral,
    |     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a variant
   --> src/uucore/src/lib/features/parser/num_parser.rs:476:5
    |
476 |     Duration,
    |     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:479:1
    |
479 | / pub(crate) fn parse<'a>(
480 | |     input: &'a str,
481 | |     target: ParseTarget,
482 | |     allowed_suffixes: &[(char, u32)],
483 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/parser/num_parser.rs:566:18
    |
566 |     let digits = digits.unwrap() * mul;
    |                  ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/num_parser.rs:479:1
    |
479 | / pub(crate) fn parse<'a>(
480 | |     input: &'a str,
481 | |     target: ParseTarget,
482 | |     allowed_suffixes: &[(char, u32)],
483 | | ) -> Result<ExtendedBigDecimal, ExtendedParserError<'a, ExtendedBigDecimal>> {
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing documentation for a function
   --> src/uucore/src/lib/features/parser/num_parser.rs:479:1
    |
479 | / pub(crate) fn parse<'a>(
480 | |     input: &'a str,
481 | |     target: ParseTarget,
482 | |     allowed_suffixes: &[(char, u32)],
...   |
581 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:574:9
    |
574 | /         Err(ExtendedParserError::PartialMatch(
575 | |             ebd_result.unwrap_or_else(|e| e.extract()),
576 | |             rest,
577 | |         ))
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
574 |         return Err(ExtendedParserError::PartialMatch(
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:579:9
    |
579 |         ebd_result
    |         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
579 |         return ebd_result
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:490:31
    |
490 |                 .map(|(_, c)| ExtendedBigDecimal::BigDecimal(u32::from(c).into()));
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
490 |                 .map(|(_, c)| return ExtendedBigDecimal::BigDecimal(u32::from(c).into()));
    |                               ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:490:27
    |
490 |                 .map(|(_, c)| ExtendedBigDecimal::BigDecimal(u32::from(c).into()));
    |                           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:488:17
    |
488 |             let v = chars
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `v` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:492:23
    |
492 |                 (Some(v), None) => Ok(v),
    |                       ^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:488:17
    |
488 |             let v = chars
    |                 ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:492:23
    |
492 |                 (Some(v), None) => Ok(v),
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `v` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:493:23
    |
493 |                 (Some(v), Some((i, _))) => Err(ExtendedParserError::PartialMatch(v, &rest[i..])),
    |                       ^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:488:17
    |
488 |             let v = chars
    |                 ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:493:23
    |
493 |                 (Some(v), Some((i, _))) => Err(ExtendedParserError::PartialMatch(v, &rest[i..])),
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: indexing into a string may panic if the index is within a UTF-8 character
   --> src/uucore/src/lib/features/parser/num_parser.rs:493:86
    |
493 |                 (Some(v), Some((i, _))) => Err(ExtendedParserError::PartialMatch(v, &rest[i..])),
    |                                                                                      ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:502:32
    |
502 |       let (negative, unsigned) = if let Some(trimmed_input) = trimmed_input.strip_prefix('-') {
    |  ________________________________^
503 | |         (true, trimmed_input)
504 | |     } else if let Some(trimmed_input) = trimmed_input.strip_prefix('+') {
505 | |         (false, trimmed_input)
506 | |     } else {
507 | |         (false, trimmed_input)
508 | |     };
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
502 ~     let (negative, unsigned) = trimmed_input.strip_prefix('-').map_or_else(|| if let Some(trimmed_input) = trimmed_input.strip_prefix('+') {
503 +         (false, trimmed_input)
504 +     } else {
505 +         (false, trimmed_input)
506 ~     }, |trimmed_input| (true, trimmed_input));
    |

warning: `trimmed_input` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:502:44
    |
502 |     let (negative, unsigned) = if let Some(trimmed_input) = trimmed_input.strip_prefix('-') {
    |                                            ^^^^^^^^^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:499:9
    |
499 |     let trimmed_input = input.trim_ascii_start();
    |         ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `trimmed_input` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:504:24
    |
504 |     } else if let Some(trimmed_input) = trimmed_input.strip_prefix('+') {
    |                        ^^^^^^^^^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:499:9
    |
499 |     let trimmed_input = input.trim_ascii_start();
    |         ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:514:24
    |
514 |       let (base, rest) = if let Some(rest) = unsigned.strip_prefix('0') {
    |  ________________________^
515 | |         if let Some(rest) = rest.strip_prefix(['x', 'X']) {
516 | |             (Base::Hexadecimal, rest)
517 | |         } else if target == ParseTarget::Integral {
...   |
528 | |         (Base::Decimal, unsigned)
529 | |     };
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
514 ~     let (base, rest) = unsigned.strip_prefix('0').map_or((Base::Decimal, unsigned), |rest| if let Some(rest) = rest.strip_prefix(['x', 'X']) {
515 +             (Base::Hexadecimal, rest)
516 +         } else if target == ParseTarget::Integral {
517 +             // Binary/Octal only allowed for integer parsing.
518 +             if let Some(rest) = rest.strip_prefix(['b', 'B']) {
519 +                 (Base::Binary, rest)
520 +             } else {
521 +                 (Base::Octal, unsigned)
522 +             }
523 +         } else {
524 +             (Base::Decimal, unsigned)
525 ~         });
    |

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:515:9
    |
515 | /         if let Some(rest) = rest.strip_prefix(['x', 'X']) {
516 | |             (Base::Hexadecimal, rest)
517 | |         } else if target == ParseTarget::Integral {
...   |
525 | |             (Base::Decimal, unsigned)
526 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
515 ~         rest.strip_prefix(['x', 'X']).map_or_else(|| if target == ParseTarget::Integral {
516 +             // Binary/Octal only allowed for integer parsing.
517 +             if let Some(rest) = rest.strip_prefix(['b', 'B']) {
518 +                 (Base::Binary, rest)
519 +             } else {
520 +                 (Base::Octal, unsigned)
521 +             }
522 +         } else {
523 +             (Base::Decimal, unsigned)
524 +         }, |rest| (Base::Hexadecimal, rest))
    |

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:515:21
    |
515 |         if let Some(rest) = rest.strip_prefix(['x', 'X']) {
    |                     ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:514:36
    |
514 |     let (base, rest) = if let Some(rest) = unsigned.strip_prefix('0') {
    |                                    ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: use Option::map_or instead of an if let/else
   --> src/uucore/src/lib/features/parser/num_parser.rs:519:13
    |
519 | /             if let Some(rest) = rest.strip_prefix(['b', 'B']) {
520 | |                 (Base::Binary, rest)
521 | |             } else {
522 | |                 (Base::Octal, unsigned)
523 | |             }
    | |_____________^ help: try: `rest.strip_prefix(['b', 'B']).map_or((Base::Octal, unsigned), |rest| (Base::Binary, rest))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:519:25
    |
519 |             if let Some(rest) = rest.strip_prefix(['b', 'B']) {
    |                         ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:514:36
    |
514 |     let (base, rest) = if let Some(rest) = unsigned.strip_prefix('0') {
    |                                    ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:536:25
    |
536 |     let (digits, scale, rest) = parse_digits(base, rest, parse_frac_exp);
    |                         ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:514:16
    |
514 |     let (base, rest) = if let Some(rest) = unsigned.strip_prefix('0') {
    |                ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:539:20
    |
539 |     let (exponent, rest) = if parse_frac_exp {
    |                    ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:536:25
    |
536 |     let (digits, scale, rest) = parse_digits(base, rest, parse_frac_exp);
    |                         ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `rest` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:564:15
    |
564 |     let (mul, rest) = parse_suffix_multiplier(rest, allowed_suffixes);
    |               ^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:539:20
    |
539 |     let (exponent, rest) = if parse_frac_exp {
    |                    ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/num_parser.rs:566:18
    |
566 |     let digits = digits.unwrap() * mul;
    |                  ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: used `unwrap()` on an `Option` value
   --> src/uucore/src/lib/features/parser/num_parser.rs:566:18
    |
566 |     let digits = digits.unwrap() * mul;
    |                  ^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: `digits` is shadowed
   --> src/uucore/src/lib/features/parser/num_parser.rs:566:9
    |
566 |     let digits = digits.unwrap() * mul;
    |         ^^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/features/parser/num_parser.rs:536:10
    |
536 |     let (digits, scale, rest) = parse_digits(base, rest, parse_frac_exp);
    |          ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: unnecessary boolean `not` operation
   --> src/uucore/src/lib/features/parser/num_parser.rs:573:5
    |
573 | /     if !rest.is_empty() {
574 | |         Err(ExtendedParserError::PartialMatch(
575 | |             ebd_result.unwrap_or_else(|e| e.extract()),
576 | |             rest,
...   |
579 | |         ebd_result
580 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else
help: try
    |
573 ~     if rest.is_empty() {
574 +         ebd_result
575 +     } else {
576 +         Err(ExtendedParserError::PartialMatch(
577 +             ebd_result.unwrap_or_else(|e| e.extract()),
578 +             rest,
579 +         ))
580 +     }
    |

warning: redundant closure
   --> src/uucore/src/lib/features/parser/num_parser.rs:575:39
    |
575 |             ebd_result.unwrap_or_else(|e| e.extract()),
    |                                       ^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `ExtendedParserError::extract`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/num_parser.rs:575:43
    |
575 |             ebd_result.unwrap_or_else(|e| e.extract()),
    |                                           ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
575 |             ebd_result.unwrap_or_else(|e| return e.extract()),
    |                                           ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/num_parser.rs:575:40
    |
575 |             ebd_result.unwrap_or_else(|e| e.extract()),
    |                                        ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/parse_glob.rs:37:5
   |
37 |     chars.into_iter().collect::<String>()
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
37 |     return chars.into_iter().collect::<String>()
   |     ++++++

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_glob.rs:18:11
   |
18 |     while i + 3 < chars.len() {
   |           ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: indexing may panic
  --> src/uucore/src/lib/features/parser/parse_glob.rs:19:12
   |
19 |         if chars[i] == '[' && chars[i + 1] == '^' {
   |            ^^^^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing
   = note: `-W clippy::indexing-slicing` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::indexing_slicing)]`

warning: indexing may panic
  --> src/uucore/src/lib/features/parser/parse_glob.rs:19:31
   |
19 |         if chars[i] == '[' && chars[i + 1] == '^' {
   |                               ^^^^^^^^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_glob.rs:19:37
   |
19 |         if chars[i] == '[' && chars[i + 1] == '^' {
   |                                     ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: slicing may panic
  --> src/uucore/src/lib/features/parser/parse_glob.rs:20:19
   |
20 |             match chars[i + 3..].iter().position(|x| *x == ']') {
   |                   ^^^^^^^^^^^^^^
   |
   = help: consider using `.get(n..)` or .get_mut(n..)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_glob.rs:20:25
   |
20 |             match chars[i + 3..].iter().position(|x| *x == ']') {
   |                         ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/parse_glob.rs:20:54
   |
20 |             match chars[i + 3..].iter().position(|x| *x == ']') {
   |                                                      ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
20 |             match chars[i + 3..].iter().position(|x| return *x == ']') {
   |                                                      ++++++

warning: indexing may panic
  --> src/uucore/src/lib/features/parser/parse_glob.rs:27:21
   |
27 |                     chars[i + 1] = '!';
   |                     ^^^^^^^^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_glob.rs:27:27
   |
27 |                     chars[i + 1] = '!';
   |                           ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_glob.rs:28:21
   |
28 |                     i += j + 4;
   |                     ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_glob.rs:34:9
   |
34 |         i += 1;
   |         ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/features/parser/parse_glob.rs:55:1
   |
55 | pub fn from_str(glob: &str) -> Result<Pattern, PatternError> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/features/parser/parse_glob.rs:55:1
   |
55 | / pub fn from_str(glob: &str) -> Result<Pattern, PatternError> {
56 | |     Pattern::new(&fix_negation(glob))
57 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/parse_glob.rs:56:5
   |
56 |     Pattern::new(&fix_negation(glob))
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
56 |     return Pattern::new(&fix_negation(glob))
   |     ++++++

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uucore/src/lib/features/parser/parse_size.rs:79:12
   |
79 | pub struct Parser<'parser> {
   |            ^^^^^^
   |
note: should be placed before `total_physical_memory`
  --> src/uucore/src/lib/features/parser/parse_size.rs:45:4
   |
45 | fn total_physical_memory() -> Result<u128, SystemError> {
   |    ^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/features/parser/parse_size.rs:384:10
    |
384 | pub enum ParseSizeError {
    |          ^^^^^^^^^^^^^^
    |
note: should be placed before `parse_size_u128_max`
   --> src/uucore/src/lib/features/parser/parse_size.rs:378:8
    |
378 | pub fn parse_size_u128_max(size: &str) -> Result<u128, ParseSizeError> {
    |        ^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: used import from `std` instead of `core`
 --> src/uucore/src/lib/features/parser/parse_size.rs:9:5
  |
9 | use std::error::Error;
  |     ^^^ help: consider importing the item from `core`: `core`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `alloc`
  --> src/uucore/src/lib/features/parser/parse_size.rs:10:5
   |
10 | use std::fmt;
   |     ^^^ help: consider importing the item from `alloc`: `alloc`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc
   = note: `-W clippy::std-instead-of-alloc` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::std_instead_of_alloc)]`

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/parse_size.rs:12:14
   |
12 | use std::io::BufRead;
   |              ^^^^^^^ help: use: `BufRead as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/features/parser/parse_size.rs:13:5
   |
13 | use std::num::{IntErrorKind, ParseIntError};
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/parse_size.rs:15:21
   |
15 | use crate::display::Quotable;
   |                     ^^^^^^^^ help: use: `Quotable as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/parse_size.rs:21:5
   |
21 |     NotFound,
   |     ^^^^^^^^
   |
note: should be placed before `ParseError`
  --> src/uucore/src/lib/features/parser/parse_size.rs:20:5
   |
20 |     ParseError,
   |     ^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/features/parser/parse_size.rs:24:11
   |
24 | impl From<std::io::Error> for SystemError {
   |           ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths
   = note: `-W clippy::absolute-paths` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::absolute_paths)]`

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/parse_size.rs:26:9
   |
26 |         Self::IOError
   |         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
26 |         return Self::IOError
   |         ++++++

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/features/parser/parse_size.rs:25:16
   |
25 |     fn from(_: std::io::Error) -> Self {
   |                ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/parse_size.rs:32:9
   |
32 |         Self::ParseError
   |         ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
32 |         return Self::ParseError
   |         ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/parse_size.rs:64:5
   |
64 |     Err(SystemError::NotFound)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
64 |     return Err(SystemError::NotFound)
   |     ++++++

warning: question mark operator was used
  --> src/uucore/src/lib/features/parser/parse_size.rs:55:17
   |
55 |     let table = std::fs::read("/proc/meminfo")?;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used
   = note: `-W clippy::question-mark-used` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::question_mark_used)]`

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/features/parser/parse_size.rs:55:17
   |
55 |     let table = std::fs::read("/proc/meminfo")?;
   |                 ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: question mark operator was used
  --> src/uucore/src/lib/features/parser/parse_size.rs:57:20
   |
57 |         let line = line?;
   |                    ^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: `line` is shadowed
  --> src/uucore/src/lib/features/parser/parse_size.rs:57:13
   |
57 |         let line = line?;
   |             ^^^^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/parse_size.rs:56:9
   |
56 |     for line in table.lines() {
   |         ^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: question mark operator was used
  --> src/uucore/src/lib/features/parser/parse_size.rs:59:39
   |
59 |             let num_kilobytes: u128 = line[9..line.len() - 2].trim().parse()?;
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: indexing into a string may panic if the index is within a UTF-8 character
  --> src/uucore/src/lib/features/parser/parse_size.rs:59:39
   |
59 |             let num_kilobytes: u128 = line[9..line.len() - 2].trim().parse()?;
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_size.rs:59:47
   |
59 |             let num_kilobytes: u128 = line[9..line.len() - 2].trim().parse()?;
   |                                               ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_size.rs:60:29
   |
60 |             let num_bytes = 1024 * num_kilobytes;
   |                             ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: exported structs should not be exhaustive
  --> src/uucore/src/lib/features/parser/parse_size.rs:79:1
   |
79 | / pub struct Parser<'parser> {
80 | |     /// Whether to allow empty numeric strings.
81 | |     pub no_empty_numeric: bool,
82 | |     /// Whether to treat the suffix "B" as meaning "bytes".
...  |
89 | |     pub default_unit: Option<&'parser str>,
90 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
   = note: `-W clippy::exhaustive-structs` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::exhaustive_structs)]`
help: try adding #[non_exhaustive]
   |
79 + #[non_exhaustive]
80 | pub struct Parser<'parser> {
   |

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/parse_size.rs:83:9
   |
83 |     pub capital_b_bytes: bool,
   |         ^^^^^^^^^^^^^^^
   |
note: should be placed before `no_empty_numeric`
  --> src/uucore/src/lib/features/parser/parse_size.rs:81:9
   |
81 |     pub no_empty_numeric: bool,
   |         ^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/parse_size.rs:85:9
   |
85 |     pub b_byte_count: bool,
   |         ^^^^^^^^^^^^
   |
note: should be placed before `capital_b_bytes`
  --> src/uucore/src/lib/features/parser/parse_size.rs:83:9
   |
83 |     pub capital_b_bytes: bool,
   |         ^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/parse_size.rs:87:9
   |
87 |     pub allow_list: Option<&'parser [&'parser str]>,
   |         ^^^^^^^^^^
   |
note: should be placed before `b_byte_count`
  --> src/uucore/src/lib/features/parser/parse_size.rs:85:9
   |
85 |     pub b_byte_count: bool,
   |         ^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/parse_size.rs:95:5
   |
95 |     Hexadecimal,
   |     ^^^^^^^^^^^
   |
note: should be placed before `Octal`
  --> src/uucore/src/lib/features/parser/parse_size.rs:94:5
   |
94 |     Octal,
   |     ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/parse_size.rs:112:12
    |
112 |     pub fn with_b_byte_count(&mut self, value: bool) -> &mut Self {
    |            ^^^^^^^^^^^^^^^^^
    |
note: should be placed before `with_default_unit`
   --> src/uucore/src/lib/features/parser/parse_size.rs:106:12
    |
106 |     pub fn with_default_unit(&mut self, default_unit: &'parser str) -> &mut Self {
    |            ^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/parse_size.rs:118:12
    |
118 |     pub fn with_allow_empty_numeric(&mut self, value: bool) -> &mut Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: should be placed before `with_b_byte_count`
   --> src/uucore/src/lib/features/parser/parse_size.rs:112:12
    |
112 |     pub fn with_b_byte_count(&mut self, value: bool) -> &mut Self {
    |            ^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/parse_size.rs:150:12
    |
150 |     pub fn parse(&self, size: &str) -> Result<u128, ParseSizeError> {
    |            ^^^^^
    |
note: should be placed before `with_allow_empty_numeric`
   --> src/uucore/src/lib/features/parser/parse_size.rs:118:12
    |
118 |     pub fn with_allow_empty_numeric(&mut self, value: bool) -> &mut Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/parse_size.rs:295:12
    |
295 |     pub fn parse_u128_max(&self, size: &str) -> Result<u128, ParseSizeError> {
    |            ^^^^^^^^^^^^^^
    |
note: should be placed before `parse_u64_max`
   --> src/uucore/src/lib/features/parser/parse_size.rs:280:12
    |
280 |     pub fn parse_u64_max(&self, size: &str) -> Result<u64, ParseSizeError> {
    |            ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/parse_size.rs:309:8
    |
309 |     fn determine_number_system(size: &str) -> NumberSystem {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
    |
note: should be placed before `parse_u128_max`
   --> src/uucore/src/lib/features/parser/parse_size.rs:295:12
    |
295 |     pub fn parse_u128_max(&self, size: &str) -> Result<u128, ParseSizeError> {
    |            ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: item in documentation is missing backticks
  --> src/uucore/src/lib/features/parser/parse_size.rs:99:16
   |
99 |     /// Change allow_list of the parser - whitelist for the suffix
   |                ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
99 -     /// Change allow_list of the parser - whitelist for the suffix
99 +     /// Change `allow_list` of the parser - whitelist for the suffix
   |

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:100:5
    |
100 | /     pub fn with_allow_list(&mut self, allow_list: &'parser [&str]) -> &mut Self {
101 | |         self.allow_list = Some(allow_list);
102 | |         self
103 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:102:9
    |
102 |         self
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
102 |         return self
    |         ++++++

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/parser/parse_size.rs:100:5
    |
100 | /     pub fn with_allow_list(&mut self, allow_list: &'parser [&str]) -> &mut Self {
101 | |         self.allow_list = Some(allow_list);
102 | |         self
103 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
    = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::missing_const_for_fn)]`
help: make the function `const`
    |
100 |     pub const fn with_allow_list(&mut self, allow_list: &'parser [&str]) -> &mut Self {
    |         +++++

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/parse_size.rs:105:16
    |
105 |     /// Change default_unit of the parser - when no suffix is provided
    |                ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
105 -     /// Change default_unit of the parser - when no suffix is provided
105 +     /// Change `default_unit` of the parser - when no suffix is provided
    |

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:106:5
    |
106 | /     pub fn with_default_unit(&mut self, default_unit: &'parser str) -> &mut Self {
107 | |         self.default_unit = Some(default_unit);
108 | |         self
109 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:108:9
    |
108 |         self
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
108 |         return self
    |         ++++++

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/parser/parse_size.rs:106:5
    |
106 | /     pub fn with_default_unit(&mut self, default_unit: &'parser str) -> &mut Self {
107 | |         self.default_unit = Some(default_unit);
108 | |         self
109 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
106 |     pub const fn with_default_unit(&mut self, default_unit: &'parser str) -> &mut Self {
    |         +++++

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/parse_size.rs:111:16
    |
111 |     /// Change b_byte_count of the parser - to treat "b" as a "byte count" instead of "block"
    |                ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
111 -     /// Change b_byte_count of the parser - to treat "b" as a "byte count" instead of "block"
111 +     /// Change `b_byte_count` of the parser - to treat "b" as a "byte count" instead of "block"
    |

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:112:5
    |
112 | /     pub fn with_b_byte_count(&mut self, value: bool) -> &mut Self {
113 | |         self.b_byte_count = value;
114 | |         self
115 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:114:9
    |
114 |         self
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
114 |         return self
    |         ++++++

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/parser/parse_size.rs:112:5
    |
112 | /     pub fn with_b_byte_count(&mut self, value: bool) -> &mut Self {
113 | |         self.b_byte_count = value;
114 | |         self
115 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
112 |     pub const fn with_b_byte_count(&mut self, value: bool) -> &mut Self {
    |         +++++

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/parse_size.rs:117:16
    |
117 |     /// Change no_empty_numeric of the parser - to allow empty numeric strings
    |                ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
117 -     /// Change no_empty_numeric of the parser - to allow empty numeric strings
117 +     /// Change `no_empty_numeric` of the parser - to allow empty numeric strings
    |

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:118:5
    |
118 | /     pub fn with_allow_empty_numeric(&mut self, value: bool) -> &mut Self {
119 | |         self.no_empty_numeric = value;
120 | |         self
121 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:120:9
    |
120 |         self
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
120 |         return self
    |         ++++++

warning: this could be a `const fn`
   --> src/uucore/src/lib/features/parser/parse_size.rs:118:5
    |
118 | /     pub fn with_allow_empty_numeric(&mut self, value: bool) -> &mut Self {
119 | |         self.no_empty_numeric = value;
120 | |         self
121 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
118 |     pub const fn with_allow_empty_numeric(&mut self, value: bool) -> &mut Self {
    |         +++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:150:5
    |
150 | /     pub fn parse(&self, size: &str) -> Result<u128, ParseSizeError> {
151 | |         if size.is_empty() {
152 | |             return Err(ParseSizeError::parse_failure(size));
...   |
262 | |             .ok_or_else(|| ParseSizeError::size_too_big(size))
263 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:260:9
    |
260 | /         number
261 | |             .checked_mul(factor)
262 | |             .ok_or_else(|| ParseSizeError::size_too_big(size))
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
260 |         return number
    |         ++++++

warning: wildcard match will also match any future added variants
   --> src/uucore/src/lib/features/parser/parse_size.rs:166:13
    |
166 |             _ => size.chars().take_while(char::is_ascii_digit).collect(),
    |             ^ help: try: `NumberSystem::Decimal | NumberSystem::Octal`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: indexing into a string may panic if the index is within a UTF-8 character
   --> src/uucore/src/lib/features/parser/parse_size.rs:168:31
    |
168 |         let mut unit: &str = &size[numeric_string.len()..];
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: indexing into a string may panic if the index is within a UTF-8 character
   --> src/uucore/src/lib/features/parser/parse_size.rs:183:21
    |
183 |             unit = &unit[0..unit.len() - 1];
    |                     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/parse_size.rs:183:29
    |
183 |             unit = &unit[0..unit.len() - 1];
    |                             ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: question mark operator was used
   --> src/uucore/src/lib/features/parser/parse_size.rs:199:32
    |
199 |             let number: u128 = Self::parse_number(&numeric_string, 10, size)?;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/parse_size.rs:200:20
    |
200 |               return match total_physical_memory() {
    |  ____________________^
201 | |                 Ok(total) => Ok((number / 100) * total),
202 | |                 Err(_) => Err(ParseSizeError::PhysicalMem(size.to_string())),
203 | |             };
    | |_____________^ help: try: `total_physical_memory().map_or_else(|_| Err(ParseSizeError::PhysicalMem(size.to_string())), |total| Ok((number / 100) * total))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/parse_size.rs:201:33
    |
201 |                 Ok(total) => Ok((number / 100) * total),
    |                                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: integer division
   --> src/uucore/src/lib/features/parser/parse_size.rs:201:33
    |
201 |                 Ok(total) => Ok((number / 100) * total),
    |                                 ^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: use of / has been disallowed in this context
   --> src/uucore/src/lib/features/parser/parse_size.rs:201:33
    |
201 |                 Ok(total) => Ok((number / 100) * total),
    |                                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division_remainder_used

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/features/parser/parse_size.rs:202:59
    |
202 |                 Err(_) => Err(ParseSizeError::PhysicalMem(size.to_string())),
    |                                                           ^^^^^^^^^^^^^^^^ help: try: `size.to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
    = note: `-W clippy::str-to-string` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::str_to_string)]`

warning: question mark operator was used
   --> src/uucore/src/lib/features/parser/parse_size.rs:247:21
    |
247 |                     Self::parse_number(&numeric_string, 10, size)?
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uucore/src/lib/features/parser/parse_size.rs:252:17
    |
252 |                 Self::parse_number(trimmed_string, 8, size)?
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uucore/src/lib/features/parser/parse_size.rs:256:17
    |
256 |                 Self::parse_number(trimmed_string, 16, size)?
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:262:28
    |
262 |             .ok_or_else(|| ParseSizeError::size_too_big(size))
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
262 |             .ok_or_else(|| return ParseSizeError::size_too_big(size))
    |                            ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:266:5
    |
266 |     pub fn parse_u128(&self, size: &str) -> Result<u128, ParseSizeError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:266:5
    |
266 | /     pub fn parse_u128(&self, size: &str) -> Result<u128, ParseSizeError> {
267 | |         self.parse(size)
268 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:267:9
    |
267 |         self.parse(size)
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
267 |         return self.parse(size)
    |         ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:271:5
    |
271 |     pub fn parse_u64(&self, size: &str) -> Result<u64, ParseSizeError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:271:5
    |
271 | /     pub fn parse_u64(&self, size: &str) -> Result<u64, ParseSizeError> {
272 | |         self.parse(size).and_then(|num_u128| {
273 | |             u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
274 | |         })
275 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:272:9
    |
272 | /         self.parse(size).and_then(|num_u128| {
273 | |             u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
274 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
272 |         return self.parse(size).and_then(|num_u128| {
    |         ++++++

warning: use the question mark operator instead of an `and_then` call
   --> src/uucore/src/lib/features/parser/parse_size.rs:272:9
    |
272 | /         self.parse(size).and_then(|num_u128| {
273 | |             u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
274 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_and_then
    = note: `-W clippy::return-and-then` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::return_and_then)]`
help: try
    |
272 ~         let num_u128 = self.parse(size)?;
273 +         u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
    |

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:273:13
    |
273 |             u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
273 |             return u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
    |             ++++++

warning: `map_err(|_|...` wildcard pattern discards the original error
   --> src/uucore/src/lib/features/parser/parse_size.rs:273:45
    |
273 |             u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
    |                                             ^^^
    |
    = help: consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_err_ignore
    = note: `-W clippy::map-err-ignore` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::map_err_ignore)]`

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:273:49
    |
273 |             u64::try_from(num_u128).map_err(|_| ParseSizeError::size_too_big(size))
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
273 |             u64::try_from(num_u128).map_err(|_| return ParseSizeError::size_too_big(size))
    |                                                 ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:280:5
    |
280 |     pub fn parse_u64_max(&self, size: &str) -> Result<u64, ParseSizeError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:280:5
    |
280 | /     pub fn parse_u64_max(&self, size: &str) -> Result<u64, ParseSizeError> {
281 | |         let result = self.parse_u64(size);
282 | |         match result {
283 | |             Ok(_) => result,
...   |
292 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:283:22
    |
283 |             Ok(_) => result,
    |                      ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
283 |             Ok(_) => return result,
    |                        +++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:286:21
    |
286 |                     Ok(u64::MAX)
    |                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
286 |                     return Ok(u64::MAX)
    |                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:288:21
    |
288 |                     Err(error)
    |                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
288 |                     return Err(error)
    |                     ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:295:5
    |
295 |     pub fn parse_u128_max(&self, size: &str) -> Result<u128, ParseSizeError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:295:5
    |
295 | /     pub fn parse_u128_max(&self, size: &str) -> Result<u128, ParseSizeError> {
296 | |         let result = self.parse_u128(size);
297 | |         match result {
298 | |             Ok(_) => result,
...   |
307 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:298:22
    |
298 |             Ok(_) => result,
    |                      ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
298 |             Ok(_) => return result,
    |                        +++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:301:21
    |
301 |                     Ok(u128::MAX)
    |                     ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
301 |                     return Ok(u128::MAX)
    |                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:303:21
    |
303 |                     Err(error)
    |                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
303 |                     return Err(error)
    |                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:328:9
    |
328 |         NumberSystem::Decimal
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
328 |         return NumberSystem::Decimal
    |         ++++++

warning: redundant type annotation
   --> src/uucore/src/lib/features/parser/parse_size.rs:318:9
    |
318 | /         let num_digits: usize = size
319 | |             .chars()
320 | |             .take_while(char::is_ascii_digit)
321 | |             .collect::<String>()
322 | |             .len();
    | |___________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_type_annotations
    = note: `-W clippy::redundant-type-annotations` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::redundant_type_annotations)]`

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:323:46
    |
323 |         let all_zeros = size.chars().all(|c| c == '0');
    |                                              ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
323 |         let all_zeros = size.chars().all(|c| return c == '0');
    |                                              ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:323:43
    |
323 |         let all_zeros = size.chars().all(|c| c == '0');
    |                                           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:331:5
    |
331 | /     fn parse_number(
332 | |         numeric_string: &str,
333 | |         radix: u32,
334 | |         original_size: &str,
335 | |     ) -> Result<u128, ParseSizeError> {
    | |_____________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:336:9
    |
336 | /         u128::from_str_radix(numeric_string, radix).map_err(|e| match e.kind() {
337 | |             IntErrorKind::PosOverflow => ParseSizeError::size_too_big(original_size),
338 | |             _ => ParseSizeError::ParseFailure(original_size.to_string()),
339 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
336 |         return u128::from_str_radix(numeric_string, radix).map_err(|e| match e.kind() {
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:337:42
    |
337 |             IntErrorKind::PosOverflow => ParseSizeError::size_too_big(original_size),
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
337 |             IntErrorKind::PosOverflow => return ParseSizeError::size_too_big(original_size),
    |                                          ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:338:18
    |
338 |             _ => ParseSizeError::ParseFailure(original_size.to_string()),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
338 |             _ => return ParseSizeError::ParseFailure(original_size.to_string()),
    |                  ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:336:62
    |
336 |         u128::from_str_radix(numeric_string, radix).map_err(|e| match e.kind() {
    |                                                              ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: wildcard matches known variants and will also match future added variants
   --> src/uucore/src/lib/features/parser/parse_size.rs:338:13
    |
338 |             _ => ParseSizeError::ParseFailure(original_size.to_string()),
    |             ^ help: try: `IntErrorKind::Empty | IntErrorKind::InvalidDigit | IntErrorKind::NegOverflow | IntErrorKind::Zero | _`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/parser/parse_size.rs:337:13
    |
337 |             IntErrorKind::PosOverflow => ParseSizeError::size_too_big(original_size),
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/features/parser/parse_size.rs:338:47
    |
338 |             _ => ParseSizeError::ParseFailure(original_size.to_string()),
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `original_size.to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:355:1
    |
355 | pub fn parse_size_u128(size: &str) -> Result<u128, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/features/parser/parse_size.rs:355:1
    |
355 | / pub fn parse_size_u128(size: &str) -> Result<u128, ParseSizeError> {
356 | |     Parser::default().parse(size)
357 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name starts with its containing module's name
   --> src/uucore/src/lib/features/parser/parse_size.rs:355:8
    |
355 | pub fn parse_size_u128(size: &str) -> Result<u128, ParseSizeError> {
    |        ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:356:5
    |
356 |     Parser::default().parse(size)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
356 |     return Parser::default().parse(size)
    |     ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:360:1
    |
360 | pub fn parse_size_u64(size: &str) -> Result<u64, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/features/parser/parse_size.rs:360:1
    |
360 | / pub fn parse_size_u64(size: &str) -> Result<u64, ParseSizeError> {
361 | |     Parser::default().parse_u64(size)
362 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name starts with its containing module's name
   --> src/uucore/src/lib/features/parser/parse_size.rs:360:8
    |
360 | pub fn parse_size_u64(size: &str) -> Result<u64, ParseSizeError> {
    |        ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:361:5
    |
361 |     Parser::default().parse_u64(size)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
361 |     return Parser::default().parse_u64(size)
    |     ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:366:1
    |
366 | pub fn parse_size(size: &str) -> Result<u64, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/features/parser/parse_size.rs:366:1
    |
366 | / pub fn parse_size(size: &str) -> Result<u64, ParseSizeError> {
367 | |     parse_size_u64(size)
368 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:367:5
    |
367 |     parse_size_u64(size)
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
367 |     return parse_size_u64(size)
    |     ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:373:1
    |
373 | pub fn parse_size_u64_max(size: &str) -> Result<u64, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/features/parser/parse_size.rs:373:1
    |
373 | / pub fn parse_size_u64_max(size: &str) -> Result<u64, ParseSizeError> {
374 | |     Parser::default().parse_u64_max(size)
375 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name starts with its containing module's name
   --> src/uucore/src/lib/features/parser/parse_size.rs:373:8
    |
373 | pub fn parse_size_u64_max(size: &str) -> Result<u64, ParseSizeError> {
    |        ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:374:5
    |
374 |     Parser::default().parse_u64_max(size)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
374 |     return Parser::default().parse_u64_max(size)
    |     ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/features/parser/parse_size.rs:378:1
    |
378 | pub fn parse_size_u128_max(size: &str) -> Result<u128, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/features/parser/parse_size.rs:378:1
    |
378 | / pub fn parse_size_u128_max(size: &str) -> Result<u128, ParseSizeError> {
379 | |     Parser::default().parse_u128_max(size)
380 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name starts with its containing module's name
   --> src/uucore/src/lib/features/parser/parse_size.rs:378:8
    |
378 | pub fn parse_size_u128_max(size: &str) -> Result<u128, ParseSizeError> {
    |        ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:379:5
    |
379 |     Parser::default().parse_u128_max(size)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
379 |     return Parser::default().parse_u128_max(size)
    |     ++++++

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/features/parser/parse_size.rs:382:20
    |
382 | /// Error type for parse_size
    |                    ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
382 - /// Error type for parse_size
382 + /// Error type for `parse_size`
    |

warning: exported enums should not be exhaustive
   --> src/uucore/src/lib/features/parser/parse_size.rs:384:1
    |
384 | / pub enum ParseSizeError {
385 | |     /// Suffix
386 | |     InvalidSuffix(String),
...   |
395 | |     PhysicalMem(String),
396 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
help: try adding #[non_exhaustive]
    |
384 + #[non_exhaustive]
385 | pub enum ParseSizeError {
    |

warning: item name starts with its containing module's name
   --> src/uucore/src/lib/features/parser/parse_size.rs:384:10
    |
384 | pub enum ParseSizeError {
    |          ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/features/parser/parse_size.rs:395:5
    |
395 |     PhysicalMem(String),
    |     ^^^^^^^^^^^
    |
note: should be placed before `SizeTooBig`
   --> src/uucore/src/lib/features/parser/parse_size.rs:392:5
    |
392 |     SizeTooBig(String),
    |     ^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing trait method provided by default: `source`
   --> src/uucore/src/lib/features/parser/parse_size.rs:398:1
    |
398 | impl Error for ParseSizeError {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:105:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `type_id`
   --> src/uucore/src/lib/features/parser/parse_size.rs:398:1
    |
398 | impl Error for ParseSizeError {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:116:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cause`
   --> src/uucore/src/lib/features/parser/parse_size.rs:398:1
    |
398 | impl Error for ParseSizeError {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:141:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `provide`
   --> src/uucore/src/lib/features/parser/parse_size.rs:398:1
    |
398 | impl Error for ParseSizeError {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:204:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:399:5
    |
399 | /     fn description(&self) -> &str {
400 | |         match *self {
401 | |             Self::InvalidSuffix(ref s) => s,
402 | |             Self::ParseFailure(ref s) => s,
...   |
406 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:401:43
    |
401 |             Self::InvalidSuffix(ref s) => s,
    |                                           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
401 |             Self::InvalidSuffix(ref s) => return s,
    |                                           ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:42
    |
402 |             Self::ParseFailure(ref s) => s,
    |                                          ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
402 |             Self::ParseFailure(ref s) => return s,
    |                                          ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:403:40
    |
403 |             Self::SizeTooBig(ref s) => s,
    |                                        ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
403 |             Self::SizeTooBig(ref s) => return s,
    |                                        ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:404:41
    |
404 |             Self::PhysicalMem(ref s) => s,
    |                                         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
404 |             Self::PhysicalMem(ref s) => return s,
    |                                         ++++++

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:13
    |
402 |             Self::ParseFailure(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
401 -             Self::InvalidSuffix(ref s) => s,
402 -             Self::ParseFailure(ref s) => s,
401 +             Self::ParseFailure(ref s) | Self::InvalidSuffix(ref s) => s,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:403:13
    |
403 |             Self::SizeTooBig(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
401 ~             Self::ParseFailure(ref s) => s,
402 ~             Self::SizeTooBig(ref s) | Self::InvalidSuffix(ref s) => s,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:13
    |
402 |             Self::ParseFailure(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
402 ~             Self::ParseFailure(ref s) | Self::SizeTooBig(ref s) => s,
403 ~             Self::PhysicalMem(ref s) => s,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:404:13
    |
404 |             Self::PhysicalMem(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
401 ~             Self::ParseFailure(ref s) => s,
402 |             Self::SizeTooBig(ref s) => s,
403 ~             Self::PhysicalMem(ref s) | Self::InvalidSuffix(ref s) => s,
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:13
    |
402 |             Self::ParseFailure(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
402 ~             Self::ParseFailure(ref s) | Self::PhysicalMem(ref s) => s,
403 |             Self::SizeTooBig(ref s) => s,
404 ~             }
    |

warning: this match arm has an identical body to another arm
   --> src/uucore/src/lib/features/parser/parse_size.rs:403:13
    |
403 |             Self::SizeTooBig(ref s) => s,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
help: or try merging the arm patterns and removing the obsolete arm
    |
403 ~             Self::SizeTooBig(ref s) | Self::PhysicalMem(ref s) => s,
404 ~             }
    |

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:401:37
    |
401 |             Self::InvalidSuffix(ref s) => s,
    |                                     ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:402:36
    |
402 |             Self::ParseFailure(ref s) => s,
    |                                    ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:403:34
    |
403 |             Self::SizeTooBig(ref s) => s,
    |                                  ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:404:35
    |
404 |             Self::PhysicalMem(ref s) => s,
    |                                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/parse_size.rs:410:5
    |
410 | /     fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
411 | |         let s = match self {
412 | |             Self::InvalidSuffix(s)
413 | |             | Self::ParseFailure(s)
...   |
417 | |         write!(f, "{s}")
418 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:417:9
    |
417 |         write!(f, "{s}")
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
417 |         return write!(f, "{s}")
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:410:19
    |
410 |     fn fmt(&self, f: &mut fmt::Formatter) -> Result<(), fmt::Error> {
    |                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/features/parser/parse_size.rs:412:13
    |
412 | /             Self::InvalidSuffix(s)
413 | |             | Self::ParseFailure(s)
414 | |             | Self::SizeTooBig(s)
415 | |             | Self::PhysicalMem(s) => s,
    | |__________________________________^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:412:33
    |
412 |             Self::InvalidSuffix(s)
    |                                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:413:34
    |
413 |             | Self::ParseFailure(s)
    |                                  ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:414:32
    |
414 |             | Self::SizeTooBig(s)
    |                                ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:415:33
    |
415 |             | Self::PhysicalMem(s) => s,
    |                                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:411:13
    |
411 |         let s = match self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:426:9
    |
426 |         Self::InvalidSuffix(format!("{}", s.quote()))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
426 |         return Self::InvalidSuffix(format!("{}", s.quote()))
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:425:23
    |
425 |     fn invalid_suffix(s: &str) -> Self {
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:461:9
    |
461 |         Self::ParseFailure(format!("{}", s.quote()))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
461 |         return Self::ParseFailure(format!("{}", s.quote()))
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:429:22
    |
429 |     fn parse_failure(s: &str) -> Self {
    |                      ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_size.rs:481:9
    |
481 | /         Self::SizeTooBig(format!(
482 | |             "{}: Value too large for defined data type",
483 | |             s.quote()
484 | |         ))
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
481 |         return Self::SizeTooBig(format!(
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/parse_size.rs:464:21
    |
464 |     fn size_too_big(s: &str) -> Self {
    |                     ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/parse_time.rs:12:14
   |
12 |     display::Quotable,
   |              ^^^^^^^^ help: use: `Quotable as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/parse_time.rs:16:17
   |
16 | use num_traits::Signed;
   |                 ^^^^^^ help: use: `Signed as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/parse_time.rs:17:17
   |
17 | use num_traits::ToPrimitive;
   |                 ^^^^^^^^^^^ help: use: `ToPrimitive as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/features/parser/parse_time.rs:18:17
   |
18 | use num_traits::Zero;
   |                 ^^^^ help: use: `Zero as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/features/parser/parse_time.rs:19:5
   |
19 | use std::time::Duration;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/features/parser/parse_time.rs:56:1
    |
56  | pub fn from_str(string: &str, allow_suffixes: bool) -> Result<Duration, String> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore/src/lib/features/parser/parse_time.rs:102:22
    |
102 |     let nanos: u32 = (&nanos_bi % NANOS_PER_SEC).to_u32().unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/features/parser/parse_time.rs:56:1
    |
56  | / pub fn from_str(string: &str, allow_suffixes: bool) -> Result<Duration, String> {
57  | |     // TODO: Switch to Duration::NANOSECOND if that ever becomes stable
58  | |     // https://github.com/rust-lang/rust/issues/57391
59  | |     const NANOSECOND_DURATION: Duration = Duration::from_nanos(1);
...   |
103 | |     Ok(Duration::new(whole_secs, nanos))
104 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/parse_time.rs:103:5
    |
103 |     Ok(Duration::new(whole_secs, nanos))
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
103 |     return Ok(Duration::new(whole_secs, nanos))
    |     ++++++

warning: default numeric fallback might occur
  --> src/uucore/src/lib/features/parser/parse_time.rs:84:42
   |
84 |         ExtendedBigDecimal::MinusZero => 0.into(),
   |                                          ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: adding items after statements is confusing, since items exist from the start of the scope
  --> src/uucore/src/lib/features/parser/parse_time.rs:97:5
   |
97 |     const NANOS_PER_SEC: u32 = 1_000_000_000;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements

warning: wildcard match will also match any future added variants
  --> src/uucore/src/lib/features/parser/parse_time.rs:86:9
   |
86 |         _ => return Err(format!("invalid time interval {}", string.quote())),
   |         ^ help: try: `ExtendedBigDecimal::BigDecimal(_) | ExtendedBigDecimal::MinusInfinity | ExtendedBigDecimal::Nan | ExtendedBigDecimal::MinusNan`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: `num` is shadowed
  --> src/uucore/src/lib/features/parser/parse_time.rs:82:9
   |
82 |     let num = match num {
   |         ^^^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/parse_time.rs:65:9
   |
65 |     let num = match num_parser::parse(
   |         ^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/parse_time.rs:98:33
   |
98 |     let whole_secs: u64 = match (&nanos_bi / NANOS_PER_SEC).try_into() {
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: used `unwrap()` on an `Option` value
   --> src/uucore/src/lib/features/parser/parse_time.rs:102:22
    |
102 |     let nanos: u32 = (&nanos_bi % NANOS_PER_SEC).to_u32().unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uucore/src/lib/features/parser/parse_time.rs:102:22
    |
102 |     let nanos: u32 = (&nanos_bi % NANOS_PER_SEC).to_u32().unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: item name ends with its containing module's name
  --> src/uucore/src/lib/features/parser/mod.rs:11:9
   |
11 | pub mod shortcut_value_parser;
   |         ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:88:1
    |
88  | / impl TypedValueParser for ShortcutValueParser {
89  | |     type Value = String;
90  | |
91  | |     fn parse_ref(
...   |
123 | | }
    | |_^
    |
note: should be placed before `add_ambiguous_value_tip`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:65:4
    |
65  | fn add_ambiguous_value_tip(
    |    ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:30:8
   |
30 |     fn generate_clap_error(
   |        ^^^^^^^^^^^^^^^^^^^
   |
note: should be placed before `new`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:26:12
   |
26 |     pub fn new(values: impl Into<Self>) -> Self {
   |            ^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: `impl Trait` used as a function parameter
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:26:24
   |
26 |     pub fn new(values: impl Into<Self>) -> Self {
   |                        ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
   = note: `-W clippy::impl-trait-in-params` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::impl_trait_in_params)]`
help: add a type parameter
   |
26 |     pub fn new<{ /* Generic name */ }: Into<Self>>(values: impl Into<Self>) -> Self {
   |               ++++++++++++++++++++++++++++++++++++

warning: missing `#[inline]` for a method
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:26:5
   |
26 | /     pub fn new(values: impl Into<Self>) -> Self {
27 | |         values.into()
28 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:27:9
   |
27 |         values.into()
   |         ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
27 |         return values.into()
   |         ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:60:9
   |
60 |         err
   |         ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
60 |         return err
   |         ++++++

warning: `arg` is shadowed
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:39:21
   |
39 |         if let Some(arg) = arg {
   |                     ^^^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:33:9
   |
33 |         arg: Option<&clap::Arg>,
   |         ^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `to_string()` called on a `&str`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:48:34
   |
48 |             ContextValue::String(value.to_string()),
   |                                  ^^^^^^^^^^^^^^^^^ help: try: `value.to_owned()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: missing `return` statement
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:53:57
   |
53 |             ContextValue::Strings(self.0.iter().map(|x| x.get_name().to_string()).collect()),
   |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
53 |             ContextValue::Strings(self.0.iter().map(|x| return x.get_name().to_string()).collect()),
   |                                                         ++++++

warning: `to_string()` called on a `&str`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:53:57
   |
53 |             ContextValue::Strings(self.0.iter().map(|x| x.get_name().to_string()).collect()),
   |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `x.get_name().to_owned()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:67:15
   |
67 |     err: &mut clap::error::Error,
   |               ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:71:13
   |
71 |     for (i, s) in possible_values.iter().enumerate() {
   |             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `format!(..)` appended to existing `String`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:72:9
   |
72 |         formatted_possible_values.push_str(&format!("'{}'", s.get_name()));
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using `write!` to avoid the extra allocation
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#format_push_string
   = note: `-W clippy::format-push-string` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::format_push_string)]`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:73:16
   |
73 |         if i < possible_values.len() - 2 {
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:75:23
   |
75 |         } else if i < possible_values.len() - 1 {
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: missing trait method provided by default: `parse_ref_`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:88:1
    |
88  | impl TypedValueParser for ShortcutValueParser {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /home/sebir/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.39/src/builder/value_parser.rs:728:5
    |
728 | /     fn parse_ref_(
729 | |         &self,
730 | |         cmd: &crate::Command,
731 | |         arg: Option<&crate::Arg>,
732 | |         value: &std::ffi::OsStr,
733 | |         _source: ValueSource,
734 | |     ) -> Result<Self::Value, crate::Error> {
    | |__________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `parse`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:88:1
    |
88  | impl TypedValueParser for ShortcutValueParser {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /home/sebir/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.39/src/builder/value_parser.rs:741:5
    |
741 | /     fn parse(
742 | |         &self,
743 | |         cmd: &crate::Command,
744 | |         arg: Option<&crate::Arg>,
745 | |         value: std::ffi::OsString,
746 | |     ) -> Result<Self::Value, crate::Error> {
    | |__________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `parse_`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:88:1
    |
88  | impl TypedValueParser for ShortcutValueParser {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /home/sebir/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.39/src/builder/value_parser.rs:753:5
    |
753 | /     fn parse_(
754 | |         &self,
755 | |         cmd: &crate::Command,
756 | |         arg: Option<&crate::Arg>,
757 | |         value: std::ffi::OsString,
758 | |         _source: ValueSource,
759 | |     ) -> Result<Self::Value, crate::Error> {
    | |__________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `map`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:88:1
    |
88  | impl TypedValueParser for ShortcutValueParser {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /home/sebir/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.39/src/builder/value_parser.rs:810:5
    |
810 | /     fn map<T, F>(self, func: F) -> MapValueParser<Self, F>
811 | |     where
812 | |         T: Send + Sync + Clone,
813 | |         F: Fn(Self::Value) -> T + Clone,
    | |________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `try_map`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:88:1
    |
88  | impl TypedValueParser for ShortcutValueParser {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /home/sebir/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/clap_builder-4.5.39/src/builder/value_parser.rs:860:5
    |
860 | /     fn try_map<T, E, F>(self, func: F) -> TryMapValueParser<Self, F>
861 | |     where
862 | |         F: Fn(Self::Value) -> Result<T, E> + Clone + Send + Sync + 'static,
863 | |         T: Send + Sync + Clone,
864 | |         E: Into<Box<dyn std::error::Error + Send + Sync + 'static>>,
    | |____________________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:91:5
    |
91  | /     fn parse_ref(
92  | |         &self,
93  | |         cmd: &clap::Command,
94  | |         arg: Option<&clap::Arg>,
...   |
118 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:108:18
    |
108 |             0 => Err(self.generate_clap_error(cmd, arg, value, &[])),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
108 |             0 => return Err(self.generate_clap_error(cmd, arg, value, &[])),
    |                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:109:18
    |
109 |             1 => Ok(matched_values[0].get_name().to_string()),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
109 |             1 => return Ok(matched_values[0].get_name().to_string()),
    |                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:112:21
    |
112 |                     Ok(direct_match.get_name().to_string())
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
112 |                     return Ok(direct_match.get_name().to_string())
    |                     ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:114:21
    |
114 |                     Err(self.generate_clap_error(cmd, arg, value, &matched_values))
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
114 |                     return Err(self.generate_clap_error(cmd, arg, value, &matched_values))
    |                     ++++++

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:95:17
   |
95 |         value: &std::ffi::OsStr,
   |                 ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: question mark operator was used
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:97:21
   |
97 |           let value = value
   |  _____________________^
98 | |             .to_str()
99 | |             .ok_or(clap::Error::new(ErrorKind::InvalidUtf8))?;
   | |_____________________________________________________________^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: function call inside of `ok_or`
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:99:14
   |
99 |             .ok_or(clap::Error::new(ErrorKind::InvalidUtf8))?;
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `ok_or_else(|| clap::Error::new(ErrorKind::InvalidUtf8))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#or_fun_call
   = note: `-W clippy::or-fun-call` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::or_fun_call)]`

warning: `value` is shadowed
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:97:13
   |
97 |         let value = value
   |             ^^^^^
   |
note: previous binding is here
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:95:9
   |
95 |         value: &std::ffi::OsStr,
   |         ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:104:25
    |
104 |             .filter(|x| x.get_name_and_aliases().any(|name| name.starts_with(value)))
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
104 |             .filter(|x| return x.get_name_and_aliases().any(|name| name.starts_with(value)))
    |                         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:104:61
    |
104 |             .filter(|x| x.get_name_and_aliases().any(|name| name.starts_with(value)))
    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
104 |             .filter(|x| x.get_name_and_aliases().any(|name| return name.starts_with(value)))
    |                                                             ++++++

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:109:21
    |
109 |             1 => Ok(matched_values[0].get_name().to_string()),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `matched_values[0].get_name().to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: indexing may panic
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:109:21
    |
109 |             1 => Ok(matched_values[0].get_name().to_string()),
    |                     ^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: use Option::map_or_else instead of an if let/else
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:111:17
    |
111 | /                 if let Some(direct_match) = matched_values.iter().find(|x| x.get_name() == value) {
112 | |                     Ok(direct_match.get_name().to_string())
113 | |                 } else {
114 | |                     Err(self.generate_clap_error(cmd, arg, value, &matched_values))
115 | |                 }
    | |_________________^ help: try: `matched_values.iter().find(|x| x.get_name() == value).map_or_else(|| Err(self.generate_clap_error(cmd, arg, value, &matched_values)), |direct_match| Ok(direct_match.get_name().to_string()))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:111:76
    |
111 |                 if let Some(direct_match) = matched_values.iter().find(|x| x.get_name() == value) {
    |                                                                            ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
111 |                 if let Some(direct_match) = matched_values.iter().find(|x| return x.get_name() == value) {
    |                                                                            ++++++

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:112:24
    |
112 |                     Ok(direct_match.get_name().to_string())
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `direct_match.get_name().to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:120:5
    |
120 | /     fn possible_values(&self) -> Option<Box<dyn Iterator<Item = PossibleValue> + '_>> {
121 | |         Some(Box::new(self.0.iter().cloned()))
122 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:121:9
    |
121 |         Some(Box::new(self.0.iter().cloned()))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
121 |         return Some(Box::new(self.0.iter().cloned()))
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:130:5
    |
130 | /     fn from(values: I) -> Self {
131 | |         Self(values.into_iter().map(|t| t.into()).collect())
132 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:131:9
    |
131 |         Self(values.into_iter().map(|t| t.into()).collect())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
131 |         return Self(values.into_iter().map(|t| t.into()).collect())
    |         ++++++

warning: redundant closure
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:131:37
    |
131 |         Self(values.into_iter().map(|t| t.into()).collect())
    |                                     ^^^^^^^^^^^^ help: replace the closure with the method itself: `std::convert::Into::into`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: missing `return` statement
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:131:41
    |
131 |         Self(values.into_iter().map(|t| t.into()).collect())
    |                                         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
131 |         Self(values.into_iter().map(|t| return t.into()).collect())
    |                                         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:131:38
    |
131 |         Self(values.into_iter().map(|t| t.into()).collect())
    |                                      ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uucore/src/lib/macros.rs:88:14
   |
88 | macro_rules! show(
   |              ^^^^
   |
note: should be placed before `UTILITY_IS_SECOND_ARG`
  --> src/uucore/src/lib/macros.rs:44:12
   |
44 | pub static UTILITY_IS_SECOND_ARG: AtomicBool = AtomicBool::new(false);
   |            ^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/macros.rs:36:5
   |
36 | use std::sync::atomic::AtomicBool;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a module
  --> src/uucore/src/lib/lib.rs:20:1
   |
20 | mod mods; // core cross-platform modules
   | ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uucore/src/lib/mods/display.rs:67:11
   |
67 | pub trait OsWrite: io::Write {
   |           ^^^^^^^
   |
note: should be placed before `print_verbatim`
  --> src/uucore/src/lib/mods/display.rs:57:8
   |
57 | pub fn print_verbatim<S: AsRef<OsStr>>(text: S) -> io::Result<()> {
   |        ^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/mods/display.rs:29:52
   |
29 | use std::io::{self, BufWriter, Stdout, StdoutLock, Write as IoWrite};
   |                                                    ^^^^^^^^^^^^^^^^ help: use: `Write as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/mods/display.rs:32:25
   |
32 | use std::os::unix::ffi::OsStrExt;
   |                         ^^^^^^^^ help: use: `OsStrExt as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/mods/display.rs:49:1
   |
49 | pub fn println_verbatim<S: AsRef<OsStr>>(text: S) -> io::Result<()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/display.rs:49:1
   |
49 | / pub fn println_verbatim<S: AsRef<OsStr>>(text: S) -> io::Result<()> {
50 | |     let mut stdout = io::stdout().lock();
51 | |     stdout.write_all_os(text.as_ref())?;
52 | |     stdout.write_all(b"\n")?;
53 | |     Ok(())
54 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/display.rs:53:5
   |
53 |     Ok(())
   |     ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
53 |     return Ok(())
   |     ++++++

warning: question mark operator was used
  --> src/uucore/src/lib/mods/display.rs:51:5
   |
51 |     stdout.write_all_os(text.as_ref())?;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
  --> src/uucore/src/lib/mods/display.rs:52:5
   |
52 |     stdout.write_all(b"\n")?;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uucore/src/lib/mods/display.rs:57:1
   |
57 | pub fn print_verbatim<S: AsRef<OsStr>>(text: S) -> io::Result<()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/display.rs:57:1
   |
57 | / pub fn print_verbatim<S: AsRef<OsStr>>(text: S) -> io::Result<()> {
58 | |     io::stdout().write_all_os(text.as_ref())
59 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/display.rs:58:5
   |
58 |     io::stdout().write_all_os(text.as_ref())
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
58 |     return io::stdout().write_all_os(text.as_ref())
   |     ++++++

warning: missing `#[inline]` for a default trait method
   --> src/uucore/src/lib/mods/display.rs:76:5
    |
76  | /     fn write_all_os(&mut self, buf: &OsStr) -> io::Result<()> {
77  | |         #[cfg(any(unix, target_os = "wasi"))]
78  | |         {
79  | |             self.write_all(buf.as_bytes())
...   |
102 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/display.rs:79:13
   |
79 |             self.write_all(buf.as_bytes())
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
79 |             return self.write_all(buf.as_bytes())
   |             ++++++

warning: missing trait method provided by default: `write_all_os`
   --> src/uucore/src/lib/mods/display.rs:107:1
    |
107 | impl OsWrite for File {}
    | ^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/display.rs:76:5
    |
76  |     fn write_all_os(&mut self, buf: &OsStr) -> io::Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `write_all_os`
   --> src/uucore/src/lib/mods/display.rs:108:1
    |
108 | impl OsWrite for Stdout {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/display.rs:76:5
    |
76  |     fn write_all_os(&mut self, buf: &OsStr) -> io::Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `write_all_os`
   --> src/uucore/src/lib/mods/display.rs:109:1
    |
109 | impl OsWrite for StdoutLock<'_> {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/display.rs:76:5
    |
76  |     fn write_all_os(&mut self, buf: &OsStr) -> io::Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `write_all_os`
   --> src/uucore/src/lib/mods/display.rs:112:1
    |
112 | impl<W: OsWrite> OsWrite for BufWriter<W> {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/display.rs:76:5
    |
76  |     fn write_all_os(&mut self, buf: &OsStr) -> io::Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/display.rs:115:5
    |
115 | /     fn write_all_os(&mut self, buf: &OsStr) -> io::Result<()> {
116 | |         let this: &mut dyn OsWrite = self;
117 | |         this.write_all_os(buf)
118 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/display.rs:117:9
    |
117 |         this.write_all_os(buf)
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
117 |         return this.write_all_os(buf)
    |         ++++++

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uucore/src/lib/mods/error.rs:95:10
   |
95 | pub type UResult<T> = Result<T, Box<dyn UError>>;
   |          ^^^^^^^
   |
note: should be placed before `set_exit_code`
  --> src/uucore/src/lib/mods/error.rs:90:8
   |
90 | pub fn set_exit_code(code: i32) {
   |        ^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/mods/error.rs:469:11
    |
469 | pub trait FromIo<T> {
    |           ^^^^^^
    |
note: should be placed before `strip_errno`
   --> src/uucore/src/lib/mods/error.rs:459:8
    |
459 | pub fn strip_errno(err: &std::io::Error) -> String {
    |        ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uucore/src/lib/mods/error.rs:626:14
    |
626 | macro_rules! uio_error(
    |              ^^^^^^^^^
    |
note: should be placed before the following item
   --> src/uucore/src/lib/mods/error.rs:561:1
    |
561 | / impl From<nix::Error> for Box<dyn UError> {
562 | |     fn from(f: nix::Error) -> Self {
563 | |         let u_error: UIoError = f.into();
564 | |         Box::new(u_error) as Self
565 | |     }
566 | | }
    | |_^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/mods/error.rs:57:5
   |
57 | use std::{
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/error.rs:67:1
   |
67 | / pub fn get_exit_code() -> i32 {
68 | |     EXIT_CODE.load(Ordering::SeqCst)
69 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/error.rs:68:5
   |
68 |     EXIT_CODE.load(Ordering::SeqCst)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
68 |     return EXIT_CODE.load(Ordering::SeqCst)
   |     ++++++

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/error.rs:90:1
   |
90 | / pub fn set_exit_code(code: i32) {
91 | |     EXIT_CODE.store(code, Ordering::SeqCst);
92 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `#[inline]` for a default trait method
   --> src/uucore/src/lib/mods/error.rs:209:5
    |
209 | /     fn code(&self) -> i32 {
210 | |         1
211 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `#[inline]` for a default trait method
   --> src/uucore/src/lib/mods/error.rs:263:5
    |
263 | /     fn usage(&self) -> bool {
264 | |         false
265 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name ends with its containing module's name
   --> src/uucore/src/lib/mods/error.rs:158:11
    |
158 | pub trait UError: Error + Send {
    |           ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:210:9
    |
210 |         1
    |         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
210 |         return 1
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:264:9
    |
264 |         false
    |         ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
264 |         return false
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:272:5
    |
272 | /     fn from(t: T) -> Self {
273 | |         Box::new(t)
274 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:273:9
    |
273 |         Box::new(t)
    |         ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
273 |         return Box::new(t)
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:272:13
    |
272 |     fn from(t: T) -> Self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: exported structs should not be exhaustive
   --> src/uucore/src/lib/mods/error.rs:287:1
    |
287 | / pub struct USimpleError {
288 | |     /// Exit code of the error.
289 | |     pub code: i32,
...   |
292 | |     pub message: String,
293 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
287 + #[non_exhaustive]
288 | pub struct USimpleError {
    |

warning: item name ends with its containing module's name
   --> src/uucore/src/lib/mods/error.rs:287:12
    |
287 | pub struct USimpleError {
    |            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:298:5
    |
298 | /     pub fn new<S: Into<String>>(code: i32, message: S) -> Box<dyn UError> {
299 | |         Box::new(Self {
300 | |             code,
301 | |             message: message.into(),
302 | |         })
303 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:299:9
    |
299 | /         Box::new(Self {
300 | |             code,
301 | |             message: message.into(),
302 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
299 |         return Box::new(Self {
    |         ++++++

warning: missing trait method provided by default: `source`
   --> src/uucore/src/lib/mods/error.rs:306:1
    |
306 | impl Error for USimpleError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:105:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `type_id`
   --> src/uucore/src/lib/mods/error.rs:306:1
    |
306 | impl Error for USimpleError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:116:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `description`
   --> src/uucore/src/lib/mods/error.rs:306:1
    |
306 | impl Error for USimpleError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:131:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cause`
   --> src/uucore/src/lib/mods/error.rs:306:1
    |
306 | impl Error for USimpleError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:141:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `provide`
   --> src/uucore/src/lib/mods/error.rs:306:1
    |
306 | impl Error for USimpleError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:204:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:309:5
    |
309 | /     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
310 | |         self.message.fmt(f)
311 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:310:9
    |
310 |         self.message.fmt(f)
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
310 |         return self.message.fmt(f)
    |         ++++++

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/mods/error.rs:309:56
    |
309 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:309:56
    |
309 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:309:19
    |
309 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing trait method provided by default: `usage`
   --> src/uucore/src/lib/mods/error.rs:314:1
    |
314 | impl UError for USimpleError {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/error.rs:263:5
    |
263 |     fn usage(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:315:5
    |
315 | /     fn code(&self) -> i32 {
316 | |         self.code
317 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:316:9
    |
316 |         self.code
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
316 |         return self.code
    |         ++++++

warning: exported structs should not be exhaustive
   --> src/uucore/src/lib/mods/error.rs:322:1
    |
322 | / pub struct UUsageError {
323 | |     /// Exit code of the error.
324 | |     pub code: i32,
...   |
327 | |     pub message: String,
328 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
322 + #[non_exhaustive]
323 | pub struct UUsageError {
    |

warning: item name ends with its containing module's name
   --> src/uucore/src/lib/mods/error.rs:322:12
    |
322 | pub struct UUsageError {
    |            ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:333:5
    |
333 | /     pub fn new<S: Into<String>>(code: i32, message: S) -> Box<dyn UError> {
334 | |         Box::new(Self {
335 | |             code,
336 | |             message: message.into(),
337 | |         })
338 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:334:9
    |
334 | /         Box::new(Self {
335 | |             code,
336 | |             message: message.into(),
337 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
334 |         return Box::new(Self {
    |         ++++++

warning: missing trait method provided by default: `source`
   --> src/uucore/src/lib/mods/error.rs:341:1
    |
341 | impl Error for UUsageError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:105:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `type_id`
   --> src/uucore/src/lib/mods/error.rs:341:1
    |
341 | impl Error for UUsageError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:116:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `description`
   --> src/uucore/src/lib/mods/error.rs:341:1
    |
341 | impl Error for UUsageError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:131:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cause`
   --> src/uucore/src/lib/mods/error.rs:341:1
    |
341 | impl Error for UUsageError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:141:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `provide`
   --> src/uucore/src/lib/mods/error.rs:341:1
    |
341 | impl Error for UUsageError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:204:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:344:5
    |
344 | /     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
345 | |         self.message.fmt(f)
346 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:345:9
    |
345 |         self.message.fmt(f)
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
345 |         return self.message.fmt(f)
    |         ++++++

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/mods/error.rs:344:56
    |
344 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:344:56
    |
344 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:344:19
    |
344 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:350:5
    |
350 | /     fn code(&self) -> i32 {
351 | |         self.code
352 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:351:9
    |
351 |         self.code
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
351 |         return self.code
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:354:5
    |
354 | /     fn usage(&self) -> bool {
355 | |         true
356 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:355:9
    |
355 |         true
    |         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
355 |         return true
    |         ++++++

warning: item name ends with its containing module's name
   --> src/uucore/src/lib/mods/error.rs:386:12
    |
386 | pub struct UIoError {
    |            ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:388:12
    |
388 |     inner: std::io::Error,
    |            ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:394:5
    |
394 | /     pub fn new<S: Into<String>>(kind: std::io::ErrorKind, context: S) -> Box<dyn UError> {
395 | |         Box::new(Self {
396 | |             context: Some(context.into()),
397 | |             inner: kind.into(),
398 | |         })
399 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:395:9
    |
395 | /         Box::new(Self {
396 | |             context: Some(context.into()),
397 | |             inner: kind.into(),
398 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
395 |         return Box::new(Self {
    |         ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:394:39
    |
394 |     pub fn new<S: Into<String>>(kind: std::io::ErrorKind, context: S) -> Box<dyn UError> {
    |                                       ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing trait method provided by default: `code`
   --> src/uucore/src/lib/mods/error.rs:402:1
    |
402 | impl UError for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/error.rs:209:5
    |
209 |     fn code(&self) -> i32 {
    |     ^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `usage`
   --> src/uucore/src/lib/mods/error.rs:402:1
    |
402 | impl UError for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/error.rs:263:5
    |
263 |     fn usage(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `source`
   --> src/uucore/src/lib/mods/error.rs:404:1
    |
404 | impl Error for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:105:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `type_id`
   --> src/uucore/src/lib/mods/error.rs:404:1
    |
404 | impl Error for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:116:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `description`
   --> src/uucore/src/lib/mods/error.rs:404:1
    |
404 | impl Error for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:131:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cause`
   --> src/uucore/src/lib/mods/error.rs:404:1
    |
404 | impl Error for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:141:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `provide`
   --> src/uucore/src/lib/mods/error.rs:404:1
    |
404 | impl Error for UIoError {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:204:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:407:5
    |
407 | /     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
408 | |         use std::io::ErrorKind::*;
409 | |
410 | |         let message;
...   |
455 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:451:13
    |
451 |             write!(f, "{ctx}: {message}")
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
451 |             return write!(f, "{ctx}: {message}")
    |             ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:453:13
    |
453 |             write!(f, "{message}")
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
453 |             return write!(f, "{message}")
    |             ++++++

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/mods/error.rs:407:56
    |
407 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:407:56
    |
407 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:407:19
    |
407 |     fn fmt(&self, f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: usage of wildcard import for enum variants
   --> src/uucore/src/lib/mods/error.rs:408:13
    |
408 |         use std::io::ErrorKind::*;
    |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::io::ErrorKind::{AddrInUse, AddrNotAvailable, AlreadyExists, BrokenPipe, ConnectionAborted, ConnectionRefused, ConnectionReset, Interrupted, InvalidData, InvalidInput, NotConnected, NotFound, PermissionDenied, TimedOut, UnexpectedEof, WouldBlock, WriteZero}`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#enum_glob_use
    = note: `-W clippy::enum-glob-use` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::enum_glob_use)]`

warning: wildcard matches known variants and will also match future added variants
   --> src/uucore/src/lib/mods/error.rs:433:17
    |
433 |                 _ => {
    |                 ^ help: try: `HostUnreachable | NetworkUnreachable | NetworkDown | NotADirectory | IsADirectory | DirectoryNotEmpty | ReadOnlyFilesystem | FilesystemLoop | StaleNetworkFileHandle | StorageFull | NotSeekable | QuotaExceeded | FileTooLarge | ResourceBusy | ExecutableFileBusy | Deadlock | CrossesDevices | TooManyLinks | InvalidFilename | ArgumentListTooLong | Unsupported | OutOfMemory | InProgress | Other | _`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: `message` is shadowed
   --> src/uucore/src/lib/mods/error.rs:411:13
    |
411 |         let message = if self.inner.raw_os_error().is_some() {
    |             ^^^^^^^
    |
note: previous binding is here
   --> src/uucore/src/lib/mods/error.rs:410:13
    |
410 |         let message;
    |             ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: type of pattern does not match the expression type
   --> src/uucore/src/lib/mods/error.rs:450:16
    |
450 |         if let Some(ctx) = &self.context {
    |                ^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/mods/error.rs:459:1
    |
459 | pub fn strip_errno(err: &std::io::Error) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn strip_errno(err: &std::io::Error) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/mods/error.rs:459:1
    |
459 | / pub fn strip_errno(err: &std::io::Error) -> String {
460 | |     let mut msg = err.to_string();
461 | |     if let Some(pos) = msg.find(" (os error ") {
462 | |         msg.truncate(pos);
463 | |     }
464 | |     msg
465 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:464:5
    |
464 |     msg
    |     ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
464 |     return msg
    |     ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:459:26
    |
459 | pub fn strip_errno(err: &std::io::Error) -> String {
    |                          ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: `impl Trait` used as a function parameter
   --> src/uucore/src/lib/mods/error.rs:471:39
    |
471 |     fn map_err_context(self, context: impl FnOnce() -> String) -> T;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
help: add a type parameter
    |
471 |     fn map_err_context<{ /* Generic name */ }: FnOnce() -> String>(self, context: impl FnOnce() -> String) -> T;
    |                       ++++++++++++++++++++++++++++++++++++++++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:474:32
    |
474 | impl FromIo<Box<UIoError>> for std::io::Error {
    |                                ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:475:5
    |
475 | /     fn map_err_context(self, context: impl FnOnce() -> String) -> Box<UIoError> {
476 | |         Box::new(UIoError {
477 | |             context: Some(context()),
478 | |             inner: self,
479 | |         })
480 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:476:9
    |
476 | /         Box::new(UIoError {
477 | |             context: Some(context()),
478 | |             inner: self,
479 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
476 |         return Box::new(UIoError {
    |         ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:483:32
    |
483 | impl<T> FromIo<UResult<T>> for std::io::Result<T> {
    |                                ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:484:5
    |
484 | /     fn map_err_context(self, context: impl FnOnce() -> String) -> UResult<T> {
485 | |         self.map_err(|e| e.map_err_context(context) as Box<dyn UError>)
486 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:485:9
    |
485 |         self.map_err(|e| e.map_err_context(context) as Box<dyn UError>)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
485 |         return self.map_err(|e| e.map_err_context(context) as Box<dyn UError>)
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:485:26
    |
485 |         self.map_err(|e| e.map_err_context(context) as Box<dyn UError>)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
485 |         self.map_err(|e| return e.map_err_context(context) as Box<dyn UError>)
    |                          ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:485:23
    |
485 |         self.map_err(|e| e.map_err_context(context) as Box<dyn UError>)
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:485:26
    |
485 |         self.map_err(|e| e.map_err_context(context) as Box<dyn UError>)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:489:32
    |
489 | impl FromIo<Box<UIoError>> for std::io::ErrorKind {
    |                                ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:490:5
    |
490 | /     fn map_err_context(self, context: impl FnOnce() -> String) -> Box<UIoError> {
491 | |         Box::new(UIoError {
492 | |             context: Some(context()),
493 | |             inner: std::io::Error::new(self, ""),
494 | |         })
495 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:491:9
    |
491 | /         Box::new(UIoError {
492 | |             context: Some(context()),
493 | |             inner: std::io::Error::new(self, ""),
494 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
491 |         return Box::new(UIoError {
    |         ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:493:20
    |
493 |             inner: std::io::Error::new(self, ""),
    |                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:498:11
    |
498 | impl From<std::io::Error> for UIoError {
    |           ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:499:5
    |
499 | /     fn from(f: std::io::Error) -> Self {
500 | |         Self {
501 | |             context: None,
502 | |             inner: f,
503 | |         }
504 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:500:9
    |
500 | /         Self {
501 | |             context: None,
502 | |             inner: f,
503 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
500 |         return Self {
    |         ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:499:16
    |
499 |     fn from(f: std::io::Error) -> Self {
    |                ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:499:13
    |
499 |     fn from(f: std::io::Error) -> Self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:507:11
    |
507 | impl From<std::io::Error> for Box<dyn UError> {
    |           ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:508:5
    |
508 | /     fn from(f: std::io::Error) -> Self {
509 | |         let u_error: UIoError = f.into();
510 | |         Box::new(u_error) as Self
511 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:510:9
    |
510 |         Box::new(u_error) as Self
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
510 |         return Box::new(u_error) as Self
    |         ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:508:16
    |
508 |     fn from(f: std::io::Error) -> Self {
    |                ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:508:13
    |
508 |     fn from(f: std::io::Error) -> Self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:510:9
    |
510 |         Box::new(u_error) as Self
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:530:5
    |
530 | /     fn map_err_context(self, context: impl FnOnce() -> String) -> UResult<T> {
531 | |         self.map_err(|e| {
532 | |             Box::new(UIoError {
533 | |                 context: Some(context()),
...   |
536 | |         })
537 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:531:9
    |
531 | /         self.map_err(|e| {
532 | |             Box::new(UIoError {
533 | |                 context: Some(context()),
534 | |                 inner: std::io::Error::from_raw_os_error(e as i32),
535 | |             }) as Box<dyn UError>
536 | |         })
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
531 |         return self.map_err(|e| {
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:532:13
    |
532 | /             Box::new(UIoError {
533 | |                 context: Some(context()),
534 | |                 inner: std::io::Error::from_raw_os_error(e as i32),
535 | |             }) as Box<dyn UError>
    | |_________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
532 |             return Box::new(UIoError {
    |             ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:531:23
    |
531 |         self.map_err(|e| {
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:532:13
    |
532 | /             Box::new(UIoError {
533 | |                 context: Some(context()),
534 | |                 inner: std::io::Error::from_raw_os_error(e as i32),
535 | |             }) as Box<dyn UError>
    | |_________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:534:24
    |
534 |                 inner: std::io::Error::from_raw_os_error(e as i32),
    |                        ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:534:58
    |
534 |                 inner: std::io::Error::from_raw_os_error(e as i32),
    |                                                          ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:542:5
    |
542 | /     fn map_err_context(self, context: impl FnOnce() -> String) -> UResult<T> {
543 | |         Err(Box::new(UIoError {
544 | |             context: Some(context()),
545 | |             inner: std::io::Error::from_raw_os_error(self as i32),
546 | |         }) as Box<dyn UError>)
547 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:543:9
    |
543 | /         Err(Box::new(UIoError {
544 | |             context: Some(context()),
545 | |             inner: std::io::Error::from_raw_os_error(self as i32),
546 | |         }) as Box<dyn UError>)
    | |______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
543 |         return Err(Box::new(UIoError {
    |         ++++++

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:543:13
    |
543 |           Err(Box::new(UIoError {
    |  _____________^
544 | |             context: Some(context()),
545 | |             inner: std::io::Error::from_raw_os_error(self as i32),
546 | |         }) as Box<dyn UError>)
    | |_____________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:545:20
    |
545 |             inner: std::io::Error::from_raw_os_error(self as i32),
    |                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:545:54
    |
545 |             inner: std::io::Error::from_raw_os_error(self as i32),
    |                                                      ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:552:5
    |
552 | /     fn from(f: nix::Error) -> Self {
553 | |         Self {
554 | |             context: None,
555 | |             inner: std::io::Error::from_raw_os_error(f as i32),
556 | |         }
557 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:553:9
    |
553 | /         Self {
554 | |             context: None,
555 | |             inner: std::io::Error::from_raw_os_error(f as i32),
556 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
553 |         return Self {
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:552:13
    |
552 |     fn from(f: nix::Error) -> Self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:555:20
    |
555 |             inner: std::io::Error::from_raw_os_error(f as i32),
    |                    ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:555:54
    |
555 |             inner: std::io::Error::from_raw_os_error(f as i32),
    |                                                      ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:562:5
    |
562 | /     fn from(f: nix::Error) -> Self {
563 | |         let u_error: UIoError = f.into();
564 | |         Box::new(u_error) as Self
565 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:564:9
    |
564 |         Box::new(u_error) as Self
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
564 |         return Box::new(u_error) as Self
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:562:13
    |
562 |     fn from(f: nix::Error) -> Self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: using a potentially dangerous silent `as` conversion
   --> src/uucore/src/lib/mods/error.rs:564:9
    |
564 |         Box::new(u_error) as Self
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: item name ends with its containing module's name
   --> src/uucore/src/lib/mods/error.rs:626:14
    |
626 | macro_rules! uio_error(
    |              ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: exported structs should not be exhaustive
   --> src/uucore/src/lib/mods/error.rs:650:1
    |
650 | pub struct ExitCode(pub i32);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
650 + #[non_exhaustive]
651 | pub struct ExitCode(pub i32);
    |

warning: this method could have a `#[must_use]` attribute
   --> src/uucore/src/lib/mods/error.rs:655:5
    |
655 |     pub fn new(code: i32) -> Box<dyn UError> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(code: i32) -> Box<dyn UError>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:655:5
    |
655 | /     pub fn new(code: i32) -> Box<dyn UError> {
656 | |         Box::new(Self(code))
657 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:656:9
    |
656 |         Box::new(Self(code))
    |         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
656 |         return Box::new(Self(code))
    |         ++++++

warning: missing trait method provided by default: `source`
   --> src/uucore/src/lib/mods/error.rs:660:1
    |
660 | impl Error for ExitCode {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:105:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `type_id`
   --> src/uucore/src/lib/mods/error.rs:660:1
    |
660 | impl Error for ExitCode {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:116:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `description`
   --> src/uucore/src/lib/mods/error.rs:660:1
    |
660 | impl Error for ExitCode {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:131:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cause`
   --> src/uucore/src/lib/mods/error.rs:660:1
    |
660 | impl Error for ExitCode {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:141:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `provide`
   --> src/uucore/src/lib/mods/error.rs:660:1
    |
660 | impl Error for ExitCode {}
    | ^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:204:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:663:5
    |
663 | /     fn fmt(&self, _: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
664 | |         Ok(())
665 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:664:9
    |
664 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
664 |         return Ok(())
    |         ++++++

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/mods/error.rs:663:56
    |
663 |     fn fmt(&self, _: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:663:56
    |
663 |     fn fmt(&self, _: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                        ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing trait method provided by default: `usage`
   --> src/uucore/src/lib/mods/error.rs:668:1
    |
668 | impl UError for ExitCode {
    | ^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/error.rs:263:5
    |
263 |     fn usage(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:669:5
    |
669 | /     fn code(&self) -> i32 {
670 | |         self.0
671 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:670:9
    |
670 |         self.0
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
670 |         return self.0
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:675:5
    |
675 | /     fn from(i: i32) -> Self {
676 | |         ExitCode::new(i)
677 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:676:9
    |
676 |         ExitCode::new(i)
    |         ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
676 |         return ExitCode::new(i)
    |         ++++++

warning: item name ends with its containing module's name
   --> src/uucore/src/lib/mods/error.rs:706:11
    |
706 | pub trait UClapError<T> {
    |           ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:712:5
    |
712 | /     fn from(e: clap::Error) -> Self {
713 | |         Box::new(ClapErrorWrapper { code: 1, error: e })
714 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:713:9
    |
713 |         Box::new(ClapErrorWrapper { code: 1, error: e })
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
713 |         return Box::new(ClapErrorWrapper { code: 1, error: e })
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:712:13
    |
712 |     fn from(e: clap::Error) -> Self {
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:718:5
    |
718 | /     fn with_exit_code(self, code: i32) -> ClapErrorWrapper {
719 | |         ClapErrorWrapper { code, error: self }
720 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:719:9
    |
719 |         ClapErrorWrapper { code, error: self }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
719 |         return ClapErrorWrapper { code, error: self }
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:726:5
    |
726 | /     fn with_exit_code(self, code: i32) -> Result<clap::ArgMatches, ClapErrorWrapper> {
727 | |         self.map_err(|e| e.with_exit_code(code))
728 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:727:9
    |
727 |         self.map_err(|e| e.with_exit_code(code))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
727 |         return self.map_err(|e| e.with_exit_code(code))
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:727:26
    |
727 |         self.map_err(|e| e.with_exit_code(code))
    |                          ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
727 |         self.map_err(|e| return e.with_exit_code(code))
    |                          ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/error.rs:727:23
    |
727 |         self.map_err(|e| e.with_exit_code(code))
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing trait method provided by default: `usage`
   --> src/uucore/src/lib/mods/error.rs:731:1
    |
731 | impl UError for ClapErrorWrapper {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/error.rs:263:5
    |
263 |     fn usage(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:732:5
    |
732 | /     fn code(&self) -> i32 {
...   |
743 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:739:13
    |
739 |             0
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
739 |             return 0
    |             ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:741:13
    |
741 |             self.code
    |             ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
741 |             return self.code
    |             ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:736:16
    |
736 |         if let clap::error::ErrorKind::DisplayHelp | clap::error::ErrorKind::DisplayVersion =
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:736:54
    |
736 |         if let clap::error::ErrorKind::DisplayHelp | clap::error::ErrorKind::DisplayVersion =
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing trait method provided by default: `source`
   --> src/uucore/src/lib/mods/error.rs:746:1
    |
746 | impl Error for ClapErrorWrapper {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:105:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `type_id`
   --> src/uucore/src/lib/mods/error.rs:746:1
    |
746 | impl Error for ClapErrorWrapper {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:116:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `description`
   --> src/uucore/src/lib/mods/error.rs:746:1
    |
746 | impl Error for ClapErrorWrapper {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:131:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cause`
   --> src/uucore/src/lib/mods/error.rs:746:1
    |
746 | impl Error for ClapErrorWrapper {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:141:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `provide`
   --> src/uucore/src/lib/mods/error.rs:746:1
    |
746 | impl Error for ClapErrorWrapper {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/error.rs:204:5
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uucore/src/lib/mods/error.rs:750:5
    |
750 | /     fn fmt(&self, _f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
751 | |         self.error.print().unwrap();
752 | |         Ok(())
753 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: used unwrap or expect in a function that returns result or option
   --> src/uucore/src/lib/mods/error.rs:750:5
    |
750 | /     fn fmt(&self, _f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
751 | |         self.error.print().unwrap();
752 | |         Ok(())
753 | |     }
    | |_____^
    |
    = help: unwrap and expect should not be used in a function that returns result or option
note: potential non-recoverable error(s)
   --> src/uucore/src/lib/mods/error.rs:751:9
    |
751 |         self.error.print().unwrap();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_in_result
    = note: `-W clippy::unwrap-in-result` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::unwrap_in_result)]`

warning: missing `return` statement
   --> src/uucore/src/lib/mods/error.rs:752:9
    |
752 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
752 |         return Ok(())
    |         ++++++

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/mods/error.rs:750:57
    |
750 |     fn fmt(&self, _f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                         ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/error.rs:750:57
    |
750 |     fn fmt(&self, _f: &mut Formatter<'_>) -> Result<(), std::fmt::Error> {
    |                                                         ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: used `unwrap()` on a `Result` value
   --> src/uucore/src/lib/mods/error.rs:751:9
    |
751 |         self.error.print().unwrap();
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used import from `std` instead of `core`
 --> src/uucore/src/lib/mods/line_ending.rs:8:5
  |
8 | use std::fmt::Display;
  |     ^^^ help: consider importing the item from `core`: `core`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: exported enums should not be exhaustive
  --> src/uucore/src/lib/mods/line_ending.rs:20:1
   |
20 | / pub enum LineEnding {
21 | |     #[default]
22 | |     /// Newline character (`\n`)
23 | |     Newline = b'\n',
...  |
26 | |     Nul = 0,
27 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
help: try adding #[non_exhaustive]
   |
20 + #[non_exhaustive]
21 | pub enum LineEnding {
   |

warning: you are deriving `PartialEq` and can implement `Eq`
  --> src/uucore/src/lib/mods/line_ending.rs:19:39
   |
19 | #[derive(Clone, Copy, Debug, Default, PartialEq)]
   |                                       ^^^^^^^^^ help: consider deriving `Eq` as well: `PartialEq, Eq`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derive_partial_eq_without_eq

warning: missing `#[inline]` for a method
  --> src/uucore/src/lib/mods/line_ending.rs:30:5
   |
30 | /     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
31 | |         match self {
32 | |             Self::Newline => writeln!(f),
33 | |             Self::Nul => write!(f, "\0"),
34 | |         }
35 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/line_ending.rs:32:30
   |
32 |             Self::Newline => writeln!(f),
   |                              ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
32 |             Self::Newline => return writeln!(f),
   |                              ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/mods/line_ending.rs:33:26
   |
33 |             Self::Nul => write!(f, "\0"),
   |                          ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
33 |             Self::Nul => return write!(f, "\0"),
   |                          ++++++

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/mods/line_ending.rs:30:27
   |
30 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
   |                           ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/line_ending.rs:30:27
   |
30 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
   |                           ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/mods/line_ending.rs:30:55
   |
30 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
   |                                                       ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/line_ending.rs:30:55
   |
30 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
   |                                                       ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/line_ending.rs:30:19
   |
30 |     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
   |                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: type of pattern does not match the expression type
  --> src/uucore/src/lib/mods/line_ending.rs:32:13
   |
32 |             Self::Newline => writeln!(f),
   |             ^^^^^^^^^^^^^
   |
   = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: missing `#[inline]` for a method
  --> src/uucore/src/lib/mods/line_ending.rs:39:5
   |
39 | /     fn from(line_ending: LineEnding) -> Self {
40 | |         line_ending as Self
41 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/line_ending.rs:40:9
   |
40 |         line_ending as Self
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
40 |         return line_ending as Self
   |         ++++++

warning: using a potentially dangerous silent `as` conversion
  --> src/uucore/src/lib/mods/line_ending.rs:40:9
   |
40 |         line_ending as Self
   |         ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this method could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/line_ending.rs:49:5
   |
49 |     pub fn from_zero_flag(is_zero_terminated: bool) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn from_zero_flag(is_zero_terminated: bool) -> Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
  --> src/uucore/src/lib/mods/line_ending.rs:49:5
   |
49 | /     pub fn from_zero_flag(is_zero_terminated: bool) -> Self {
50 | |         if is_zero_terminated {
51 | |             Self::Nul
52 | |         } else {
...  |
55 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/line_ending.rs:51:13
   |
51 |             Self::Nul
   |             ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
51 |             return Self::Nul
   |             ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/mods/line_ending.rs:53:13
   |
53 |             Self::Newline
   |             ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
53 |             return Self::Newline
   |             ++++++

warning: this could be a `const fn`
  --> src/uucore/src/lib/mods/line_ending.rs:49:5
   |
49 | /     pub fn from_zero_flag(is_zero_terminated: bool) -> Self {
50 | |         if is_zero_terminated {
51 | |             Self::Nul
52 | |         } else {
...  |
55 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
49 |     pub const fn from_zero_flag(is_zero_terminated: bool) -> Self {
   |         +++++

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uucore/src/lib/mods/locale.rs:50:11
   |
50 | pub const DEFAULT_LOCALE: &str = "en-US";
   |           ^^^^^^^^^^^^^^
   |
note: should be placed before the following item
  --> src/uucore/src/lib/mods/locale.rs:44:1
   |
44 | / impl UError for LocalizationError {
45 | |     fn code(&self) -> i32 {
46 | |         1
47 | |     }
48 | | }
   | |_^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: importing trait that is only used anonymously
  --> src/uucore/src/lib/mods/locale.rs:12:15
   |
12 | use std::str::FromStr;
   |               ^^^^^^^ help: use: `FromStr as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/mods/locale.rs:12:5
   |
12 | use std::str::FromStr;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: exported enums should not be exhaustive
  --> src/uucore/src/lib/mods/locale.rs:18:1
   |
18 | / pub enum LocalizationError {
19 | |     #[error("I/O error loading '{path}': {source}")]
20 | |     Io {
21 | |         source: std::io::Error,
...  |
31 | |     PathResolution(String),
32 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
help: try adding #[non_exhaustive]
   |
18 + #[non_exhaustive]
19 | pub enum LocalizationError {
   |

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/mods/locale.rs:27:5
   |
27 |     Bundle(String),
   |     ^^^^^^
   |
note: should be placed before `Parse`
  --> src/uucore/src/lib/mods/locale.rs:25:5
   |
25 |     Parse(String),
   |     ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/locale.rs:21:17
   |
21 |         source: std::io::Error,
   |                 ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/locale.rs:34:11
   |
34 | impl From<std::io::Error> for LocalizationError {
   |           ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a method
  --> src/uucore/src/lib/mods/locale.rs:35:5
   |
35 | /     fn from(error: std::io::Error) -> Self {
36 | |         LocalizationError::Io {
37 | |             source: error,
38 | |             path: PathBuf::from("<unknown>"),
39 | |         }
40 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:36:9
   |
36 | /         LocalizationError::Io {
37 | |             source: error,
38 | |             path: PathBuf::from("<unknown>"),
39 | |         }
   | |_________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
36 |         return LocalizationError::Io {
   |         ++++++

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/locale.rs:35:20
   |
35 |     fn from(error: std::io::Error) -> Self {
   |                    ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: unnecessary structure name repetition
  --> src/uucore/src/lib/mods/locale.rs:36:9
   |
36 |         LocalizationError::Io {
   |         ^^^^^^^^^^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing trait method provided by default: `usage`
   --> src/uucore/src/lib/mods/locale.rs:44:1
    |
44  | impl UError for LocalizationError {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/mods/error.rs:263:5
    |
263 |     fn usage(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
  --> src/uucore/src/lib/mods/locale.rs:45:5
   |
45 | /     fn code(&self) -> i32 {
46 | |         1
47 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:46:9
   |
46 |         1
   |         ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
46 |         return 1
   |         ++++++

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/mods/locale.rs:55:5
   |
55 |     fallback_bundle: Option<FluentBundle<FluentResource>>,
   |     ^^^^^^^^^^^^^^^
   |
note: should be placed before `primary_bundle`
  --> src/uucore/src/lib/mods/locale.rs:54:5
   |
54 |     primary_bundle: FluentBundle<FluentResource>,
   |     ^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uucore/src/lib/mods/locale.rs:71:8
   |
71 |     fn format(&self, id: &str, args: Option<&FluentArgs>) -> String {
   |        ^^^^^^
   |
note: should be placed before `with_fallback`
  --> src/uucore/src/lib/mods/locale.rs:66:8
   |
66 |     fn with_fallback(mut self, fallback_bundle: FluentBundle<FluentResource>) -> Self {
   |        ^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:60:9
   |
60 | /         Self {
61 | |             primary_bundle,
62 | |             fallback_bundle: None,
63 | |         }
   | |_________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
60 |         return Self {
   |         ++++++

warning: this could be a `const fn`
  --> src/uucore/src/lib/mods/locale.rs:59:5
   |
59 | /     fn new(primary_bundle: FluentBundle<FluentResource>) -> Self {
60 | |         Self {
61 | |             primary_bundle,
62 | |             fallback_bundle: None,
63 | |         }
64 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
59 |     const fn new(primary_bundle: FluentBundle<FluentResource>) -> Self {
   |     +++++

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:68:9
   |
68 |         self
   |         ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
68 |         return self
   |         ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:92:9
   |
92 |         id.to_string()
   |         ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
92 |         return id.to_string()
   |         ++++++

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:73:81
   |
73 |         if let Some(message) = self.primary_bundle.get_message(id).and_then(|m| m.value()) {
   |                                                                                 ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
73 |         if let Some(message) = self.primary_bundle.get_message(id).and_then(|m| return m.value()) {
   |                                                                                 ++++++

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/locale.rs:73:78
   |
73 |         if let Some(message) = self.primary_bundle.get_message(id).and_then(|m| m.value()) {
   |                                                                              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uucore/src/lib/mods/locale.rs:83:74
   |
83 |             if let Some(message) = fallback.get_message(id).and_then(|m| m.value()) {
   |                                                                          ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
83 |             if let Some(message) = fallback.get_message(id).and_then(|m| return m.value()) {
   |                                                                          ++++++

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/locale.rs:83:71
   |
83 |             if let Some(message) = fallback.get_message(id).and_then(|m| m.value()) {
   |                                                                       ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `to_string()` called on a `&str`
  --> src/uucore/src/lib/mods/locale.rs:92:9
   |
92 |         id.to_string()
   |         ^^^^^^^^^^^^^^ help: try: `id.to_owned()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/mods/locale.rs:102:1
    |
102 | / fn init_localization(
103 | |     locale: &LanguageIdentifier,
104 | |     locales_dir: &Path,
105 | | ) -> Result<(), LocalizationError> {
    | |__________________________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/mods/locale.rs:106:21
    |
106 |       let en_locale = LanguageIdentifier::from_str(DEFAULT_LOCALE)
    |  _____________________^
107 | |         .expect("Default locale should always be valid");
    | |________________________________________________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/mods/locale.rs:102:1
    |
102 | / fn init_localization(
103 | |     locale: &LanguageIdentifier,
104 | |     locales_dir: &Path,
105 | | ) -> Result<(), LocalizationError> {
    | |__________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:128:5
    |
128 |     Ok(())
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
128 |     return Ok(())
    |     ++++++

warning: used `expect()` on a `Result` value
   --> src/uucore/src/lib/mods/locale.rs:106:21
    |
106 |       let en_locale = LanguageIdentifier::from_str(DEFAULT_LOCALE)
    |  _____________________^
107 | |         .expect("Default locale should always be valid");
    | |________________________________________________________^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used
    = note: `-W clippy::expect-used` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::expect_used)]`

warning: question mark operator was used
   --> src/uucore/src/lib/mods/locale.rs:109:26
    |
109 |     let english_bundle = create_bundle(&en_locale, locales_dir)?;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uucore/src/lib/mods/locale.rs:124:5
    |
124 | /     LOCALIZER.with(|lock| {
125 | |         lock.set(loc)
126 | |             .map_err(|_| LocalizationError::Bundle("Localizer already initialized".into()))
127 | |     })?;
    | |_______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:125:9
    |
125 | /         lock.set(loc)
126 | |             .map_err(|_| LocalizationError::Bundle("Localizer already initialized".into()))
    | |___________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
125 |         return lock.set(loc)
    |         ++++++

warning: `map_err(|_|...` wildcard pattern discards the original error
   --> src/uucore/src/lib/mods/locale.rs:126:22
    |
126 |             .map_err(|_| LocalizationError::Bundle("Localizer already initialized".into()))
    |                      ^^^
    |
    = help: consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_err_ignore

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:126:26
    |
126 |             .map_err(|_| LocalizationError::Bundle("Localizer already initialized".into()))
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
126 |             .map_err(|_| return LocalizationError::Bundle("Localizer already initialized".into()))
    |                          ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/mods/locale.rs:132:1
    |
132 | / fn create_bundle(
133 | |     locale: &LanguageIdentifier,
134 | |     locales_dir: &Path,
135 | | ) -> Result<FluentBundle<FluentResource>, LocalizationError> {
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:160:5
    |
160 |     Ok(bundle)
    |     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
160 |     return Ok(bundle)
    |     ++++++

warning: question mark operator was used
   --> src/uucore/src/lib/mods/locale.rs:138:20
    |
138 |       let ftl_file = fs::read_to_string(&locale_path).map_err(|e| LocalizationError::Io {
    |  ____________________^
139 | |         source: e,
140 | |         path: locale_path.clone(),
141 | |     })?;
    | |_______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:138:65
    |
138 |       let ftl_file = fs::read_to_string(&locale_path).map_err(|e| LocalizationError::Io {
    |  _________________________________________________________________^
139 | |         source: e,
140 | |         path: locale_path.clone(),
141 | |     })?;
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
138 |     let ftl_file = fs::read_to_string(&locale_path).map_err(|e| return LocalizationError::Io {
    |                                                                 ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/locale.rs:138:62
    |
138 |     let ftl_file = fs::read_to_string(&locale_path).map_err(|e| LocalizationError::Io {
    |                                                              ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: question mark operator was used
   --> src/uucore/src/lib/mods/locale.rs:143:20
    |
143 |       let resource = FluentResource::try_new(ftl_file).map_err(|_| {
    |  ____________________^
144 | |         LocalizationError::Parse(format!(
145 | |             "Failed to parse localization resource for {}: {}",
146 | |             locale,
147 | |             locale_path.display()
148 | |         ))
149 | |     })?;
    | |_______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: `map_err(|_|...` wildcard pattern discards the original error
   --> src/uucore/src/lib/mods/locale.rs:143:62
    |
143 |     let resource = FluentResource::try_new(ftl_file).map_err(|_| {
    |                                                              ^^^
    |
    = help: consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_err_ignore

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:144:9
    |
144 | /         LocalizationError::Parse(format!(
145 | |             "Failed to parse localization resource for {}: {}",
146 | |             locale,
147 | |             locale_path.display()
148 | |         ))
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
144 |         return LocalizationError::Parse(format!(
    |         ++++++

warning: question mark operator was used
   --> src/uucore/src/lib/mods/locale.rs:153:5
    |
153 | /     bundle.add_resource(resource).map_err(|errs| {
154 | |         LocalizationError::Bundle(format!(
155 | |             "Failed to add resource to bundle for {}: {:?}",
156 | |             locale, errs
157 | |         ))
158 | |     })?;
    | |_______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:154:9
    |
154 | /         LocalizationError::Bundle(format!(
155 | |             "Failed to add resource to bundle for {}: {:?}",
156 | |             locale, errs
157 | |         ))
    | |__________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
154 |         return LocalizationError::Bundle(format!(
    |         ++++++

warning: variables can be used directly in the `format!` string
   --> src/uucore/src/lib/mods/locale.rs:154:35
    |
154 |           LocalizationError::Bundle(format!(
    |  ___________________________________^
155 | |             "Failed to add resource to bundle for {}: {:?}",
156 | |             locale, errs
157 | |         ))
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
    = note: `-W clippy::uninlined-format-args` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::uninlined_format_args)]`

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:164:5
    |
164 | /     LOCALIZER.with(|lock| {
165 | |         lock.get()
166 | |             .map(|loc| loc.format(id, args.as_ref()))
167 | |             .unwrap_or_else(|| id.to_string()) // Return the key ID if localizer not initialized
168 | |     })
    | |______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
164 |     return LOCALIZER.with(|lock| {
    |     ++++++

warning: this argument is passed by value, but not consumed in the function body
   --> src/uucore/src/lib/mods/locale.rs:163:41
    |
163 | fn get_message_internal(id: &str, args: Option<FluentArgs>) -> String {
    |                                         ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_pass_by_value
    = note: `-W clippy::needless-pass-by-value` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_pass_by_value)]`
help: consider taking a reference instead
    |
163 | fn get_message_internal(id: &str, args: Option<&FluentArgs>) -> String {
    |                                                +

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:165:9
    |
165 | /         lock.get()
166 | |             .map(|loc| loc.format(id, args.as_ref()))
167 | |             .unwrap_or_else(|| id.to_string()) // Return the key ID if localizer not initialized
    | |______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
165 |         return lock.get()
    |         ++++++

warning: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value
   --> src/uucore/src/lib/mods/locale.rs:165:9
    |
165 | /         lock.get()
166 | |             .map(|loc| loc.format(id, args.as_ref()))
167 | |             .unwrap_or_else(|| id.to_string()) // Return the key ID if localizer not initialized
    | |______________________________________________^ help: try: `lock.get().map_or_else(|| id.to_string(), |loc| loc.format(id, args.as_ref()))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
    = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:166:24
    |
166 |             .map(|loc| loc.format(id, args.as_ref()))
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
166 |             .map(|loc| return loc.format(id, args.as_ref()))
    |                        ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:167:32
    |
167 |             .unwrap_or_else(|| id.to_string()) // Return the key ID if localizer not initialized
    |                                ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
167 |             .unwrap_or_else(|| return id.to_string()) // Return the key ID if localizer not initialized
    |                                ++++++

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/mods/locale.rs:167:32
    |
167 |             .unwrap_or_else(|| id.to_string()) // Return the key ID if localizer not initialized
    |                                ^^^^^^^^^^^^^^ help: try: `id.to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/mods/locale.rs:195:1
    |
195 | pub fn get_message(id: &str) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_message(id: &str) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/mods/locale.rs:195:1
    |
195 | / pub fn get_message(id: &str) -> String {
196 | |     get_message_internal(id, None)
197 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:196:5
    |
196 |     get_message_internal(id, None)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
196 |     return get_message_internal(id, None)
    |     ++++++

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/mods/locale.rs:230:1
    |
230 | pub fn get_message_with_args(id: &str, ftl_args: HashMap<String, String>) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_message_with_args(id: &str, ftl_args: HashMap<String, String>) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/mods/locale.rs:230:1
    |
230 | / pub fn get_message_with_args(id: &str, ftl_args: HashMap<String, String>) -> String {
231 | |     let mut args = FluentArgs::new();
232 | |
233 | |     for (key, value) in ftl_args {
...   |
245 | |     get_message_internal(id, Some(args))
246 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: parameter of type `HashMap` should be generalized over different hashers
   --> src/uucore/src/lib/mods/locale.rs:230:50
    |
230 | pub fn get_message_with_args(id: &str, ftl_args: HashMap<String, String>) -> String {
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_hasher
    = note: `-W clippy::implicit-hasher` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::implicit_hasher)]`
help: add a type parameter for `BuildHasher`
    |
230 | pub fn get_message_with_args<S: ::std::hash::BuildHasher>(id: &str, ftl_args: HashMap<String, String, S>) -> String {
    |                             +++++++++++++++++++++++++++++                                           +++

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:245:5
    |
245 |     get_message_internal(id, Some(args))
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
245 |     return get_message_internal(id, Some(args))
    |     ++++++

warning: iteration over unordered hash-based type
   --> src/uucore/src/lib/mods/locale.rs:233:5
    |
233 | /     for (key, value) in ftl_args {
234 | |         // Try to parse as number first for proper pluralization support
235 | |         if let Ok(num_val) = value.parse::<i64>() {
236 | |             args.set(key, num_val);
...   |
243 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_over_hash_type
    = note: `-W clippy::iter-over-hash-type` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::iter_over_hash_type)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/mods/locale.rs:249:1
    |
249 | fn detect_system_locale() -> Result<LanguageIdentifier, LocalizationError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:257:5
    |
257 | /     LanguageIdentifier::from_str(&locale_str)
258 | |         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
    | |_________________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
257 |     return LanguageIdentifier::from_str(&locale_str)
    |     ++++++

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/mods/locale.rs:250:22
    |
250 |       let locale_str = std::env::var("LANG")
    |  ______________________^
251 | |         .unwrap_or_else(|_| DEFAULT_LOCALE.to_string())
252 | |         .split('.')
253 | |         .next()
254 | |         .unwrap_or(DEFAULT_LOCALE)
255 | |         .to_string();
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
help: try
    |
250 ~     let locale_str = std::env::var("LANG")
251 +         .unwrap_or_else(|_| DEFAULT_LOCALE.to_string())
252 +         .split('.')
253 +         .next()
254 ~         .unwrap_or(DEFAULT_LOCALE).to_owned();
    |

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/mods/locale.rs:250:22
    |
250 |     let locale_str = std::env::var("LANG")
    |                      ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:251:29
    |
251 |         .unwrap_or_else(|_| DEFAULT_LOCALE.to_string())
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
251 |         .unwrap_or_else(|_| return DEFAULT_LOCALE.to_string())
    |                             ++++++

warning: `to_string()` called on a `&str`
   --> src/uucore/src/lib/mods/locale.rs:251:29
    |
251 |         .unwrap_or_else(|_| DEFAULT_LOCALE.to_string())
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `DEFAULT_LOCALE.to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: `map_err(|_|...` wildcard pattern discards the original error
   --> src/uucore/src/lib/mods/locale.rs:258:18
    |
258 |         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
    |                  ^^^
    |
    = help: consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_err_ignore

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:258:22
    |
258 |         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
258 |         .map_err(|_| return LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
    |                      ++++++

warning: variables can be used directly in the `format!` string
   --> src/uucore/src/lib/mods/locale.rs:258:47
    |
258 |         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#uninlined_format_args
help: change this to
    |
258 -         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
258 +         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {locale_str}")))
    |

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/mods/locale.rs:297:1
    |
297 | pub fn setup_localization(p: &str) -> Result<(), LocalizationError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uucore/src/lib/mods/locale.rs:299:9
    |
299 |         LanguageIdentifier::from_str(DEFAULT_LOCALE).expect("Default locale should always be valid")
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/mods/locale.rs:297:1
    |
297 | / pub fn setup_localization(p: &str) -> Result<(), LocalizationError> {
298 | |     let locale = detect_system_locale().unwrap_or_else(|_| {
299 | |         LanguageIdentifier::from_str(DEFAULT_LOCALE).expect("Default locale should always be valid")
300 | |     });
...   |
303 | |     init_localization(&locale, &locales_dir)
304 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:303:5
    |
303 |     init_localization(&locale, &locales_dir)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
303 |     return init_localization(&locale, &locales_dir)
    |     ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/locale.rs:297:27
    |
297 | pub fn setup_localization(p: &str) -> Result<(), LocalizationError> {
    |                           ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:299:9
    |
299 |         LanguageIdentifier::from_str(DEFAULT_LOCALE).expect("Default locale should always be valid")
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
299 |         return LanguageIdentifier::from_str(DEFAULT_LOCALE).expect("Default locale should always be valid")
    |         ++++++

warning: used `expect()` on a `Result` value
   --> src/uucore/src/lib/mods/locale.rs:299:9
    |
299 |         LanguageIdentifier::from_str(DEFAULT_LOCALE).expect("Default locale should always be valid")
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: question mark operator was used
   --> src/uucore/src/lib/mods/locale.rs:302:23
    |
302 |     let locales_dir = get_locales_dir(p)?;
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/mods/locale.rs:307:1
    |
307 | fn get_locales_dir(p: &str) -> Result<PathBuf, LocalizationError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uucore/src/lib/mods/locale.rs:328:9
    |
328 | /         Err(LocalizationError::LocalesDirNotFound(format!(
329 | |             "Development locales directory not found at {} or {}",
330 | |             dev_path.display(),
331 | |             fallback_dev_path.display()
332 | |         )))
    | |___________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
328 |         return Err(LocalizationError::LocalesDirNotFound(format!(
    |         ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/mods/locale.rs:307:20
    |
307 | fn get_locales_dir(p: &str) -> Result<PathBuf, LocalizationError> {
    |                    ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this function could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/os.rs:11:1
   |
11 | pub fn is_wsl_1() -> bool {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_wsl_1() -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/os.rs:11:1
   |
11 | / pub fn is_wsl_1() -> bool {
12 | |     #[cfg(target_os = "linux")]
13 | |     {
14 | |         if is_wsl_2() {
...  |
24 | |     false
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/os.rs:24:5
   |
24 |     false
   |     ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
24 |     return false
   |     ++++++

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/os.rs:17:24
   |
17 |         if let Ok(b) = std::fs::read("/proc/sys/kernel/osrelease") {
   |                        ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/os.rs:17:19
   |
17 |         if let Ok(b) = std::fs::read("/proc/sys/kernel/osrelease") {
   |                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/mods/os.rs:18:28
   |
18 |             if let Ok(s) = std::str::from_utf8(&b) {
   |                            ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/os.rs:18:28
   |
18 |             if let Ok(s) = std::str::from_utf8(&b) {
   |                            ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/os.rs:18:23
   |
18 |             if let Ok(s) = std::str::from_utf8(&b) {
   |                       ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/os.rs:19:21
   |
19 |                 let a = s.to_ascii_lowercase();
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this function could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/os.rs:28:1
   |
28 | pub fn is_wsl_2() -> bool {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn is_wsl_2() -> bool`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/os.rs:28:1
   |
28 | / pub fn is_wsl_2() -> bool {
29 | |     #[cfg(target_os = "linux")]
30 | |     {
31 | |         if let Ok(b) = std::fs::read("/proc/sys/kernel/osrelease") {
...  |
38 | |     false
39 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uucore/src/lib/mods/os.rs:38:5
   |
38 |     false
   |     ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
38 |     return false
   |     ++++++

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/os.rs:31:24
   |
31 |         if let Ok(b) = std::fs::read("/proc/sys/kernel/osrelease") {
   |                        ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/os.rs:31:19
   |
31 |         if let Ok(b) = std::fs::read("/proc/sys/kernel/osrelease") {
   |                   ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: used import from `std` instead of `core`
  --> src/uucore/src/lib/mods/os.rs:32:28
   |
32 |             if let Ok(s) = std::str::from_utf8(&b) {
   |                            ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: consider bringing this path into scope with the `use` keyword
  --> src/uucore/src/lib/mods/os.rs:32:28
   |
32 |             if let Ok(s) = std::str::from_utf8(&b) {
   |                            ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/os.rs:32:23
   |
32 |             if let Ok(s) = std::str::from_utf8(&b) {
   |                       ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/os.rs:33:21
   |
33 |                 let a = s.to_ascii_lowercase();
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uucore/src/lib/mods/panic.rs:25:5
   |
25 |     false
   |     ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
25 |     return false
   |     ++++++

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/panic.rs:38:1
   |
38 | / pub fn mute_sigpipe_panic() {
39 | |     let hook = panic::take_hook();
40 | |     panic::set_hook(Box::new(move |info| {
41 | |         if !is_broken_pipe(info) {
...  |
44 | |     }));
45 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name ends with its containing module's name
  --> src/uucore/src/lib/mods/panic.rs:38:8
   |
38 | pub fn mute_sigpipe_panic() {
   |        ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: this function could have a `#[must_use]` attribute
  --> src/uucore/src/lib/mods/posix.rs:33:1
   |
33 | pub fn posix_version() -> Option<usize> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn posix_version() -> Option<usize>`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
  --> src/uucore/src/lib/mods/posix.rs:33:1
   |
33 | / pub fn posix_version() -> Option<usize> {
34 | |     env::var("_POSIX2_VERSION")
35 | |         .ok()
36 | |         .and_then(|v| v.parse::<usize>().ok())
37 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name starts with its containing module's name
  --> src/uucore/src/lib/mods/posix.rs:33:8
   |
33 | pub fn posix_version() -> Option<usize> {
   |        ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
  --> src/uucore/src/lib/mods/posix.rs:34:5
   |
34 | /     env::var("_POSIX2_VERSION")
35 | |         .ok()
36 | |         .and_then(|v| v.parse::<usize>().ok())
   | |______________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
34 |     return env::var("_POSIX2_VERSION")
   |     ++++++

warning: use the question mark operator instead of an `and_then` call
  --> src/uucore/src/lib/mods/posix.rs:34:5
   |
34 | /     env::var("_POSIX2_VERSION")
35 | |         .ok()
36 | |         .and_then(|v| v.parse::<usize>().ok())
   | |______________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#return_and_then
help: try
   |
34 ~     let v = env::var("_POSIX2_VERSION")
35 +         .ok()?;
36 +     v.parse::<usize>().ok()
   |

warning: missing `return` statement
  --> src/uucore/src/lib/mods/posix.rs:36:23
   |
36 |         .and_then(|v| v.parse::<usize>().ok())
   |                       ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
36 |         .and_then(|v| return v.parse::<usize>().ok())
   |                       ++++++

warning: this ident consists of a single char
  --> src/uucore/src/lib/mods/posix.rs:36:20
   |
36 |         .and_then(|v| v.parse::<usize>().ok())
   |                    ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: used import from `std` instead of `alloc`
   --> src/uucore/src/lib/lib.rs:120:5
    |
120 | use std::borrow::Cow;
    |     ^^^ help: consider importing the item from `alloc`: `alloc`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: importing trait that is only used anonymously
   --> src/uucore/src/lib/lib.rs:122:15
    |
122 | use std::io::{BufRead, BufReader};
    |               ^^^^^^^ help: use: `BufRead as _`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/lib.rs:123:5
    |
123 | use std::iter;
    |     ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: importing trait that is only used anonymously
   --> src/uucore/src/lib/lib.rs:125:26
    |
125 | use std::os::unix::ffi::{OsStrExt, OsStringExt};
    |                          ^^^^^^^^ help: use: `OsStrExt as _`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
   --> src/uucore/src/lib/lib.rs:125:36
    |
125 | use std::os::unix::ffi::{OsStrExt, OsStringExt};
    |                                    ^^^^^^^^^^^ help: use: `OsStringExt as _`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: used import from `std` instead of `alloc`
   --> src/uucore/src/lib/lib.rs:126:5
    |
126 | use std::str;
    |     ^^^ help: consider importing the item from `alloc`: `alloc`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `core`
   --> src/uucore/src/lib/lib.rs:127:5
    |
127 | use std::sync::{LazyLock, atomic::Ordering};
    |     ^^^ help: consider importing the item from `core`: `core`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: first doc comment paragraph is too long
   --> src/uucore/src/lib/lib.rs:129:1
    |
129 | / /// Disables the custom signal handlers installed by Rust for stack-overflow handling. With those custom signal handlers processes ignore...
130 | | /// See <https://github.com/rust-lang/rust/blob/8ac1525e091d3db28e67adcbbd6db1e1deaa37fb/src/libstd/sys/unix/stack_overflow.rs#L71-L92> f...
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph
    = note: `-W clippy::too-long-first-doc-paragraph` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::too_long_first_doc_paragraph)]`
help: add an empty line
    |
130 | /// Disables the custom signal handlers installed by Rust for stack-overflow handling. With those custom signal handlers processes ignore the first SIGBUS and SIGSEGV signal they receive.
131 + ///
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/lib.rs:132:1
    |
132 | pub fn disable_rust_signal_handlers() -> Result<(), Errno> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:132:1
    |
132 | / pub fn disable_rust_signal_handlers() -> Result<(), Errno> {
133 | |     unsafe {
134 | |         sigaction(
135 | |             SIGSEGV,
...   |
145 | |     Ok(())
146 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:145:5
    |
145 |     Ok(())
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
145 |     return Ok(())
    |     ++++++

warning: question mark operator was used
   --> src/uucore/src/lib/lib.rs:133:5
    |
133 | /     unsafe {
134 | |         sigaction(
135 | |             SIGSEGV,
136 | |             &SigAction::new(SigDfl, SaFlags::empty(), SigSet::all()),
137 | |         )
138 | |     }?;
    | |______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: unsafe block missing a safety comment
   --> src/uucore/src/lib/lib.rs:133:5
    |
133 |     unsafe {
    |     ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks
    = note: `-W clippy::undocumented-unsafe-blocks` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::undocumented_unsafe_blocks)]`

warning: question mark operator was used
   --> src/uucore/src/lib/lib.rs:139:5
    |
139 | /     unsafe {
140 | |         sigaction(
141 | |             SIGBUS,
142 | |             &SigAction::new(SigDfl, SaFlags::empty(), SigSet::all()),
143 | |         )
144 | |     }?;
    | |______^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: unsafe block missing a safety comment
   --> src/uucore/src/lib/lib.rs:139:5
    |
139 |     unsafe {
    |     ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:197:1
    |
197 | pub fn format_usage(s: &str) -> String {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn format_usage(s: &str) -> String`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:197:1
    |
197 | / pub fn format_usage(s: &str) -> String {
198 | |     let s = s.replace('\n', &format!("\n{}", " ".repeat(7)));
199 | |     s.replace("{}", crate::execution_phrase())
200 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:199:5
    |
199 |     s.replace("{}", crate::execution_phrase())
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
199 |     return s.replace("{}", crate::execution_phrase())
    |     ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/lib.rs:197:21
    |
197 | pub fn format_usage(s: &str) -> String {
    |                     ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `s` is shadowed
   --> src/uucore/src/lib/lib.rs:198:9
    |
198 |     let s = s.replace('\n', &format!("\n{}", " ".repeat(7)));
    |         ^
    |
note: previous binding is here
   --> src/uucore/src/lib/lib.rs:197:21
    |
197 | pub fn format_usage(s: &str) -> String {
    |                     ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: this ident consists of a single char
   --> src/uucore/src/lib/lib.rs:198:9
    |
198 |     let s = s.replace('\n', &format!("\n{}", " ".repeat(7)));
    |         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:204:1
    |
204 | / pub fn get_utility_is_second_arg() -> bool {
205 | |     crate::macros::UTILITY_IS_SECOND_ARG.load(Ordering::SeqCst)
206 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:205:5
    |
205 |     crate::macros::UTILITY_IS_SECOND_ARG.load(Ordering::SeqCst)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
205 |     return crate::macros::UTILITY_IS_SECOND_ARG.load(Ordering::SeqCst)
    |     ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/lib.rs:205:5
    |
205 |     crate::macros::UTILITY_IS_SECOND_ARG.load(Ordering::SeqCst)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:210:1
    |
210 | / pub fn set_utility_is_second_arg() {
211 | |     crate::macros::UTILITY_IS_SECOND_ARG.store(true, Ordering::SeqCst);
212 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/lib.rs:211:5
    |
211 |     crate::macros::UTILITY_IS_SECOND_ARG.store(true, Ordering::SeqCst);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing documentation for a static
   --> src/uucore/src/lib/lib.rs:216:1
    |
216 | static ARGV: LazyLock<Vec<OsString>> = LazyLock::new(|| wild::args_os().collect());
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:216:57
    |
216 | static ARGV: LazyLock<Vec<OsString>> = LazyLock::new(|| wild::args_os().collect());
    |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
216 | static ARGV: LazyLock<Vec<OsString>> = LazyLock::new(|| return wild::args_os().collect());
    |                                                         ++++++

warning: missing documentation for a static
   --> src/uucore/src/lib/lib.rs:218:1
    |
218 | / static UTIL_NAME: LazyLock<String> = LazyLock::new(|| {
219 | |     let base_index = usize::from(get_utility_is_second_arg());
220 | |     let is_man = usize::from(ARGV[base_index].eq("manpage"));
221 | |     let argv_index = base_index + is_man;
222 | |
223 | |     ARGV[argv_index].to_string_lossy().into_owned()
224 | | });
    | |___^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:223:5
    |
223 |     ARGV[argv_index].to_string_lossy().into_owned()
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
223 |     return ARGV[argv_index].to_string_lossy().into_owned()
    |     ++++++

warning: indexing may panic
   --> src/uucore/src/lib/lib.rs:220:30
    |
220 |     let is_man = usize::from(ARGV[base_index].eq("manpage"));
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: indexing may panic
   --> src/uucore/src/lib/lib.rs:223:5
    |
223 |     ARGV[argv_index].to_string_lossy().into_owned()
    |     ^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:227:1
    |
227 | pub fn util_name() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn util_name() -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:227:1
    |
227 | / pub fn util_name() -> &'static str {
228 | |     &UTIL_NAME
229 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:228:5
    |
228 |     &UTIL_NAME
    |     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
228 |     return &UTIL_NAME
    |     ++++++

warning: missing documentation for a static
   --> src/uucore/src/lib/lib.rs:231:1
    |
231 | / static EXECUTION_PHRASE: LazyLock<String> = LazyLock::new(|| {
232 | |     if get_utility_is_second_arg() {
233 | |         ARGV.iter()
234 | |             .take(2)
...   |
241 | | });
    | |___^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:233:9
    |
233 | /         ARGV.iter()
234 | |             .take(2)
235 | |             .map(|os_str| os_str.to_string_lossy().into_owned())
236 | |             .collect::<Vec<_>>()
237 | |             .join(" ")
    | |______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
233 |         return ARGV.iter()
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:239:9
    |
239 |         ARGV[0].to_string_lossy().into_owned()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
239 |         return ARGV[0].to_string_lossy().into_owned()
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:235:27
    |
235 |             .map(|os_str| os_str.to_string_lossy().into_owned())
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
235 |             .map(|os_str| return os_str.to_string_lossy().into_owned())
    |                           ++++++

warning: indexing may panic
   --> src/uucore/src/lib/lib.rs:239:9
    |
239 |         ARGV[0].to_string_lossy().into_owned()
    |         ^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:244:1
    |
244 | pub fn execution_phrase() -> &'static str {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn execution_phrase() -> &'static str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:244:1
    |
244 | / pub fn execution_phrase() -> &'static str {
245 | |     &EXECUTION_PHRASE
246 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:245:5
    |
245 |     &EXECUTION_PHRASE
    |     ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
245 |     return &EXECUTION_PHRASE
    |     ++++++

warning: first doc comment paragraph is too long
   --> src/uucore/src/lib/lib.rs:248:1
    |
248 | / /// Args contains arguments passed to the utility.
249 | | /// It is a trait that extends `Iterator<Item = OsString>`.
250 | | /// It provides utility functions to collect the arguments into a `Vec<String>`.
251 | | /// The collected `Vec<String>` can be lossy or ignore invalid encoding.
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph
help: add an empty line
    |
249 | /// Args contains arguments passed to the utility.
250 + ///
    |

warning: missing `#[inline]` for a default trait method
   --> src/uucore/src/lib/lib.rs:254:5
    |
254 | /     fn collect_lossy(self) -> Vec<String> {
255 | |         self.map(|s| s.to_string_lossy().into_owned()).collect()
256 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `#[inline]` for a default trait method
   --> src/uucore/src/lib/lib.rs:259:5
    |
259 | /     fn collect_ignore(self) -> Vec<String> {
260 | |         self.filter_map(|s| s.into_string().ok()).collect()
261 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uucore/src/lib/lib.rs:259:8
    |
259 |     fn collect_ignore(self) -> Vec<String> {
    |        ^^^^^^^^^^^^^^
    |
note: should be placed before `collect_lossy`
   --> src/uucore/src/lib/lib.rs:254:8
    |
254 |     fn collect_lossy(self) -> Vec<String> {
    |        ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:255:9
    |
255 |         self.map(|s| s.to_string_lossy().into_owned()).collect()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
255 |         return self.map(|s| s.to_string_lossy().into_owned()).collect()
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:255:22
    |
255 |         self.map(|s| s.to_string_lossy().into_owned()).collect()
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
255 |         self.map(|s| return s.to_string_lossy().into_owned()).collect()
    |                      ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/lib.rs:255:19
    |
255 |         self.map(|s| s.to_string_lossy().into_owned()).collect()
    |                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:260:9
    |
260 |         self.filter_map(|s| s.into_string().ok()).collect()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
260 |         return self.filter_map(|s| s.into_string().ok()).collect()
    |         ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:260:29
    |
260 |         self.filter_map(|s| s.into_string().ok()).collect()
    |                             ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
260 |         self.filter_map(|s| return s.into_string().ok()).collect()
    |                             ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/lib.rs:260:26
    |
260 |         self.filter_map(|s| s.into_string().ok()).collect()
    |                          ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing trait method provided by default: `collect_lossy`
   --> src/uucore/src/lib/lib.rs:264:1
    |
264 | impl<T: Iterator<Item = OsString> + Sized> Args for T {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/lib.rs:254:5
    |
254 |     fn collect_lossy(self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `collect_ignore`
   --> src/uucore/src/lib/lib.rs:264:1
    |
264 | impl<T: Iterator<Item = OsString> + Sized> Args for T {}
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: implement the method
   --> src/uucore/src/lib/lib.rs:259:5
    |
259 |     fn collect_ignore(self) -> Vec<String> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: item in documentation is missing backticks
   --> src/uucore/src/lib/lib.rs:267:5
    |
267 | /// args_os() can be expensive to call
    |     ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
267 - /// args_os() can be expensive to call
267 + /// `args_os()` can be expensive to call
    |

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:268:1
    |
268 | / pub fn args_os() -> impl Iterator<Item = OsString> {
269 | |     ARGV.iter().cloned()
270 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:269:5
    |
269 |     ARGV.iter().cloned()
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
269 |     return ARGV.iter().cloned()
    |     ++++++

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:273:1
    |
273 | pub fn read_yes() -> bool {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn read_yes() -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:273:1
    |
273 | / pub fn read_yes() -> bool {
274 | |     let mut s = String::new();
275 | |     match std::io::stdin().read_line(&mut s) {
276 | |         Ok(_) => matches!(s.chars().next(), Some('y' | 'Y')),
...   |
279 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:276:18
    |
276 |         Ok(_) => matches!(s.chars().next(), Some('y' | 'Y')),
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
276 |         Ok(_) => return matches!(s.chars().next(), Some('y' | 'Y')),
    |                  ++++++

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:277:14
    |
277 |         _ => false,
    |              ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
277 |         _ => return false,
    |              ++++++

warning: this ident consists of a single char
   --> src/uucore/src/lib/lib.rs:274:13
    |
274 |     let mut s = String::new();
    |             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/lib.rs:275:11
    |
275 |     match std::io::stdin().read_line(&mut s) {
    |           ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/lib.rs:285:1
    |
285 | pub fn os_str_as_bytes(os_string: &OsStr) -> mods::error::UResult<&[u8]> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:285:1
    |
285 | / pub fn os_str_as_bytes(os_string: &OsStr) -> mods::error::UResult<&[u8]> {
286 | |     #[cfg(unix)]
287 | |     let bytes = os_string.as_bytes();
...   |
297 | |     Ok(bytes)
298 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:297:5
    |
297 |     Ok(bytes)
    |     ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
297 |     return Ok(bytes)
    |     ++++++

warning: this function's return value is unnecessarily wrapped by `Result`
   --> src/uucore/src/lib/lib.rs:285:1
    |
285 | / pub fn os_str_as_bytes(os_string: &OsStr) -> mods::error::UResult<&[u8]> {
286 | |     #[cfg(unix)]
287 | |     let bytes = os_string.as_bytes();
...   |
297 | |     Ok(bytes)
298 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
    = note: `-W clippy::unnecessary-wraps` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_wraps)]`
help: remove `Result` from the return type...
    |
285 - pub fn os_str_as_bytes(os_string: &OsStr) -> mods::error::UResult<&[u8]> {
285 + pub fn os_str_as_bytes(os_string: &OsStr) -> &[u8] {
    |
help: ...and then change returning expressions
    |
297 -     Ok(bytes)
297 +     bytes
    |

warning: this function could have a `#[must_use]` attribute
   --> src/uucore/src/lib/lib.rs:304:1
    |
304 | pub fn os_str_as_bytes_lossy(os_string: &OsStr) -> Cow<[u8]> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn os_str_as_bytes_lossy(os_string: &OsStr) -> Cow<[u8]>`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:304:1
    |
304 | / pub fn os_str_as_bytes_lossy(os_string: &OsStr) -> Cow<[u8]> {
305 | |     #[cfg(unix)]
306 | |     let bytes = Cow::from(os_string.as_bytes());
...   |
314 | |     bytes
315 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:314:5
    |
314 |     bytes
    |     ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
314 |     return bytes
    |     ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/lib.rs:322:1
    |
322 | pub fn os_str_from_bytes(bytes: &[u8]) -> mods::error::UResult<Cow<'_, OsStr>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:322:1
    |
322 | / pub fn os_str_from_bytes(bytes: &[u8]) -> mods::error::UResult<Cow<'_, OsStr>> {
323 | |     #[cfg(unix)]
324 | |     let os_str = Cow::Borrowed(OsStr::from_bytes(bytes));
325 | |     #[cfg(not(unix))]
...   |
330 | |     Ok(os_str)
331 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:330:5
    |
330 |     Ok(os_str)
    |     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
330 |     return Ok(os_str)
    |     ++++++

warning: this function's return value is unnecessarily wrapped by `Result`
   --> src/uucore/src/lib/lib.rs:322:1
    |
322 | / pub fn os_str_from_bytes(bytes: &[u8]) -> mods::error::UResult<Cow<'_, OsStr>> {
323 | |     #[cfg(unix)]
324 | |     let os_str = Cow::Borrowed(OsStr::from_bytes(bytes));
325 | |     #[cfg(not(unix))]
...   |
330 | |     Ok(os_str)
331 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
322 - pub fn os_str_from_bytes(bytes: &[u8]) -> mods::error::UResult<Cow<'_, OsStr>> {
322 + pub fn os_str_from_bytes(bytes: &[u8]) -> std::borrow::Cow<'_, std::ffi::OsStr> {
    |
help: ...and then change returning expressions
    |
330 -     Ok(os_str)
330 +     os_str
    |

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uucore/src/lib/lib.rs:337:1
    |
337 | pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:337:1
    |
337 | / pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
338 | |     #[cfg(unix)]
339 | |     let s = OsString::from_vec(vec);
340 | |     #[cfg(not(unix))]
...   |
345 | |     Ok(s)
346 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:345:5
    |
345 |     Ok(s)
    |     ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
345 |     return Ok(s)
    |     ++++++

warning: this function's return value is unnecessarily wrapped by `Result`
   --> src/uucore/src/lib/lib.rs:337:1
    |
337 | / pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
338 | |     #[cfg(unix)]
339 | |     let s = OsString::from_vec(vec);
340 | |     #[cfg(not(unix))]
...   |
345 | |     Ok(s)
346 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps
help: remove `Result` from the return type...
    |
337 - pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
337 + pub fn os_string_from_vec(vec: Vec<u8>) -> std::ffi::OsString {
    |
help: ...and then change returning expressions
    |
345 -     Ok(s)
345 +     s
    |

warning: this ident consists of a single char
   --> src/uucore/src/lib/lib.rs:339:9
    |
339 |     let s = OsString::from_vec(vec);
    |         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:350:1
    |
350 | / pub fn read_byte_lines<R: std::io::Read>(
351 | |     mut buf_reader: BufReader<R>,
352 | | ) -> impl Iterator<Item = Vec<u8>> {
353 | |     iter::from_fn(move || {
...   |
370 | |     })
371 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:353:5
    |
353 | /     iter::from_fn(move || {
354 | |         let mut buf = Vec::with_capacity(256);
355 | |         let size = buf_reader.read_until(b'\n', &mut buf).ok()?;
...   |
369 | |         Some(buf)
370 | |     })
    | |______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
353 |     return iter::from_fn(move || {
    |     ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/lib.rs:350:27
    |
350 | pub fn read_byte_lines<R: std::io::Read>(
    |                           ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:369:9
    |
369 |         Some(buf)
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
369 |         return Some(buf)
    |         ++++++

warning: question mark operator was used
   --> src/uucore/src/lib/lib.rs:355:20
    |
355 |         let size = buf_reader.read_until(b'\n', &mut buf).ok()?;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uucore/src/lib/lib.rs:376:1
    |
376 | / pub fn read_os_string_lines<R: std::io::Read>(
377 | |     buf_reader: BufReader<R>,
378 | | ) -> impl Iterator<Item = OsString> {
    | |___________________________________^
    |
note: first possible panic found here
   --> src/uucore/src/lib/lib.rs:379:49
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `#[inline]` for a function
   --> src/uucore/src/lib/lib.rs:376:1
    |
376 | / pub fn read_os_string_lines<R: std::io::Read>(
377 | |     buf_reader: BufReader<R>,
378 | | ) -> impl Iterator<Item = OsString> {
379 | |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
380 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:379:5
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
379 |     return read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |       +++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uucore/src/lib/lib.rs:376:32
    |
376 | pub fn read_os_string_lines<R: std::io::Read>(
    |                                ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: missing `return` statement
   --> src/uucore/src/lib/lib.rs:379:49
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| return os_string_from_vec(byte_line).expect("UTF-8 error"))
    |                                                 ++++++

warning: used `expect()` on a `Result` value
   --> src/uucore/src/lib/lib.rs:379:49
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: method's name is the same as an existing method in a trait
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:105:5
    |
105 | /     pub fn zero() -> Self {
106 | |         Self::BigDecimal(0.into())
107 | |     }
    | |_____^
    |
note: existing `zero` defined here
   --> src/uucore/src/lib/features/extendedbigdecimal.rs:129:5
    |
129 | /     fn zero() -> Self {
130 | |         Self::BigDecimal(BigDecimal::zero())
131 | |     }
    | |_____^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#same_name_method
    = note: `-W clippy::same-name-method` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::same_name_method)]`

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/num_parser.rs:266:1
    |
266 | / fn parse_digits(base: Base, str: &str, fractional: bool) -> (Option<BigUint>, u64, &str) {
267 | |     // Parse the integral part of the number
268 | |     let (digits, rest) = base.parse_digits(str);
...   |
278 | |     (digits, 0, rest)
279 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/features/parser/num_parser.rs:536:33
    |
536 |     let (digits, scale, rest) = parse_digits(base, rest, parse_frac_exp);
    |                                 ^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn
    = note: `-W clippy::single-call-fn` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::single_call_fn)]`

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/num_parser.rs:281:1
    |
281 | / fn parse_exponent(base: Base, str: &str) -> (Option<BigInt>, &str) {
282 | |     let exp_chars = match base {
283 | |         Base::Decimal => ['e', 'E'],
284 | |         Base::Hexadecimal => ['p', 'P'],
...   |
307 | |     (None, str)
308 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/features/parser/num_parser.rs:540:9
    |
540 |         parse_exponent(base, rest)
    |         ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/num_parser.rs:325:1
    |
325 | / fn parse_special_value<'a>(
326 | |     input: &'a str,
327 | |     negative: bool,
328 | |     allowed_suffixes: &[(char, u32)],
...   |
357 | |     Err(ExtendedParserError::NotNumeric)
358 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/features/parser/num_parser.rs:560:13
    |
560 |             parse_special_value(unsigned, negative, allowed_suffixes)
    |             ^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/num_parser.rs:405:1
    |
405 | / fn construct_extended_big_decimal<'a>(
406 | |     digits: BigUint,
407 | |     negative: bool,
408 | |     base: Base,
...   |
469 | |     Ok(ExtendedBigDecimal::BigDecimal(bd))
470 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/features/parser/num_parser.rs:569:9
    |
569 |         construct_extended_big_decimal(digits, negative, base, scale, exponent.unwrap_or_default());
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uucore/src/lib/features/parser/parse_glob.rs:13:1
   |
13 | / fn fix_negation(glob: &str) -> String {
14 | |     let mut chars = glob.chars().collect::<Vec<_>>();
15 | |
16 | |     let mut i = 0;
...  |
37 | |     chars.into_iter().collect::<String>()
38 | | }
   | |_^
   |
note: used here
  --> src/uucore/src/lib/features/parser/parse_glob.rs:56:19
   |
56 |     Pattern::new(&fix_negation(glob))
   |                   ^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/parse_size.rs:309:5
    |
309 | /     fn determine_number_system(size: &str) -> NumberSystem {
310 | |         if size.len() <= 1 {
311 | |             return NumberSystem::Decimal;
...   |
328 | |         NumberSystem::Decimal
329 | |     }
    | |_____^
    |
note: used here
   --> src/uucore/src/lib/features/parser/parse_size.rs:155:29
    |
155 |         let number_system = Self::determine_number_system(size);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/parse_size.rs:45:1
    |
45  | / fn total_physical_memory() -> Result<u128, SystemError> {
...   |
64  | |     Err(SystemError::NotFound)
65  | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/features/parser/parse_size.rs:200:26
    |
200 |             return match total_physical_memory() {
    |                          ^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/features/parser/parse_size.rs:360:1
    |
360 | / pub fn parse_size_u64(size: &str) -> Result<u64, ParseSizeError> {
361 | |     Parser::default().parse_u64(size)
362 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/features/parser/parse_size.rs:367:5
    |
367 |     parse_size_u64(size)
    |     ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:65:1
   |
65 | / fn add_ambiguous_value_tip(
66 | |     possible_values: &[&PossibleValue],
67 | |     err: &mut clap::error::Error,
68 | |     value: &str,
...  |
85 | |     );
86 | | }
   | |_^
   |
note: used here
  --> src/uucore/src/lib/features/parser/shortcut_value_parser.rs:58:13
   |
58 |             add_ambiguous_value_tip(possible_values, &mut err, value);
   |             ^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/mods/error.rs:459:1
    |
459 | / pub fn strip_errno(err: &std::io::Error) -> String {
460 | |     let mut msg = err.to_string();
461 | |     if let Some(pos) = msg.find(" (os error ") {
462 | |         msg.truncate(pos);
463 | |     }
464 | |     msg
465 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/mods/error.rs:437:31
    |
437 |                     message = strip_errno(&self.inner);
    |                               ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/mods/error.rs:655:5
    |
655 | /     pub fn new(code: i32) -> Box<dyn UError> {
656 | |         Box::new(Self(code))
657 | |     }
    | |_____^
    |
note: used here
   --> src/uucore/src/lib/mods/error.rs:676:9
    |
676 |         ExitCode::new(i)
    |         ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/mods/locale.rs:249:1
    |
249 | / fn detect_system_locale() -> Result<LanguageIdentifier, LocalizationError> {
250 | |     let locale_str = std::env::var("LANG")
251 | |         .unwrap_or_else(|_| DEFAULT_LOCALE.to_string())
252 | |         .split('.')
...   |
258 | |         .map_err(|_| LocalizationError::Parse(format!("Failed to parse locale: {}", locale_str)))
259 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/mods/locale.rs:298:18
    |
298 |     let locale = detect_system_locale().unwrap_or_else(|_| {
    |                  ^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/mods/locale.rs:307:1
    |
307 | / fn get_locales_dir(p: &str) -> Result<PathBuf, LocalizationError> {
308 | |     #[cfg(debug_assertions)]
...   |
365 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/mods/locale.rs:302:23
    |
302 |     let locales_dir = get_locales_dir(p)?;
    |                       ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/mods/locale.rs:102:1
    |
102 | / fn init_localization(
103 | |     locale: &LanguageIdentifier,
104 | |     locales_dir: &Path,
105 | | ) -> Result<(), LocalizationError> {
...   |
128 | |     Ok(())
129 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/mods/locale.rs:303:5
    |
303 |     init_localization(&locale, &locales_dir)
    |     ^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uucore/src/lib/mods/os.rs:28:1
   |
28 | / pub fn is_wsl_2() -> bool {
29 | |     #[cfg(target_os = "linux")]
30 | |     {
31 | |         if let Ok(b) = std::fs::read("/proc/sys/kernel/osrelease") {
...  |
38 | |     false
39 | | }
   | |_^
   |
note: used here
  --> src/uucore/src/lib/mods/os.rs:14:12
   |
14 |         if is_wsl_2() {
   |            ^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uucore/src/lib/mods/panic.rs:19:1
   |
19 | / fn is_broken_pipe(info: &PanicHookInfo) -> bool {
20 | |     if let Some(res) = info.payload().downcast_ref::<String>() {
21 | |         if res.contains("BrokenPipe") || res.contains("Broken pipe") {
22 | |             return true;
...  |
25 | |     false
26 | | }
   | |_^
   |
note: used here
  --> src/uucore/src/lib/mods/panic.rs:41:13
   |
41 |         if !is_broken_pipe(info) {
   |             ^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/lib.rs:244:1
    |
244 | / pub fn execution_phrase() -> &'static str {
245 | |     &EXECUTION_PHRASE
246 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/lib.rs:199:21
    |
199 |     s.replace("{}", crate::execution_phrase())
    |                     ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/lib.rs:350:1
    |
350 | / pub fn read_byte_lines<R: std::io::Read>(
351 | |     mut buf_reader: BufReader<R>,
352 | | ) -> impl Iterator<Item = Vec<u8>> {
353 | |     iter::from_fn(move || {
...   |
370 | |     })
371 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/lib.rs:379:5
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |     ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uucore/src/lib/lib.rs:337:1
    |
337 | / pub fn os_string_from_vec(vec: Vec<u8>) -> mods::error::UResult<OsString> {
338 | |     #[cfg(unix)]
339 | |     let s = OsString::from_vec(vec);
340 | |     #[cfg(not(unix))]
...   |
345 | |     Ok(s)
346 | | }
    | |_^
    |
note: used here
   --> src/uucore/src/lib/lib.rs:379:49
    |
379 |     read_byte_lines(buf_reader).map(|byte_line| os_string_from_vec(byte_line).expect("UTF-8 error"))
    |                                                 ^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: `uucore` (lib) generated 1250 warnings (14 duplicates) (run `cargo clippy --fix --lib -p uucore` to apply 412 suggestions)
    Checking uu_tail v0.1.0 (/mnt/c/Users/sebir/Documents/summer/Research/coreutils/src/uu/tail)
warning: `mod.rs` files are not allowed, found `src/uu/tail/src/follow/mod.rs`
 --> src/uu/tail/src/follow/mod.rs:1:1
  |
1 | // This file is part of the uutils coreutils package.
  | ^
  |
  = help: move `src/uu/tail/src/follow/mod.rs` to `src/uu/tail/src/follow.rs`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mod_module_files
  = note: `-W clippy::mod-module-files` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::mod_module_files)]`

warning: `mod.rs` files are not allowed, found `src/uu/tail/src/platform/mod.rs`
 --> src/uu/tail/src/platform/mod.rs:1:1
  |
1 | // This file is part of the uutils coreutils package.
  | ^
  |
  = help: move `src/uu/tail/src/platform/mod.rs` to `src/uu/tail/src/platform.rs`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mod_module_files

warning: `mod.rs` files are required, found `src/uu/tail/src/tail.rs`
 --> src/uu/tail/src/tail.rs:1:1
  |
1 | // This file is part of the uutils coreutils package.
  | ^
  |
  = help: move `src/uu/tail/src/tail.rs` to `src/uu/tail/src/tail/mod.rs`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#self_named_module_files
  = note: `-W clippy::self-named-module-files` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::self_named_module_files)]`

warning: `if` expression with an `else if`, but without a final `else`
   --> src/uu/tail/src/args.rs:305:20
    |
305 |               } else if self.follow == Some(FollowMode::Descriptor) {
    |  ____________________^
306 | |                 show_warning!("--retry only effective for the initial open");
307 | |             }
    | |_____________^
    |
    = help: add an `else` block here
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else
    = note: `-W clippy::else-if-without-else` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::else_if_without_else)]`

warning: `if` expression with an `else if`, but without a final `else`
   --> src/uu/tail/src/args.rs:313:20
    |
313 |               } else if !platform::supports_pid_checks(self.pid) {
    |  ____________________^
314 | |                 show_warning!("--pid=PID is not supported on this system");
315 | |             }
    | |_____________^
    |
    = help: add an `else` block here
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else

warning: single-character lifetime names are likely uninformative
  --> src/uu/tail/src/chunks.rs:34:26
   |
34 | pub struct ReverseChunks<'a> {
   |                          ^^
   |
   = help: use a more informative name
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names
   = note: `-W clippy::single-char-lifetime-names` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::single_char_lifetime_names)]`

warning: single-character lifetime names are likely uninformative
  --> src/uu/tail/src/chunks.rs:48:6
   |
48 | impl<'a> ReverseChunks<'a> {
   |      ^^
   |
   = help: use a more informative name
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_lifetime_names

warning: #[allow] attribute found
   --> src/uu/tail/src/chunks.rs:127:7
    |
127 |     #[allow(clippy::new_without_default)]
    |       ^^^^^ help: replace it with: `expect`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes
    = note: `-W clippy::allow-attributes` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::allow_attributes)]`

warning: `allow` attribute without specifying a reason
   --> src/uu/tail/src/chunks.rs:127:5
    |
127 |     #[allow(clippy::new_without_default)]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try adding a reason at the end with `, reason = ".."`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason
    = note: `-W clippy::allow-attributes-without-reason` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::allow_attributes_without_reason)]`

warning: redundant else block
   --> src/uu/tail/src/chunks.rs:585:10
    |
585 |           } else {
    |  __________^
586 | |             let length = &self.chunks.len();
587 | |             let last = &mut self.chunks[length - 1];
588 | |             if !last.get_buffer().ends_with(&[self.delimiter]) {
...   |
592 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else
    = note: `-W clippy::redundant-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_else)]`
help: remove the `else` block and move the contents out
    |
585 ~         }
586 +         let length = &self.chunks.len();
587 +         let last = &mut self.chunks[length - 1];
588 +         if !last.get_buffer().ends_with(&[self.delimiter]) {
589 +             last.lines += 1;
590 +             self.lines += 1;
591 +         }
    |

warning: usage of ref pattern
   --> src/uu/tail/src/follow/files.rs:164:25
    |
164 |             if let Some(ref last) = self.last {
    |                         ^^^^^^^^
    |
    = help: consider using `&` for clarity instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns
    = note: `-W clippy::ref-patterns` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::ref_patterns)]`

warning: #[allow] attribute found
  --> src/uu/tail/src/follow/watch.rs:50:56
   |
50 |                 #[cfg_attr(not(target_os = "openbsd"), allow(clippy::assigning_clones))]
   |                                                        ^^^^^ help: replace it with: `expect`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes

warning: `allow` attribute without specifying a reason
  --> src/uu/tail/src/follow/watch.rs:50:56
   |
50 |                 #[cfg_attr(not(target_os = "openbsd"), allow(clippy::assigning_clones))]
   |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: try adding a reason at the end with `, reason = ".."`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason

warning: this `continue` expression is redundant
   --> src/uu/tail/src/follow/watch.rs:279:41
    |
279 |                     InputKind::Stdin => continue,
    |                                         ^^^^^^^^
    |
    = help: consider dropping the `continue` expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_continue
    = note: `-W clippy::needless-continue` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::needless_continue)]`

warning: #[allow] attribute found
   --> src/uu/tail/src/follow/watch.rs:308:7
    |
308 |     #[allow(clippy::cognitive_complexity)]
    |       ^^^^^ help: replace it with: `expect`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes

warning: `allow` attribute without specifying a reason
   --> src/uu/tail/src/follow/watch.rs:308:5
    |
308 |     #[allow(clippy::cognitive_complexity)]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try adding a reason at the end with `, reason = ".."`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason

warning: `if` expression with an `else if`, but without a final `else`
   --> src/uu/tail/src/follow/watch.rs:350:36
    |
350 |   ...                   } else if !is_tailable && old_md.is_tailable() {
    |  ______________________________^
351 | | ...                       if pd.reader.is_some() {
352 | | ...                           self.files.reset_reader(event_path);
353 | | ...                       } else {
...   |
359 | | ...                   }
    | |_______________________^
    |
    = help: add an `else` block here
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else

warning: `if` expression with an `else if`, but without a final `else`
   --> src/uu/tail/src/follow/watch.rs:345:40
    |
345 |   ...                   } else if old_md.got_truncated(&new_md)? {
    |  ______________________________^
346 | | ...                       show_error!("{display_name}: file truncated");
347 | | ...                       self.files.update_reader(event_path)?;
348 | | ...                   }
    | |_______________________^
    |
    = help: add an `else` block here
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else

warning: `if` expression with an `else if`, but without a final `else`
   --> src/uu/tail/src/follow/watch.rs:364:36
    |
364 |   ...                   } else if settings.retry {
    |  ______________________________^
365 | | ...                       if self.follow_descriptor() {
366 | | ...                           show_error!(
367 | | ...                               "{} has been replaced with an untailable file; giving up on this name",
...   |
381 | | ...                   }
    | |_______________________^
    |
    = help: add an `else` block here
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else

warning: `if` expression with an `else if`, but without a final `else`
   --> src/uu/tail/src/follow/watch.rs:422:28
    |
422 |                       } else if self.use_polling && event.kind == EventKind::Remove(RemoveKind::Any) {
    |  ____________________________^
423 | |                         /*
424 | |                         BUG: The watched file was removed. Since we're using Polling, this
425 | |                         could be a rename. We can't tell because `notify::PollWatcher` doesn't
...   |
432 | |                         */
433 | |                     }
    | |_____________________^
    |
    = help: add an `else` block here
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else

warning: #[allow] attribute found
   --> src/uu/tail/src/follow/watch.rs:475:3
    |
475 | #[allow(clippy::cognitive_complexity)]
    |   ^^^^^ help: replace it with: `expect`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes

warning: `allow` attribute without specifying a reason
   --> src/uu/tail/src/follow/watch.rs:475:1
    |
475 | #[allow(clippy::cognitive_complexity)]
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try adding a reason at the end with `, reason = ".."`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason

warning: usage of ref pattern
   --> src/uu/tail/src/follow/watch.rs:546:45
    |
546 |                 kind: notify::ErrorKind::Io(ref e),
    |                                             ^^^^^
    |
    = help: consider using `&` for clarity instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ref_patterns

warning: using `pub use`
 --> src/uu/tail/src/follow/mod.rs:9:1
  |
9 | pub use watch::{Observer, follow};
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: move the exported item to a public module instead
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use
  = note: `-W clippy::pub-use` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::pub_use)]`

warning: mixed usage of pub and non-pub fields
  --> src/uu/tail/src/paths.rs:48:5
   |
48 |     pub display_name: String,
   |     ^^^
   |
   = help: consider using private field here
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#partial_pub_fields
   = note: `-W clippy::partial-pub-fields` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::partial_pub_fields)]`

warning: #[allow] attribute found
   --> src/uu/tail/src/paths.rs:143:7
    |
143 |     #[allow(clippy::wrong_self_convention)]
    |       ^^^^^ help: replace it with: `expect`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes

warning: `allow` attribute without specifying a reason
   --> src/uu/tail/src/paths.rs:143:5
    |
143 |     #[allow(clippy::wrong_self_convention)]
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: try adding a reason at the end with `, reason = ".."`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason

warning: using `pub use`
  --> src/uu/tail/src/platform/mod.rs:7:1
   |
7  | / pub use self::unix::{
8  | |     Pid,
9  | |     ProcessChecker,
...  |
12 | | };
   | |__^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: #[allow] attribute found
  --> src/uu/tail/src/platform/unix.rs:23:7
   |
23 |     #[allow(clippy::wrong_self_convention)]
   |       ^^^^^ help: replace it with: `expect`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes

warning: `allow` attribute without specifying a reason
  --> src/uu/tail/src/platform/unix.rs:23:5
   |
23 |     #[allow(clippy::wrong_self_convention)]
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: try adding a reason at the end with `, reason = ".."`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#allow_attributes_without_reason

warning: using `pub use`
  --> src/uu/tail/src/tail.rs:24:1
   |
24 | pub use args::uu_app;
   | ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: move the exported item to a public module instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pub_use

warning: this `continue` expression is redundant
   --> src/uu/tail/src/tail.rs:344:61
    |
344 |             Err(e) if e.kind() == ErrorKind::Interrupted => continue,
    |                                                             ^^^^^^^^
    |
    = help: consider dropping the `continue` expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_continue

warning: missing documentation for the crate
   --> src/uu/tail/src/tail.rs:16:1
    |
16  | / pub mod args;
17  | | pub mod chunks;
18  | | mod follow;
19  | | mod parse;
...   |
525 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items
    = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_docs_in_private_items)]`

warning: multiple versions for dependency `bitflags`: 1.3.2, 2.9.0
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions
  = note: `-W clippy::multiple-crate-versions` implied by `-W clippy::cargo`
  = help: to override `-W clippy::cargo` add `#[allow(clippy::multiple_crate_versions)]`

warning: multiple versions for dependency `thiserror`: 1.0.69, 2.0.12
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#multiple_crate_versions

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uu/tail/src/args.rs:24:9
   |
24 | pub mod options {
   |         ^^^^^^^
   |
note: should be placed before `USAGE`
  --> src/uu/tail/src/args.rs:22:7
   |
22 | const USAGE: &str = help_usage!("tail.md");
   |       ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering
   = note: `-W clippy::arbitrary-source-item-ordering` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::arbitrary_source_item_ordering)]`

warning: importing trait that is only used anonymously
 --> src/uu/tail/src/args.rs:9:13
  |
9 | use crate::{Quotable, parse, platform};
  |             ^^^^^^^^ help: use: `Quotable as _`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names
  = note: `-W clippy::unused-trait-names` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::unused_trait_names)]`

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/args.rs:13:14
   |
13 | use std::io::IsTerminal;
   |              ^^^^^^^^^^ help: use: `IsTerminal as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: used import from `std` instead of `core`
  --> src/uu/tail/src/args.rs:14:5
   |
14 | use std::time::Duration;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core
   = note: `-W clippy::std-instead-of-core` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::std_instead_of_core)]`

warning: exported enums should not be exhaustive
  --> src/uu/tail/src/args.rs:45:1
   |
45 | / pub enum Signum {
46 | |     Negative(u64),
47 | |     Positive(u64),
48 | |     PlusZero,
49 | |     MinusZero,
50 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
   = note: `-W clippy::exhaustive-enums` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::exhaustive_enums)]`
help: try adding #[non_exhaustive]
   |
45 + #[non_exhaustive]
46 | pub enum Signum {
   |

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/args.rs:48:5
   |
48 |     PlusZero,
   |     ^^^^^^^^
   |
note: should be placed before `Positive`
  --> src/uu/tail/src/args.rs:47:5
   |
47 |     Positive(u64),
   |     ^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/args.rs:49:5
   |
49 |     MinusZero,
   |     ^^^^^^^^^
   |
note: should be placed before `PlusZero`
  --> src/uu/tail/src/args.rs:48:5
   |
48 |     PlusZero,
   |     ^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: exported enums should not be exhaustive
  --> src/uu/tail/src/args.rs:53:1
   |
53 | / pub enum FilterMode {
54 | |     Bytes(Signum),
55 | |
56 | |     /// Mode for lines delimited by delimiter as u8
57 | |     Lines(Signum, u8),
58 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
help: try adding #[non_exhaustive]
   |
53 + #[non_exhaustive]
54 | pub enum FilterMode {
   |

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/args.rs:74:8
   |
74 |     fn from(matches: &ArgMatches) -> UResult<Self> {
   |        ^^^^
   |
note: should be placed before `from_obsolete_args`
  --> src/uu/tail/src/args.rs:61:8
   |
61 |     fn from_obsolete_args(args: &parse::ObsoleteArgs) -> Self {
   |        ^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/args.rs:108:8
    |
108 |     fn default_zero() -> Self {
    |        ^^^^^^^^^^^^
    |
note: should be placed before `from`
   --> src/uu/tail/src/args.rs:74:8
    |
74  |     fn from(matches: &ArgMatches) -> UResult<Self> {
    |        ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
  --> src/uu/tail/src/args.rs:68:13
   |
68 |             Self::Lines(signum, b'\n')
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
   = note: `-W clippy::implicit-return` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::implicit_return)]`
help: add `return` as shown
   |
68 |             return Self::Lines(signum, b'\n')
   |             ++++++

warning: missing `return` statement
  --> src/uu/tail/src/args.rs:70:13
   |
70 |             Self::Bytes(signum)
   |             ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
70 |             return Self::Bytes(signum)
   |             ++++++

warning: this could be a `const fn`
  --> src/uu/tail/src/args.rs:61:5
   |
61 | /     fn from_obsolete_args(args: &parse::ObsoleteArgs) -> Self {
62 | |         let signum = if args.plus {
63 | |             Signum::Positive(args.num)
64 | |         } else {
...  |
72 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
   = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::missing_const_for_fn)]`
help: make the function `const`
   |
61 |     const fn from_obsolete_args(args: &parse::ObsoleteArgs) -> Self {
   |     +++++

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uu/tail/src/args.rs:74:5
   |
74 |     fn from(matches: &ArgMatches) -> UResult<Self> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc
   = note: `-W clippy::missing-errors-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_errors_doc)]`

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:105:9
    |
105 |         Ok(mode)
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
105 |         return Ok(mode)
    |         ++++++

warning: this ident consists of a single char
  --> src/uu/tail/src/args.rs:79:21
   |
79 |                 Err(e) => {
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars
   = note: `-W clippy::min-ident-chars` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::min_ident_chars)]`

warning: this ident consists of a single char
  --> src/uu/tail/src/args.rs:92:21
   |
92 |                 Err(e) => {
   |                     ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:109:9
    |
109 |         Self::Lines(Signum::Negative(10), 0)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
109 |         return Self::Lines(Signum::Negative(10), 0)
    |         ++++++

warning: this could be a `const fn`
   --> src/uu/tail/src/args.rs:108:5
    |
108 | /     fn default_zero() -> Self {
109 | |         Self::Lines(Signum::Negative(10), 0)
110 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
108 |     const fn default_zero() -> Self {
    |     +++++

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/args.rs:114:5
    |
114 | /     fn default() -> Self {
115 | |         Self::Lines(Signum::Negative(10), b'\n')
116 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items
    = note: `-W clippy::missing-inline-in-public-items` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_inline_in_public_items)]`

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:115:9
    |
115 |         Self::Lines(Signum::Negative(10), b'\n')
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
115 |         return Self::Lines(Signum::Negative(10), b'\n')
    |         ++++++

warning: exported enums should not be exhaustive
   --> src/uu/tail/src/args.rs:120:1
    |
120 | / pub enum FollowMode {
121 | |     Descriptor,
122 | |     Name,
123 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
help: try adding #[non_exhaustive]
    |
120 + #[non_exhaustive]
121 | pub enum FollowMode {
    |

warning: exported enums should not be exhaustive
   --> src/uu/tail/src/args.rs:126:1
    |
126 | / pub enum VerificationResult {
127 | |     Ok,
128 | |     CannotFollowStdinByName,
129 | |     NoOutput,
130 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_enums
help: try adding #[non_exhaustive]
    |
126 + #[non_exhaustive]
127 | pub enum VerificationResult {
    |

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/args.rs:128:5
    |
128 |     CannotFollowStdinByName,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
note: should be placed before `Ok`
   --> src/uu/tail/src/args.rs:127:5
    |
127 |     Ok,
    |     ^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: exported structs should not be exhaustive
   --> src/uu/tail/src/args.rs:133:1
    |
133 | / pub struct Settings {
134 | |     pub follow: Option<FollowMode>,
135 | |     pub max_unchanged_stats: u32,
136 | |     pub mode: FilterMode,
...   |
144 | |     pub inputs: Vec<Input>,
145 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
    = note: `-W clippy::exhaustive-structs` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::exhaustive_structs)]`
help: try adding #[non_exhaustive]
    |
133 + #[non_exhaustive]
134 | pub struct Settings {
    |

warning: more than 3 bools in a struct
   --> src/uu/tail/src/args.rs:133:1
    |
133 | / pub struct Settings {
134 | |     pub follow: Option<FollowMode>,
135 | |     pub max_unchanged_stats: u32,
136 | |     pub mode: FilterMode,
...   |
144 | |     pub inputs: Vec<Input>,
145 | | }
    | |_^
    |
    = help: consider using a state machine or refactoring bools into two-variant enums
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#struct_excessive_bools
    = note: `-W clippy::struct-excessive-bools` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::struct_excessive_bools)]`

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/args.rs:142:9
    |
142 |     pub presume_input_pipe: bool,
    |         ^^^^^^^^^^^^^^^^^^
    |
note: should be placed before `verbose`
   --> src/uu/tail/src/args.rs:141:9
    |
141 |     pub verbose: bool,
    |         ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/args.rs:144:9
    |
144 |     pub inputs: Vec<Input>,
    |         ^^^^^^
    |
note: should be placed before `presume_input_pipe`
   --> src/uu/tail/src/args.rs:142:9
    |
142 |     pub presume_input_pipe: bool,
    |         ^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/args.rs:148:5
    |
148 | /     fn default() -> Self {
149 | |         Self {
150 | |             max_unchanged_stats: 5,
151 | |             sleep_sec: Duration::from_secs_f32(1.0),
...   |
161 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:149:9
    |
149 | /         Self {
150 | |             max_unchanged_stats: 5,
151 | |             sleep_sec: Duration::from_secs_f32(1.0),
152 | |             follow: Option::default(),
...   |
159 | |             inputs: Vec::default(),
160 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
149 |         return Self {
    |         ++++++

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/args.rs:184:12
    |
184 |     pub fn from(matches: &ArgMatches) -> UResult<Self> {
    |            ^^^^
    |
note: should be placed before `from_obsolete_args`
   --> src/uu/tail/src/args.rs:165:12
    |
165 |     pub fn from_obsolete_args(args: &parse::ObsoleteArgs, name: Option<&OsString>) -> Self {
    |            ^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/args.rs:301:12
    |
301 |     pub fn check_warnings(&self) {
    |            ^^^^^^^^^^^^^^
    |
note: should be placed before `num_inputs`
   --> src/uu/tail/src/args.rs:295:12
    |
295 |     pub fn num_inputs(&self) -> usize {
    |            ^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/args.rs:165:5
    |
165 |     pub fn from_obsolete_args(args: &parse::ObsoleteArgs, name: Option<&OsString>) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn from_obsolete_args(args: &parse::ObsoleteArgs, name: Option<&OsString>) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate
    = note: `-W clippy::must-use-candidate` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::must_use_candidate)]`

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/args.rs:165:5
    |
165 | /     pub fn from_obsolete_args(args: &parse::ObsoleteArgs, name: Option<&OsString>) -> Self {
166 | |         let mut settings = Self::default();
167 | |         if args.follow {
168 | |             settings.follow = if name.is_some() {
...   |
181 | |         settings
182 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:181:9
    |
181 |         settings
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
181 |         return settings
    |         ++++++

warning: use Option::map_or_else instead of an if let/else
   --> src/uu/tail/src/args.rs:175:21
    |
175 |           let input = if let Some(name) = name {
    |  _____________________^
176 | |             Input::from(name)
177 | |         } else {
178 | |             Input::default()
179 | |         };
    | |_________^ help: try: `name.map_or_else(Input::default, |name| Input::from(name))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
    = note: `-W clippy::option-if-let-else` implied by `-W clippy::nursery`
    = help: to override `-W clippy::nursery` add `#[allow(clippy::option_if_let_else)]`

warning: `name` is shadowed
   --> src/uu/tail/src/args.rs:175:33
    |
175 |         let input = if let Some(name) = name {
    |                                 ^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/args.rs:165:59
    |
165 |     pub fn from_obsolete_args(args: &parse::ObsoleteArgs, name: Option<&OsString>) -> Self {
    |                                                           ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse
    = note: `-W clippy::shadow-reuse` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_reuse)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/args.rs:184:5
    |
184 |     pub fn from(matches: &ArgMatches) -> UResult<Self> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/args.rs:184:5
    |
184 | /     pub fn from(matches: &ArgMatches) -> UResult<Self> {
...   |
284 | |         Ok(settings)
285 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:284:9
    |
284 |         Ok(settings)
    |         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
284 |         return Ok(settings)
    |         ++++++

warning: default numeric fallback might occur
   --> src/uu/tail/src/args.rs:256:30
    |
256 |                     if pid < 0 {
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback
    = note: `-W clippy::default-numeric-fallback` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::default_numeric_fallback)]`

warning: redundant closure
   --> src/uu/tail/src/args.rs:197:22
    |
197 |                 .map(|s| s.as_str()),
    |                      ^^^^^^^^^^^^^^ help: replace the closure with the method itself: `std::string::String::as_str`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls
    = note: `-W clippy::redundant-closure-for-method-calls` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::redundant_closure_for_method_calls)]`

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:197:26
    |
197 |                 .map(|s| s.as_str()),
    |                          ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
197 |                 .map(|s| return s.as_str()),
    |                          ++++++

warning: this ident consists of a single char
   --> src/uu/tail/src/args.rs:197:23
    |
197 |                 .map(|s| s.as_str()),
    |                       ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: question mark operator was used
   --> src/uu/tail/src/args.rs:224:19
    |
224 |             mode: FilterMode::from(matches)?,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used
    = note: `-W clippy::question-mark-used` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::question_mark_used)]`

warning: question mark operator was used
   --> src/uu/tail/src/args.rs:231:34
    |
231 |               settings.sleep_sec = parse_time::from_str(source, false).map_err(|_| {
    |  __________________________________^
232 | |                 UUsageError::new(1, format!("invalid number of seconds: '{source}'"))
233 | |             })?;
    | |_______________^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: `map_err(|_|...` wildcard pattern discards the original error
   --> src/uu/tail/src/args.rs:231:78
    |
231 |             settings.sleep_sec = parse_time::from_str(source, false).map_err(|_| {
    |                                                                              ^^^
    |
    = help: consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_err_ignore
    = note: `-W clippy::map-err-ignore` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::map_err_ignore)]`

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:232:17
    |
232 |                 UUsageError::new(1, format!("invalid number of seconds: '{source}'"))
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
232 |                 return UUsageError::new(1, format!("invalid number of seconds: '{source}'"))
    |                 ++++++

warning: this ident consists of a single char
   --> src/uu/tail/src/args.rs:236:21
    |
236 |         if let Some(s) = matches.get_one::<String>(options::MAX_UNCHANGED_STATS) {
    |                     ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `s` is shadowed
   --> src/uu/tail/src/args.rs:238:20
    |
238 |                 Ok(s) => s,
    |                    ^
    |
note: previous binding is here
   --> src/uu/tail/src/args.rs:236:21
    |
236 |         if let Some(s) = matches.get_one::<String>(options::MAX_UNCHANGED_STATS) {
    |                     ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: this ident consists of a single char
   --> src/uu/tail/src/args.rs:238:20
    |
238 |                 Ok(s) => s,
    |                    ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uu/tail/src/args.rs:266:21
    |
266 |                 Err(e) => {
    |                     ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value
   --> src/uu/tail/src/args.rs:275:27
    |
275 |           settings.inputs = matches
    |  ___________________________^
276 | |             .get_many::<OsString>(options::ARG_FILES)
277 | |             .map(|v| v.map(Input::from).collect())
278 | |             .unwrap_or_else(|| vec![Input::default()]);
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
    = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::map_unwrap_or)]`
help: try
    |
275 ~         settings.inputs = matches
276 ~             .get_many::<OsString>(options::ARG_FILES).map_or_else(|| vec![Input::default()], |v| v.map(Input::from).collect());
    |

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:277:22
    |
277 |             .map(|v| v.map(Input::from).collect())
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
277 |             .map(|v| return v.map(Input::from).collect())
    |                      ++++++

warning: this ident consists of a single char
   --> src/uu/tail/src/args.rs:277:19
    |
277 |             .map(|v| v.map(Input::from).collect())
    |                   ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/args.rs:287:5
    |
287 |     pub fn has_only_stdin(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_only_stdin(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/args.rs:287:5
    |
287 | /     pub fn has_only_stdin(&self) -> bool {
288 | |         self.inputs.iter().all(|input| input.is_stdin())
289 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:288:9
    |
288 |         self.inputs.iter().all(|input| input.is_stdin())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
288 |         return self.inputs.iter().all(|input| input.is_stdin())
    |         ++++++

warning: redundant closure
   --> src/uu/tail/src/args.rs:288:32
    |
288 |         self.inputs.iter().all(|input| input.is_stdin())
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `super::paths::Input::is_stdin`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:288:40
    |
288 |         self.inputs.iter().all(|input| input.is_stdin())
    |                                        ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
288 |         self.inputs.iter().all(|input| return input.is_stdin())
    |                                        ++++++

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/args.rs:291:5
    |
291 |     pub fn has_stdin(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_stdin(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/args.rs:291:5
    |
291 | /     pub fn has_stdin(&self) -> bool {
292 | |         self.inputs.iter().any(|input| input.is_stdin())
293 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:292:9
    |
292 |         self.inputs.iter().any(|input| input.is_stdin())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
292 |         return self.inputs.iter().any(|input| input.is_stdin())
    |         ++++++

warning: redundant closure
   --> src/uu/tail/src/args.rs:292:32
    |
292 |         self.inputs.iter().any(|input| input.is_stdin())
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `super::paths::Input::is_stdin`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:292:40
    |
292 |         self.inputs.iter().any(|input| input.is_stdin())
    |                                        ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
292 |         self.inputs.iter().any(|input| return input.is_stdin())
    |                                        ++++++

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/args.rs:295:5
    |
295 |     pub fn num_inputs(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn num_inputs(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/args.rs:295:5
    |
295 | /     pub fn num_inputs(&self) -> usize {
296 | |         self.inputs.len()
297 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:296:9
    |
296 |         self.inputs.len()
    |         ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
296 |         return self.inputs.len()
    |         ++++++

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/args.rs:301:5
    |
301 | /     pub fn check_warnings(&self) {
302 | |         if self.retry {
303 | |             if self.follow.is_none() {
304 | |                 show_warning!("--retry ignored; --retry is useful only when following");
...   |
337 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: default numeric fallback might occur
   --> src/uu/tail/src/args.rs:310:24
    |
310 |         if self.pid != 0 {
    |                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/uu/tail/src/args.rs:323:46
    |
323 |             let blocking_stdin = self.pid == 0
    |                                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:327:21
    |
327 | /                     handle
328 | |                         .as_file()
329 | |                         .metadata()
330 | |                         .is_ok_and(|meta| !meta.is_file())
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
327 |                     return handle
    |                     ++++++

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:330:43
    |
330 |                         .is_ok_and(|meta| !meta.is_file())
    |                                           ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
330 |                         .is_ok_and(|meta| return !meta.is_file())
    |                                           ++++++

warning: consider bringing this path into scope with the `use` keyword
   --> src/uu/tail/src/args.rs:333:35
    |
333 |             if !blocking_stdin && std::io::stdin().is_terminal() {
    |                                   ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths
    = note: `-W clippy::absolute-paths` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::absolute_paths)]`

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/args.rs:343:5
    |
343 |     pub fn verify(&self) -> VerificationResult {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn verify(&self) -> VerificationResult`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/args.rs:343:5
    |
343 | /     pub fn verify(&self) -> VerificationResult {
344 | |         // Mimic GNU's tail for `tail -F`
345 | |         if self.inputs.iter().any(|i| i.is_stdin()) && self.follow == Some(FollowMode::Name) {
346 | |             return VerificationResult::CannotFollowStdinByName;
...   |
359 | |         VerificationResult::Ok
360 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:359:9
    |
359 |         VerificationResult::Ok
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
359 |         return VerificationResult::Ok
    |         ++++++

warning: redundant closure
   --> src/uu/tail/src/args.rs:345:35
    |
345 |         if self.inputs.iter().any(|i| i.is_stdin()) && self.follow == Some(FollowMode::Name) {
    |                                   ^^^^^^^^^^^^^^^^ help: replace the closure with the method itself: `super::paths::Input::is_stdin`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:345:39
    |
345 |         if self.inputs.iter().any(|i| i.is_stdin()) && self.follow == Some(FollowMode::Name) {
    |                                       ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
345 |         if self.inputs.iter().any(|i| return i.is_stdin()) && self.follow == Some(FollowMode::Name) {
    |                                       ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/args.rs:363:1
    |
363 | pub fn parse_obsolete(arg: &OsString, input: Option<&OsString>) -> UResult<Option<Settings>> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uu/tail/src/args.rs:363:1
    |
363 | / pub fn parse_obsolete(arg: &OsString, input: Option<&OsString>) -> UResult<Option<Settings>> {
364 | |     match parse::parse_obsolete(arg) {
365 | |         Some(Ok(args)) => Ok(Some(Settings::from_obsolete_args(&args, input))),
366 | |         None => Ok(None),
...   |
389 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:365:27
    |
365 |         Some(Ok(args)) => Ok(Some(Settings::from_obsolete_args(&args, input))),
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
365 |         Some(Ok(args)) => return Ok(Some(Settings::from_obsolete_args(&args, input))),
    |                           ++++++

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:366:17
    |
366 |         None => Ok(None),
    |                 ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
366 |         None => return Ok(None),
    |                 ++++++

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:369:13
    |
369 | /             Err(USimpleError::new(
370 | |                 1,
371 | |                 match e {
372 | |                     parse::ParseError::OutOfRange => format!(
...   |
385 | |                 },
386 | |             ))
    | |______________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
369 |             return Err(USimpleError::new(
    |             ++++++

warning: this ident consists of a single char
   --> src/uu/tail/src/args.rs:367:18
    |
367 |         Some(Err(e)) => {
    |                  ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/args.rs:391:1
    |
391 | fn parse_num(src: &str) -> Result<Signum, ParseSizeError> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:407:26
    |
407 |             (0, true) => Ok(Signum::PlusZero),
    |                          ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
407 |             (0, true) => return Ok(Signum::PlusZero),
    |                          ++++++

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:408:27
    |
408 |             (0, false) => Ok(Signum::MinusZero),
    |                           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
408 |             (0, false) => return Ok(Signum::MinusZero),
    |                           ++++++

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:409:26
    |
409 |             (n, true) => Ok(Signum::Positive(n)),
    |                          ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
409 |             (n, true) => return Ok(Signum::Positive(n)),
    |                          ++++++

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:410:27
    |
410 |             (n, false) => Ok(Signum::Negative(n)),
    |                           ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
410 |             (n, false) => return Ok(Signum::Negative(n)),
    |                           ++++++

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:412:19
    |
412 |         Err(_) => Err(ParseSizeError::ParseFailure(size_string.to_string())),
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
412 |         Err(_) => return Err(ParseSizeError::ParseFailure(size_string.to_string())),
    |                   ++++++

warning: this ident consists of a single char
   --> src/uu/tail/src/args.rs:395:17
    |
395 |     if let Some(c) = size_string.chars().next() {
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: indexing into a string may panic if the index is within a UTF-8 character
   --> src/uu/tail/src/args.rs:398:28
    |
398 |             size_string = &size_string[1..];
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice
    = note: `-W clippy::string-slice` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::string_slice)]`

warning: use Option::map_or_else instead of an if let/else
   --> src/uu/tail/src/args.rs:405:5
    |
405 | /     match parse_size_u64(size_string) {
406 | |         Ok(n) => match (n, starting_with) {
407 | |             (0, true) => Ok(Signum::PlusZero),
408 | |             (0, false) => Ok(Signum::MinusZero),
...   |
412 | |         Err(_) => Err(ParseSizeError::ParseFailure(size_string.to_string())),
413 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else
help: try
    |
405 ~     parse_size_u64(size_string).map_or_else(|_| Err(ParseSizeError::ParseFailure(size_string.to_string())), |n| match (n, starting_with) {
406 +             (0, true) => Ok(Signum::PlusZero),
407 +             (0, false) => Ok(Signum::MinusZero),
408 +             (n, true) => Ok(Signum::Positive(n)),
409 +             (n, false) => Ok(Signum::Negative(n)),
410 +         })
    |

warning: `n` is shadowed
   --> src/uu/tail/src/args.rs:409:14
    |
409 |             (n, true) => Ok(Signum::Positive(n)),
    |              ^
    |
note: previous binding is here
   --> src/uu/tail/src/args.rs:406:12
    |
406 |         Ok(n) => match (n, starting_with) {
    |            ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `n` is shadowed
   --> src/uu/tail/src/args.rs:410:14
    |
410 |             (n, false) => Ok(Signum::Negative(n)),
    |              ^
    |
note: previous binding is here
   --> src/uu/tail/src/args.rs:406:12
    |
406 |         Ok(n) => match (n, starting_with) {
    |            ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `to_string()` called on a `&str`
   --> src/uu/tail/src/args.rs:412:52
    |
412 |         Err(_) => Err(ParseSizeError::ParseFailure(size_string.to_string())),
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `size_string.to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string
    = note: `-W clippy::str-to-string` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::str_to_string)]`

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/args.rs:416:1
    |
416 | pub fn parse_args(args: impl uucore::Args) -> UResult<Settings> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `#[inline]` for a function
   --> src/uu/tail/src/args.rs:416:1
    |
416 | / pub fn parse_args(args: impl uucore::Args) -> UResult<Settings> {
417 | |     let args_vec: Vec<OsString> = args.collect();
418 | |     let clap_args = uu_app().try_get_matches_from(args_vec.clone());
419 | |     let clap_result = match clap_args {
...   |
455 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: item name ends with its containing module's name
   --> src/uu/tail/src/args.rs:416:8
    |
416 | pub fn parse_args(args: impl uucore::Args) -> UResult<Settings> {
    |        ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions
    = note: `-W clippy::module-name-repetitions` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::module_name_repetitions)]`

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:452:27
    |
452 |         Some(settings) => Ok(settings),
    |                           ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
452 |         Some(settings) => return Ok(settings),
    |                           ++++++

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:453:17
    |
453 |         None => clap_result,
    |                 ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
453 |         None => return clap_result,
    |                 ++++++

warning: `impl Trait` used as a function parameter
   --> src/uu/tail/src/args.rs:416:25
    |
416 | pub fn parse_args(args: impl uucore::Args) -> UResult<Settings> {
    |                         ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
    = note: `-W clippy::impl-trait-in-params` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::impl_trait_in_params)]`
help: add a type parameter
    |
416 | pub fn parse_args<{ /* Generic name */ }: uucore::Args>(args: impl uucore::Args) -> UResult<Settings> {
    |                  ++++++++++++++++++++++++++++++++++++++

warning: question mark operator was used
   --> src/uu/tail/src/args.rs:420:27
    |
420 |         Ok(matches) => Ok(Settings::from(&matches)?),
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: indexing may panic
   --> src/uu/tail/src/args.rs:447:35
    |
447 |     let possible_obsolete_args = &args_vec[1];
    |                                   ^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing
    = note: `-W clippy::indexing-slicing` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::indexing_slicing)]`

warning: use Option::map_or instead of an if let/else
   --> src/uu/tail/src/args.rs:451:5
    |
451 | /     match parse_obsolete(possible_obsolete_args, args_vec.get(2))? {
452 | |         Some(settings) => Ok(settings),
453 | |         None => clap_result,
454 | |     }
    | |_____^ help: try: `(parse_obsolete(possible_obsolete_args, args_vec.get(2))?).map_or(clap_result, |settings| Ok(settings))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: question mark operator was used
   --> src/uu/tail/src/args.rs:451:11
    |
451 |     match parse_obsolete(possible_obsolete_args, args_vec.get(2))? {
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: this function could have a `#[must_use]` attribute
   --> src/uu/tail/src/args.rs:457:1
    |
457 | pub fn uu_app() -> Command {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn uu_app() -> Command`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a function
   --> src/uu/tail/src/args.rs:457:1
    |
457 | / pub fn uu_app() -> Command {
458 | |     #[cfg(target_os = "linux")]
459 | |     const POLLING_HELP: &str = "Disable 'inotify' support and use polling instead";
460 | |     #[cfg(all(unix, not(target_os = "linux")))]
...   |
582 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/args.rs:465:5
    |
465 | /     Command::new(uucore::util_name())
466 | |         .version(uucore::crate_version!())
467 | |         .about(ABOUT)
468 | |         .override_usage(format_usage(USAGE))
...   |
580 | |                 .value_hint(clap::ValueHint::FilePath),
581 | |         )
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
465 |     return Command::new(uucore::util_name())
    |     ++++++

warning: this function has too many lines (123/100)
   --> src/uu/tail/src/args.rs:457:1
    |
457 | / pub fn uu_app() -> Command {
458 | |     #[cfg(target_os = "linux")]
459 | |     const POLLING_HELP: &str = "Disable 'inotify' support and use polling instead";
460 | |     #[cfg(all(unix, not(target_os = "linux")))]
...   |
582 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::too_many_lines)]`

warning: used import from `std` instead of `alloc`
  --> src/uu/tail/src/chunks.rs:13:5
   |
13 | use std::collections::VecDeque;
   |     ^^^ help: consider importing the item from `alloc`: `alloc`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc
   = note: `-W clippy::std-instead-of-alloc` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::std_instead_of_alloc)]`

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/chunks.rs:15:24
   |
15 | use std::io::{BufRead, Read, Seek, SeekFrom, Write};
   |                        ^^^^ help: use: `Read as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/chunks.rs:15:30
   |
15 | use std::io::{BufRead, Read, Seek, SeekFrom, Write};
   |                              ^^^^ help: use: `Seek as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: item in documentation is missing backticks
  --> src/uu/tail/src/chunks.rs:22:41
   |
22 | /// The size of the backing buffer of a LinesChunk or BytesChunk in bytes. The value of BUFFER_SIZE
   |                                         ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
   = note: `-W clippy::doc-markdown` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::doc_markdown)]`
help: try
   |
22 - /// The size of the backing buffer of a LinesChunk or BytesChunk in bytes. The value of BUFFER_SIZE
22 + /// The size of the backing buffer of a `LinesChunk` or BytesChunk in bytes. The value of BUFFER_SIZE
   |

warning: item in documentation is missing backticks
  --> src/uu/tail/src/chunks.rs:22:55
   |
22 | /// The size of the backing buffer of a LinesChunk or BytesChunk in bytes. The value of BUFFER_SIZE
   |                                                       ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
22 - /// The size of the backing buffer of a LinesChunk or BytesChunk in bytes. The value of BUFFER_SIZE
22 + /// The size of the backing buffer of a LinesChunk or `BytesChunk` in bytes. The value of BUFFER_SIZE
   |

warning: item in documentation is missing backticks
  --> src/uu/tail/src/chunks.rs:22:89
   |
22 | /// The size of the backing buffer of a LinesChunk or BytesChunk in bytes. The value of BUFFER_SIZE
   |                                                                                         ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
22 - /// The size of the backing buffer of a LinesChunk or BytesChunk in bytes. The value of BUFFER_SIZE
22 + /// The size of the backing buffer of a LinesChunk or BytesChunk in bytes. The value of `BUFFER_SIZE`
   |

warning: first doc comment paragraph is too long
  --> src/uu/tail/src/chunks.rs:22:1
   |
22 | / /// The size of the backing buffer of a LinesChunk or BytesChunk in bytes. The value of BUFFER_SIZE
23 | | /// originates from the BUFSIZ constant in stdio.h and the libc crate to make stream IO efficient.
24 | | /// In the latter the value is constantly set to 8192 on all platforms, where the value in stdio.h
25 | | /// is determined on each platform differently. Since libc chose 8192 as a reasonable default the
26 | | /// value here is set to this value, too.
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph
   = note: `-W clippy::too-long-first-doc-paragraph` implied by `-W clippy::nursery`
   = help: to override `-W clippy::nursery` add `#[allow(clippy::too_long_first_doc_paragraph)]`

warning: item name ends with its containing module's name
  --> src/uu/tail/src/chunks.rs:34:12
   |
34 | pub struct ReverseChunks<'a> {
   |            ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/chunks.rs:42:5
   |
42 |     max_blocks_to_read: usize,
   |     ^^^^^^^^^^^^^^^^^^
   |
note: should be placed before `size`
  --> src/uu/tail/src/chunks.rs:39:5
   |
39 |     size: u64,
   |     ^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/chunks.rs:45:5
   |
45 |     block_idx: usize,
   |     ^^^^^^^^^
   |
note: should be placed before `max_blocks_to_read`
  --> src/uu/tail/src/chunks.rs:42:5
   |
42 |     max_blocks_to_read: usize,
   |     ^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: docs for function which may panic missing `# Panics` section
  --> src/uu/tail/src/chunks.rs:49:5
   |
49 |     pub fn new(file: &'a mut File) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uu/tail/src/chunks.rs:51:13
   |
51 |             file.stream_position().unwrap()
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
   = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: missing `#[inline]` for a method
  --> src/uu/tail/src/chunks.rs:49:5
   |
49 | /     pub fn new(file: &'a mut File) -> Self {
50 | |         let current = if cfg!(unix) {
51 | |             file.stream_position().unwrap()
52 | |         } else {
...  |
64 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
  --> src/uu/tail/src/chunks.rs:58:9
   |
58 | /         ReverseChunks {
59 | |             file,
60 | |             size,
61 | |             max_blocks_to_read,
62 | |             block_idx,
63 | |         }
   | |_________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
58 |         return ReverseChunks {
   |         ++++++

warning: used `unwrap()` on a `Result` value
  --> src/uu/tail/src/chunks.rs:51:13
   |
51 |             file.stream_position().unwrap()
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used
   = note: `-W clippy::unwrap-used` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::unwrap_used)]`

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uu/tail/src/chunks.rs:55:20
   |
55 |         let size = file.seek(SeekFrom::End(0)).unwrap() - current;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects
   = note: `-W clippy::arithmetic-side-effects` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::arithmetic_side_effects)]`

warning: used `unwrap()` on a `Result` value
  --> src/uu/tail/src/chunks.rs:55:20
   |
55 |         let size = file.seek(SeekFrom::End(0)).unwrap() - current;
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: casting `f64` to `usize` may truncate the value
  --> src/uu/tail/src/chunks.rs:56:34
   |
56 |         let max_blocks_to_read = (size as f64 / BLOCK_SIZE as f64).ceil() as usize;
   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
   = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_truncation)]`

warning: casting `f64` to `usize` may lose the sign of the value
  --> src/uu/tail/src/chunks.rs:56:34
   |
56 |         let max_blocks_to_read = (size as f64 / BLOCK_SIZE as f64).ceil() as usize;
   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss
   = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_sign_loss)]`

warning: using a potentially dangerous silent `as` conversion
  --> src/uu/tail/src/chunks.rs:56:34
   |
56 |         let max_blocks_to_read = (size as f64 / BLOCK_SIZE as f64).ceil() as usize;
   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions
   = note: `-W clippy::as-conversions` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::as_conversions)]`

warning: floating-point arithmetic detected
  --> src/uu/tail/src/chunks.rs:56:34
   |
56 |         let max_blocks_to_read = (size as f64 / BLOCK_SIZE as f64).ceil() as usize;
   |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#float_arithmetic
   = note: `-W clippy::float-arithmetic` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::float_arithmetic)]`

warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> src/uu/tail/src/chunks.rs:56:35
   |
56 |         let max_blocks_to_read = (size as f64 / BLOCK_SIZE as f64).ceil() as usize;
   |                                   ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss
   = note: `-W clippy::cast-precision-loss` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_precision_loss)]`

warning: using a potentially dangerous silent `as` conversion
  --> src/uu/tail/src/chunks.rs:56:35
   |
56 |         let max_blocks_to_read = (size as f64 / BLOCK_SIZE as f64).ceil() as usize;
   |                                   ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: casting `u64` to `f64` causes a loss of precision (`u64` is 64 bits wide, but `f64`'s mantissa is only 52 bits wide)
  --> src/uu/tail/src/chunks.rs:56:49
   |
56 |         let max_blocks_to_read = (size as f64 / BLOCK_SIZE as f64).ceil() as usize;
   |                                                 ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_precision_loss

warning: using a potentially dangerous silent `as` conversion
  --> src/uu/tail/src/chunks.rs:56:49
   |
56 |         let max_blocks_to_read = (size as f64 / BLOCK_SIZE as f64).ceil() as usize;
   |                                                 ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: missing trait method provided by default: `next_chunk`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:109:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods
   = note: `-W clippy::missing-trait-methods` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_trait_methods)]`

warning: missing trait method provided by default: `size_hint`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:186:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `count`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:221:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `last`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:249:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `advance_by`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:296:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `nth`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:347:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `step_by`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:397:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `chain`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:468:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `zip`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:586:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `intersperse`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:628:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `intersperse_with`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:686:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `map`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:745:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `for_each`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:790:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `filter`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:866:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `filter_map`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:911:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `enumerate`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:958:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `peekable`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1029:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `skip_while`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1094:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `take_while`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1175:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `map_while`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1263:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `skip`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1292:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `take`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1345:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `scan`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1392:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `flat_map`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1430:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `flatten`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1514:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `map_windows`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1670:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `fuse`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1732:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `inspect`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1816:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `by_ref`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1853:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `collect`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:1972:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `try_collect`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2059:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `collect_into`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2131:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `partition`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2163:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `partition_in_place`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2225:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `is_partitioned`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2282:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `try_fold`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2376:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `try_for_each`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2434:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `fold`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2553:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `reduce`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2590:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `try_reduce`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2661:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `all`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2719:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `any`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2772:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `find`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2835:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `find_map`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2866:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `try_find`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:2924:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `position`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3007:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `rposition`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3072:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `max`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3121:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `min`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3157:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `max_by_key`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3179:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `max_by`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3212:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `min_by_key`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3239:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `min_by`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3272:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `rev`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3309:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `unzip`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3345:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `copied`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3376:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cloned`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3424:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cycle`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3456:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `array_chunks`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3499:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `sum`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3535:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `product`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3567:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cmp`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3588:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `cmp_by`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3615:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `partial_cmp`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3671:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `partial_cmp_by`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3707:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `eq`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3740:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `eq_by`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3763:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `ne`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3795:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `lt`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3816:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `le`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3837:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `gt`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3858:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `ge`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3879:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `is_sorted`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3908:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `is_sorted_by`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3934:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `is_sorted_by_key`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3978:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing trait method provided by default: `__iterator_get_unchecked`
  --> src/uu/tail/src/chunks.rs:67:1
   |
67 | impl Iterator for ReverseChunks<'_> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: implement the method
  --> /rustc/17067e9ac6d7ecb70e50f92c1944e545188d2359/library/core/src/iter/traits/iterator.rs:3993:5
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_trait_methods

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:70:5
    |
70  | /     fn next(&mut self) -> Option<Self::Item> {
71  | |         // If there are no more chunks to read, terminate the iterator.
72  | |         if self.block_idx >= self.max_blocks_to_read {
73  | |             return None;
...   |
103 | |         Some(buf[0..(block_size as usize)].to_vec())
104 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: used unwrap or expect in a function that returns result or option
   --> src/uu/tail/src/chunks.rs:70:5
    |
70  | /     fn next(&mut self) -> Option<Self::Item> {
71  | |         // If there are no more chunks to read, terminate the iterator.
72  | |         if self.block_idx >= self.max_blocks_to_read {
73  | |             return None;
...   |
103 | |         Some(buf[0..(block_size as usize)].to_vec())
104 | |     }
    | |_____^
    |
    = help: unwrap and expect should not be used in a function that returns result or option
note: potential non-recoverable error(s)
   --> src/uu/tail/src/chunks.rs:88:19
    |
88  |           let pos = self
    |  ___________________^
89  | |             .file
90  | |             .seek(SeekFrom::Current(-(block_size as i64)))
91  | |             .unwrap();
    | |_____________________^
92  | /         self.file
93  | |             .read_exact(&mut buf[0..(block_size as usize)])
94  | |             .unwrap();
    | |_____________________^
95  |           let pos2 = self
    |  ____________________^
96  | |             .file
97  | |             .seek(SeekFrom::Current(-(block_size as i64)))
98  | |             .unwrap();
    | |_____________________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_in_result
    = note: `-W clippy::unwrap-in-result` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::unwrap_in_result)]`

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:103:9
    |
103 |         Some(buf[0..(block_size as usize)].to_vec())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
103 |         return Some(buf[0..(block_size as usize)].to_vec())
    |         ++++++

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uu/tail/src/chunks.rs:79:47
   |
79 |         let block_size = if self.block_idx == self.max_blocks_to_read - 1 {
   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: use of % has been disallowed in this context
  --> src/uu/tail/src/chunks.rs:80:13
   |
80 |             self.size % BLOCK_SIZE
   |             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division_remainder_used
   = note: `-W clippy::integer-division-remainder-used` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::integer_division_remainder_used)]`

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/uu/tail/src/chunks.rs:87:31
   |
87 |         let mut buf = vec![0; BLOCK_SIZE as usize];
   |                               ^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
87 -         let mut buf = vec![0; BLOCK_SIZE as usize];
87 +         let mut buf = vec![0; usize::try_from(BLOCK_SIZE)];
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/uu/tail/src/chunks.rs:87:31
   |
87 |         let mut buf = vec![0; BLOCK_SIZE as usize];
   |                               ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `unwrap()` on a `Result` value
  --> src/uu/tail/src/chunks.rs:88:19
   |
88 |           let pos = self
   |  ___________________^
89 | |             .file
90 | |             .seek(SeekFrom::Current(-(block_size as i64)))
91 | |             .unwrap();
   | |_____________________^
   |
   = note: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uu/tail/src/chunks.rs:90:37
   |
90 |             .seek(SeekFrom::Current(-(block_size as i64)))
   |                                     ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `u64` to `i64` may wrap around the value
  --> src/uu/tail/src/chunks.rs:90:38
   |
90 |             .seek(SeekFrom::Current(-(block_size as i64)))
   |                                      ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap
   = note: `-W clippy::cast-possible-wrap` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::cast_possible_wrap)]`

warning: using a potentially dangerous silent `as` conversion
  --> src/uu/tail/src/chunks.rs:90:38
   |
90 |             .seek(SeekFrom::Current(-(block_size as i64)))
   |                                      ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `unwrap()` on a `Result` value
  --> src/uu/tail/src/chunks.rs:92:9
   |
92 | /         self.file
93 | |             .read_exact(&mut buf[0..(block_size as usize)])
94 | |             .unwrap();
   | |_____________________^
   |
   = note: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: slicing may panic
  --> src/uu/tail/src/chunks.rs:93:30
   |
93 |             .read_exact(&mut buf[0..(block_size as usize)])
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using `.get(n..m)` or `.get_mut(n..m)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/uu/tail/src/chunks.rs:93:37
   |
93 |             .read_exact(&mut buf[0..(block_size as usize)])
   |                                     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
   |
93 -             .read_exact(&mut buf[0..(block_size as usize)])
93 +             .read_exact(&mut buf[0..usize::try_from(block_size)])
   |

warning: using a potentially dangerous silent `as` conversion
  --> src/uu/tail/src/chunks.rs:93:37
   |
93 |             .read_exact(&mut buf[0..(block_size as usize)])
   |                                     ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `unwrap()` on a `Result` value
  --> src/uu/tail/src/chunks.rs:95:20
   |
95 |           let pos2 = self
   |  ____________________^
96 | |             .file
97 | |             .seek(SeekFrom::Current(-(block_size as i64)))
98 | |             .unwrap();
   | |_____________________^
   |
   = note: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
  --> src/uu/tail/src/chunks.rs:97:37
   |
97 |             .seek(SeekFrom::Current(-(block_size as i64)))
   |                                     ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `u64` to `i64` may wrap around the value
  --> src/uu/tail/src/chunks.rs:97:38
   |
97 |             .seek(SeekFrom::Current(-(block_size as i64)))
   |                                      ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: using a potentially dangerous silent `as` conversion
  --> src/uu/tail/src/chunks.rs:97:38
   |
97 |             .seek(SeekFrom::Current(-(block_size as i64)))
   |                                      ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: assert without any message
  --> src/uu/tail/src/chunks.rs:99:9
   |
99 |         assert_eq!(pos, pos2);
   |         ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider describing why the failing assert is problematic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_assert_message
   = note: `-W clippy::missing-assert-message` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_assert_message)]`

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:101:9
    |
101 |         self.block_idx += 1;
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: slicing may panic
   --> src/uu/tail/src/chunks.rs:103:14
    |
103 |         Some(buf[0..(block_size as usize)].to_vec())
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n..m)` or `.get_mut(n..m)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/uu/tail/src/chunks.rs:103:21
    |
103 |         Some(buf[0..(block_size as usize)].to_vec())
    |                     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
103 -         Some(buf[0..(block_size as usize)].to_vec())
103 +         Some(buf[0..usize::try_from(block_size)].to_vec())
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/chunks.rs:103:21
    |
103 |         Some(buf[0..(block_size as usize)].to_vec())
    |                     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: item in documentation is missing backticks
   --> src/uu/tail/src/chunks.rs:118:77
    |
118 |     /// Stores the number of bytes, this buffer holds. This is not equal to buffer.len(), since the
    |                                                                             ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
118 -     /// Stores the number of bytes, this buffer holds. This is not equal to buffer.len(), since the
118 +     /// Stores the number of bytes, this buffer holds. This is not equal to `buffer.len()`, since the
    |

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:160:8
    |
160 |     fn from_chunk(chunk: &Self, offset: usize) -> Self {
    |        ^^^^^^^^^^
    |
note: should be placed before `new`
   --> src/uu/tail/src/chunks.rs:128:12
    |
128 |     pub fn new() -> Self {
    |            ^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:213:12
    |
213 |     pub fn fill(&mut self, filehandle: &mut impl BufRead) -> UResult<Option<usize>> {
    |            ^^^^
    |
note: should be placed before `has_data`
   --> src/uu/tail/src/chunks.rs:205:12
    |
205 |     pub fn has_data(&self) -> bool {
    |            ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/chunks.rs:128:5
    |
128 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new() -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:128:5
    |
128 | /     pub fn new() -> Self {
129 | |         Self {
130 | |             buffer: [0; BUFFER_SIZE],
131 | |             bytes: 0,
132 | |         }
133 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:129:9
    |
129 | /         Self {
130 | |             buffer: [0; BUFFER_SIZE],
131 | |             bytes: 0,
132 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
129 |         return Self {
    |         ++++++

warning: this could be a `const fn`
   --> src/uu/tail/src/chunks.rs:128:5
    |
128 | /     pub fn new() -> Self {
129 | |         Self {
130 | |             buffer: [0; BUFFER_SIZE],
131 | |             bytes: 0,
132 | |         }
133 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
128 |     pub const fn new() -> Self {
    |         +++++

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:168:9
    |
168 | /         Self {
169 | |             buffer,
170 | |             bytes: chunk.bytes - offset,
171 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
168 |         return Self {
    |         ++++++

warning: slicing may panic
   --> src/uu/tail/src/chunks.rs:167:9
    |
167 |         buffer[..slice.len()].copy_from_slice(slice);
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(..n)`or `.get_mut(..n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:170:20
    |
170 |             bytes: chunk.bytes - offset,
    |                    ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/chunks.rs:186:5
    |
186 |     pub fn get_buffer(&self) -> &[u8] {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_buffer(&self) -> &[u8]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:186:5
    |
186 | /     pub fn get_buffer(&self) -> &[u8] {
187 | |         &self.buffer[..self.bytes]
188 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:187:9
    |
187 |         &self.buffer[..self.bytes]
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
187 |         return &self.buffer[..self.bytes]
    |         ++++++

warning: slicing may panic
   --> src/uu/tail/src/chunks.rs:187:10
    |
187 |         &self.buffer[..self.bytes]
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(..n)`or `.get_mut(..n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/chunks.rs:201:5
    |
201 |     pub fn get_buffer_with(&self, offset: usize) -> &[u8] {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_buffer_with(&self, offset: usize) -> &[u8]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:201:5
    |
201 | /     pub fn get_buffer_with(&self, offset: usize) -> &[u8] {
202 | |         &self.buffer[offset..self.bytes]
203 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:202:9
    |
202 |         &self.buffer[offset..self.bytes]
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
202 |         return &self.buffer[offset..self.bytes]
    |         ++++++

warning: slicing may panic
   --> src/uu/tail/src/chunks.rs:202:10
    |
202 |         &self.buffer[offset..self.bytes]
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n..m)` or `.get_mut(n..m)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/chunks.rs:205:5
    |
205 |     pub fn has_data(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_data(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:205:5
    |
205 | /     pub fn has_data(&self) -> bool {
206 | |         self.bytes > 0
207 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:206:9
    |
206 |         self.bytes > 0
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
206 |         return self.bytes > 0
    |         ++++++

warning: this could be a `const fn`
   --> src/uu/tail/src/chunks.rs:205:5
    |
205 | /     pub fn has_data(&self) -> bool {
206 | |         self.bytes > 0
207 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
205 |     pub const fn has_data(&self) -> bool {
    |         +++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/chunks.rs:213:5
    |
213 |     pub fn fill(&mut self, filehandle: &mut impl BufRead) -> UResult<Option<usize>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: `impl Trait` used as a function parameter
   --> src/uu/tail/src/chunks.rs:213:45
    |
213 |     pub fn fill(&mut self, filehandle: &mut impl BufRead) -> UResult<Option<usize>> {
    |                                             ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
help: add a type parameter
    |
213 |     pub fn fill<{ /* Generic name */ }: BufRead>(&mut self, filehandle: &mut impl BufRead) -> UResult<Option<usize>> {
    |                +++++++++++++++++++++++++++++++++

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:213:5
    |
213 | /     pub fn fill(&mut self, filehandle: &mut impl BufRead) -> UResult<Option<usize>> {
214 | |         let num_bytes = filehandle.read(&mut self.buffer)?;
215 | |         self.bytes = num_bytes;
216 | |         if num_bytes == 0 {
...   |
220 | |         Ok(Some(self.bytes))
221 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:220:9
    |
220 |         Ok(Some(self.bytes))
    |         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
220 |         return Ok(Some(self.bytes))
    |         ++++++

warning: question mark operator was used
   --> src/uu/tail/src/chunks.rs:214:25
    |
214 |         let num_bytes = filehandle.read(&mut self.buffer)?;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:232:5
    |
232 |     bytes: u64,
    |     ^^^^^
    |
note: should be placed before `num_print`
   --> src/uu/tail/src/chunks.rs:228:5
    |
228 |     num_print: u64,
    |     ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:288:12
    |
288 |     pub fn fill(&mut self, reader: &mut impl BufRead) -> UResult<()> {
    |            ^^^^
    |
note: should be placed before `new`
   --> src/uu/tail/src/chunks.rs:258:12
    |
258 |     pub fn new(num_print: u64) -> Self {
    |            ^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:329:12
    |
329 |     pub fn has_data(&self) -> bool {
    |            ^^^^^^^^
    |
note: should be placed before `print`
   --> src/uu/tail/src/chunks.rs:322:12
    |
322 |     pub fn print(&self, writer: &mut impl Write) -> UResult<()> {
    |            ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/chunks.rs:258:5
    |
258 |     pub fn new(num_print: u64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(num_print: u64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:258:5
    |
258 | /     pub fn new(num_print: u64) -> Self {
259 | |         Self {
260 | |             bytes: 0,
261 | |             num_print,
...   |
264 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:259:9
    |
259 | /         Self {
260 | |             bytes: 0,
261 | |             num_print,
262 | |             chunks: VecDeque::new(),
263 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
259 |         return Self {
    |         ++++++

warning: this could be a `const fn`
   --> src/uu/tail/src/chunks.rs:258:5
    |
258 | /     pub fn new(num_print: u64) -> Self {
259 | |         Self {
260 | |             bytes: 0,
261 | |             num_print,
...   |
264 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
258 |     pub const fn new(num_print: u64) -> Self {
    |         +++++

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/chunks.rs:288:5
    |
288 |     pub fn fill(&mut self, reader: &mut impl BufRead) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/chunks.rs:298:25
    |
298 |                 chunk = self.chunks.pop_front().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/chunks.rs:288:5
    |
288 |     pub fn fill(&mut self, reader: &mut impl BufRead) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: `impl Trait` used as a function parameter
   --> src/uu/tail/src/chunks.rs:288:41
    |
288 |     pub fn fill(&mut self, reader: &mut impl BufRead) -> UResult<()> {
    |                                         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
help: add a type parameter
    |
288 |     pub fn fill<{ /* Generic name */ }: BufRead>(&mut self, reader: &mut impl BufRead) -> UResult<()> {
    |                +++++++++++++++++++++++++++++++++

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:288:5
    |
288 | /     pub fn fill(&mut self, reader: &mut impl BufRead) -> UResult<()> {
289 | |         let mut chunk = Box::new(BytesChunk::new());
...   |
319 | |         Ok(())
320 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: used unwrap or expect in a function that returns result or option
   --> src/uu/tail/src/chunks.rs:288:5
    |
288 | /     pub fn fill(&mut self, reader: &mut impl BufRead) -> UResult<()> {
289 | |         let mut chunk = Box::new(BytesChunk::new());
...   |
319 | |         Ok(())
320 | |     }
    | |_____^
    |
    = help: unwrap and expect should not be used in a function that returns result or option
note: potential non-recoverable error(s)
   --> src/uu/tail/src/chunks.rs:298:25
    |
298 |                 chunk = self.chunks.pop_front().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
310 |         let chunk = self.chunks.pop_front().unwrap();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_in_result

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:319:9
    |
319 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
319 |         return Ok(())
    |         ++++++

warning: question mark operator was used
   --> src/uu/tail/src/chunks.rs:292:15
    |
292 |         while chunk.fill(reader)?.is_some() {
    |               ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:293:13
    |
293 |             self.bytes += chunk.bytes as u64;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/chunks.rs:293:27
    |
293 |             self.bytes += chunk.bytes as u64;
    |                           ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: indexing may panic
   --> src/uu/tail/src/chunks.rs:296:26
    |
296 |             let first = &self.chunks[0];
    |                          ^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:297:16
    |
297 |             if self.bytes - first.bytes as u64 > self.num_print {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/chunks.rs:297:29
    |
297 |             if self.bytes - first.bytes as u64 > self.num_print {
    |                             ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/chunks.rs:298:25
    |
298 |                 chunk = self.chunks.pop_front().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:299:17
    |
299 |                 self.bytes -= chunk.bytes as u64;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/chunks.rs:299:31
    |
299 |                 self.bytes -= chunk.bytes as u64;
    |                               ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/chunks.rs:310:21
    |
310 |         let chunk = self.chunks.pop_front().unwrap();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: `chunk` shadows a previous, unrelated binding
   --> src/uu/tail/src/chunks.rs:310:13
    |
310 |         let chunk = self.chunks.pop_front().unwrap();
    |             ^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/chunks.rs:289:13
    |
289 |         let mut chunk = Box::new(BytesChunk::new());
    |             ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated
    = note: `-W clippy::shadow-unrelated` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_unrelated)]`

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/uu/tail/src/chunks.rs:315:22
    |
315 |         let offset = self.bytes.saturating_sub(self.num_print) as usize;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
315 -         let offset = self.bytes.saturating_sub(self.num_print) as usize;
315 +         let offset = usize::try_from(self.bytes.saturating_sub(self.num_print));
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/chunks.rs:315:22
    |
315 |         let offset = self.bytes.saturating_sub(self.num_print) as usize;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/chunks.rs:322:5
    |
322 |     pub fn print(&self, writer: &mut impl Write) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: `impl Trait` used as a function parameter
   --> src/uu/tail/src/chunks.rs:322:38
    |
322 |     pub fn print(&self, writer: &mut impl Write) -> UResult<()> {
    |                                      ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
help: add a type parameter
    |
322 |     pub fn print<{ /* Generic name */ }: Write>(&self, writer: &mut impl Write) -> UResult<()> {
    |                 +++++++++++++++++++++++++++++++

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:322:5
    |
322 | /     pub fn print(&self, writer: &mut impl Write) -> UResult<()> {
323 | |         for chunk in &self.chunks {
324 | |             writer.write_all(chunk.get_buffer())?;
...   |
327 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:326:9
    |
326 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
326 |         return Ok(())
    |         ++++++

warning: question mark operator was used
   --> src/uu/tail/src/chunks.rs:324:13
    |
324 |             writer.write_all(chunk.get_buffer())?;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/chunks.rs:329:5
    |
329 |     pub fn has_data(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_data(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:329:5
    |
329 | /     pub fn has_data(&self) -> bool {
330 | |         !self.chunks.is_empty()
331 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:330:9
    |
330 |         !self.chunks.is_empty()
    |         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
330 |         return !self.chunks.is_empty()
    |         ++++++

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:345:5
    |
345 |     delimiter: u8,
    |     ^^^^^^^^^
    |
note: should be placed before `lines`
   --> src/uu/tail/src/chunks.rs:343:5
    |
343 |     lines: usize,
    |     ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:373:8
    |
373 |     fn count_lines(&self) -> usize {
    |        ^^^^^^^^^^^
    |
note: should be placed before `new`
   --> src/uu/tail/src/chunks.rs:349:12
    |
349 |     pub fn new(delimiter: u8) -> Self {
    |            ^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:439:12
    |
439 |     pub fn get_buffer(&self) -> &[u8] {
    |            ^^^^^^^^^^
    |
note: should be placed before `has_data`
   --> src/uu/tail/src/chunks.rs:432:12
    |
432 |     pub fn has_data(&self) -> bool {
    |            ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:461:12
    |
461 |     pub fn fill(&mut self, filehandle: &mut impl BufRead) -> UResult<Option<usize>> {
    |            ^^^^
    |
note: should be placed before `get_lines`
   --> src/uu/tail/src/chunks.rs:453:12
    |
453 |     pub fn get_lines(&self) -> usize {
    |            ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:495:8
    |
495 |     fn calculate_bytes_offset_from(&self, offset: usize) -> usize {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: should be placed before `fill`
   --> src/uu/tail/src/chunks.rs:461:12
    |
461 |     pub fn fill(&mut self, filehandle: &mut impl BufRead) -> UResult<Option<usize>> {
    |            ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:527:12
    |
527 |     pub fn print_bytes(&self, writer: &mut impl Write, offset: usize) -> UResult<()> {
    |            ^^^^^^^^^^^
    |
note: should be placed before `print_lines`
   --> src/uu/tail/src/chunks.rs:517:12
    |
517 |     pub fn print_lines(&self, writer: &mut impl Write, offset: usize) -> UResult<()> {
    |            ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/chunks.rs:349:5
    |
349 |     pub fn new(delimiter: u8) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(delimiter: u8) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:349:5
    |
349 | /     pub fn new(delimiter: u8) -> Self {
350 | |         Self {
351 | |             chunk: BytesChunk::new(),
352 | |             lines: 0,
...   |
355 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:350:9
    |
350 | /         Self {
351 | |             chunk: BytesChunk::new(),
352 | |             lines: 0,
353 | |             delimiter,
354 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
350 |         return Self {
    |         ++++++

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:374:9
    |
374 |         memchr::memchr_iter(self.delimiter, self.get_buffer()).count()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
374 |         return memchr::memchr_iter(self.delimiter, self.get_buffer()).count()
    |         ++++++

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:411:9
    |
411 | /         Self {
412 | |             chunk: new_chunk,
413 | |             lines: chunk.lines - offset,
414 | |             delimiter: chunk.delimiter,
415 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
411 |         return Self {
    |         ++++++

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:413:20
    |
413 |             lines: chunk.lines - offset,
    |                    ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/chunks.rs:432:5
    |
432 |     pub fn has_data(&self) -> bool {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn has_data(&self) -> bool`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:432:5
    |
432 | /     pub fn has_data(&self) -> bool {
433 | |         self.chunk.has_data()
434 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:433:9
    |
433 |         self.chunk.has_data()
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
433 |         return self.chunk.has_data()
    |         ++++++

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/chunks.rs:439:5
    |
439 |     pub fn get_buffer(&self) -> &[u8] {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_buffer(&self) -> &[u8]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:439:5
    |
439 | /     pub fn get_buffer(&self) -> &[u8] {
440 | |         self.chunk.get_buffer()
441 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:440:9
    |
440 |         self.chunk.get_buffer()
    |         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
440 |         return self.chunk.get_buffer()
    |         ++++++

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/chunks.rs:446:5
    |
446 |     pub fn get_buffer_with(&self, offset: usize) -> &[u8] {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_buffer_with(&self, offset: usize) -> &[u8]`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:446:5
    |
446 | /     pub fn get_buffer_with(&self, offset: usize) -> &[u8] {
447 | |         self.chunk.get_buffer_with(offset)
448 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:447:9
    |
447 |         self.chunk.get_buffer_with(offset)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
447 |         return self.chunk.get_buffer_with(offset)
    |         ++++++

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/chunks.rs:453:5
    |
453 |     pub fn get_lines(&self) -> usize {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn get_lines(&self) -> usize`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:453:5
    |
453 | /     pub fn get_lines(&self) -> usize {
454 | |         self.lines
455 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:454:9
    |
454 |         self.lines
    |         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
454 |         return self.lines
    |         ++++++

warning: this could be a `const fn`
   --> src/uu/tail/src/chunks.rs:453:5
    |
453 | /     pub fn get_lines(&self) -> usize {
454 | |         self.lines
455 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
453 |     pub const fn get_lines(&self) -> usize {
    |         +++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/chunks.rs:461:5
    |
461 |     pub fn fill(&mut self, filehandle: &mut impl BufRead) -> UResult<Option<usize>> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: `impl Trait` used as a function parameter
   --> src/uu/tail/src/chunks.rs:461:45
    |
461 |     pub fn fill(&mut self, filehandle: &mut impl BufRead) -> UResult<Option<usize>> {
    |                                             ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
help: add a type parameter
    |
461 |     pub fn fill<{ /* Generic name */ }: BufRead>(&mut self, filehandle: &mut impl BufRead) -> UResult<Option<usize>> {
    |                +++++++++++++++++++++++++++++++++

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:461:5
    |
461 | /     pub fn fill(&mut self, filehandle: &mut impl BufRead) -> UResult<Option<usize>> {
462 | |         match self.chunk.fill(filehandle)? {
463 | |             None => {
464 | |                 self.lines = 0;
...   |
472 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:465:17
    |
465 |                 Ok(None)
    |                 ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
465 |                 return Ok(None)
    |                 ++++++

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:469:17
    |
469 |                 Ok(Some(bytes))
    |                 ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
469 |                 return Ok(Some(bytes))
    |                 ++++++

warning: question mark operator was used
   --> src/uu/tail/src/chunks.rs:462:15
    |
462 |         match self.chunk.fill(filehandle)? {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:507:9
    |
507 |         bytes_offset
    |         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
507 |         return bytes_offset
    |         ++++++

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:503:17
    |
503 |                 lines_offset -= 1;
    |                 ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:505:13
    |
505 |             bytes_offset += 1;
    |             ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/chunks.rs:517:5
    |
517 |     pub fn print_lines(&self, writer: &mut impl Write, offset: usize) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: `impl Trait` used as a function parameter
   --> src/uu/tail/src/chunks.rs:517:44
    |
517 |     pub fn print_lines(&self, writer: &mut impl Write, offset: usize) -> UResult<()> {
    |                                            ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
help: add a type parameter
    |
517 |     pub fn print_lines<{ /* Generic name */ }: Write>(&self, writer: &mut impl Write, offset: usize) -> UResult<()> {
    |                       +++++++++++++++++++++++++++++++

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:517:5
    |
517 | /     pub fn print_lines(&self, writer: &mut impl Write, offset: usize) -> UResult<()> {
518 | |         self.print_bytes(writer, self.calculate_bytes_offset_from(offset))
519 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:518:9
    |
518 |         self.print_bytes(writer, self.calculate_bytes_offset_from(offset))
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
518 |         return self.print_bytes(writer, self.calculate_bytes_offset_from(offset))
    |         ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/chunks.rs:527:5
    |
527 |     pub fn print_bytes(&self, writer: &mut impl Write, offset: usize) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: `impl Trait` used as a function parameter
   --> src/uu/tail/src/chunks.rs:527:44
    |
527 |     pub fn print_bytes(&self, writer: &mut impl Write, offset: usize) -> UResult<()> {
    |                                            ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
help: add a type parameter
    |
527 |     pub fn print_bytes<{ /* Generic name */ }: Write>(&self, writer: &mut impl Write, offset: usize) -> UResult<()> {
    |                       +++++++++++++++++++++++++++++++

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:527:5
    |
527 | /     pub fn print_bytes(&self, writer: &mut impl Write, offset: usize) -> UResult<()> {
528 | |         writer.write_all(self.get_buffer_with(offset))?;
529 | |         Ok(())
530 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:529:9
    |
529 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
529 |         return Ok(())
    |         ++++++

warning: question mark operator was used
   --> src/uu/tail/src/chunks.rs:528:9
    |
528 |         writer.write_all(self.get_buffer_with(offset))?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: first doc comment paragraph is too long
   --> src/uu/tail/src/chunks.rs:533:1
    |
533 | / /// An abstraction layer on top of [`LinesChunk`] mainly to simplify filling only the needed amount
534 | | /// of chunks. See also [`Self::fill`]. Works similar like [`BytesChunkBuffer`], but works on top
535 | | /// of lines delimited by `self.delimiter` instead of bytes.
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:546:5
    |
546 |     chunks: VecDeque<Box<LinesChunk>>,
    |     ^^^^^^
    |
note: should be placed before `num_print`
   --> src/uu/tail/src/chunks.rs:544:5
    |
544 |     num_print: u64,
    |     ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/chunks.rs:565:12
    |
565 |     pub fn fill(&mut self, reader: &mut impl BufRead) -> UResult<()> {
    |            ^^^^
    |
note: should be placed before `new`
   --> src/uu/tail/src/chunks.rs:551:12
    |
551 |     pub fn new(delimiter: u8, num_print: u64) -> Self {
    |            ^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: this method could have a `#[must_use]` attribute
   --> src/uu/tail/src/chunks.rs:551:5
    |
551 |     pub fn new(delimiter: u8, num_print: u64) -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add the attribute: `#[must_use] pub fn new(delimiter: u8, num_print: u64) -> Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#must_use_candidate

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:551:5
    |
551 | /     pub fn new(delimiter: u8, num_print: u64) -> Self {
552 | |         Self {
553 | |             delimiter,
554 | |             num_print,
...   |
558 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:552:9
    |
552 | /         Self {
553 | |             delimiter,
554 | |             num_print,
555 | |             lines: 0,
556 | |             chunks: VecDeque::new(),
557 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
552 |         return Self {
    |         ++++++

warning: this could be a `const fn`
   --> src/uu/tail/src/chunks.rs:551:5
    |
551 | /     pub fn new(delimiter: u8, num_print: u64) -> Self {
552 | |         Self {
553 | |             delimiter,
554 | |             num_print,
...   |
558 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
551 |     pub const fn new(delimiter: u8, num_print: u64) -> Self {
    |         +++++

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/chunks.rs:565:5
    |
565 |     pub fn fill(&mut self, reader: &mut impl BufRead) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/chunks.rs:574:25
    |
574 |                 chunk = self.chunks.pop_front().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/chunks.rs:565:5
    |
565 |     pub fn fill(&mut self, reader: &mut impl BufRead) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: `impl Trait` used as a function parameter
   --> src/uu/tail/src/chunks.rs:565:41
    |
565 |     pub fn fill(&mut self, reader: &mut impl BufRead) -> UResult<()> {
    |                                         ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
help: add a type parameter
    |
565 |     pub fn fill<{ /* Generic name */ }: BufRead>(&mut self, reader: &mut impl BufRead) -> UResult<()> {
    |                +++++++++++++++++++++++++++++++++

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:565:5
    |
565 | /     pub fn fill(&mut self, reader: &mut impl BufRead) -> UResult<()> {
566 | |         let mut chunk = Box::new(LinesChunk::new(self.delimiter));
567 | |
568 | |         while chunk.fill(reader)?.is_some() {
...   |
617 | |         Ok(())
618 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: used unwrap or expect in a function that returns result or option
   --> src/uu/tail/src/chunks.rs:565:5
    |
565 | /     pub fn fill(&mut self, reader: &mut impl BufRead) -> UResult<()> {
566 | |         let mut chunk = Box::new(LinesChunk::new(self.delimiter));
567 | |
568 | |         while chunk.fill(reader)?.is_some() {
...   |
617 | |         Ok(())
618 | |     }
    | |_____^
    |
    = help: unwrap and expect should not be used in a function that returns result or option
note: potential non-recoverable error(s)
   --> src/uu/tail/src/chunks.rs:574:25
    |
574 |                 chunk = self.chunks.pop_front().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
599 |             let chunk = self.chunks.pop_front().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_in_result

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:617:9
    |
617 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
617 |         return Ok(())
    |         ++++++

warning: question mark operator was used
   --> src/uu/tail/src/chunks.rs:568:15
    |
568 |         while chunk.fill(reader)?.is_some() {
    |               ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:569:13
    |
569 |             self.lines += chunk.lines as u64;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/chunks.rs:569:27
    |
569 |             self.lines += chunk.lines as u64;
    |                           ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: indexing may panic
   --> src/uu/tail/src/chunks.rs:572:26
    |
572 |             let first = &self.chunks[0];
    |                          ^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:573:16
    |
573 |             if self.lines - first.lines as u64 > self.num_print {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/chunks.rs:573:29
    |
573 |             if self.lines - first.lines as u64 > self.num_print {
    |                             ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/chunks.rs:574:25
    |
574 |                 chunk = self.chunks.pop_front().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:576:17
    |
576 |                 self.lines -= chunk.lines as u64;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/chunks.rs:576:31
    |
576 |                 self.lines -= chunk.lines as u64;
    |                               ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: indexing may panic
   --> src/uu/tail/src/chunks.rs:587:29
    |
587 |             let last = &mut self.chunks[length - 1];
    |                             ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:587:41
    |
587 |             let last = &mut self.chunks[length - 1];
    |                                         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:589:17
    |
589 |                 last.lines += 1;
    |                 ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:590:17
    |
590 |                 self.lines += 1;
    |                 ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/chunks.rs:599:25
    |
599 |             let chunk = self.chunks.pop_front().unwrap();
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: `chunk` shadows a previous, unrelated binding
   --> src/uu/tail/src/chunks.rs:599:17
    |
599 |             let chunk = self.chunks.pop_front().unwrap();
    |                 ^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/chunks.rs:566:13
    |
566 |         let mut chunk = Box::new(LinesChunk::new(self.delimiter));
    |             ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:602:24
    |
602 |             let skip = self.lines - chunk.lines as u64 > self.num_print;
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/chunks.rs:602:37
    |
602 |             let skip = self.lines - chunk.lines as u64 > self.num_print;
    |                                     ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/chunks.rs:604:17
    |
604 |                 self.lines -= chunk.lines as u64;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/chunks.rs:604:31
    |
604 |                 self.lines -= chunk.lines as u64;
    |                               ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `chunk` shadows a previous, unrelated binding
   --> src/uu/tail/src/chunks.rs:596:13
    |
596 |         let chunk = loop {
    |             ^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/chunks.rs:566:13
    |
566 |         let mut chunk = Box::new(LinesChunk::new(self.delimiter));
    |             ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/uu/tail/src/chunks.rs:613:26
    |
613 |         let skip_lines = self.lines.saturating_sub(self.num_print) as usize;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
613 -         let skip_lines = self.lines.saturating_sub(self.num_print) as usize;
613 +         let skip_lines = usize::try_from(self.lines.saturating_sub(self.num_print));
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/chunks.rs:613:26
    |
613 |         let skip_lines = self.lines.saturating_sub(self.num_print) as usize;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `chunk` is shadowed
   --> src/uu/tail/src/chunks.rs:614:13
    |
614 |         let chunk = LinesChunk::from_chunk(&chunk, skip_lines);
    |             ^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/chunks.rs:596:13
    |
596 |         let chunk = loop {
    |             ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/chunks.rs:620:5
    |
620 |     pub fn print(&self, mut writer: impl Write) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: `impl Trait` used as a function parameter
   --> src/uu/tail/src/chunks.rs:620:37
    |
620 |     pub fn print(&self, mut writer: impl Write) -> UResult<()> {
    |                                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
help: add a type parameter
    |
620 |     pub fn print<{ /* Generic name */ }: Write>(&self, mut writer: impl Write) -> UResult<()> {
    |                 +++++++++++++++++++++++++++++++

warning: missing `#[inline]` for a method
   --> src/uu/tail/src/chunks.rs:620:5
    |
620 | /     pub fn print(&self, mut writer: impl Write) -> UResult<()> {
621 | |         for chunk in &self.chunks {
622 | |             chunk.print_bytes(&mut writer, 0)?;
...   |
625 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/uu/tail/src/chunks.rs:624:9
    |
624 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
624 |         return Ok(())
    |         ++++++

warning: question mark operator was used
   --> src/uu/tail/src/chunks.rs:622:13
    |
622 |             chunk.print_bytes(&mut writer, 0)?;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing documentation for a module
  --> src/uu/tail/src/tail.rs:18:1
   |
18 | mod follow;
   | ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/follow/files.rs:10:35
   |
10 | use crate::paths::{HeaderPrinter, PathExtTail};
   |                                   ^^^^^^^^^^^ help: use: `PathExtTail as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/follow/files.rs:15:46
   |
15 | use std::io::{BufRead, BufReader, BufWriter, Write, stdout};
   |                                              ^^^^^ help: use: `Write as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: item in documentation is missing backticks
  --> src/uu/tail/src/follow/files.rs:21:21
   |
21 | /// The keys of the HashMap can point to an existing file path (normal case),
   |                     ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
21 - /// The keys of the HashMap can point to an existing file path (normal case),
21 + /// The keys of the `HashMap` can point to an existing file path (normal case),
   |

warning: item in documentation is missing backticks
  --> src/uu/tail/src/follow/files.rs:23:41
   |
23 | /// For existing files, all keys in the HashMap are absolute Paths.
   |                                         ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
23 - /// For existing files, all keys in the HashMap are absolute Paths.
23 + /// For existing files, all keys in the `HashMap` are absolute Paths.
   |

warning: first doc comment paragraph is too long
  --> src/uu/tail/src/follow/files.rs:19:1
   |
19 | / /// Data structure to keep a handle on files to follow.
20 | | /// `last` always holds the path/key of the last file that was printed from.
21 | | /// The keys of the HashMap can point to an existing file path (normal case),
22 | | /// or stdin ("-"), or to a non existing path (--retry).
23 | | /// For existing files, all keys in the HashMap are absolute Paths.
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph
help: add an empty line
   |
20 | /// Data structure to keep a handle on files to follow.
21 + ///
   |

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/follow/files.rs:26:5
   |
26 |     last: Option<PathBuf>,
   |     ^^^^
   |
note: should be placed before `map`
  --> src/uu/tail/src/follow/files.rs:25:5
   |
25 |     map: HashMap<PathBuf, PathData>,
   |     ^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/follow/files.rs:27:5
   |
27 |     header_printer: HeaderPrinter,
   |     ^^^^^^^^^^^^^^
   |
note: should be placed before `last`
  --> src/uu/tail/src/follow/files.rs:26:5
   |
26 |     last: Option<PathBuf>,
   |     ^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/follow/files.rs:54:12
   |
54 |     pub fn get(&self, k: &Path) -> &PathData {
   |            ^^^
   |
note: should be placed before `remove`
  --> src/uu/tail/src/follow/files.rs:49:12
   |
49 |     pub fn remove(&mut self, k: &Path) -> PathData {
   |            ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/follow/files.rs:64:8
   |
64 |     fn canonicalize_path(path: &Path) -> PathBuf {
   |        ^^^^^^^^^^^^^^^^^
   |
note: should be placed before `get_mut`
  --> src/uu/tail/src/follow/files.rs:59:12
   |
59 |     pub fn get_mut(&mut self, k: &Path) -> &mut PathData {
   |            ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/follow/files.rs:81:12
   |
81 |     pub fn contains_key(&self, k: &Path) -> bool {
   |            ^^^^^^^^^^^^
   |
note: should be placed before `keys`
  --> src/uu/tail/src/follow/files.rs:77:12
   |
77 |     pub fn keys(&self) -> Keys<PathBuf, PathData> {
   |            ^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/follow/files.rs:95:12
   |
95 |     pub fn files_remaining(&self) -> bool {
   |            ^^^^^^^^^^^^^^^
   |
note: should be placed before `only_stdin_remaining`
  --> src/uu/tail/src/follow/files.rs:90:12
   |
90 |     pub fn only_stdin_remaining(&self) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/follow/files.rs:129:12
    |
129 |     pub fn update_metadata(&mut self, path: &Path, metadata: Option<Metadata>) {
    |            ^^^^^^^^^^^^^^^
    |
note: should be placed before `update_reader`
   --> src/uu/tail/src/follow/files.rs:115:12
    |
115 |     pub fn update_reader(&mut self, path: &Path) -> UResult<()> {
    |            ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/follow/files.rs:138:12
    |
138 |     pub fn tail_file(&mut self, path: &Path, verbose: bool) -> UResult<bool> {
    |            ^^^^^^^^^
    |
note: should be placed before `update_metadata`
   --> src/uu/tail/src/follow/files.rs:129:12
    |
129 |     pub fn update_metadata(&mut self, path: &Path, metadata: Option<Metadata>) {
    |            ^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/follow/files.rs:162:12
    |
162 |     pub fn needs_header(&self, path: &Path, verbose: bool) -> bool {
    |            ^^^^^^^^^^^^
    |
note: should be placed before `tail_file`
   --> src/uu/tail/src/follow/files.rs:138:12
    |
138 |     pub fn tail_file(&mut self, path: &Path, verbose: bool) -> UResult<bool> {
    |            ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
  --> src/uu/tail/src/follow/files.rs:32:9
   |
32 | /         Self {
33 | |             map: HashMap::with_capacity(settings.inputs.len()),
34 | |             last: None,
35 | |             header_printer: HeaderPrinter::new(settings.verbose, false),
36 | |         }
   | |_________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
32 |         return Self {
   |         ++++++

warning: item in documentation is missing backticks
  --> src/uu/tail/src/follow/files.rs:39:21
   |
39 |     /// Wrapper for HashMap::insert using Path::canonicalize
   |                     ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
39 -     /// Wrapper for HashMap::insert using Path::canonicalize
39 +     /// Wrapper for `HashMap::insert` using Path::canonicalize
   |

warning: item in documentation is missing backticks
  --> src/uu/tail/src/follow/files.rs:39:43
   |
39 |     /// Wrapper for HashMap::insert using Path::canonicalize
   |                                           ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
39 -     /// Wrapper for HashMap::insert using Path::canonicalize
39 +     /// Wrapper for HashMap::insert using `Path::canonicalize`
   |

warning: this ident consists of a single char
  --> src/uu/tail/src/follow/files.rs:40:30
   |
40 |     pub fn insert(&mut self, k: &Path, v: PathData, update_last: bool) {
   |                              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
  --> src/uu/tail/src/follow/files.rs:40:40
   |
40 |     pub fn insert(&mut self, k: &Path, v: PathData, update_last: bool) {
   |                                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `k` is shadowed
  --> src/uu/tail/src/follow/files.rs:41:13
   |
41 |         let k = Self::canonicalize_path(k);
   |             ^
   |
note: previous binding is here
  --> src/uu/tail/src/follow/files.rs:40:30
   |
40 |     pub fn insert(&mut self, k: &Path, v: PathData, update_last: bool) {
   |                              ^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: this ident consists of a single char
  --> src/uu/tail/src/follow/files.rs:41:13
   |
41 |         let k = Self::canonicalize_path(k);
   |             ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: non-binding `let` without a type annotation
  --> src/uu/tail/src/follow/files.rs:45:9
   |
45 |         let _ = self.map.insert(k, v);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
help: consider adding a type annotation
  --> src/uu/tail/src/follow/files.rs:45:14
   |
45 |         let _ = self.map.insert(k, v);
   |              ^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_untyped
   = note: `-W clippy::let-underscore-untyped` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::let_underscore_untyped)]`

warning: item in documentation is missing backticks
  --> src/uu/tail/src/follow/files.rs:48:21
   |
48 |     /// Wrapper for HashMap::remove using Path::canonicalize
   |                     ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
48 -     /// Wrapper for HashMap::remove using Path::canonicalize
48 +     /// Wrapper for `HashMap::remove` using Path::canonicalize
   |

warning: item in documentation is missing backticks
  --> src/uu/tail/src/follow/files.rs:48:43
   |
48 |     /// Wrapper for HashMap::remove using Path::canonicalize
   |                                           ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
48 -     /// Wrapper for HashMap::remove using Path::canonicalize
48 +     /// Wrapper for HashMap::remove using `Path::canonicalize`
   |

warning: docs for function which may panic missing `# Panics` section
  --> src/uu/tail/src/follow/files.rs:49:5
   |
49 |     pub fn remove(&mut self, k: &Path) -> PathData {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uu/tail/src/follow/files.rs:50:9
   |
50 |         self.map.remove(&Self::canonicalize_path(k)).unwrap()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `return` statement
  --> src/uu/tail/src/follow/files.rs:50:9
   |
50 |         self.map.remove(&Self::canonicalize_path(k)).unwrap()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
50 |         return self.map.remove(&Self::canonicalize_path(k)).unwrap()
   |         ++++++

warning: this ident consists of a single char
  --> src/uu/tail/src/follow/files.rs:49:30
   |
49 |     pub fn remove(&mut self, k: &Path) -> PathData {
   |                              ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: used `unwrap()` on an `Option` value
  --> src/uu/tail/src/follow/files.rs:50:9
   |
50 |         self.map.remove(&Self::canonicalize_path(k)).unwrap()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: item in documentation is missing backticks
  --> src/uu/tail/src/follow/files.rs:53:21
   |
53 |     /// Wrapper for HashMap::get using Path::canonicalize
   |                     ^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
53 -     /// Wrapper for HashMap::get using Path::canonicalize
53 +     /// Wrapper for `HashMap::get` using Path::canonicalize
   |

warning: item in documentation is missing backticks
  --> src/uu/tail/src/follow/files.rs:53:40
   |
53 |     /// Wrapper for HashMap::get using Path::canonicalize
   |                                        ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
53 -     /// Wrapper for HashMap::get using Path::canonicalize
53 +     /// Wrapper for HashMap::get using `Path::canonicalize`
   |

warning: docs for function which may panic missing `# Panics` section
  --> src/uu/tail/src/follow/files.rs:54:5
   |
54 |     pub fn get(&self, k: &Path) -> &PathData {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uu/tail/src/follow/files.rs:55:9
   |
55 |         self.map.get(&Self::canonicalize_path(k)).unwrap()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `return` statement
  --> src/uu/tail/src/follow/files.rs:55:9
   |
55 |         self.map.get(&Self::canonicalize_path(k)).unwrap()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
55 |         return self.map.get(&Self::canonicalize_path(k)).unwrap()
   |         ++++++

warning: this ident consists of a single char
  --> src/uu/tail/src/follow/files.rs:54:23
   |
54 |     pub fn get(&self, k: &Path) -> &PathData {
   |                       ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: called `.get().unwrap()` on a HashMap
  --> src/uu/tail/src/follow/files.rs:55:9
   |
55 |         self.map.get(&Self::canonicalize_path(k)).unwrap()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_unwrap
   = note: `-W clippy::get-unwrap` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::get_unwrap)]`
help: using `[]` is clearer and more concise
   |
55 -         self.map.get(&Self::canonicalize_path(k)).unwrap()
55 +         &self.map[&Self::canonicalize_path(k)]
   |

warning: used `unwrap()` on an `Option` value
  --> src/uu/tail/src/follow/files.rs:55:9
   |
55 |         self.map.get(&Self::canonicalize_path(k)).unwrap()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: item in documentation is missing backticks
  --> src/uu/tail/src/follow/files.rs:58:21
   |
58 |     /// Wrapper for HashMap::get_mut using Path::canonicalize
   |                     ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
58 -     /// Wrapper for HashMap::get_mut using Path::canonicalize
58 +     /// Wrapper for `HashMap::get_mut` using Path::canonicalize
   |

warning: item in documentation is missing backticks
  --> src/uu/tail/src/follow/files.rs:58:44
   |
58 |     /// Wrapper for HashMap::get_mut using Path::canonicalize
   |                                            ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
   |
58 -     /// Wrapper for HashMap::get_mut using Path::canonicalize
58 +     /// Wrapper for HashMap::get_mut using `Path::canonicalize`
   |

warning: docs for function which may panic missing `# Panics` section
  --> src/uu/tail/src/follow/files.rs:59:5
   |
59 |     pub fn get_mut(&mut self, k: &Path) -> &mut PathData {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uu/tail/src/follow/files.rs:60:9
   |
60 |         self.map.get_mut(&Self::canonicalize_path(k)).unwrap()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `return` statement
  --> src/uu/tail/src/follow/files.rs:60:9
   |
60 |         self.map.get_mut(&Self::canonicalize_path(k)).unwrap()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
60 |         return self.map.get_mut(&Self::canonicalize_path(k)).unwrap()
   |         ++++++

warning: this ident consists of a single char
  --> src/uu/tail/src/follow/files.rs:59:31
   |
59 |     pub fn get_mut(&mut self, k: &Path) -> &mut PathData {
   |                               ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: used `unwrap()` on an `Option` value
  --> src/uu/tail/src/follow/files.rs:60:9
   |
60 |         self.map.get_mut(&Self::canonicalize_path(k)).unwrap()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing `return` statement
  --> src/uu/tail/src/follow/files.rs:70:9
   |
70 |         path.to_owned()
   |         ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
70 |         return path.to_owned()
   |         ++++++

warning: this ident consists of a single char
  --> src/uu/tail/src/follow/files.rs:66:23
   |
66 |             if let Ok(p) = path.canonicalize() {
   |                       ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uu/tail/src/follow/files.rs:74:9
   |
74 |         self.get_mut(path).metadata.as_ref()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
74 |         return self.get_mut(path).metadata.as_ref()
   |         ++++++

warning: missing `return` statement
  --> src/uu/tail/src/follow/files.rs:78:9
   |
78 |         self.map.keys()
   |         ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
78 |         return self.map.keys()
   |         ++++++

warning: missing `return` statement
  --> src/uu/tail/src/follow/files.rs:82:9
   |
82 |         self.map.contains_key(k)
   |         ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
82 |         return self.map.contains_key(k)
   |         ++++++

warning: this ident consists of a single char
  --> src/uu/tail/src/follow/files.rs:81:32
   |
81 |     pub fn contains_key(&self, k: &Path) -> bool {
   |                                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uu/tail/src/follow/files.rs:86:9
   |
86 |         self.last.as_ref()
   |         ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
86 |         return self.last.as_ref()
   |         ++++++

warning: this could be a `const fn`
  --> src/uu/tail/src/follow/files.rs:85:5
   |
85 | /     pub fn get_last(&self) -> Option<&PathBuf> {
86 | |         self.last.as_ref()
87 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
85 |     pub const fn get_last(&self) -> Option<&PathBuf> {
   |         +++++

warning: missing `return` statement
  --> src/uu/tail/src/follow/files.rs:91:9
   |
91 |         self.map.len() == 1 && (self.map.contains_key(Path::new(text::DASH)))
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
91 |         return self.map.len() == 1 && (self.map.contains_key(Path::new(text::DASH)))
   |         ++++++

warning: missing `return` statement
   --> src/uu/tail/src/follow/files.rs:101:9
    |
101 |         false
    |         ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
101 |         return false
    |         ++++++

warning: iteration over unordered hash-based type
   --> src/uu/tail/src/follow/files.rs:96:9
    |
96  | /         for path in self.map.keys() {
97  | |             if path.is_tailable() || path.is_stdin() {
98  | |                 return true;
99  | |             }
100 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_over_hash_type
    = note: `-W clippy::iter-over-hash-type` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::iter_over_hash_type)]`

warning: missing `return` statement
   --> src/uu/tail/src/follow/files.rs:106:9
    |
106 |         self.map.is_empty() || !self.files_remaining() && !settings.retry
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
106 |         return self.map.is_empty() || !self.files_remaining() && !settings.retry
    |         ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/follow/files.rs:115:5
    |
115 |     pub fn update_reader(&mut self, path: &Path) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uu/tail/src/follow/files.rs:125:9
    |
125 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
125 |         return Ok(())
    |         ++++++

warning: question mark operator was used
   --> src/uu/tail/src/follow/files.rs:124:46
    |
124 |             .replace(Box::new(BufReader::new(File::open(path)?)));
    |                                              ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/follow/files.rs:138:5
    |
138 |     pub fn tail_file(&mut self, path: &Path, verbose: bool) -> UResult<bool> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uu/tail/src/follow/files.rs:155:13
    |
155 |             Ok(true)
    |             ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
155 |             return Ok(true)
    |             ++++++

warning: missing `return` statement
   --> src/uu/tail/src/follow/files.rs:157:13
    |
157 |             Ok(false)
    |             ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
157 |             return Ok(false)
    |             ++++++

warning: question mark operator was used
   --> src/uu/tail/src/follow/files.rs:141:13
    |
141 |             chunks.fill(reader)?;
    |             ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/files.rs:150:13
    |
150 |             chunks.print(&mut writer)?;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/files.rs:151:13
    |
151 |             writer.flush()?;
    |             ^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uu/tail/src/follow/files.rs:165:17
    |
165 |                 !last.eq(&path)
    |                 ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
165 |                 return !last.eq(&path)
    |                 ++++++

warning: missing `return` statement
   --> src/uu/tail/src/follow/files.rs:167:17
    |
167 |                 true
    |                 ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
167 |                 return true
    |                 ++++++

warning: missing `return` statement
   --> src/uu/tail/src/follow/files.rs:170:13
    |
170 |             false
    |             ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
170 |             return false
    |             ++++++

warning: use Option::map_or instead of an if let/else
   --> src/uu/tail/src/follow/files.rs:164:13
    |
164 | /             if let Some(ref last) = self.last {
165 | |                 !last.eq(&path)
166 | |             } else {
167 | |                 true
168 | |             }
    | |_____________^ help: try: `self.last.as_ref().map_or(true, |last| !last.eq(&path))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_if_let_else

warning: item in documentation is missing backticks
   --> src/uu/tail/src/follow/files.rs:175:44
    |
175 | /// Data structure to keep a handle on the BufReader, Metadata
    |                                            ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
175 - /// Data structure to keep a handle on the BufReader, Metadata
175 + /// Data structure to keep a handle on the `BufReader`, Metadata
    |

warning: item in documentation is missing backticks
   --> src/uu/tail/src/follow/files.rs:176:13
    |
176 | /// and the display_name (header_name) of files that are being followed.
    |             ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
176 - /// and the display_name (header_name) of files that are being followed.
176 + /// and the `display_name` (header_name) of files that are being followed.
    |

warning: item in documentation is missing backticks
   --> src/uu/tail/src/follow/files.rs:176:27
    |
176 | /// and the display_name (header_name) of files that are being followed.
    |                           ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown
help: try
    |
176 - /// and the display_name (header_name) of files that are being followed.
176 + /// and the display_name (`header_name`) of files that are being followed.
    |

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/follow/files.rs:179:9
    |
179 |     pub metadata: Option<Metadata>,
    |         ^^^^^^^^
    |
note: should be placed before `reader`
   --> src/uu/tail/src/follow/files.rs:178:9
    |
178 |     pub reader: Option<Box<dyn BufRead>>,
    |         ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/follow/files.rs:180:9
    |
180 |     pub display_name: String,
    |         ^^^^^^^^^^^^
    |
note: should be placed before `metadata`
   --> src/uu/tail/src/follow/files.rs:179:9
    |
179 |     pub metadata: Option<Metadata>,
    |         ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/follow/files.rs:195:12
    |
195 |     pub fn from_other_with_path(data: Self, path: &Path) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^
    |
note: should be placed before `new`
   --> src/uu/tail/src/follow/files.rs:184:12
    |
184 |     pub fn new(
    |            ^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
   --> src/uu/tail/src/follow/files.rs:189:9
    |
189 | /         Self {
190 | |             reader,
191 | |             metadata,
192 | |             display_name: display_name.to_owned(),
193 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
189 |         return Self {
    |         ++++++

warning: missing `return` statement
   --> src/uu/tail/src/follow/files.rs:209:9
    |
209 |         Self::new(reader, path.metadata().ok(), data.display_name.as_str())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
209 |         return Self::new(reader, path.metadata().ok(), data.display_name.as_str())
    |         ++++++

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/follow/files.rs:203:18
    |
203 |             Some(Box::new(BufReader::new(file)) as Box<dyn BufRead>)
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/follow/watch.rs:10:38
   |
10 | use crate::paths::{Input, InputKind, MetadataExtTail, PathExtTail};
   |                                      ^^^^^^^^^^^^^^^ help: use: `MetadataExtTail as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/follow/watch.rs:10:55
   |
10 | use crate::paths::{Input, InputKind, MetadataExtTail, PathExtTail};
   |                                                       ^^^^^^^^^^^ help: use: `PathExtTail as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/follow/watch.rs:16:22
   |
16 | use uucore::display::Quotable;
   |                      ^^^^^^^^ help: use: `Quotable as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/follow/watch.rs:22:5
   |
22 |     receiver: Receiver<Result<notify::Event, notify::Error>>,
   |     ^^^^^^^^
   |
note: should be placed before `watcher`
  --> src/uu/tail/src/follow/watch.rs:21:5
   |
21 |     watcher: Box<dyn Watcher>,
   |     ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/follow/watch.rs:72:8
   |
72 |     fn watch(&mut self, path: &Path, mode: RecursiveMode) -> UResult<()> {
   |        ^^^^^
   |
note: should be placed before `watch_with_parent`
  --> src/uu/tail/src/follow/watch.rs:34:8
   |
34 |     fn watch_with_parent(&mut self, path: &Path) -> UResult<()> {
   |        ^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/follow/watch.rs:78:8
   |
78 |     fn unwatch(&mut self, path: &Path) -> UResult<()> {
   |        ^^^^^^^
   |
note: should be placed before `watch`
  --> src/uu/tail/src/follow/watch.rs:72:8
   |
72 |     fn watch(&mut self, path: &Path, mode: RecursiveMode) -> UResult<()> {
   |        ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
  --> src/uu/tail/src/follow/watch.rs:30:9
   |
30 |         Self { watcher, receiver }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
30 |         return Self { watcher, receiver }
   |         ++++++

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uu/tail/src/follow/watch.rs:34:5
   |
34 |     fn watch_with_parent(&mut self, path: &Path) -> UResult<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
  --> src/uu/tail/src/follow/watch.rs:69:9
   |
69 |         Ok(())
   |         ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
69 |         return Ok(())
   |         ++++++

warning: `mut path` is shadowed
  --> src/uu/tail/src/follow/watch.rs:35:17
   |
35 |         let mut path = path.to_owned();
   |                 ^^^^
   |
note: previous binding is here
  --> src/uu/tail/src/follow/watch.rs:34:37
   |
34 |     fn watch_with_parent(&mut self, path: &Path) -> UResult<()> {
   |                                     ^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: unnecessary semicolon
  --> src/uu/tail/src/follow/watch.rs:61:14
   |
61 |             };
   |              ^ help: remove
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_semicolon
   = note: `-W clippy::unnecessary-semicolon` implied by `-W clippy::pedantic`
   = help: to override `-W clippy::pedantic` add `#[allow(clippy::unnecessary_semicolon)]`

warning: question mark operator was used
  --> src/uu/tail/src/follow/watch.rs:64:20
   |
64 |             path = path.canonicalize()?;
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
  --> src/uu/tail/src/follow/watch.rs:68:9
   |
68 |         self.watch(&path, RecursiveMode::NonRecursive)?;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uu/tail/src/follow/watch.rs:72:5
   |
72 |     fn watch(&mut self, path: &Path, mode: RecursiveMode) -> UResult<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
  --> src/uu/tail/src/follow/watch.rs:73:9
   |
73 | /         self.watcher
74 | |             .watch(path, mode)
75 | |             .map_err(|err| USimpleError::new(1, err.to_string()))
   | |_________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
73 |         return self.watcher
   |         ++++++

warning: missing `return` statement
  --> src/uu/tail/src/follow/watch.rs:75:28
   |
75 |             .map_err(|err| USimpleError::new(1, err.to_string()))
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
75 |             .map_err(|err| return USimpleError::new(1, err.to_string()))
   |                            ++++++

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uu/tail/src/follow/watch.rs:78:5
   |
78 |     fn unwatch(&mut self, path: &Path) -> UResult<()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
  --> src/uu/tail/src/follow/watch.rs:79:9
   |
79 | /         self.watcher
80 | |             .unwatch(path)
81 | |             .map_err(|err| USimpleError::new(1, err.to_string()))
   | |_________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
79 |         return self.watcher
   |         ++++++

warning: missing `return` statement
  --> src/uu/tail/src/follow/watch.rs:81:28
   |
81 |             .map_err(|err| USimpleError::new(1, err.to_string()))
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
81 |             .map_err(|err| return USimpleError::new(1, err.to_string()))
   |                            ++++++

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/follow/watch.rs:90:9
   |
90 |     pub follow: Option<FollowMode>,
   |         ^^^^^^
   |
note: should be placed before `retry`
  --> src/uu/tail/src/follow/watch.rs:87:9
   |
87 |     pub retry: bool,
   |         ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/follow/watch.rs:98:9
   |
98 |     pub orphans: Vec<PathBuf>,
   |         ^^^^^^^
   |
note: should be placed before `watcher_rx`
  --> src/uu/tail/src/follow/watch.rs:97:9
   |
97 |     pub watcher_rx: Option<WatcherRx>,
   |         ^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/follow/watch.rs:99:9
   |
99 |     pub files: FileHandling,
   |         ^^^^^
   |
note: should be placed before `orphans`
  --> src/uu/tail/src/follow/watch.rs:98:9
   |
98 |     pub orphans: Vec<PathBuf>,
   |         ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/follow/watch.rs:129:12
    |
129 |     pub fn from(settings: &Settings) -> Self {
    |            ^^^^
    |
note: should be placed before `new`
   --> src/uu/tail/src/follow/watch.rs:105:12
    |
105 |     pub fn new(
    |            ^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/follow/watch.rs:139:12
    |
139 |     pub fn add_path(
    |            ^^^^^^^^
    |
note: should be placed before `from`
   --> src/uu/tail/src/follow/watch.rs:129:12
    |
129 |     pub fn from(settings: &Settings) -> Self {
    |            ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/follow/watch.rs:181:12
    |
181 |     pub fn add_bad_path(
    |            ^^^^^^^^^^^^
    |
note: should be placed before `add_stdin`
   --> src/uu/tail/src/follow/watch.rs:163:12
    |
163 |     pub fn add_stdin(
    |            ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/follow/watch.rs:259:12
    |
259 |     pub fn follow_descriptor(&self) -> bool {
    |            ^^^^^^^^^^^^^^^^^
    |
note: should be placed before `start`
   --> src/uu/tail/src/follow/watch.rs:194:12
    |
194 |     pub fn start(&mut self, settings: &Settings) -> UResult<()> {
    |            ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/follow/watch.rs:267:12
    |
267 |     pub fn follow_descriptor_retry(&self) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
    |
note: should be placed before `follow_name`
   --> src/uu/tail/src/follow/watch.rs:263:12
    |
263 |     pub fn follow_name(&self) -> bool {
    |            ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/follow/watch.rs:309:8
    |
309 |     fn handle_event(
    |        ^^^^^^^^^^^^
    |
note: should be placed before `init_files`
   --> src/uu/tail/src/follow/watch.rs:275:8
    |
275 |     fn init_files(&mut self, inputs: &Vec<Input>) -> UResult<()> {
    |        ^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:118:9
    |
118 | /         Self {
119 | |             retry,
120 | |             follow,
121 | |             use_polling,
...   |
125 | |             pid,
126 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
118 |         return Self {
    |         ++++++

warning: default numeric fallback might occur
   --> src/uu/tail/src/follow/watch.rs:115:13
    |
115 |             0
    |             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `pid` is shadowed
   --> src/uu/tail/src/follow/watch.rs:112:13
    |
112 |         let pid = if platform::supports_pid_checks(pid) {
    |             ^^^
    |
note: previous binding is here
   --> src/uu/tail/src/follow/watch.rs:110:9
    |
110 |         pid: platform::Pid,
    |         ^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:130:9
    |
130 | /         Self::new(
131 | |             settings.retry,
132 | |             settings.follow,
133 | |             settings.use_polling,
134 | |             FileHandling::from(settings),
135 | |             settings.pid,
136 | |         )
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
130 |         return Self::new(
    |         ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/follow/watch.rs:139:5
    |
139 | /     pub fn add_path(
140 | |         &mut self,
141 | |         path: &Path,
142 | |         display_name: &str,
143 | |         reader: Option<Box<dyn BufRead>>,
144 | |         update_last: bool,
145 | |     ) -> UResult<()> {
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:160:9
    |
160 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
160 |         return Ok(())
    |         ++++++

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:148:17
    |
148 |                 std::env::current_dir()?.join(path)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: consider bringing this path into scope with the `use` keyword
   --> src/uu/tail/src/follow/watch.rs:148:17
    |
148 |                 std::env::current_dir()?.join(path)
    |                 ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: `path` is shadowed
   --> src/uu/tail/src/follow/watch.rs:147:17
    |
147 |             let path = if path.is_relative() {
    |                 ^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/follow/watch.rs:141:9
    |
141 |         path: &Path,
    |         ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/follow/watch.rs:163:5
    |
163 | /     pub fn add_stdin(
164 | |         &mut self,
165 | |         display_name: &str,
166 | |         reader: Option<Box<dyn BufRead>>,
167 | |         update_last: bool,
168 | |     ) -> UResult<()> {
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:178:9
    |
178 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
178 |         return Ok(())
    |         ++++++

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/follow/watch.rs:181:5
    |
181 | /     pub fn add_bad_path(
182 | |         &mut self,
183 | |         path: &Path,
184 | |         display_name: &str,
185 | |         update_last: bool,
186 | |     ) -> UResult<()> {
    | |____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:191:9
    |
191 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
191 |         return Ok(())
    |         ++++++

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/follow/watch.rs:194:5
    |
194 |     pub fn start(&mut self, settings: &Settings) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/follow/watch.rs:229:32
    |
229 |             watcher = Box::new(notify::PollWatcher::new(tx, watcher_config).unwrap());
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/follow/watch.rs:194:5
    |
194 |     pub fn start(&mut self, settings: &Settings) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: used unwrap or expect in a function that returns result or option
   --> src/uu/tail/src/follow/watch.rs:194:5
    |
194 | /     pub fn start(&mut self, settings: &Settings) -> UResult<()> {
195 | |         if settings.follow.is_none() {
196 | |             return Ok(());
...   |
256 | |         Ok(())
257 | |     }
    | |_____^
    |
    = help: unwrap and expect should not be used in a function that returns result or option
note: potential non-recoverable error(s)
   --> src/uu/tail/src/follow/watch.rs:229:32
    |
229 |             watcher = Box::new(notify::PollWatcher::new(tx, watcher_config).unwrap());
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
247 |                     watcher = Box::new(notify::PollWatcher::new(tx_clone, watcher_config).unwrap());
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_in_result

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:256:9
    |
256 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
256 |         return Ok(())
    |         ++++++

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/follow/watch.rs:229:32
    |
229 |             watcher = Box::new(notify::PollWatcher::new(tx, watcher_config).unwrap());
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: unnecessary semicolon
   --> src/uu/tail/src/follow/watch.rs:250:14
    |
250 |             };
    |              ^ help: remove
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_semicolon

warning: this ident consists of a single char
   --> src/uu/tail/src/follow/watch.rs:234:21
    |
234 |                 Err(e) if e.to_string().starts_with("Too many open files") => {
    |                     ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/follow/watch.rs:247:40
    |
247 |                     watcher = Box::new(notify::PollWatcher::new(tx_clone, watcher_config).unwrap());
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: this ident consists of a single char
   --> src/uu/tail/src/follow/watch.rs:249:21
    |
249 |                 Err(e) => return Err(USimpleError::new(1, e.to_string())),
    |                     ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:254:9
    |
254 |         self.init_files(&settings.inputs)?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:260:9
    |
260 |         self.follow == Some(FollowMode::Descriptor)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
260 |         return self.follow == Some(FollowMode::Descriptor)
    |         ++++++

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:264:9
    |
264 |         self.follow == Some(FollowMode::Name)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
264 |         return self.follow == Some(FollowMode::Name)
    |         ++++++

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:268:9
    |
268 |         self.follow_descriptor() && self.retry
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
268 |         return self.follow_descriptor() && self.retry
    |         ++++++

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:272:9
    |
272 |         self.follow_name() && self.retry
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
272 |         return self.follow_name() && self.retry
    |         ++++++

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/follow/watch.rs:275:5
    |
275 |     fn init_files(&mut self, inputs: &Vec<Input>) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/follow/watch.rs:296:40
    |
296 | ...                   .watch(path.parent().unwrap(), RecursiveMode::NonRecursive)?;
    |                              ^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/follow/watch.rs:275:5
    |
275 |     fn init_files(&mut self, inputs: &Vec<Input>) -> UResult<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: used unwrap or expect in a function that returns result or option
   --> src/uu/tail/src/follow/watch.rs:275:5
    |
275 | /     fn init_files(&mut self, inputs: &Vec<Input>) -> UResult<()> {
276 | |         if let Some(watcher_rx) = &mut self.watcher_rx {
277 | |             for input in inputs {
278 | |                 match input.kind() {
...   |
305 | |         Ok(())
306 | |     }
    | |_____^
    |
    = help: unwrap and expect should not be used in a function that returns result or option
note: potential non-recoverable error(s)
   --> src/uu/tail/src/follow/watch.rs:296:40
    |
296 | ...                   .watch(path.parent().unwrap(), RecursiveMode::NonRecursive)?;
    |                              ^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_in_result

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:305:9
    |
305 |         Ok(())
    |         ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
305 |         return Ok(())
    |         ++++++

warning: type of pattern does not match the expression type
   --> src/uu/tail/src/follow/watch.rs:276:16
    |
276 |         if let Some(watcher_rx) = &mut self.watcher_rx {
    |                ^^^^^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&mut _` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch
    = note: `-W clippy::pattern-type-mismatch` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::pattern_type_mismatch)]`

warning: type of pattern does not match the expression type
   --> src/uu/tail/src/follow/watch.rs:279:21
    |
279 |                     InputKind::Stdin => continue,
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: `mut path` is shadowed
   --> src/uu/tail/src/follow/watch.rs:285:33
    |
285 |                         let mut path = path.clone();
    |                                 ^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/follow/watch.rs:280:37
    |
280 |                     InputKind::File(path) => {
    |                                     ^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:287:36
    |
287 | ...                   path = std::env::current_dir()?.join(path);
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: consider bringing this path into scope with the `use` keyword
   --> src/uu/tail/src/follow/watch.rs:287:36
    |
287 | ...                   path = std::env::current_dir()?.join(path);
    |                              ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:292:29
    |
292 | ...                   watcher_rx.watch_with_parent(&path)?;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:295:29
    |
295 | / ...                   watcher_rx
296 | | ...                       .watch(path.parent().unwrap(), RecursiveMode::NonRecursive)?;
    | |______________________________________________________________________________________^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/follow/watch.rs:296:40
    |
296 | ...                   .watch(path.parent().unwrap(), RecursiveMode::NonRecursive)?;
    |                              ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/follow/watch.rs:309:5
    |
309 | /     fn handle_event(
310 | |         &mut self,
311 | |         event: &notify::Event,
312 | |         settings: &Settings,
313 | |     ) -> UResult<Vec<PathBuf>> {
    | |______________________________^
    |
note: first possible panic found here
   --> src/uu/tail/src/follow/watch.rs:316:26
    |
316 |         let event_path = event.paths.first().unwrap();
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/follow/watch.rs:309:5
    |
309 | /     fn handle_event(
310 | |         &mut self,
311 | |         event: &notify::Event,
312 | |         settings: &Settings,
313 | |     ) -> UResult<Vec<PathBuf>> {
    | |______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: used unwrap or expect in a function that returns result or option
   --> src/uu/tail/src/follow/watch.rs:309:5
    |
309 | /     fn handle_event(
310 | |         &mut self,
311 | |         event: &notify::Event,
312 | |         settings: &Settings,
...   |
471 | |         Ok(paths)
472 | |     }
    | |_____^
    |
    = help: unwrap and expect should not be used in a function that returns result or option
note: potential non-recoverable error(s)
   --> src/uu/tail/src/follow/watch.rs:316:26
    |
316 |         let event_path = event.paths.first().unwrap();
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
370 |                                     let _ = self.watcher_rx.as_mut().unwrap().watcher.unwatch(event_path);
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
408 |                                 let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
420 |                         let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
454 |                     let new_path = event.paths.last().unwrap();
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
461 |                         self.files.get_last().unwrap() == event_path
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
465 |                     let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
466 |                     self.watcher_rx.as_mut().unwrap().watch_with_parent(new_path)?;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_in_result

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:471:9
    |
471 |         Ok(paths)
    |         ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
471 |         return Ok(paths)
    |         ++++++

warning: this function has too many lines (118/100)
   --> src/uu/tail/src/follow/watch.rs:309:5
    |
309 | /     fn handle_event(
310 | |         &mut self,
311 | |         event: &notify::Event,
312 | |         settings: &Settings,
...   |
471 | |         Ok(paths)
472 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: usage of wildcard import
   --> src/uu/tail/src/follow/watch.rs:314:13
    |
314 |         use notify::event::*;
    |             ^^^^^^^^^^^^^^^^ help: try: `notify::event::{CreateKind, DataChange, EventKind, MetadataKind, ModifyKind, RemoveKind, RenameMode}`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_imports
    = note: `-W clippy::wildcard-imports` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::wildcard_imports)]`

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/follow/watch.rs:316:26
    |
316 |         let event_path = event.paths.first().unwrap();
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: wildcard match will also match any future added variants
   --> src/uu/tail/src/follow/watch.rs:469:13
    |
469 |             _ => {}
    |             ^ help: try: `EventKind::Any | EventKind::Access(_) | EventKind::Create(_) | EventKind::Modify(_) | EventKind::Remove(_) | EventKind::Other`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm
    = note: `-W clippy::wildcard-enum-match-arm` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::wildcard_enum_match_arm)]`

warning: type of pattern does not match the expression type
   --> src/uu/tail/src/follow/watch.rs:329:32
    |
329 |                         if let Some(old_md) = &pd.metadata {
    |                                ^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:336:37
    |
336 | ...                   self.files.update_reader(event_path)?;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:339:37
    |
339 | ...                   self.files.update_reader(event_path)?;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:344:37
    |
344 | ...                   self.files.update_reader(event_path)?;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:345:43
    |
345 | ...                   } else if old_md.got_truncated(&new_md)? {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:347:37
    |
347 | ...                   self.files.update_reader(event_path)?;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:362:33
    |
362 | ...                   self.files.update_reader(event_path)?;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: non-binding `let` on an expression with `#[must_use]` type
   --> src/uu/tail/src/follow/watch.rs:370:37
    |
370 | ...                   let _ = self.watcher_rx.as_mut().unwrap().watcher.unwatch(event_path);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider explicitly using expression value
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_must_use
    = note: `-W clippy::let-underscore-must-use` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::let_underscore_must_use)]`

warning: non-binding `let` without a type annotation
   --> src/uu/tail/src/follow/watch.rs:370:37
    |
370 | ...                   let _ = self.watcher_rx.as_mut().unwrap().watcher.unwatch(event_path);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: consider adding a type annotation
   --> src/uu/tail/src/follow/watch.rs:370:42
    |
370 | ...                   let _ = self.watcher_rx.as_mut().unwrap().watcher.unwatch(event_path);
    |                            ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_untyped

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/follow/watch.rs:370:45
    |
370 | ...                   let _ = self.watcher_rx.as_mut().unwrap().watcher.unwatch(event_path);
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: non-binding `let` on an expression with `#[must_use]` type
   --> src/uu/tail/src/follow/watch.rs:408:33
    |
408 | ...                   let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider explicitly using expression value
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_must_use

warning: non-binding `let` without a type annotation
   --> src/uu/tail/src/follow/watch.rs:408:33
    |
408 | ...                   let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: consider adding a type annotation
   --> src/uu/tail/src/follow/watch.rs:408:38
    |
408 | ...                   let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                            ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_untyped

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/follow/watch.rs:408:41
    |
408 | ...                   let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: non-binding `let` on an expression with `#[must_use]` type
   --> src/uu/tail/src/follow/watch.rs:420:25
    |
420 |                         let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider explicitly using expression value
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_must_use

warning: non-binding `let` without a type annotation
   --> src/uu/tail/src/follow/watch.rs:420:25
    |
420 |                         let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: consider adding a type annotation
   --> src/uu/tail/src/follow/watch.rs:420:30
    |
420 |                         let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                              ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_untyped

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/follow/watch.rs:420:33
    |
420 |                         let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/follow/watch.rs:454:36
    |
454 |                     let new_path = event.paths.last().unwrap();
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/follow/watch.rs:461:25
    |
461 |                         self.files.get_last().unwrap() == event_path
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: non-binding `let` on an expression with `#[must_use]` type
   --> src/uu/tail/src/follow/watch.rs:465:21
    |
465 |                     let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider explicitly using expression value
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_must_use

warning: non-binding `let` without a type annotation
   --> src/uu/tail/src/follow/watch.rs:465:21
    |
465 |                     let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
help: consider adding a type annotation
   --> src/uu/tail/src/follow/watch.rs:465:26
    |
465 |                     let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                          ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_untyped

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/follow/watch.rs:465:29
    |
465 |                     let _ = self.watcher_rx.as_mut().unwrap().unwatch(event_path);
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:466:21
    |
466 |                     self.watcher_rx.as_mut().unwrap().watch_with_parent(new_path)?;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/follow/watch.rs:466:21
    |
466 |                     self.watcher_rx.as_mut().unwrap().watch_with_parent(new_path)?;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/follow/watch.rs:476:1
    |
476 | pub fn follow(mut observer: Observer, settings: &Settings) -> UResult<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/follow/watch.rs:504:30
    |
504 |                     let md = new_path.metadata().unwrap();
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/follow/watch.rs:476:1
    |
476 | pub fn follow(mut observer: Observer, settings: &Settings) -> UResult<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
   --> src/uu/tail/src/follow/watch.rs:602:5
    |
602 |     Ok(())
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
602 |     return Ok(())
    |     ++++++

warning: default numeric fallback might occur
   --> src/uu/tail/src/follow/watch.rs:491:57
    |
491 |         if settings.follow.is_some() && observer.pid != 0 && process.is_dead() {
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `to_string()` called on a `&str`
   --> src/uu/tail/src/follow/watch.rs:478:41
    |
478 |         return Err(USimpleError::new(1, text::NO_FILES_REMAINING.to_string()));
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `text::NO_FILES_REMAINING.to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/follow/watch.rs:504:30
    |
504 |                     let md = new_path.metadata().unwrap();
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:511:25
    |
511 |                         observer.files.update_reader(new_path)?;
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:512:38
    |
512 |                         _read_some = observer.files.tail_file(new_path, settings.verbose)?;
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:513:25
    |
513 | /                         observer
514 | |                             .watcher_rx
515 | |                             .as_mut()
516 | |                             .unwrap()
517 | |                             .watch_with_parent(new_path)?;
    | |_________________________________________________________^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/follow/watch.rs:513:25
    |
513 | /                         observer
514 | |                             .watcher_rx
515 | |                             .as_mut()
516 | |                             .unwrap()
    | |_____________________________________^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/follow/watch.rs:525:25
    |
525 |           let rx_result = observer
    |  _________________________^
526 | |             .watcher_rx
527 | |             .as_mut()
528 | |             .unwrap()
    | |_____________________^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:541:33
    |
541 |                         paths = observer.handle_event(&event, settings)?;
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: this ident consists of a single char
   --> src/uu/tail/src/follow/watch.rs:546:49
    |
546 |                 kind: notify::ErrorKind::Io(ref e),
    |                                                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `paths` shadows a previous, unrelated binding
   --> src/uu/tail/src/follow/watch.rs:547:17
    |
547 |                 paths,
    |                 ^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/follow/watch.rs:535:13
    |
535 |         let mut paths = vec![]; // Paths worth checking for new content to print
    |             ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: consider bringing this path into scope with the `use` keyword
   --> src/uu/tail/src/follow/watch.rs:548:32
    |
548 |             })) if e.kind() == std::io::ErrorKind::NotFound => {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absolute_paths

warning: non-binding `let` on an expression with `#[must_use]` type
   --> src/uu/tail/src/follow/watch.rs:551:25
    |
551 | /                         let _ = observer
552 | |                             .watcher_rx
553 | |                             .as_mut()
554 | |                             .unwrap()
555 | |                             .watcher
556 | |                             .unwatch(event_path);
    | |_________________________________________________^
    |
    = help: consider explicitly using expression value
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_must_use

warning: non-binding `let` without a type annotation
   --> src/uu/tail/src/follow/watch.rs:551:25
    |
551 | /                         let _ = observer
552 | |                             .watcher_rx
553 | |                             .as_mut()
554 | |                             .unwrap()
555 | |                             .watcher
556 | |                             .unwatch(event_path);
    | |_________________________________________________^
    |
help: consider adding a type annotation
   --> src/uu/tail/src/follow/watch.rs:551:30
    |
551 |                         let _ = observer
    |                              ^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_untyped

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/follow/watch.rs:551:33
    |
551 |                           let _ = observer
    |  _________________________________^
552 | |                             .watcher_rx
553 | |                             .as_mut()
554 | |                             .unwrap()
    | |_____________________________________^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: this ident consists of a single char
   --> src/uu/tail/src/follow/watch.rs:569:20
    |
569 |             Ok(Err(e)) => return Err(USimpleError::new(1, format!("NotifyError: {e}"))),
    |                    ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/follow/watch.rs:571:17
    |
571 |                 timeout_counter += 1;
    |                 ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: this ident consists of a single char
   --> src/uu/tail/src/follow/watch.rs:573:17
    |
573 |             Err(e) => return Err(USimpleError::new(1, format!("RecvTimeoutError: {e}"))),
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: question mark operator was used
   --> src/uu/tail/src/follow/watch.rs:585:26
    |
585 |             _read_some = observer.files.tail_file(path, settings.verbose)?;
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing documentation for a module
  --> src/uu/tail/src/tail.rs:19:1
   |
19 | mod parse;
   | ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/parse.rs:12:9
   |
12 |     pub lines: bool,
   |         ^^^^^
   |
note: should be placed before `plus`
  --> src/uu/tail/src/parse.rs:11:9
   |
11 |     pub plus: bool,
   |         ^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/parse.rs:13:9
   |
13 |     pub follow: bool,
   |         ^^^^^^
   |
note: should be placed before `lines`
  --> src/uu/tail/src/parse.rs:12:9
   |
12 |     pub lines: bool,
   |         ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
  --> src/uu/tail/src/parse.rs:18:9
   |
18 | /         Self {
19 | |             num: 10,
20 | |             plus: false,
21 | |             lines: true,
22 | |             follow: false,
23 | |         }
   | |_________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
18 |         return Self {
   |         ++++++

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/parse.rs:31:5
   |
31 |     Context,
   |     ^^^^^^^
   |
note: should be placed before `Overflow`
  --> src/uu/tail/src/parse.rs:30:5
   |
30 |     Overflow,
   |     ^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
  --> src/uu/tail/src/parse.rs:92:5
   |
92 | /     Some(Ok(ObsoleteArgs {
93 | |         num,
94 | |         plus: sign == '+',
95 | |         lines: mode == 'l',
96 | |         follow,
97 | |     }))
   | |_______^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
92 |     return Some(Ok(ObsoleteArgs {
   |     ++++++

warning: this ident consists of a single char
  --> src/uu/tail/src/parse.rs:40:28
   |
40 |     let sign = if let Some(r) = rest.strip_prefix('-') {
   |                            ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
  --> src/uu/tail/src/parse.rs:43:24
   |
43 |     } else if let Some(r) = rest.strip_prefix('+') {
   |                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uu/tail/src/parse.rs:51:25
   |
51 |         .find(|c: char| !c.is_ascii_digit())
   |                         ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
51 |         .find(|c: char| return !c.is_ascii_digit())
   |                         ++++++

warning: this ident consists of a single char
  --> src/uu/tail/src/parse.rs:51:16
   |
51 |         .find(|c: char| !c.is_ascii_digit())
   |                ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: indexing into a string may panic if the index is within a UTF-8 character
  --> src/uu/tail/src/parse.rs:53:20
   |
53 |     let has_num = !rest[..end_num].is_empty();
   |                    ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: indexing into a string may panic if the index is within a UTF-8 character
  --> src/uu/tail/src/parse.rs:55:26
   |
55 |         if let Ok(num) = rest[..end_num].parse() {
   |                          ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: indexing into a string may panic if the index is within a UTF-8 character
  --> src/uu/tail/src/parse.rs:63:13
   |
63 |     rest = &rest[end_num..];
   |             ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: this ident consists of a single char
  --> src/uu/tail/src/parse.rs:65:28
   |
65 |     let mode = if let Some(r) = rest.strip_prefix('l') {
   |                            ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
  --> src/uu/tail/src/parse.rs:68:24
   |
68 |     } else if let Some(r) = rest.strip_prefix('c') {
   |                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
  --> src/uu/tail/src/parse.rs:71:24
   |
71 |     } else if let Some(r) = rest.strip_prefix('b') {
   |                        ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: missing `return` statement
  --> src/uu/tail/src/parse.rs:79:30
   |
79 |     if !rest.chars().all(|f| f == 'f') {
   |                              ^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
79 |     if !rest.chars().all(|f| return f == 'f') {
   |                              ++++++

warning: this ident consists of a single char
  --> src/uu/tail/src/parse.rs:79:27
   |
79 |     if !rest.chars().all(|f| f == 'f') {
   |                           ^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: `num` is shadowed
  --> src/uu/tail/src/parse.rs:88:14
   |
88 |     let Some(num) = num.checked_mul(multiplier) else {
   |              ^^^
   |
note: previous binding is here
  --> src/uu/tail/src/parse.rs:54:9
   |
54 |     let num: u64 = if has_num {
   |         ^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing documentation for a module
  --> src/uu/tail/src/tail.rs:20:1
   |
20 | mod paths;
   | ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/paths.rs:11:15
   |
11 | use std::io::{Seek, SeekFrom};
   |               ^^^^ help: use: `Seek as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/paths.rs:13:25
   |
13 | use std::os::unix::fs::{FileTypeExt, MetadataExt};
   |                         ^^^^^^^^^^^ help: use: `FileTypeExt as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/paths.rs:13:38
   |
13 | use std::os::unix::fs::{FileTypeExt, MetadataExt};
   |                                      ^^^^^^^^^^^ help: use: `MetadataExt as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: missing `return` statement
  --> src/uu/tail/src/paths.rs:27:13
   |
27 |             Self::Stdin
   |             ^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
27 |             return Self::Stdin
   |             ++++++

warning: missing `return` statement
  --> src/uu/tail/src/paths.rs:29:13
   |
29 |             Self::File(PathBuf::from(value))
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
29 |             return Self::File(PathBuf::from(value))
   |             ++++++

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/paths.rs:48:9
   |
48 |     pub display_name: String,
   |         ^^^^^^^^^^^^
   |
note: should be placed before `kind`
  --> src/uu/tail/src/paths.rs:47:5
   |
47 |     kind: InputKind,
   |     ^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/paths.rs:68:12
   |
68 |     pub fn is_stdin(&self) -> bool {
   |            ^^^^^^^^
   |
note: should be placed before `kind`
  --> src/uu/tail/src/paths.rs:64:12
   |
64 |     pub fn kind(&self) -> &InputKind {
   |            ^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/paths.rs:97:12
   |
97 |     pub fn is_tailable(&self) -> bool {
   |            ^^^^^^^^^^^
   |
note: should be placed before `resolve`
  --> src/uu/tail/src/paths.rs:75:12
   |
75 |     pub fn resolve(&self) -> Option<PathBuf> {
   |            ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
  --> src/uu/tail/src/paths.rs:61:9
   |
61 |         Self { kind, display_name }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
61 |         return Self { kind, display_name }
   |         ++++++

warning: `string` is shadowed
  --> src/uu/tail/src/paths.rs:53:13
   |
53 |         let string = string.as_ref();
   |             ^^^^^^
   |
note: previous binding is here
  --> src/uu/tail/src/paths.rs:52:34
   |
52 |     pub fn from<T: AsRef<OsStr>>(string: T) -> Self {
   |                                  ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: `to_string()` called on a `&str`
  --> src/uu/tail/src/paths.rs:58:33
   |
58 |             InputKind::Stdin => text::STDIN_HEADER.to_string(),
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `text::STDIN_HEADER.to_owned()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: missing `return` statement
  --> src/uu/tail/src/paths.rs:65:9
   |
65 |         &self.kind
   |         ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
65 |         return &self.kind
   |         ++++++

warning: this could be a `const fn`
  --> src/uu/tail/src/paths.rs:64:5
   |
64 | /     pub fn kind(&self) -> &InputKind {
65 | |         &self.kind
66 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
64 |     pub const fn kind(&self) -> &InputKind {
   |         +++++

warning: missing `return` statement
  --> src/uu/tail/src/paths.rs:70:35
   |
70 |             InputKind::File(_) => false,
   |                                   ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
70 |             InputKind::File(_) => return false,
   |                                   ++++++

warning: missing `return` statement
  --> src/uu/tail/src/paths.rs:71:33
   |
71 |             InputKind::Stdin => true,
   |                                 ^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
71 |             InputKind::Stdin => return true,
   |                                 ++++++

warning: this could be a `const fn`
  --> src/uu/tail/src/paths.rs:68:5
   |
68 | /     pub fn is_stdin(&self) -> bool {
69 | |         match self.kind {
70 | |             InputKind::File(_) => false,
71 | |             InputKind::Stdin => true,
72 | |         }
73 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
68 |     pub const fn is_stdin(&self) -> bool {
   |         +++++

warning: missing `return` statement
  --> src/uu/tail/src/paths.rs:78:17
   |
78 |                 path.canonicalize().ok()
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
78 |                 return path.canonicalize().ok()
   |                 ++++++

warning: missing `return` statement
  --> src/uu/tail/src/paths.rs:91:21
   |
91 |                     PathBuf::from(text::FD0).canonicalize().ok()
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
91 |                     return PathBuf::from(text::FD0).canonicalize().ok()
   |                     ++++++

warning: type of pattern does not match the expression type
  --> src/uu/tail/src/paths.rs:77:13
   |
77 |             InputKind::File(path) if path != &PathBuf::from(text::DEV_STDIN) => {
   |             ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: missing `return` statement
  --> src/uu/tail/src/paths.rs:99:38
   |
99 |             InputKind::File(path) => path_is_tailable(path),
   |                                      ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
99 |             InputKind::File(path) => return path_is_tailable(path),
   |                                      ++++++

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:100:33
    |
100 |             InputKind::Stdin => self.resolve().is_some_and(|path| path_is_tailable(&path)),
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
100 |             InputKind::Stdin => return self.resolve().is_some_and(|path| path_is_tailable(&path)),
    |                                 ++++++

warning: type of pattern does not match the expression type
  --> src/uu/tail/src/paths.rs:99:13
   |
99 |             InputKind::File(path) => path_is_tailable(path),
   |             ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:100:67
    |
100 |             InputKind::Stdin => self.resolve().is_some_and(|path| path_is_tailable(&path)),
    |                                                                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
100 |             InputKind::Stdin => self.resolve().is_some_and(|path| return path_is_tailable(&path)),
    |                                                                   ++++++

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:107:9
    |
107 | /         Self {
108 | |             kind: InputKind::Stdin,
109 | |             display_name: String::from(text::STDIN_HEADER),
110 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
107 |         return Self {
    |         ++++++

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/paths.rs:117:5
    |
117 |     first_header: bool,
    |     ^^^^^^^^^^^^
    |
note: should be placed before `verbose`
   --> src/uu/tail/src/paths.rs:116:5
    |
116 |     verbose: bool,
    |     ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/paths.rs:132:12
    |
132 |     pub fn print(&mut self, string: &str) {
    |            ^^^^^
    |
note: should be placed before `print_input`
   --> src/uu/tail/src/paths.rs:128:12
    |
128 |     pub fn print_input(&mut self, input: &Input) {
    |            ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:122:9
    |
122 | /         Self {
123 | |             verbose,
124 | |             first_header,
125 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
122 |         return Self {
    |         ++++++

warning: this could be a `const fn`
   --> src/uu/tail/src/paths.rs:121:5
    |
121 | /     pub fn new(verbose: bool, first_header: bool) -> Self {
122 | |         Self {
123 | |             verbose,
124 | |             first_header,
125 | |         }
126 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
121 |     pub const fn new(verbose: bool, first_header: bool) -> Self {
    |         +++++

warning: use of `println!`
   --> src/uu/tail/src/paths.rs:134:13
    |
134 | /             println!(
135 | |                 "{}==> {string} <==",
136 | |                 if self.first_header { "" } else { "\n" },
137 | |             );
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout
    = note: `-W clippy::print-stdout` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::print_stdout)]`

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:151:9
    |
151 | /         self.stream_position().is_ok()
152 | |             && self.seek(SeekFrom::End(0)).is_ok()
153 | |             && self.seek(SeekFrom::Start(current_offset)).is_ok()
    | |_________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
151 |         return self.stream_position().is_ok()
    |         ++++++

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/paths.rs:159:8
    |
159 |     fn got_truncated(&self, other: &Metadata) -> UResult<bool>;
    |        ^^^^^^^^^^^^^
    |
note: should be placed before `is_tailable`
   --> src/uu/tail/src/paths.rs:158:8
    |
158 |     fn is_tailable(&self) -> bool;
    |        ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/paths.rs:160:8
    |
160 |     fn get_block_size(&self) -> u64;
    |        ^^^^^^^^^^^^^^
    |
note: should be placed before `got_truncated`
   --> src/uu/tail/src/paths.rs:159:8
    |
159 |     fn got_truncated(&self, other: &Metadata) -> UResult<bool>;
    |        ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/paths.rs:161:8
    |
161 |     fn file_id_eq(&self, other: &Metadata) -> bool;
    |        ^^^^^^^^^^
    |
note: should be placed before `get_block_size`
   --> src/uu/tail/src/paths.rs:160:8
    |
160 |     fn get_block_size(&self) -> u64;
    |        ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/paths.rs:159:5
    |
159 |     fn got_truncated(&self, other: &Metadata) -> UResult<bool>;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/paths.rs:178:8
    |
178 |     fn got_truncated(&self, other: &Metadata) -> UResult<bool> {
    |        ^^^^^^^^^^^^^
    |
note: should be placed before `is_tailable`
   --> src/uu/tail/src/paths.rs:165:8
    |
165 |     fn is_tailable(&self) -> bool {
    |        ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/paths.rs:182:8
    |
182 |     fn get_block_size(&self) -> u64 {
    |        ^^^^^^^^^^^^^^
    |
note: should be placed before `got_truncated`
   --> src/uu/tail/src/paths.rs:178:8
    |
178 |     fn got_truncated(&self, other: &Metadata) -> UResult<bool> {
    |        ^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/paths.rs:193:8
    |
193 |     fn file_id_eq(&self, _other: &Metadata) -> bool {
    |        ^^^^^^^^^^
    |
note: should be placed before `get_block_size`
   --> src/uu/tail/src/paths.rs:182:8
    |
182 |     fn get_block_size(&self) -> u64 {
    |        ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:169:13
    |
169 |             ft.is_file() || ft.is_char_device() || ft.is_fifo()
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
169 |             return ft.is_file() || ft.is_char_device() || ft.is_fifo()
    |             ++++++

warning: `FileType::is_file()` only covers regular files
   --> src/uu/tail/src/paths.rs:169:13
    |
169 |             ft.is_file() || ft.is_char_device() || ft.is_fifo()
    |             ^^^^^^^^^^^^
    |
    = help: use `!FileType::is_dir()` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#filetype_is_file
    = note: `-W clippy::filetype-is-file` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::filetype_is_file)]`

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:179:9
    |
179 |         Ok(other.len() < self.len() && other.modified()? != self.modified()?)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
179 |         return Ok(other.len() < self.len() && other.modified()? != self.modified()?)
    |         ++++++

warning: question mark operator was used
   --> src/uu/tail/src/paths.rs:179:40
    |
179 |         Ok(other.len() < self.len() && other.modified()? != self.modified()?)
    |                                        ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/paths.rs:179:61
    |
179 |         Ok(other.len() < self.len() && other.modified()? != self.modified()?)
    |                                                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:185:13
    |
185 |             self.blocks()
    |             ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
185 |             return self.blocks()
    |             ++++++

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:196:13
    |
196 |             self.ino().eq(&_other.ino())
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
196 |             return self.ino().eq(&_other.ino())
    |             ++++++

warning: used underscore-prefixed binding
   --> src/uu/tail/src/paths.rs:196:28
    |
196 |             self.ino().eq(&_other.ino())
    |                            ^^^^^^
    |
note: binding is defined here
   --> src/uu/tail/src/paths.rs:193:26
    |
193 |     fn file_id_eq(&self, _other: &Metadata) -> bool {
    |                          ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding
    = note: `-W clippy::used-underscore-binding` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::used_underscore_binding)]`

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/paths.rs:216:8
    |
216 |     fn is_orphan(&self) -> bool;
    |        ^^^^^^^^^
    |
note: should be placed before `is_stdin`
   --> src/uu/tail/src/paths.rs:215:8
    |
215 |     fn is_stdin(&self) -> bool;
    |        ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
   --> src/uu/tail/src/paths.rs:228:8
    |
228 |     fn is_orphan(&self) -> bool {
    |        ^^^^^^^^^
    |
note: should be placed before `is_stdin`
   --> src/uu/tail/src/paths.rs:221:8
    |
221 |     fn is_stdin(&self) -> bool {
    |        ^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:222:9
    |
222 | /         self.eq(Self::new(text::DASH))
223 | |             || self.eq(Self::new(text::DEV_STDIN))
224 | |             || self.eq(Self::new(text::STDIN_HEADER))
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
222 |         return self.eq(Self::new(text::DASH))
    |         ++++++

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:229:9
    |
229 |         !matches!(self.parent(), Some(parent) if parent.is_dir())
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
229 |         return !matches!(self.parent(), Some(parent) if parent.is_dir())
    |         ++++++

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:234:9
    |
234 |         path_is_tailable(self)
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
234 |         return path_is_tailable(self)
    |         ++++++

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:239:5
    |
239 |     path.is_file() || path.exists() && path.metadata().is_ok_and(|meta| meta.is_tailable())
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
239 |     return path.is_file() || path.exists() && path.metadata().is_ok_and(|meta| meta.is_tailable())
    |     ++++++

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:239:73
    |
239 |     path.is_file() || path.exists() && path.metadata().is_ok_and(|meta| meta.is_tailable())
    |                                                                         ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
239 |     path.is_file() || path.exists() && path.metadata().is_ok_and(|meta| return meta.is_tailable())
    |                                                                         ++++++

warning: missing `return` statement
   --> src/uu/tail/src/paths.rs:252:5
    |
252 |     false
    |     ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
252 |     return false
    |     ++++++

warning: this could be a `const fn`
   --> src/uu/tail/src/paths.rs:243:1
    |
243 | / pub fn stdin_is_bad_fd() -> bool {
...   |
252 | |     false
253 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
    |
243 | pub const fn stdin_is_bad_fd() -> bool {
    |     +++++

warning: missing documentation for a module
  --> src/uu/tail/src/tail.rs:21:1
   |
21 | mod platform;
   | ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uu/tail/src/platform/mod.rs:18:5
   |
18 | mod unix;
   |     ^^^^
   |
note: should be placed before `supports_pid_checks`
  --> src/uu/tail/src/platform/mod.rs:11:5
   |
11 |     supports_pid_checks,
   |     ^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (must be alphabetically ordered)
  --> src/uu/tail/src/platform/unix.rs:24:12
   |
24 |     pub fn is_dead(&mut self) -> bool {
   |            ^^^^^^^
   |
note: should be placed before `new`
  --> src/uu/tail/src/platform/unix.rs:18:12
   |
18 |     pub fn new(process_id: Pid) -> Self {
   |            ^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: missing `return` statement
  --> src/uu/tail/src/platform/unix.rs:19:9
   |
19 |         Self { pid: process_id }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
19 |         return Self { pid: process_id }
   |         ++++++

warning: this could be a `const fn`
  --> src/uu/tail/src/platform/unix.rs:18:5
   |
18 | /     pub fn new(process_id: Pid) -> Self {
19 | |         Self { pid: process_id }
20 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn
help: make the function `const`
   |
18 |     pub const fn new(process_id: Pid) -> Self {
   |         +++++

warning: missing `return` statement
  --> src/uu/tail/src/platform/unix.rs:25:18
   |
25 |         unsafe { libc::kill(self.pid, 0) != 0 && get_errno() != libc::EPERM }
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
25 |         unsafe { return libc::kill(self.pid, 0) != 0 && get_errno() != libc::EPERM }
   |                  ++++++

warning: unsafe block missing a safety comment
  --> src/uu/tail/src/platform/unix.rs:25:9
   |
25 |         unsafe { libc::kill(self.pid, 0) != 0 && get_errno() != libc::EPERM }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks
   = note: `-W clippy::undocumented-unsafe-blocks` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::undocumented_unsafe_blocks)]`

warning: empty drop implementation
  --> src/uu/tail/src/platform/unix.rs:29:1
   |
29 | / impl Drop for ProcessChecker {
30 | |     fn drop(&mut self) {}
31 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_drop
   = note: `-W clippy::empty-drop` implied by `-W clippy::restriction`
   = help: to override `-W clippy::restriction` add `#[allow(clippy::empty_drop)]`
   = help: try removing this impl

warning: missing `return` statement
  --> src/uu/tail/src/platform/unix.rs:34:14
   |
34 |     unsafe { !(libc::kill(pid, 0) != 0 && get_errno() == libc::ENOSYS) }
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
34 |     unsafe { return !(libc::kill(pid, 0) != 0 && get_errno() == libc::ENOSYS) }
   |              ++++++

warning: unsafe block missing a safety comment
  --> src/uu/tail/src/platform/unix.rs:34:5
   |
34 |     unsafe { !(libc::kill(pid, 0) != 0 && get_errno() == libc::ENOSYS) }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: docs for function which may panic missing `# Panics` section
  --> src/uu/tail/src/platform/unix.rs:38:1
   |
38 | fn get_errno() -> i32 {
   | ^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uu/tail/src/platform/unix.rs:39:5
   |
39 |     Error::last_os_error().raw_os_error().unwrap()
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `return` statement
  --> src/uu/tail/src/platform/unix.rs:39:5
   |
39 |     Error::last_os_error().raw_os_error().unwrap()
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
39 |     return Error::last_os_error().raw_os_error().unwrap()
   |     ++++++

warning: used `unwrap()` on an `Option` value
  --> src/uu/tail/src/platform/unix.rs:39:5
   |
39 |     Error::last_os_error().raw_os_error().unwrap()
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is `None`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/tail.rs:29:13
   |
29 | use paths::{FileExtTail, HeaderPrinter, Input, InputKind, MetadataExtTail};
   |             ^^^^^^^^^^^ help: use: `FileExtTail as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/tail.rs:29:59
   |
29 | use paths::{FileExtTail, HeaderPrinter, Input, InputKind, MetadataExtTail};
   |                                                           ^^^^^^^^^^^^^^^ help: use: `MetadataExtTail as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: used import from `std` instead of `core`
  --> src/uu/tail/src/tail.rs:31:5
   |
31 | use std::cmp::Ordering;
   |     ^^^ help: consider importing the item from `core`: `core`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/tail.rs:33:60
   |
33 | use std::io::{self, BufReader, BufWriter, ErrorKind, Read, Seek, SeekFrom, Write, stdin, stdout};
   |                                                            ^^^^ help: use: `Seek as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/tail.rs:33:76
   |
33 | use std::io::{self, BufReader, BufWriter, ErrorKind, Read, Seek, SeekFrom, Write, stdin, stdout};
   |                                                                            ^^^^^ help: use: `Write as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: importing trait that is only used anonymously
  --> src/uu/tail/src/tail.rs:36:21
   |
36 | use uucore::error::{FromIo, UResult, USimpleError, get_exit_code, set_exit_code};
   |                     ^^^^^^ help: use: `FromIo as _`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unused_trait_names

warning: `impl Trait` used as a function parameter
  --> src/uu/tail/src/tail.rs:39:1
   |
39 | #[uucore::main]
   | ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
   = note: this warning originates in the attribute macro `uucore::main` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uu/tail/src/tail.rs:40:1
   |
40 | pub fn uumain(args: impl uucore::Args) -> UResult<()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing `return` statement
  --> src/uu/tail/src/tail.rs:58:5
   |
58 |     uu_tail(&settings)
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
   |
58 |     return uu_tail(&settings)
   |     ++++++

warning: `impl Trait` used as a function parameter
  --> src/uu/tail/src/tail.rs:40:21
   |
40 | pub fn uumain(args: impl uucore::Args) -> UResult<()> {
   |                     ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#impl_trait_in_params
help: add a type parameter
   |
40 | pub fn uumain<{ /* Generic name */ }: uucore::Args>(args: impl uucore::Args) -> UResult<()> {
   |              ++++++++++++++++++++++++++++++++++++++

warning: question mark operator was used
  --> src/uu/tail/src/tail.rs:41:20
   |
41 |     let settings = parse_args(args)?;
   |                    ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: docs for function returning `Result` missing `# Errors` section
  --> src/uu/tail/src/tail.rs:61:1
   |
61 | fn uu_tail(settings: &Settings) -> UResult<()> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing documentation for a function
   --> src/uu/tail/src/tail.rs:61:1
    |
61  | / fn uu_tail(settings: &Settings) -> UResult<()> {
62  | |     let mut printer = HeaderPrinter::new(settings.verbose, true);
63  | |     let mut observer = Observer::from(settings);
...   |
101 | |     Ok(())
102 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uu/tail/src/tail.rs:101:5
    |
101 |     Ok(())
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
101 |     return Ok(())
    |     ++++++

warning: default numeric fallback might occur
  --> src/uu/tail/src/tail.rs:92:58
   |
92 |         if !settings.has_only_stdin() || settings.pid != 0 {
   |                                                          ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/uu/tail/src/tail.rs:97:26
   |
97 |     if get_exit_code() > 0 && paths::stdin_is_bad_fd() {
   |                          ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: question mark operator was used
  --> src/uu/tail/src/tail.rs:65:5
   |
65 |     observer.start(settings)?;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: type of pattern does not match the expression type
  --> src/uu/tail/src/tail.rs:70:13
   |
70 |             InputKind::Stdin => {
   |             ^^^^^^^^^^^^^^^^
   |
   = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: question mark operator was used
  --> src/uu/tail/src/tail.rs:71:17
   |
71 |                 tail_stdin(settings, &mut printer, input, &mut observer)?;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
  --> src/uu/tail/src/tail.rs:74:17
   |
74 |                 tail_stdin(settings, &mut printer, input, &mut observer)?;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
  --> src/uu/tail/src/tail.rs:77:17
   |
77 |                 tail_file(settings, &mut printer, input, path, &mut observer, 0)?;
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
  --> src/uu/tail/src/tail.rs:93:13
   |
93 |             follow::follow(observer, settings)?;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a custom macro or match expression
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/tail.rs:104:1
    |
104 | / fn tail_file(
105 | |     settings: &Settings,
106 | |     header_printer: &mut HeaderPrinter,
107 | |     input: &Input,
...   |
110 | |     offset: u64,
111 | | ) -> UResult<()> {
    | |________________^
    |
note: first possible panic found here
   --> src/uu/tail/src/tail.rs:151:24
    |
151 |                     && metadata.as_ref().unwrap().get_block_size() > 0
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/tail.rs:104:1
    |
104 | / fn tail_file(
105 | |     settings: &Settings,
106 | |     header_printer: &mut HeaderPrinter,
107 | |     input: &Input,
...   |
110 | |     offset: u64,
111 | | ) -> UResult<()> {
    | |________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing documentation for a function
   --> src/uu/tail/src/tail.rs:104:1
    |
104 | / fn tail_file(
105 | |     settings: &Settings,
106 | |     header_printer: &mut HeaderPrinter,
107 | |     input: &Input,
...   |
183 | |     Ok(())
184 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uu/tail/src/tail.rs:183:5
    |
183 |     Ok(())
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
183 |     return Ok(())
    |     ++++++

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:119:9
    |
119 |         observer.add_bad_path(path, input.display_name.as_str(), false)?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: `to_string()` called on a `&str`
   --> src/uu/tail/src/tail.rs:124:23
    |
124 |         let err_msg = "Is a directory".to_string();
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `"Is a directory".to_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:142:9
    |
142 |         observer.add_bad_path(path, input.display_name.as_str(), false)?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: used `unwrap()` on an `Option` value
   --> src/uu/tail/src/tail.rs:151:24
    |
151 |                     && metadata.as_ref().unwrap().get_block_size() > 0
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:157:21
    |
157 |                     unbounded_tail(&mut reader, settings)?;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:159:17
    |
159 | /                 observer.add_path(
160 | |                     path,
161 | |                     input.display_name.as_str(),
162 | |                     Some(Box::new(reader)),
163 | |                     true,
164 | |                 )?;
    | |__________________^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: this ident consists of a single char
   --> src/uu/tail/src/tail.rs:166:17
    |
166 |             Err(e) if e.kind() == ErrorKind::PermissionDenied => {
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:167:17
    |
167 |                 observer.add_bad_path(path, input.display_name.as_str(), false)?;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uu/tail/src/tail.rs:169:21
    |
169 |                     format!("cannot open '{}' for reading", input.display_name)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
169 |                     return format!("cannot open '{}' for reading", input.display_name)
    |                     ++++++

warning: this ident consists of a single char
   --> src/uu/tail/src/tail.rs:172:17
    |
172 |             Err(e) => {
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:173:17
    |
173 |                 observer.add_bad_path(path, input.display_name.as_str(), false)?;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: missing `return` statement
   --> src/uu/tail/src/tail.rs:175:21
    |
175 |                     format!("cannot open '{}' for reading", input.display_name)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
175 |                     return format!("cannot open '{}' for reading", input.display_name)
    |                     ++++++

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:180:9
    |
180 |         observer.add_bad_path(path, input.display_name.as_str(), false)?;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/tail.rs:186:1
    |
186 | / fn tail_stdin(
187 | |     settings: &Settings,
188 | |     header_printer: &mut HeaderPrinter,
189 | |     input: &Input,
190 | |     observer: &mut Observer,
191 | | ) -> UResult<()> {
    | |________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing documentation for a function
   --> src/uu/tail/src/tail.rs:186:1
    |
186 | / fn tail_stdin(
187 | |     settings: &Settings,
188 | |     header_printer: &mut HeaderPrinter,
189 | |     input: &Input,
...   |
262 | |     Ok(())
263 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uu/tail/src/tail.rs:262:5
    |
262 |     Ok(())
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
262 |     return Ok(())
    |     ++++++

warning: unnecessary semicolon
   --> src/uu/tail/src/tail.rs:260:6
    |
260 |     };
    |      ^ help: remove
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_semicolon

warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`
   --> src/uu/tail/src/tail.rs:215:5
    |
215 | /     match input.resolve() {
216 | |         // fifo
217 | |         Some(path) => {
218 | |             let mut stdin_offset = 0;
...   |
260 | |     };
    | |_____^
    |
    = note: you might want to preserve the comments from inside the `match`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
    = note: `-W clippy::single-match-else` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::single_match_else)]`
help: try
    |
215 ~     if let Some(path) = input.resolve() {
216 +         let mut stdin_offset = 0;
217 +         if cfg!(unix) {
218 +             // Save the current seek position/offset of a stdin redirected file.
219 +             // This is needed to pass "gnu/tests/tail-2/start-middle.sh"
220 +             if let Ok(mut stdin_handle) = Handle::stdin() {
221 +                 if let Ok(offset) = stdin_handle.as_file_mut().stream_position() {
222 +                     stdin_offset = offset;
223 +                 }
224 +             }
225 +         }
226 +         tail_file(
227 +             settings,
228 +             header_printer,
229 +             input,
230 +             &path,
231 +             observer,
232 +             stdin_offset,
233 +         )?;
234 +     } else {
235 +         header_printer.print_input(input);
236 +         if paths::stdin_is_bad_fd() {
237 +             set_exit_code(1);
238 +             show_error!(
239 +                 "cannot fstat {}: {}",
240 +                 text::STDIN_HEADER.quote(),
241 +                 text::BAD_FD
242 +             );
243 +             if settings.follow.is_some() {
244 +                 show_error!(
245 +                     "error reading {}: {}",
246 +                     text::STDIN_HEADER.quote(),
247 +                     text::BAD_FD
248 +                 );
249 +             }
250 +         } else {
251 +             let mut reader = BufReader::new(stdin());
252 +             unbounded_tail(&mut reader, settings)?;
253 +             observer.add_stdin(input.display_name.as_str(), Some(Box::new(reader)), true)?;
254 +         }
255 ~     };
    |

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:228:13
    |
228 | /             tail_file(
229 | |                 settings,
230 | |                 header_printer,
231 | |                 input,
...   |
234 | |                 stdin_offset,
235 | |             )?;
    | |______________^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:256:17
    |
256 |                 unbounded_tail(&mut reader, settings)?;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:257:17
    |
257 |                 observer.add_stdin(input.display_name.as_str(), Some(Box::new(reader)), true)?;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: allocating a local array larger than 16384 bytes
   --> src/uu/tail/src/tail.rs:322:19
    |
322 |     let mut buf = [0; 32 * 1024];
    |                   ^^^^^^^^^^^^^^
    |
    = help: consider allocating on the heap with `vec![0; 32 * 1024].into_boxed_slice()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_stack_arrays
    = note: `-W clippy::large-stack-arrays` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::large_stack_arrays)]`

warning: slicing may panic
   --> src/uu/tail/src/tail.rs:335:55
    |
335 |                 for offset in memchr_iter(delimiter, &buf[..n]) {
    |                                                       ^^^^^^^^
    |
    = help: consider using `.get(..n)`or `.get_mut(..n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/tail.rs:336:21
    |
336 |                     count += 1;
    |                     ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/tail.rs:339:35
    |
339 |                         return Ok(total + offset + 1);
    |                                   ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/tail.rs:342:17
    |
342 |                 total += n;
    |                 ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: this ident consists of a single char
   --> src/uu/tail/src/tail.rs:344:17
    |
344 |             Err(e) if e.kind() == ErrorKind::Interrupted => continue,
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: this ident consists of a single char
   --> src/uu/tail/src/tail.rs:345:17
    |
345 |             Err(e) => return Err(e),
    |                 ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/tail.rs:353:1
    |
353 | fn backwards_thru_file(file: &mut File, num_delimiters: u64, delimiter: u8) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/tail.rs:380:17
    |
380 |                 assert_eq!(counter, num_delimiters);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: this ident consists of a single char
   --> src/uu/tail/src/tail.rs:364:25
    |
364 |             if let Some(c) = slice.last() {
    |                         ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#min_ident_chars

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/tail.rs:377:13
    |
377 |             counter += 1;
    |             ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: assert without any message
   --> src/uu/tail/src/tail.rs:380:17
    |
380 |                 assert_eq!(counter, num_delimiters);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider describing why the failing assert is problematic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_assert_message

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/tail.rs:385:17
    |
385 |                 file.seek(SeekFrom::Current((i + 1) as i64)).unwrap();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: casting `usize` to `i64` may wrap around the value on targets with 64-bit wide pointers
   --> src/uu/tail/src/tail.rs:385:45
    |
385 |                 file.seek(SeekFrom::Current((i + 1) as i64)).unwrap();
    |                                             ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/tail.rs:385:45
    |
385 |                 file.seek(SeekFrom::Current((i + 1) as i64)).unwrap();
    |                                             ^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/tail.rs:385:45
    |
385 |                 file.seek(SeekFrom::Current((i + 1) as i64)).unwrap();
    |                                             ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: first doc comment paragraph is too long
   --> src/uu/tail/src/tail.rs:392:1
    |
392 | / /// When tail'ing a file, we do not need to read the whole file from start to
393 | | /// finish just to find the last n lines or bytes. Instead, we can seek to the
394 | | /// end of the file, and then read the file "backwards" in blocks of size
395 | | /// `BLOCK_SIZE` until we find the location of the first line/byte. This ends up
396 | | /// being a nice performance win for very large files.
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_long_first_doc_paragraph

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/tail.rs:397:1
    |
397 | fn bounded_tail(file: &mut File, settings: &Settings) {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/tail.rs:406:21
    |
406 |             let i = forwards_thru_file(file, *count - 1, *delimiter).unwrap();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: assert without any message
   --> src/uu/tail/src/tail.rs:398:5
    |
398 |     debug_assert!(!settings.presume_input_pipe);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider describing why the failing assert is problematic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_assert_message

warning: this match arm has an identical body to another arm
   --> src/uu/tail/src/tail.rs:409:9
    |
409 | /         FilterMode::Lines(Signum::MinusZero, _) => {
410 | |             return;
411 | |         }
    | |_________^
    |
    = help: try changing either arm body
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms
    = note: `-W clippy::match-same-arms` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::match_same_arms)]`
help: or try merging the arm patterns and removing the obsolete arm
    |
409 ~         FilterMode::Lines(Signum::MinusZero, _) | FilterMode::Bytes(Signum::MinusZero) => {
410 |             return;
...
421 |         }
422 ~         _ => {}
    |

warning: wildcard match will also match any future added variants
   --> src/uu/tail/src/tail.rs:425:9
    |
425 |         _ => {}
    |         ^ help: try: `FilterMode::Bytes(_) | FilterMode::Lines(..)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: type of pattern does not match the expression type
   --> src/uu/tail/src/tail.rs:402:9
    |
402 |         FilterMode::Lines(Signum::Negative(count), delimiter) => {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/tail.rs:406:21
    |
406 |             let i = forwards_thru_file(file, *count - 1, *delimiter).unwrap();
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/tail.rs:406:46
    |
406 |             let i = forwards_thru_file(file, *count - 1, *delimiter).unwrap();
    |                                              ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/tail.rs:407:13
    |
407 |             file.seek(SeekFrom::Start(i as u64)).unwrap();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/tail.rs:407:39
    |
407 |             file.seek(SeekFrom::Start(i as u64)).unwrap();
    |                                       ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/tail.rs:413:23
    |
413 |             let len = file.seek(SeekFrom::End(0)).unwrap();
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/tail.rs:414:13
    |
414 | /             file.seek(SeekFrom::End(-((*count).min(len) as i64)))
415 | |                 .unwrap();
    | |_________________________^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/tail.rs:414:37
    |
414 |             file.seek(SeekFrom::End(-((*count).min(len) as i64)))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: casting `u64` to `i64` may wrap around the value
   --> src/uu/tail/src/tail.rs:414:38
    |
414 |             file.seek(SeekFrom::End(-((*count).min(len) as i64)))
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/tail.rs:414:38
    |
414 |             file.seek(SeekFrom::End(-((*count).min(len) as i64)))
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/tail.rs:420:13
    |
420 |             file.seek(SeekFrom::Start(*count - 1)).unwrap();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/tail.rs:420:39
    |
420 |             file.seek(SeekFrom::Start(*count - 1)).unwrap();
    |                                       ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: `mut stdout` is shadowed
   --> src/uu/tail/src/tail.rs:430:13
    |
430 |     let mut stdout = stdout.lock();
    |             ^^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/tail.rs:429:9
    |
429 |     let stdout = stdout();
    |         ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/tail.rs:431:5
    |
431 |     io::copy(file, &mut stdout).unwrap();
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: docs for function returning `Result` missing `# Errors` section
   --> src/uu/tail/src/tail.rs:434:1
    |
434 | fn unbounded_tail<T: Read>(reader: &mut BufReader<T>, settings: &Settings) -> UResult<()> {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_errors_doc

warning: missing documentation for a function
   --> src/uu/tail/src/tail.rs:434:1
    |
434 | / fn unbounded_tail<T: Read>(reader: &mut BufReader<T>, settings: &Settings) -> UResult<()> {
435 | |     let mut writer = BufWriter::new(stdout().lock());
436 | |     match &settings.mode {
437 | |         FilterMode::Lines(Signum::Negative(count), sep) => {
...   |
495 | |     Ok(())
496 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/uu/tail/src/tail.rs:495:5
    |
495 |     Ok(())
    |     ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
495 |     return Ok(())
    |     ++++++

warning: wildcard match will also match any future added variants
   --> src/uu/tail/src/tail.rs:492:9
    |
492 |         _ => {}
    |         ^ help: try: `FilterMode::Bytes(_) | FilterMode::Lines(..)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wildcard_enum_match_arm

warning: type of pattern does not match the expression type
   --> src/uu/tail/src/tail.rs:437:9
    |
437 |         FilterMode::Lines(Signum::Negative(count), sep) => {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: use `*` to dereference the match expression or explicitly match against a `&_` pattern and adjust the enclosed variable bindings
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:439:13
    |
439 |             chunks.fill(reader)?;
    |             ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:440:13
    |
440 |             chunks.print(&mut writer)?;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:443:13
    |
443 |             io::copy(reader, &mut writer)?;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/tail.rs:446:32
    |
446 |             let mut num_skip = *count - 1;
    |                                ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:448:19
    |
448 |             while chunk.fill(reader)?.is_some() {
    |                   ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/tail.rs:449:29
    |
449 |                 let lines = chunk.get_lines() as u64;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/tail.rs:451:21
    |
451 |                     num_skip -= lines;
    |                     ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:457:17
    |
457 |                 chunk.print_lines(&mut writer, num_skip as usize)?;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/uu/tail/src/tail.rs:457:48
    |
457 |                 chunk.print_lines(&mut writer, num_skip as usize)?;
    |                                                ^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
457 -                 chunk.print_lines(&mut writer, num_skip as usize)?;
457 +                 chunk.print_lines(&mut writer, usize::try_from(num_skip))?;
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/tail.rs:457:48
    |
457 |                 chunk.print_lines(&mut writer, num_skip as usize)?;
    |                                                ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:458:17
    |
458 |                 io::copy(reader, &mut writer)?;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:463:13
    |
463 |             chunks.fill(reader)?;
    |             ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:464:13
    |
464 |             chunks.print(&mut writer)?;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:467:13
    |
467 |             io::copy(reader, &mut writer)?;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/tail.rs:470:32
    |
470 |             let mut num_skip = *count - 1;
    |                                ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:473:38
    |
473 |                 if let Some(bytes) = chunk.fill(reader)? {
    |                                      ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/tail.rs:474:38
    |
474 |                     let bytes: u64 = bytes as u64;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `bytes` is shadowed
   --> src/uu/tail/src/tail.rs:474:25
    |
474 |                     let bytes: u64 = bytes as u64;
    |                         ^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/tail.rs:473:29
    |
473 |                 if let Some(bytes) = chunk.fill(reader)? {
    |                             ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: arithmetic operation that can potentially result in unexpected side-effects
   --> src/uu/tail/src/tail.rs:476:43
    |
476 |                         Ordering::Less => num_skip -= bytes,
    |                                           ^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic_side_effects

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:481:29
    |
481 | ...                   writer.write_all(chunk.get_buffer_with(num_skip as usize))?;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/uu/tail/src/tail.rs:481:68
    |
481 | ...                   writer.write_all(chunk.get_buffer_with(num_skip as usize))?;
    |                                                              ^^^^^^^^^^^^^^^^^
    |
    = help: if this is intentional allow the lint with `#[allow(clippy::cast_possible_truncation)]` ...
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation
help: ... or use `try_from` and handle the error accordingly
    |
481 -                             writer.write_all(chunk.get_buffer_with(num_skip as usize))?;
481 +                             writer.write_all(chunk.get_buffer_with(usize::try_from(num_skip)))?;
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/uu/tail/src/tail.rs:481:68
    |
481 | ...                   writer.write_all(chunk.get_buffer_with(num_skip as usize))?;
    |                                                              ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:490:13
    |
490 |             io::copy(reader, &mut writer)?;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: question mark operator was used
   --> src/uu/tail/src/tail.rs:494:5
    |
494 |     writer.flush()?;
    |     ^^^^^^^^^^^^^^^
    |
    = help: consider using a custom macro or match expression
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#question_mark_used

warning: this function is only used once
   --> src/uu/tail/src/args.rs:108:5
    |
108 | /     fn default_zero() -> Self {
109 | |         Self::Lines(Signum::Negative(10), 0)
110 | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/args.rs:100:13
    |
100 |             Self::default_zero()
    |             ^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn
    = note: `-W clippy::single-call-fn` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::single_call_fn)]`

warning: this function is only used once
   --> src/uu/tail/src/args.rs:61:5
    |
61  | /     fn from_obsolete_args(args: &parse::ObsoleteArgs) -> Self {
62  | |         let signum = if args.plus {
63  | |             Signum::Positive(args.num)
64  | |         } else {
...   |
72  | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/args.rs:174:25
    |
174 |         settings.mode = FilterMode::from_obsolete_args(args);
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/args.rs:74:5
    |
74  | /     fn from(matches: &ArgMatches) -> UResult<Self> {
75  | |         let zero_term = matches.get_flag(options::ZERO_TERM);
76  | |         let mode = if let Some(arg) = matches.get_one::<String>(options::BYTES) {
77  | |             match parse_num(arg) {
...   |
105 | |         Ok(mode)
106 | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/args.rs:224:19
    |
224 |             mode: FilterMode::from(matches)?,
    |                   ^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/parse.rs:36:1
    |
36  | / pub fn parse_obsolete(src: &OsString) -> Option<Result<ObsoleteArgs, ParseError>> {
37  | |     let Some(mut rest) = src.to_str() else {
38  | |         return Some(Err(ParseError::InvalidEncoding));
39  | |     };
...   |
97  | |     }))
98  | | }
    | |_^
    |
note: used here
   --> src/uu/tail/src/args.rs:364:11
    |
364 |     match parse::parse_obsolete(arg) {
    |           ^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/args.rs:165:5
    |
165 | /     pub fn from_obsolete_args(args: &parse::ObsoleteArgs, name: Option<&OsString>) -> Self {
166 | |         let mut settings = Self::default();
167 | |         if args.follow {
168 | |             settings.follow = if name.is_some() {
...   |
181 | |         settings
182 | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/args.rs:365:35
    |
365 |         Some(Ok(args)) => Ok(Some(Settings::from_obsolete_args(&args, input))),
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/args.rs:457:1
    |
457 | / pub fn uu_app() -> Command {
458 | |     #[cfg(target_os = "linux")]
459 | |     const POLLING_HELP: &str = "Disable 'inotify' support and use polling instead";
460 | |     #[cfg(all(unix, not(target_os = "linux")))]
...   |
582 | | }
    | |_^
    |
note: used here
   --> src/uu/tail/src/args.rs:418:21
    |
418 |     let clap_args = uu_app().try_get_matches_from(args_vec.clone());
    |                     ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/args.rs:184:5
    |
184 | /     pub fn from(matches: &ArgMatches) -> UResult<Self> {
...   |
284 | |         Ok(settings)
285 | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/args.rs:420:27
    |
420 |         Ok(matches) => Ok(Settings::from(&matches)?),
    |                           ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/args.rs:363:1
    |
363 | / pub fn parse_obsolete(arg: &OsString, input: Option<&OsString>) -> UResult<Option<Settings>> {
364 | |     match parse::parse_obsolete(arg) {
365 | |         Some(Ok(args)) => Ok(Some(Settings::from_obsolete_args(&args, input))),
366 | |         None => Ok(None),
...   |
389 | | }
    | |_^
    |
note: used here
   --> src/uu/tail/src/args.rs:451:11
    |
451 |     match parse_obsolete(possible_obsolete_args, args_vec.get(2))? {
    |           ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/chunks.rs:403:5
    |
403 | /     fn from_chunk(chunk: &Self, offset: usize) -> Self {
404 | |         if offset > chunk.lines {
405 | |             return Self::new(chunk.delimiter);
...   |
416 | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/chunks.rs:614:21
    |
614 |         let chunk = LinesChunk::from_chunk(&chunk, skip_lines);
    |                     ^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/follow/watch.rs:105:5
    |
105 | /     pub fn new(
106 | |         retry: bool,
107 | |         follow: Option<FollowMode>,
108 | |         use_polling: bool,
...   |
127 | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/follow/watch.rs:130:9
    |
130 |         Self::new(
    |         ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/follow/files.rs:31:5
    |
31  | /     pub fn from(settings: &Settings) -> Self {
32  | |         Self {
33  | |             map: HashMap::with_capacity(settings.inputs.len()),
34  | |             last: None,
...   |
37  | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/follow/watch.rs:134:13
    |
134 |             FileHandling::from(settings),
    |             ^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/follow/watch.rs:26:5
    |
26  | /     fn new(
27  | |         watcher: Box<dyn Watcher>,
28  | |         receiver: Receiver<Result<notify::Event, notify::Error>>,
29  | |     ) -> Self {
30  | |         Self { watcher, receiver }
31  | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/follow/watch.rs:253:32
    |
253 |         self.watcher_rx = Some(WatcherRx::new(watcher, rx));
    |                                ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/follow/files.rs:195:5
    |
195 | /     pub fn from_other_with_path(data: Self, path: &Path) -> Self {
196 | |         // Remove old reader
197 | |         let old_reader = data.reader;
198 | |         let reader = if old_reader.is_some() {
...   |
209 | |         Self::new(reader, path.metadata().ok(), data.display_name.as_str())
210 | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/follow/watch.rs:457:36
    |
457 |                     let new_data = PathData::from_other_with_path(self.files.remove(event_path), new_path);
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/platform/unix.rs:18:5
    |
18  | /     pub fn new(process_id: Pid) -> Self {
19  | |         Self { pid: process_id }
20  | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/follow/watch.rs:481:23
    |
481 |     let mut process = platform::ProcessChecker::new(observer.pid);
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/args.rs:416:1
    |
416 | / pub fn parse_args(args: impl uucore::Args) -> UResult<Settings> {
417 | |     let args_vec: Vec<OsString> = args.collect();
418 | |     let clap_args = uu_app().try_get_matches_from(args_vec.clone());
419 | |     let clap_result = match clap_args {
...   |
455 | | }
    | |_^
    |
note: used here
   --> src/uu/tail/src/tail.rs:41:20
    |
41  |     let settings = parse_args(args)?;
    |                    ^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/tail.rs:61:1
    |
61  | / fn uu_tail(settings: &Settings) -> UResult<()> {
62  | |     let mut printer = HeaderPrinter::new(settings.verbose, true);
63  | |     let mut observer = Observer::from(settings);
...   |
101 | |     Ok(())
102 | | }
    | |_^
    |
note: used here
   --> src/uu/tail/src/tail.rs:58:5
    |
58  |     uu_tail(&settings)
    |     ^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
  --> src/uu/tail/src/tail.rs:40:1
   |
40 | / pub fn uumain(args: impl uucore::Args) -> UResult<()> {
41 | |     let settings = parse_args(args)?;
42 | |
43 | |     settings.check_warnings();
...  |
58 | |     uu_tail(&settings)
59 | | }
   | |_^
   |
note: used here
  --> src/uu/tail/src/tail.rs:39:1
   |
39 | #[uucore::main]
   | ^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn
   = note: this warning originates in the attribute macro `uucore::main` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: this function is only used once
   --> src/uu/tail/src/follow/watch.rs:129:5
    |
129 | /     pub fn from(settings: &Settings) -> Self {
130 | |         Self::new(
131 | |             settings.retry,
132 | |             settings.follow,
...   |
137 | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/tail.rs:63:24
    |
63  |     let mut observer = Observer::from(settings);
    |                        ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/follow/watch.rs:476:1
    |
476 | / pub fn follow(mut observer: Observer, settings: &Settings) -> UResult<()> {
477 | |     if observer.files.no_files_remaining(settings) && !observer.files.only_stdin_remaining() {
478 | |         return Err(USimpleError::new(1, text::NO_FILES_REMAINING.to_string()));
...   |
602 | |     Ok(())
603 | | }
    | |_^
    |
note: used here
   --> src/uu/tail/src/tail.rs:93:13
    |
93  |             follow::follow(observer, settings)?;
    |             ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/tail.rs:397:1
    |
397 | / fn bounded_tail(file: &mut File, settings: &Settings) {
398 | |     debug_assert!(!settings.presume_input_pipe);
...   |
431 | |     io::copy(file, &mut stdout).unwrap();
432 | | }
    | |_^
    |
note: used here
   --> src/uu/tail/src/tail.rs:153:21
    |
153 |                     bounded_tail(&mut file, settings);
    |                     ^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/chunks.rs:49:5
    |
49  | /     pub fn new(file: &'a mut File) -> Self {
50  | |         let current = if cfg!(unix) {
51  | |             file.stream_position().unwrap()
52  | |         } else {
...   |
64  | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/tail.rs:358:18
    |
358 |     for slice in ReverseChunks::new(file) {
    |                  ^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/tail.rs:353:1
    |
353 | / fn backwards_thru_file(file: &mut File, num_delimiters: u64, delimiter: u8) {
354 | |     // This variable counts the number of delimiters found in the file
355 | |     // so far (reading from the end of the file toward the beginning).
356 | |     let mut counter = 0;
...   |
390 | | }
    | |_^
    |
note: used here
   --> src/uu/tail/src/tail.rs:403:13
    |
403 |             backwards_thru_file(file, *count, *delimiter);
    |             ^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/tail.rs:312:1
    |
312 | / fn forwards_thru_file(
313 | |     reader: &mut impl Read,
314 | |     num_delimiters: u64,
315 | |     delimiter: u8,
...   |
348 | | }
    | |_^
    |
note: used here
   --> src/uu/tail/src/tail.rs:406:21
    |
406 |             let i = forwards_thru_file(file, *count - 1, *delimiter).unwrap();
    |                     ^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: this function is only used once
   --> src/uu/tail/src/chunks.rs:551:5
    |
551 | /     pub fn new(delimiter: u8, num_print: u64) -> Self {
552 | |         Self {
553 | |             delimiter,
554 | |             num_print,
...   |
558 | |     }
    | |_____^
    |
note: used here
   --> src/uu/tail/src/tail.rs:438:30
    |
438 |             let mut chunks = chunks::LinesChunkBuffer::new(*sep, *count);
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_call_fn

warning: `uu_tail` (lib) generated 851 warnings (19 duplicates) (run `cargo clippy --fix --lib -p uu_tail` to apply 225 suggestions)
    Checking rstest v0.25.0
warning: missing documentation for the crate
 --> src/uu/tail/src/main.rs:1:1
  |
1 | uucore::bin!(uu_tail);
  | ^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items
  = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::missing_docs_in_private_items)]`

warning: usage of `process::exit`
 --> src/uu/tail/src/main.rs:1:1
  |
1 | uucore::bin!(uu_tail);
  | ^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exit
  = note: `-W clippy::exit` implied by `-W clippy::restriction`
  = help: to override `-W clippy::restriction` add `#[allow(clippy::exit)]`
  = note: this warning originates in the macro `uucore::bin` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `uu_tail` (bin "tail" test) generated 10 warnings (9 duplicates)
warning: `uu_tail` (bin "tail") generated 10 warnings (9 duplicates)
warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uu/tail/src/tail.rs:499:5
    |
499 | mod tests {
    |     ^^^^^
    |
note: should be placed before `unbounded_tail`
   --> src/uu/tail/src/tail.rs:434:4
    |
434 | fn unbounded_tail<T: Read>(reader: &mut BufReader<T>, settings: &Settings) -> UResult<()> {
    |    ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering
    = note: `-W clippy::arbitrary-source-item-ordering` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::arbitrary_source_item_ordering)]`

warning: incorrect ordering of items (module item groupings specify another order)
  --> src/uu/tail/src/args.rs:24:9
   |
24 | pub mod options {
   |         ^^^^^^^
   |
note: should be placed before `USAGE`
  --> src/uu/tail/src/args.rs:22:7
   |
22 | const USAGE: &str = help_usage!("tail.md");
   |       ^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uu/tail/src/args.rs:585:5
    |
585 | mod tests {
    |     ^^^^^
    |
note: should be placed before `uu_app`
   --> src/uu/tail/src/args.rs:457:8
    |
457 | pub fn uu_app() -> Command {
    |        ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/args.rs:593:5
    |
593 |     fn test_parse_num_when_sign_is_given() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/args.rs:595:9
    |
595 |         assert!(result.is_ok());
    |         ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc
    = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
    = help: to override `-W clippy::pedantic` add `#[allow(clippy::missing_panics_doc)]`

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/args.rs:596:20
    |
596 |         assert_eq!(result.unwrap(), Signum::PlusZero);
    |                    ^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used
    = note: `-W clippy::unwrap-used` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::unwrap_used)]`

warning: `result` shadows a previous, unrelated binding
   --> src/uu/tail/src/args.rs:598:13
    |
598 |         let result = parse_num("+1");
    |             ^^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/args.rs:594:13
    |
594 |         let result = parse_num("+0");
    |             ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated
    = note: `-W clippy::shadow-unrelated` implied by `-W clippy::restriction`
    = help: to override `-W clippy::restriction` add `#[allow(clippy::shadow_unrelated)]`

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/args.rs:600:20
    |
600 |         assert_eq!(result.unwrap(), Signum::Positive(1));
    |                    ^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: `result` shadows a previous, unrelated binding
   --> src/uu/tail/src/args.rs:602:13
    |
602 |         let result = parse_num("-0");
    |             ^^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/args.rs:598:13
    |
598 |         let result = parse_num("+1");
    |             ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/args.rs:604:20
    |
604 |         assert_eq!(result.unwrap(), Signum::MinusZero);
    |                    ^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: `result` shadows a previous, unrelated binding
   --> src/uu/tail/src/args.rs:606:13
    |
606 |         let result = parse_num("-1");
    |             ^^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/args.rs:602:13
    |
602 |         let result = parse_num("-0");
    |             ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/args.rs:608:20
    |
608 |         assert_eq!(result.unwrap(), Signum::Negative(1));
    |                    ^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/args.rs:612:5
    |
612 |     fn test_parse_num_when_no_sign_is_given() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/args.rs:614:9
    |
614 |         assert!(result.is_ok());
    |         ^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/args.rs:615:20
    |
615 |         assert_eq!(result.unwrap(), Signum::MinusZero);
    |                    ^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: `result` shadows a previous, unrelated binding
   --> src/uu/tail/src/args.rs:617:13
    |
617 |         let result = parse_num("1");
    |             ^^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/args.rs:613:13
    |
613 |         let result = parse_num("0");
    |             ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/args.rs:619:20
    |
619 |         assert_eq!(result.unwrap(), Signum::Negative(1));
    |                    ^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/args.rs:623:5
    |
623 |     fn test_parse_obsolete_settings_f() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/args.rs:629:9
    |
629 |         assert_eq!(result.follow, Some(FollowMode::Descriptor));
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: `result` shadows a previous, unrelated binding
   --> src/uu/tail/src/args.rs:631:13
    |
631 |         let result = Settings::from_obsolete_args(&args, Some(&"file".into()));
    |             ^^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/args.rs:628:13
    |
628 |         let result = Settings::from_obsolete_args(&args, None);
    |             ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/args.rs:665:13
    |
665 |             Settings::from(&uu_app().no_binary_name(true).get_matches_from(args)).unwrap();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uu/tail/src/chunks.rs:629:5
    |
629 | mod tests {
    |     ^^^^^
    |
note: should be placed before the following item
   --> src/uu/tail/src/chunks.rs:549:1
    |
549 | / impl LinesChunkBuffer {
550 | |     /// Create a new [`LinesChunkBuffer`]
551 | |     pub fn new(delimiter: u8, num_print: u64) -> Self {
552 | |         Self {
...   |
626 | | }
    | |_^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: docs for function which may panic missing `# Panics` section
  --> src/uu/tail/src/chunks.rs:49:5
   |
49 |     pub fn new(file: &'a mut File) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: first possible panic found here
  --> src/uu/tail/src/chunks.rs:51:13
   |
51 |             file.stream_position().unwrap()
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: used `unwrap()` on a `Result` value
  --> src/uu/tail/src/chunks.rs:51:13
   |
51 |             file.stream_position().unwrap()
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: `chunk` shadows a previous, unrelated binding
   --> src/uu/tail/src/chunks.rs:310:13
    |
310 |         let chunk = self.chunks.pop_front().unwrap();
    |             ^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/chunks.rs:289:13
    |
289 |         let mut chunk = Box::new(BytesChunk::new());
    |             ^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/chunks.rs:633:5
    |
633 |     fn test_bytes_chunk_from_when_offset_is_zero() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/chunks.rs:638:9
    |
638 |         assert_eq!(other, chunk);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: `other` shadows a previous, unrelated binding
   --> src/uu/tail/src/chunks.rs:641:13
    |
641 |         let other = BytesChunk::from_chunk(&chunk, 0);
    |             ^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/chunks.rs:637:13
    |
637 |         let other = BytesChunk::from_chunk(&chunk, 0);
    |             ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: `other` shadows a previous, unrelated binding
   --> src/uu/tail/src/chunks.rs:645:13
    |
645 |         let other = BytesChunk::from_chunk(&chunk, 0);
    |             ^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/chunks.rs:641:13
    |
641 |         let other = BytesChunk::from_chunk(&chunk, 0);
    |             ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: `other` shadows a previous, unrelated binding
   --> src/uu/tail/src/chunks.rs:650:13
    |
650 |         let other = BytesChunk::from_chunk(&chunk, 2);
    |             ^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/chunks.rs:645:13
    |
645 |         let other = BytesChunk::from_chunk(&chunk, 0);
    |             ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/chunks.rs:656:5
    |
656 |     fn test_bytes_chunk_from_when_offset_is_not_zero() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/chunks.rs:664:9
    |
664 |         assert_eq!(other.buffer, expected_buffer);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: `other` shadows a previous, unrelated binding
   --> src/uu/tail/src/chunks.rs:667:13
    |
667 |         let other = BytesChunk::from_chunk(&chunk, 2);
    |             ^^^^^
    |
note: previous binding is here
   --> src/uu/tail/src/chunks.rs:661:13
    |
661 |         let other = BytesChunk::from_chunk(&chunk, 1);
    |             ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/chunks.rs:673:5
    |
673 |     fn test_bytes_chunk_from_when_offset_is_larger_than_chunk_size_1() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/chunks.rs:677:9
    |
677 |         assert_eq!(0, new_chunk.bytes);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/chunks.rs:681:5
    |
681 |     fn test_bytes_chunk_from_when_offset_is_larger_than_chunk_size_2() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/chunks.rs:685:9
    |
685 |         assert_eq!(0, new_chunk.bytes);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/chunks.rs:689:5
    |
689 |     fn test_bytes_chunk_from_when_offset_is_larger_than_chunk_size_3() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/chunks.rs:693:9
    |
693 |         assert_eq!(0, new_chunk.bytes);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/chunks.rs:697:5
    |
697 |     fn test_bytes_chunk_from_when_offset_is_equal_to_chunk_size() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/chunks.rs:702:9
    |
702 |         assert_eq!(0, new_chunk.bytes);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: incorrect ordering of items (module item groupings specify another order)
   --> src/uu/tail/src/parse.rs:101:5
    |
101 | mod tests {
    |     ^^^^^
    |
note: should be placed before `parse_obsolete`
   --> src/uu/tail/src/parse.rs:36:8
    |
36  | pub fn parse_obsolete(src: &OsString) -> Option<Result<ObsoleteArgs, ParseError>> {
    |        ^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arbitrary_source_item_ordering

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/parse.rs:104:5
    |
104 |     fn test_parse_numbers_obsolete() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/parse.rs:105:9
    |
105 | /         assert_eq!(
106 | |             parse_obsolete(&OsString::from("+2c")),
107 | |             Some(Ok(ObsoleteArgs {
108 | |                 num: 2,
...   |
112 | |             }))
113 | |         );
    | |_________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/parse.rs:143:5
    |
143 |     fn test_parse_errors_obsolete() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/parse.rs:144:9
    |
144 | /         assert_eq!(
145 | |             parse_obsolete(&OsString::from("-5n")),
146 | |             Some(Err(ParseError::Context))
147 | |         );
    | |_________^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/parse.rs:182:5
    |
182 |     fn test_parse_obsolete_no_match() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/parse.rs:183:9
    |
183 |         assert_eq!(parse_obsolete(&OsString::from("-k")), None);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/tail.rs:505:5
    |
505 |     fn test_forwards_thru_file_zero() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/tail.rs:507:17
    |
507 |         let i = forwards_thru_file(&mut reader, 0, b'\n').unwrap();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/tail.rs:507:17
    |
507 |         let i = forwards_thru_file(&mut reader, 0, b'\n').unwrap();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/tail.rs:512:5
    |
512 |     fn test_forwards_thru_file_basic() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/tail.rs:515:17
    |
515 |         let i = forwards_thru_file(&mut reader, 2, b'\n').unwrap();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/tail.rs:515:17
    |
515 |         let i = forwards_thru_file(&mut reader, 2, b'\n').unwrap();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: docs for function which may panic missing `# Panics` section
   --> src/uu/tail/src/tail.rs:520:5
    |
520 |     fn test_forwards_thru_file_past_end() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: first possible panic found here
   --> src/uu/tail/src/tail.rs:522:17
    |
522 |         let i = forwards_thru_file(&mut reader, 2, b'\n').unwrap();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: used `unwrap()` on a `Result` value
   --> src/uu/tail/src/tail.rs:522:17
    |
522 |         let i = forwards_thru_file(&mut reader, 2, b'\n').unwrap();
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: `uu_tail` (lib test) generated 840 warnings (798 duplicates)
    Finished `dev` profile [unoptimized + debuginfo] target(s) in 1m 37s
