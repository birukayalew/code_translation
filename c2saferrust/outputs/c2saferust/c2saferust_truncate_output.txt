   Compiling libc v0.2.158
   Compiling rust v0.0.0 (/mnt/c/Users/sebir/Documents/summer/Research/c2saferrust/coreutils/src/truncate/rust_WIP)
warning: missing documentation for the crate
  --> build.rs:1:1
   |
1  | / #[cfg(all(unix, not(target_os = "macos")))]
2  | | fn main() {
3  | |     // add unix dependencies below
4  | |     // println!("cargo:rustc-flags=-l readline");
...  |
10 | |     // println!("cargo:rustc-flags=-l edit");
11 | | }
   | |_^
   |
   = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `rust` (build script) generated 1 warning
warning: use of `eprintln!`
  --> src/progname.rs:64:9
   |
64 |         eprintln!("A NULL argv[0] was passed through an exec system call.");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::print-stderr` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stderr

warning: use of `println!`
   --> src/version_etc.rs:306:5
    |
306 |     println!();
    |     ^^^^^^^^^^
    |
    = note: `-W clippy::print-stdout` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/version_etc.rs:317:5
    |
317 |     println!("{}", unsafe { std::ffi::CStr::from_ptr(report_bugs).to_string_lossy() });
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/version_etc.rs:318:5
    |
318 |     println!("{}", unsafe { std::ffi::CStr::from_ptr(home_page).to_string_lossy() });
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/version_etc.rs:319:5
    |
319 |     println!("{}", unsafe { std::ffi::CStr::from_ptr(help_page).to_string_lossy() });
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: unused import: `std::ops::RangeInclusive`
  --> src/c_ctype.rs:15:5
   |
15 | use std::ops::RangeInclusive;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `::libc`
  --> src/c_ctype.rs:17:5
   |
17 | use ::libc;
   |     ^^^^^^

warning: unused import: `std::ptr`
 --> src/fflush.rs:2:5
  |
2 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::os::raw::c_int`
 --> src/fseeko.rs:1:5
  |
1 | use std::os::raw::c_int;
  |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::alloc`
 --> src/ialloc.rs:8:5
  |
8 | use std::alloc;
  |     ^^^^^^^^^^

warning: unused import: `std::ptr`
 --> src/ialloc.rs:9:5
  |
9 | use std::ptr;
  |     ^^^^^^^^

warning: unused import: `std::slice`
  --> src/ialloc.rs:10:5
   |
10 | use std::slice;
   |     ^^^^^^^^^^

warning: unused import: `std::slice`
 --> src/mbrtoc32.rs:3:5
  |
3 | use std::slice;
  |     ^^^^^^^^^^

warning: unused import: `std::process`
 --> src/mbrtoc32.rs:4:5
  |
4 | use std::process;
  |     ^^^^^^^^^^^^

warning: unused import: `std::mem`
 --> src/mbszero.rs:1:5
  |
1 | use std::mem;
  |     ^^^^^^^^

warning: unused import: `std::ffi::CStr`
 --> src/progname.rs:1:5
  |
1 | use std::ffi::CStr;
  |     ^^^^^^^^^^^^^^

warning: unused import: `std::process`
 --> src/progname.rs:2:5
  |
2 | use std::process;
  |     ^^^^^^^^^^^^

warning: unused import: `std::slice`
 --> src/setlocale_null_unlocked.rs:1:5
  |
1 | use std::slice;
  |     ^^^^^^^^^^

warning: unused import: `std::ffi`
 --> src/version_etc.rs:2:5
  |
2 | use std::ffi;
  |     ^^^^^^^^

warning: unused import: `std::process`
 --> src/xalloc_die.rs:1:5
  |
1 | use std::process;
  |     ^^^^^^^^^^^^

warning: unused import: `std::slice`
  --> src/xmalloc.rs:15:5
   |
15 | use std::slice;
   |     ^^^^^^^^^^

warning: unused import: `std::mem`
  --> src/xmalloc.rs:19:5
   |
19 | use std::mem;
   |     ^^^^^^^^

warning: unused label
   --> src/xstrtoimax.rs:432:5
    |
432 |     'c_2247: {
    |     ^^^^^^^
    |
    = note: `#[warn(unused_labels)]` on by default

warning: using a potentially dangerous silent `as` conversion
  --> src/c_ctype.rs:29:30
   |
29 |     (b'a'..=b'z').contains(&(c as u8)) || (b'A'..=b'Z').contains(&(c as u8))
   |                              ^^^^^^^
   |
   = note: `-W clippy::as-conversions` implied by `-W clippy::restriction`
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_ctype.rs:29:68
   |
29 |     (b'a'..=b'z').contains(&(c as u8)) || (b'A'..=b'Z').contains(&(c as u8))
   |                                                                    ^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_ctype.rs:54:10
   |
54 |     c == ' ' as i32 || c == '\t' as i32
   |          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_ctype.rs:54:29
   |
54 |     c == ' ' as i32 || c == '\t' as i32
   |                             ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/c_ctype.rs:152:25
    |
152 |         65..=90 => c + ('a' as i32 - 'A' as i32),
    |                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/c_ctype.rs:152:38
    |
152 |         65..=90 => c + ('a' as i32 - 'A' as i32),
    |                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/c_ctype.rs:162:26
    |
162 |         97..=122 => c - ('a' as i32) + ('A' as i32),
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/c_ctype.rs:162:41
    |
162 |         97..=122 => c - ('a' as i32) + ('A' as i32),
    |                                         ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
 --> src/c_strcasecmp.rs:6:24
  |
6 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |                        ^^^^^^^^^^
  |
  = help: consider using a safe wrapper for this conversion
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
 --> src/c_strcasecmp.rs:6:37
  |
6 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |                                     ^^^^^^^^^^
  |
  = help: consider using a safe wrapper for this conversion
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:16:40
   |
16 |     let mut p1: *const libc::c_uchar = s1 as *const libc::c_uchar;
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:17:40
   |
17 |     let mut p2: *const libc::c_uchar = s2 as *const libc::c_uchar;
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:21:16
   |
21 |         return 0 as libc::c_int;
   |                ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:24:18
   |
24 |         let c1 = c_tolower(*p1 as i32) as u8;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:24:28
   |
24 |         let c1 = c_tolower(*p1 as i32) as u8;
   |                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:25:18
   |
25 |         let c2 = c_tolower(*p2 as i32) as u8;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:25:28
   |
25 |         let c2 = c_tolower(*p2 as i32) as u8;
   |                            ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:26:12
   |
26 |         if c1 as libc::c_int == '\0' as i32 {
   |            ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:26:33
   |
26 |         if c1 as libc::c_int == '\0' as i32 {
   |                                 ^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:33:14
   |
33 |         if !(c1 as libc::c_int == c2 as libc::c_int) {
   |              ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:33:35
   |
33 |         if !(c1 as libc::c_int == c2 as libc::c_int) {
   |                                   ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: redundant else block
  --> src/c_strcasecmp.rs:41:12
   |
41 |       } else {
   |  ____________^
42 | |         return (c1 as libc::c_int > c2 as libc::c_int) as libc::c_int
43 | |             - ((c1 as libc::c_int) < c2 as libc::c_int) as libc::c_int
44 | |     };
   | |_____^
   |
   = note: `-W clippy::redundant-else` implied by `-W clippy::pedantic`
   = help: remove the `else` block and move the contents out
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:37:8
   |
37 |     if 127 as libc::c_int * 2 as libc::c_int + 1 as libc::c_int
   |        ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:37:29
   |
37 |     if 127 as libc::c_int * 2 as libc::c_int + 1 as libc::c_int
   |                             ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:37:48
   |
37 |     if 127 as libc::c_int * 2 as libc::c_int + 1 as libc::c_int
   |                                                ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:38:12
   |
38 |         <= 2147483647 as libc::c_int
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
  --> src/c_strcasecmp.rs:38:12
   |
38 |         <= 2147483647 as libc::c_int
   |            ^^^^^^^^^^ help: consider: `2_147_483_647`
   |
   = note: `-W clippy::unreadable-literal` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/c_strcasecmp.rs:38:12
   |
38 |         <= 2147483647 as libc::c_int
   |            ^^^^^^^^^^ help: consider: `0x7FFF_FFFF`
   |
   = note: `-W clippy::decimal-literal-representation` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:40:16
   |
40 |         return c1 as libc::c_int - c2 as libc::c_int
   |                ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:40:36
   |
40 |         return c1 as libc::c_int - c2 as libc::c_int
   |                                    ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:42:16
   |
42 |         return (c1 as libc::c_int > c2 as libc::c_int) as libc::c_int
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:42:17
   |
42 |         return (c1 as libc::c_int > c2 as libc::c_int) as libc::c_int
   |                 ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:42:37
   |
42 |         return (c1 as libc::c_int > c2 as libc::c_int) as libc::c_int
   |                                     ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:43:15
   |
43 |             - ((c1 as libc::c_int) < c2 as libc::c_int) as libc::c_int
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:43:17
   |
43 |             - ((c1 as libc::c_int) < c2 as libc::c_int) as libc::c_int
   |                 ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/c_strcasecmp.rs:43:38
   |
43 |             - ((c1 as libc::c_int) < c2 as libc::c_int) as libc::c_int
   |                                      ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:64:45
   |
64 | static mut file_name: *const libc::c_char = 0 as *const libc::c_char;
   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:83:32
   |
83 |     if close_stream(stdout) != 0 as libc::c_int
   |                                ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:84:14
   |
84 |         && !(ignore_EPIPE as libc::c_int != 0
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:85:39
   |
85 |             && *__errno_location() == 32 as libc::c_int)
   |                                       ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:88:13
   |
88 |             b"write error\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:88:13
   |
88 |             b"write error\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/closeout.rs:132:16
    |
132 |           } else {
    |  ________________^
133 | |             if 0 != 0 {
134 | |                 error(
135 | |                     0 as libc::c_int,
...   |
170 | |             };
171 | |         }
    | |_________^
    |
    = note: `-W clippy::collapsible-else-if` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
132 ~         } else if 0 != 0 {
133 +             error(
134 +                 0 as libc::c_int,
135 +                 *__errno_location(),
136 +                 b"%s\0" as *const u8 as *const libc::c_char,
137 +                 write_error,
138 +             );
139 +             if 0 as libc::c_int != 0 as libc::c_int {
140 +                 unreachable!();
141 +             } else {};
142 +         } else {
143 +             ({
144 +                 let __errstatus: libc::c_int = 0 as libc::c_int;
145 +                 error(
146 +                     __errstatus,
147 +                     *__errno_location(),
148 +                     b"%s\0" as *const u8 as *const libc::c_char,
149 +                     write_error,
150 +                 );
151 +                 if __errstatus != 0 as libc::c_int {
152 +                     unreachable!();
153 +                 } else {};
154 +                 
155 +             });
156 +             ({
157 +                 let __errstatus: libc::c_int = 0 as libc::c_int;
158 +                 error(
159 +                     __errstatus,
160 +                     *__errno_location(),
161 +                     b"%s\0" as *const u8 as *const libc::c_char,
162 +                     write_error,
163 +                 );
164 +                 if __errstatus != 0 as libc::c_int {
165 +                     unreachable!();
166 +                 } else {};
167 +                 
168 +             });
169 +         }
    |

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:93:21
   |
93 |                     0 as libc::c_int,
   |                     ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:95:21
   |
95 |                     b"%s: %s\0" as *const u8 as *const libc::c_char,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:95:21
   |
95 |                     b"%s: %s\0" as *const u8 as *const libc::c_char,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:99:20
   |
99 |                 if 0 as libc::c_int != 0 as libc::c_int {
   |                    ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/closeout.rs:99:40
   |
99 |                 if 0 as libc::c_int != 0 as libc::c_int {
   |                                        ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:104:52
    |
104 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:108:25
    |
108 |                         b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:108:25
    |
108 |                         b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:112:39
    |
112 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:118:52
    |
118 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:122:25
    |
122 |                         b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:122:25
    |
122 |                         b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:126:39
    |
126 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:135:21
    |
135 |                     0 as libc::c_int,
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:137:21
    |
137 |                     b"%s\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:137:21
    |
137 |                     b"%s\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:140:20
    |
140 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:140:40
    |
140 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:145:52
    |
145 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:149:25
    |
149 |                         b"%s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:149:25
    |
149 |                         b"%s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:152:39
    |
152 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:158:52
    |
158 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:162:25
    |
162 |                         b"%s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:162:25
    |
162 |                         b"%s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:165:39
    |
165 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:174:8
    |
174 |     if SANITIZE_ADDRESS as libc::c_int == 0 && close_stream(stderr) != 0 as libc::c_int {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/closeout.rs:174:72
    |
174 |     if SANITIZE_ADDRESS as libc::c_int == 0 && close_stream(stderr) != 0 as libc::c_int {
    |                                                                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
 --> src/exitfail.rs:3:44
  |
3 | pub static mut exit_failure: libc::c_int = 1 as libc::c_int;
  |                                            ^^^^^^^^^^^^^^^^
  |
  = help: consider using a safe wrapper for this conversion
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fseeko.rs:64:19
   |
64 |         if pos == -(1 as libc::c_int) as libc::c_long {
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fseeko.rs:64:21
   |
64 |         if pos == -(1 as libc::c_int) as libc::c_long {
   |                     ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fseeko.rs:65:22
   |
65 |             return -(1 as libc::c_int);
   |                      ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fseeko.rs:67:24
   |
67 |         fp._flags &= !(0x10 as libc::c_int);
   |                        ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/fseeko.rs:69:16
   |
69 |         return 0 as libc::c_int;
   |                ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/hard_locale.rs:20:13
   |
20 |             locale.len() as libc::c_ulong,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/ialloc.rs:35:8
   |
35 |     if n as usize <= usize::MAX && s as usize <= usize::MAX {
   |        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/ialloc.rs:35:36
   |
35 |     if n as usize <= usize::MAX && s as usize <= usize::MAX {
   |                                    ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/ialloc.rs:36:29
   |
36 |         let mut nx: usize = n as usize;
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/ialloc.rs:37:29
   |
37 |         let mut sx: usize = s as usize;
   |                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: integer type suffix should be separated by an underscore
  --> src/ialloc.rs:69:20
   |
69 |     let vec = vec![0u8; total_size]; // Allocate and zero-initialize
   |                    ^^^ help: add an underscore: `0_u8`
   |
   = note: `-W clippy::unseparated-literal-suffix` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix

warning: using a potentially dangerous silent `as` conversion
  --> src/ialloc.rs:93:8
   |
93 |     if s as usize <= usize::MAX {
   |        ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/ialloc.rs:94:58
   |
94 |         let layout = std::alloc::Layout::from_size_align(s as usize, 1).ok()?;
   |                                                          ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/ialloc.rs:99:77
   |
99 |             Some(unsafe { Box::from_raw(std::slice::from_raw_parts_mut(ptr, s as usize)) })
   |                                                                             ^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
  --> src/localcharset.rs:10:36
   |
10 | pub const _NL_NUM: C2RustUnnamed = 786449;
   |                                    ^^^^^^ help: consider: `786_449`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:11:54
   |
11 | pub const _NL_NUM_LC_IDENTIFICATION: C2RustUnnamed = 786448;
   |                                                      ^^^^^^ help: consider: `786_448`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:12:55
   |
12 | pub const _NL_IDENTIFICATION_CODESET: C2RustUnnamed = 786447;
   |                                                       ^^^^^^ help: consider: `786_447`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:13:56
   |
13 | pub const _NL_IDENTIFICATION_CATEGORY: C2RustUnnamed = 786446;
   |                                                        ^^^^^^ help: consider: `786_446`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:14:52
   |
14 | pub const _NL_IDENTIFICATION_DATE: C2RustUnnamed = 786445;
   |                                                    ^^^^^^ help: consider: `786_445`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:15:56
   |
15 | pub const _NL_IDENTIFICATION_REVISION: C2RustUnnamed = 786444;
   |                                                        ^^^^^^ help: consider: `786_444`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:16:60
   |
16 | pub const _NL_IDENTIFICATION_ABBREVIATION: C2RustUnnamed = 786443;
   |                                                            ^^^^^^ help: consider: `786_443`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:17:59
   |
17 | pub const _NL_IDENTIFICATION_APPLICATION: C2RustUnnamed = 786442;
   |                                                           ^^^^^^ help: consider: `786_442`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:18:56
   |
18 | pub const _NL_IDENTIFICATION_AUDIENCE: C2RustUnnamed = 786441;
   |                                                        ^^^^^^ help: consider: `786_441`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:19:57
   |
19 | pub const _NL_IDENTIFICATION_TERRITORY: C2RustUnnamed = 786440;
   |                                                         ^^^^^^ help: consider: `786_440`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:20:56
   |
20 | pub const _NL_IDENTIFICATION_LANGUAGE: C2RustUnnamed = 786439;
   |                                                        ^^^^^^ help: consider: `786_439`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:21:51
   |
21 | pub const _NL_IDENTIFICATION_FAX: C2RustUnnamed = 786438;
   |                                                   ^^^^^^ help: consider: `786_438`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:22:51
   |
22 | pub const _NL_IDENTIFICATION_TEL: C2RustUnnamed = 786437;
   |                                                   ^^^^^^ help: consider: `786_437`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:23:53
   |
23 | pub const _NL_IDENTIFICATION_EMAIL: C2RustUnnamed = 786436;
   |                                                     ^^^^^^ help: consider: `786_436`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:24:55
   |
24 | pub const _NL_IDENTIFICATION_CONTACT: C2RustUnnamed = 786435;
   |                                                       ^^^^^^ help: consider: `786_435`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:25:55
   |
25 | pub const _NL_IDENTIFICATION_ADDRESS: C2RustUnnamed = 786434;
   |                                                       ^^^^^^ help: consider: `786_434`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:26:54
   |
26 | pub const _NL_IDENTIFICATION_SOURCE: C2RustUnnamed = 786433;
   |                                                      ^^^^^^ help: consider: `786_433`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:27:53
   |
27 | pub const _NL_IDENTIFICATION_TITLE: C2RustUnnamed = 786432;
   |                                                     ^^^^^^ help: consider: `786_432`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:28:51
   |
28 | pub const _NL_NUM_LC_MEASUREMENT: C2RustUnnamed = 720898;
   |                                                   ^^^^^^ help: consider: `720_898`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:29:52
   |
29 | pub const _NL_MEASUREMENT_CODESET: C2RustUnnamed = 720897;
   |                                                    ^^^^^^ help: consider: `720_897`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:30:56
   |
30 | pub const _NL_MEASUREMENT_MEASUREMENT: C2RustUnnamed = 720896;
   |                                                        ^^^^^^ help: consider: `720_896`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:31:49
   |
31 | pub const _NL_NUM_LC_TELEPHONE: C2RustUnnamed = 655365;
   |                                                 ^^^^^^ help: consider: `655_365`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:32:50
   |
32 | pub const _NL_TELEPHONE_CODESET: C2RustUnnamed = 655364;
   |                                                  ^^^^^^ help: consider: `655_364`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:33:53
   |
33 | pub const _NL_TELEPHONE_INT_PREFIX: C2RustUnnamed = 655363;
   |                                                     ^^^^^^ help: consider: `655_363`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:34:53
   |
34 | pub const _NL_TELEPHONE_INT_SELECT: C2RustUnnamed = 655362;
   |                                                     ^^^^^^ help: consider: `655_362`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:35:54
   |
35 | pub const _NL_TELEPHONE_TEL_DOM_FMT: C2RustUnnamed = 655361;
   |                                                      ^^^^^^ help: consider: `655_361`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:36:54
   |
36 | pub const _NL_TELEPHONE_TEL_INT_FMT: C2RustUnnamed = 655360;
   |                                                      ^^^^^^ help: consider: `655_360`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:37:47
   |
37 | pub const _NL_NUM_LC_ADDRESS: C2RustUnnamed = 589837;
   |                                               ^^^^^^ help: consider: `589_837`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:38:48
   |
38 | pub const _NL_ADDRESS_CODESET: C2RustUnnamed = 589836;
   |                                                ^^^^^^ help: consider: `589_836`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:39:49
   |
39 | pub const _NL_ADDRESS_LANG_LIB: C2RustUnnamed = 589835;
   |                                                 ^^^^^^ help: consider: `589_835`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:40:50
   |
40 | pub const _NL_ADDRESS_LANG_TERM: C2RustUnnamed = 589834;
   |                                                  ^^^^^^ help: consider: `589_834`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:41:48
   |
41 | pub const _NL_ADDRESS_LANG_AB: C2RustUnnamed = 589833;
   |                                                ^^^^^^ help: consider: `589_833`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:42:50
   |
42 | pub const _NL_ADDRESS_LANG_NAME: C2RustUnnamed = 589832;
   |                                                  ^^^^^^ help: consider: `589_832`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:43:53
   |
43 | pub const _NL_ADDRESS_COUNTRY_ISBN: C2RustUnnamed = 589831;
   |                                                     ^^^^^^ help: consider: `589_831`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:44:52
   |
44 | pub const _NL_ADDRESS_COUNTRY_NUM: C2RustUnnamed = 589830;
   |                                                    ^^^^^^ help: consider: `589_830`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:45:52
   |
45 | pub const _NL_ADDRESS_COUNTRY_CAR: C2RustUnnamed = 589829;
   |                                                    ^^^^^^ help: consider: `589_829`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:46:52
   |
46 | pub const _NL_ADDRESS_COUNTRY_AB3: C2RustUnnamed = 589828;
   |                                                    ^^^^^^ help: consider: `589_828`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:47:52
   |
47 | pub const _NL_ADDRESS_COUNTRY_AB2: C2RustUnnamed = 589827;
   |                                                    ^^^^^^ help: consider: `589_827`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:48:53
   |
48 | pub const _NL_ADDRESS_COUNTRY_POST: C2RustUnnamed = 589826;
   |                                                     ^^^^^^ help: consider: `589_826`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:49:53
   |
49 | pub const _NL_ADDRESS_COUNTRY_NAME: C2RustUnnamed = 589825;
   |                                                     ^^^^^^ help: consider: `589_825`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:50:51
   |
50 | pub const _NL_ADDRESS_POSTAL_FMT: C2RustUnnamed = 589824;
   |                                                   ^^^^^^ help: consider: `589_824`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:51:44
   |
51 | pub const _NL_NUM_LC_NAME: C2RustUnnamed = 524295;
   |                                            ^^^^^^ help: consider: `524_295`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:51:44
   |
51 | pub const _NL_NUM_LC_NAME: C2RustUnnamed = 524295;
   |                                            ^^^^^^ help: consider: `0x0008_0007`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:52:45
   |
52 | pub const _NL_NAME_CODESET: C2RustUnnamed = 524294;
   |                                             ^^^^^^ help: consider: `524_294`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:52:45
   |
52 | pub const _NL_NAME_CODESET: C2RustUnnamed = 524294;
   |                                             ^^^^^^ help: consider: `0x0008_0006`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:53:45
   |
53 | pub const _NL_NAME_NAME_MS: C2RustUnnamed = 524293;
   |                                             ^^^^^^ help: consider: `524_293`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:53:45
   |
53 | pub const _NL_NAME_NAME_MS: C2RustUnnamed = 524293;
   |                                             ^^^^^^ help: consider: `0x0008_0005`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:54:47
   |
54 | pub const _NL_NAME_NAME_MISS: C2RustUnnamed = 524292;
   |                                               ^^^^^^ help: consider: `524_292`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:54:47
   |
54 | pub const _NL_NAME_NAME_MISS: C2RustUnnamed = 524292;
   |                                               ^^^^^^ help: consider: `0x0008_0004`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:55:46
   |
55 | pub const _NL_NAME_NAME_MRS: C2RustUnnamed = 524291;
   |                                              ^^^^^^ help: consider: `524_291`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:55:46
   |
55 | pub const _NL_NAME_NAME_MRS: C2RustUnnamed = 524291;
   |                                              ^^^^^^ help: consider: `0x0008_0003`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:56:45
   |
56 | pub const _NL_NAME_NAME_MR: C2RustUnnamed = 524290;
   |                                             ^^^^^^ help: consider: `524_290`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:56:45
   |
56 | pub const _NL_NAME_NAME_MR: C2RustUnnamed = 524290;
   |                                             ^^^^^^ help: consider: `0x0008_0002`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:57:46
   |
57 | pub const _NL_NAME_NAME_GEN: C2RustUnnamed = 524289;
   |                                              ^^^^^^ help: consider: `524_289`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:57:46
   |
57 | pub const _NL_NAME_NAME_GEN: C2RustUnnamed = 524289;
   |                                              ^^^^^^ help: consider: `0x0008_0001`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:58:46
   |
58 | pub const _NL_NAME_NAME_FMT: C2RustUnnamed = 524288;
   |                                              ^^^^^^ help: consider: `524_288`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:58:46
   |
58 | pub const _NL_NAME_NAME_FMT: C2RustUnnamed = 524288;
   |                                              ^^^^^^ help: consider: `0x0008_0000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:59:45
   |
59 | pub const _NL_NUM_LC_PAPER: C2RustUnnamed = 458755;
   |                                             ^^^^^^ help: consider: `458_755`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:60:46
   |
60 | pub const _NL_PAPER_CODESET: C2RustUnnamed = 458754;
   |                                              ^^^^^^ help: consider: `458_754`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:61:44
   |
61 | pub const _NL_PAPER_WIDTH: C2RustUnnamed = 458753;
   |                                            ^^^^^^ help: consider: `458_753`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:62:45
   |
62 | pub const _NL_PAPER_HEIGHT: C2RustUnnamed = 458752;
   |                                             ^^^^^^ help: consider: `458_752`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:62:45
   |
62 | pub const _NL_PAPER_HEIGHT: C2RustUnnamed = 458752;
   |                                             ^^^^^^ help: consider: `0x0007_0000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:63:48
   |
63 | pub const _NL_NUM_LC_MESSAGES: C2RustUnnamed = 327685;
   |                                                ^^^^^^ help: consider: `327_685`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:64:49
   |
64 | pub const _NL_MESSAGES_CODESET: C2RustUnnamed = 327684;
   |                                                 ^^^^^^ help: consider: `327_684`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:65:36
   |
65 | pub const __NOSTR: C2RustUnnamed = 327683;
   |                                    ^^^^^^ help: consider: `327_683`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:66:37
   |
66 | pub const __YESSTR: C2RustUnnamed = 327682;
   |                                     ^^^^^^ help: consider: `327_682`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:67:37
   |
67 | pub const __NOEXPR: C2RustUnnamed = 327681;
   |                                     ^^^^^^ help: consider: `327_681`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:68:38
   |
68 | pub const __YESEXPR: C2RustUnnamed = 327680;
   |                                      ^^^^^^ help: consider: `327_680`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:69:47
   |
69 | pub const _NL_NUM_LC_NUMERIC: C2RustUnnamed = 65542;
   |                                               ^^^^^ help: consider: `0x0001_0006`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:70:48
   |
70 | pub const _NL_NUMERIC_CODESET: C2RustUnnamed = 65541;
   |                                                ^^^^^ help: consider: `0x0001_0005`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:71:57
   |
71 | pub const _NL_NUMERIC_THOUSANDS_SEP_WC: C2RustUnnamed = 65540;
   |                                                         ^^^^^ help: consider: `0x0001_0004`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:72:57
   |
72 | pub const _NL_NUMERIC_DECIMAL_POINT_WC: C2RustUnnamed = 65539;
   |                                                         ^^^^^ help: consider: `0x0001_0003`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:73:39
   |
73 | pub const __GROUPING: C2RustUnnamed = 65538;
   |                                       ^^^^^ help: consider: `0x0001_0002`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:74:36
   |
74 | pub const THOUSEP: C2RustUnnamed = 65537;
   |                                    ^^^^^ help: consider: `0x0001_0001`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:75:44
   |
75 | pub const __THOUSANDS_SEP: C2RustUnnamed = 65537;
   |                                            ^^^^^ help: consider: `0x0001_0001`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:76:38
   |
76 | pub const RADIXCHAR: C2RustUnnamed = 65536;
   |                                      ^^^^^ help: consider: `0x0001_0000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/localcharset.rs:77:44
   |
77 | pub const __DECIMAL_POINT: C2RustUnnamed = 65536;
   |                                            ^^^^^ help: consider: `0x0001_0000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
  --> src/localcharset.rs:78:48
   |
78 | pub const _NL_NUM_LC_MONETARY: C2RustUnnamed = 262190;
   |                                                ^^^^^^ help: consider: `262_190`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:79:49
   |
79 | pub const _NL_MONETARY_CODESET: C2RustUnnamed = 262189;
   |                                                 ^^^^^^ help: consider: `262_189`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:80:58
   |
80 | pub const _NL_MONETARY_THOUSANDS_SEP_WC: C2RustUnnamed = 262188;
   |                                                          ^^^^^^ help: consider: `262_188`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:81:58
   |
81 | pub const _NL_MONETARY_DECIMAL_POINT_WC: C2RustUnnamed = 262187;
   |                                                          ^^^^^^ help: consider: `262_187`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:82:57
   |
82 | pub const _NL_MONETARY_CONVERSION_RATE: C2RustUnnamed = 262186;
   |                                                         ^^^^^^ help: consider: `262_186`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:83:54
   |
83 | pub const _NL_MONETARY_DUO_VALID_TO: C2RustUnnamed = 262185;
   |                                                      ^^^^^^ help: consider: `262_185`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:84:56
   |
84 | pub const _NL_MONETARY_DUO_VALID_FROM: C2RustUnnamed = 262184;
   |                                                        ^^^^^^ help: consider: `262_184`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:85:54
   |
85 | pub const _NL_MONETARY_UNO_VALID_TO: C2RustUnnamed = 262183;
   |                                                      ^^^^^^ help: consider: `262_183`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:86:56
   |
86 | pub const _NL_MONETARY_UNO_VALID_FROM: C2RustUnnamed = 262182;
   |                                                        ^^^^^^ help: consider: `262_182`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:87:61
   |
87 | pub const _NL_MONETARY_DUO_INT_N_SIGN_POSN: C2RustUnnamed = 262181;
   |                                                             ^^^^^^ help: consider: `262_181`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:88:61
   |
88 | pub const _NL_MONETARY_DUO_INT_P_SIGN_POSN: C2RustUnnamed = 262180;
   |                                                             ^^^^^^ help: consider: `262_180`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:89:57
   |
89 | pub const _NL_MONETARY_DUO_N_SIGN_POSN: C2RustUnnamed = 262179;
   |                                                         ^^^^^^ help: consider: `262_179`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:90:57
   |
90 | pub const _NL_MONETARY_DUO_P_SIGN_POSN: C2RustUnnamed = 262178;
   |                                                         ^^^^^^ help: consider: `262_178`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:91:64
   |
91 | pub const _NL_MONETARY_DUO_INT_N_SEP_BY_SPACE: C2RustUnnamed = 262177;
   |                                                                ^^^^^^ help: consider: `262_177`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:92:63
   |
92 | pub const _NL_MONETARY_DUO_INT_N_CS_PRECEDES: C2RustUnnamed = 262176;
   |                                                               ^^^^^^ help: consider: `262_176`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:93:64
   |
93 | pub const _NL_MONETARY_DUO_INT_P_SEP_BY_SPACE: C2RustUnnamed = 262175;
   |                                                                ^^^^^^ help: consider: `262_175`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:94:63
   |
94 | pub const _NL_MONETARY_DUO_INT_P_CS_PRECEDES: C2RustUnnamed = 262174;
   |                                                               ^^^^^^ help: consider: `262_174`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:95:60
   |
95 | pub const _NL_MONETARY_DUO_N_SEP_BY_SPACE: C2RustUnnamed = 262173;
   |                                                            ^^^^^^ help: consider: `262_173`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:96:59
   |
96 | pub const _NL_MONETARY_DUO_N_CS_PRECEDES: C2RustUnnamed = 262172;
   |                                                           ^^^^^^ help: consider: `262_172`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:97:60
   |
97 | pub const _NL_MONETARY_DUO_P_SEP_BY_SPACE: C2RustUnnamed = 262171;
   |                                                            ^^^^^^ help: consider: `262_171`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:98:59
   |
98 | pub const _NL_MONETARY_DUO_P_CS_PRECEDES: C2RustUnnamed = 262170;
   |                                                           ^^^^^^ help: consider: `262_170`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
  --> src/localcharset.rs:99:57
   |
99 | pub const _NL_MONETARY_DUO_FRAC_DIGITS: C2RustUnnamed = 262169;
   |                                                         ^^^^^^ help: consider: `262_169`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:100:61
    |
100 | pub const _NL_MONETARY_DUO_INT_FRAC_DIGITS: C2RustUnnamed = 262168;
    |                                                             ^^^^^^ help: consider: `262_168`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:101:61
    |
101 | pub const _NL_MONETARY_DUO_CURRENCY_SYMBOL: C2RustUnnamed = 262167;
    |                                                             ^^^^^^ help: consider: `262_167`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:102:61
    |
102 | pub const _NL_MONETARY_DUO_INT_CURR_SYMBOL: C2RustUnnamed = 262166;
    |                                                             ^^^^^^ help: consider: `262_166`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:103:46
    |
103 | pub const __INT_N_SIGN_POSN: C2RustUnnamed = 262165;
    |                                              ^^^^^^ help: consider: `262_165`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:104:46
    |
104 | pub const __INT_P_SIGN_POSN: C2RustUnnamed = 262164;
    |                                              ^^^^^^ help: consider: `262_164`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:105:49
    |
105 | pub const __INT_N_SEP_BY_SPACE: C2RustUnnamed = 262163;
    |                                                 ^^^^^^ help: consider: `262_163`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:106:48
    |
106 | pub const __INT_N_CS_PRECEDES: C2RustUnnamed = 262162;
    |                                                ^^^^^^ help: consider: `262_162`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:107:49
    |
107 | pub const __INT_P_SEP_BY_SPACE: C2RustUnnamed = 262161;
    |                                                 ^^^^^^ help: consider: `262_161`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:108:48
    |
108 | pub const __INT_P_CS_PRECEDES: C2RustUnnamed = 262160;
    |                                                ^^^^^^ help: consider: `262_160`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:109:50
    |
109 | pub const _NL_MONETARY_CRNCYSTR: C2RustUnnamed = 262159;
    |                                                  ^^^^^^ help: consider: `262_159`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:109:50
    |
109 | pub const _NL_MONETARY_CRNCYSTR: C2RustUnnamed = 262159;
    |                                                  ^^^^^^ help: consider: `0x0004_000F`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:110:42
    |
110 | pub const __N_SIGN_POSN: C2RustUnnamed = 262158;
    |                                          ^^^^^^ help: consider: `262_158`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:110:42
    |
110 | pub const __N_SIGN_POSN: C2RustUnnamed = 262158;
    |                                          ^^^^^^ help: consider: `0x0004_000E`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:111:42
    |
111 | pub const __P_SIGN_POSN: C2RustUnnamed = 262157;
    |                                          ^^^^^^ help: consider: `262_157`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:111:42
    |
111 | pub const __P_SIGN_POSN: C2RustUnnamed = 262157;
    |                                          ^^^^^^ help: consider: `0x0004_000D`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:112:45
    |
112 | pub const __N_SEP_BY_SPACE: C2RustUnnamed = 262156;
    |                                             ^^^^^^ help: consider: `262_156`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:112:45
    |
112 | pub const __N_SEP_BY_SPACE: C2RustUnnamed = 262156;
    |                                             ^^^^^^ help: consider: `0x0004_000C`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:113:44
    |
113 | pub const __N_CS_PRECEDES: C2RustUnnamed = 262155;
    |                                            ^^^^^^ help: consider: `262_155`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:113:44
    |
113 | pub const __N_CS_PRECEDES: C2RustUnnamed = 262155;
    |                                            ^^^^^^ help: consider: `0x0004_000B`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:114:45
    |
114 | pub const __P_SEP_BY_SPACE: C2RustUnnamed = 262154;
    |                                             ^^^^^^ help: consider: `262_154`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:114:45
    |
114 | pub const __P_SEP_BY_SPACE: C2RustUnnamed = 262154;
    |                                             ^^^^^^ help: consider: `0x0004_000A`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:115:44
    |
115 | pub const __P_CS_PRECEDES: C2RustUnnamed = 262153;
    |                                            ^^^^^^ help: consider: `262_153`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:115:44
    |
115 | pub const __P_CS_PRECEDES: C2RustUnnamed = 262153;
    |                                            ^^^^^^ help: consider: `0x0004_0009`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:116:42
    |
116 | pub const __FRAC_DIGITS: C2RustUnnamed = 262152;
    |                                          ^^^^^^ help: consider: `262_152`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:116:42
    |
116 | pub const __FRAC_DIGITS: C2RustUnnamed = 262152;
    |                                          ^^^^^^ help: consider: `0x0004_0008`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:117:46
    |
117 | pub const __INT_FRAC_DIGITS: C2RustUnnamed = 262151;
    |                                              ^^^^^^ help: consider: `262_151`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:117:46
    |
117 | pub const __INT_FRAC_DIGITS: C2RustUnnamed = 262151;
    |                                              ^^^^^^ help: consider: `0x0004_0007`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:118:44
    |
118 | pub const __NEGATIVE_SIGN: C2RustUnnamed = 262150;
    |                                            ^^^^^^ help: consider: `262_150`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:118:44
    |
118 | pub const __NEGATIVE_SIGN: C2RustUnnamed = 262150;
    |                                            ^^^^^^ help: consider: `0x0004_0006`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:119:44
    |
119 | pub const __POSITIVE_SIGN: C2RustUnnamed = 262149;
    |                                            ^^^^^^ help: consider: `262_149`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:119:44
    |
119 | pub const __POSITIVE_SIGN: C2RustUnnamed = 262149;
    |                                            ^^^^^^ help: consider: `0x0004_0005`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:120:43
    |
120 | pub const __MON_GROUPING: C2RustUnnamed = 262148;
    |                                           ^^^^^^ help: consider: `262_148`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:120:43
    |
120 | pub const __MON_GROUPING: C2RustUnnamed = 262148;
    |                                           ^^^^^^ help: consider: `0x0004_0004`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:121:48
    |
121 | pub const __MON_THOUSANDS_SEP: C2RustUnnamed = 262147;
    |                                                ^^^^^^ help: consider: `262_147`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:121:48
    |
121 | pub const __MON_THOUSANDS_SEP: C2RustUnnamed = 262147;
    |                                                ^^^^^^ help: consider: `0x0004_0003`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:122:48
    |
122 | pub const __MON_DECIMAL_POINT: C2RustUnnamed = 262146;
    |                                                ^^^^^^ help: consider: `262_146`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:122:48
    |
122 | pub const __MON_DECIMAL_POINT: C2RustUnnamed = 262146;
    |                                                ^^^^^^ help: consider: `0x0004_0002`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:123:46
    |
123 | pub const __CURRENCY_SYMBOL: C2RustUnnamed = 262145;
    |                                              ^^^^^^ help: consider: `262_145`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:123:46
    |
123 | pub const __CURRENCY_SYMBOL: C2RustUnnamed = 262145;
    |                                              ^^^^^^ help: consider: `0x0004_0001`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:124:46
    |
124 | pub const __INT_CURR_SYMBOL: C2RustUnnamed = 262144;
    |                                              ^^^^^^ help: consider: `262_144`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:124:46
    |
124 | pub const __INT_CURR_SYMBOL: C2RustUnnamed = 262144;
    |                                              ^^^^^^ help: consider: `0x0004_0000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:212:47
    |
212 | pub const _NL_NUM_LC_COLLATE: C2RustUnnamed = 196627;
    |                                               ^^^^^^ help: consider: `196_627`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:213:48
    |
213 | pub const _NL_COLLATE_CODESET: C2RustUnnamed = 196626;
    |                                                ^^^^^^ help: consider: `196_626`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:214:50
    |
214 | pub const _NL_COLLATE_COLLSEQWC: C2RustUnnamed = 196625;
    |                                                  ^^^^^^ help: consider: `196_625`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:215:50
    |
215 | pub const _NL_COLLATE_COLLSEQMB: C2RustUnnamed = 196624;
    |                                                  ^^^^^^ help: consider: `196_624`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:216:53
    |
216 | pub const _NL_COLLATE_SYMB_EXTRAMB: C2RustUnnamed = 196623;
    |                                                     ^^^^^^ help: consider: `196_623`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:217:53
    |
217 | pub const _NL_COLLATE_SYMB_TABLEMB: C2RustUnnamed = 196622;
    |                                                     ^^^^^^ help: consider: `196_622`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:218:57
    |
218 | pub const _NL_COLLATE_SYMB_HASH_SIZEMB: C2RustUnnamed = 196621;
    |                                                         ^^^^^^ help: consider: `196_621`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:219:51
    |
219 | pub const _NL_COLLATE_INDIRECTWC: C2RustUnnamed = 196620;
    |                                                   ^^^^^^ help: consider: `196_620`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:220:48
    |
220 | pub const _NL_COLLATE_EXTRAWC: C2RustUnnamed = 196619;
    |                                                ^^^^^^ help: consider: `196_619`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:221:49
    |
221 | pub const _NL_COLLATE_WEIGHTWC: C2RustUnnamed = 196618;
    |                                                 ^^^^^^ help: consider: `196_618`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:222:48
    |
222 | pub const _NL_COLLATE_TABLEWC: C2RustUnnamed = 196617;
    |                                                ^^^^^^ help: consider: `196_617`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:223:45
    |
223 | pub const _NL_COLLATE_GAP3: C2RustUnnamed = 196616;
    |                                             ^^^^^^ help: consider: `196_616`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:224:45
    |
224 | pub const _NL_COLLATE_GAP2: C2RustUnnamed = 196615;
    |                                             ^^^^^^ help: consider: `196_615`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:225:45
    |
225 | pub const _NL_COLLATE_GAP1: C2RustUnnamed = 196614;
    |                                             ^^^^^^ help: consider: `196_614`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:226:51
    |
226 | pub const _NL_COLLATE_INDIRECTMB: C2RustUnnamed = 196613;
    |                                                   ^^^^^^ help: consider: `196_613`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:227:48
    |
227 | pub const _NL_COLLATE_EXTRAMB: C2RustUnnamed = 196612;
    |                                                ^^^^^^ help: consider: `196_612`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:228:49
    |
228 | pub const _NL_COLLATE_WEIGHTMB: C2RustUnnamed = 196611;
    |                                                 ^^^^^^ help: consider: `196_611`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:229:48
    |
229 | pub const _NL_COLLATE_TABLEMB: C2RustUnnamed = 196610;
    |                                                ^^^^^^ help: consider: `196_610`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:230:49
    |
230 | pub const _NL_COLLATE_RULESETS: C2RustUnnamed = 196609;
    |                                                 ^^^^^^ help: consider: `196_609`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:231:47
    |
231 | pub const _NL_COLLATE_NRULES: C2RustUnnamed = 196608;
    |                                               ^^^^^^ help: consider: `196_608`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:232:44
    |
232 | pub const _NL_NUM_LC_TIME: C2RustUnnamed = 131231;
    |                                            ^^^^^^ help: consider: `131_231`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:233:45
    |
233 | pub const _NL_WABALTMON_12: C2RustUnnamed = 131230;
    |                                             ^^^^^^ help: consider: `131_230`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:234:45
    |
234 | pub const _NL_WABALTMON_11: C2RustUnnamed = 131229;
    |                                             ^^^^^^ help: consider: `131_229`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:235:45
    |
235 | pub const _NL_WABALTMON_10: C2RustUnnamed = 131228;
    |                                             ^^^^^^ help: consider: `131_228`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:236:44
    |
236 | pub const _NL_WABALTMON_9: C2RustUnnamed = 131227;
    |                                            ^^^^^^ help: consider: `131_227`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:237:44
    |
237 | pub const _NL_WABALTMON_8: C2RustUnnamed = 131226;
    |                                            ^^^^^^ help: consider: `131_226`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:238:44
    |
238 | pub const _NL_WABALTMON_7: C2RustUnnamed = 131225;
    |                                            ^^^^^^ help: consider: `131_225`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:239:44
    |
239 | pub const _NL_WABALTMON_6: C2RustUnnamed = 131224;
    |                                            ^^^^^^ help: consider: `131_224`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:240:44
    |
240 | pub const _NL_WABALTMON_5: C2RustUnnamed = 131223;
    |                                            ^^^^^^ help: consider: `131_223`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:241:44
    |
241 | pub const _NL_WABALTMON_4: C2RustUnnamed = 131222;
    |                                            ^^^^^^ help: consider: `131_222`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:242:44
    |
242 | pub const _NL_WABALTMON_3: C2RustUnnamed = 131221;
    |                                            ^^^^^^ help: consider: `131_221`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:243:44
    |
243 | pub const _NL_WABALTMON_2: C2RustUnnamed = 131220;
    |                                            ^^^^^^ help: consider: `131_220`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:244:44
    |
244 | pub const _NL_WABALTMON_1: C2RustUnnamed = 131219;
    |                                            ^^^^^^ help: consider: `131_219`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:245:44
    |
245 | pub const _NL_ABALTMON_12: C2RustUnnamed = 131218;
    |                                            ^^^^^^ help: consider: `131_218`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:246:44
    |
246 | pub const _NL_ABALTMON_11: C2RustUnnamed = 131217;
    |                                            ^^^^^^ help: consider: `131_217`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:247:44
    |
247 | pub const _NL_ABALTMON_10: C2RustUnnamed = 131216;
    |                                            ^^^^^^ help: consider: `131_216`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:248:43
    |
248 | pub const _NL_ABALTMON_9: C2RustUnnamed = 131215;
    |                                           ^^^^^^ help: consider: `131_215`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:249:43
    |
249 | pub const _NL_ABALTMON_8: C2RustUnnamed = 131214;
    |                                           ^^^^^^ help: consider: `131_214`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:250:43
    |
250 | pub const _NL_ABALTMON_7: C2RustUnnamed = 131213;
    |                                           ^^^^^^ help: consider: `131_213`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:251:43
    |
251 | pub const _NL_ABALTMON_6: C2RustUnnamed = 131212;
    |                                           ^^^^^^ help: consider: `131_212`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:252:43
    |
252 | pub const _NL_ABALTMON_5: C2RustUnnamed = 131211;
    |                                           ^^^^^^ help: consider: `131_211`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:253:43
    |
253 | pub const _NL_ABALTMON_4: C2RustUnnamed = 131210;
    |                                           ^^^^^^ help: consider: `131_210`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:254:43
    |
254 | pub const _NL_ABALTMON_3: C2RustUnnamed = 131209;
    |                                           ^^^^^^ help: consider: `131_209`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:255:43
    |
255 | pub const _NL_ABALTMON_2: C2RustUnnamed = 131208;
    |                                           ^^^^^^ help: consider: `131_208`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:256:43
    |
256 | pub const _NL_ABALTMON_1: C2RustUnnamed = 131207;
    |                                           ^^^^^^ help: consider: `131_207`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:257:43
    |
257 | pub const _NL_WALTMON_12: C2RustUnnamed = 131206;
    |                                           ^^^^^^ help: consider: `131_206`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:258:43
    |
258 | pub const _NL_WALTMON_11: C2RustUnnamed = 131205;
    |                                           ^^^^^^ help: consider: `131_205`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:259:43
    |
259 | pub const _NL_WALTMON_10: C2RustUnnamed = 131204;
    |                                           ^^^^^^ help: consider: `131_204`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:260:42
    |
260 | pub const _NL_WALTMON_9: C2RustUnnamed = 131203;
    |                                          ^^^^^^ help: consider: `131_203`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:261:42
    |
261 | pub const _NL_WALTMON_8: C2RustUnnamed = 131202;
    |                                          ^^^^^^ help: consider: `131_202`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:262:42
    |
262 | pub const _NL_WALTMON_7: C2RustUnnamed = 131201;
    |                                          ^^^^^^ help: consider: `131_201`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:263:42
    |
263 | pub const _NL_WALTMON_6: C2RustUnnamed = 131200;
    |                                          ^^^^^^ help: consider: `131_200`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:264:42
    |
264 | pub const _NL_WALTMON_5: C2RustUnnamed = 131199;
    |                                          ^^^^^^ help: consider: `131_199`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:265:42
    |
265 | pub const _NL_WALTMON_4: C2RustUnnamed = 131198;
    |                                          ^^^^^^ help: consider: `131_198`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:266:42
    |
266 | pub const _NL_WALTMON_3: C2RustUnnamed = 131197;
    |                                          ^^^^^^ help: consider: `131_197`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:267:42
    |
267 | pub const _NL_WALTMON_2: C2RustUnnamed = 131196;
    |                                          ^^^^^^ help: consider: `131_196`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:268:42
    |
268 | pub const _NL_WALTMON_1: C2RustUnnamed = 131195;
    |                                          ^^^^^^ help: consider: `131_195`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:269:40
    |
269 | pub const __ALTMON_12: C2RustUnnamed = 131194;
    |                                        ^^^^^^ help: consider: `131_194`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:270:40
    |
270 | pub const __ALTMON_11: C2RustUnnamed = 131193;
    |                                        ^^^^^^ help: consider: `131_193`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:271:40
    |
271 | pub const __ALTMON_10: C2RustUnnamed = 131192;
    |                                        ^^^^^^ help: consider: `131_192`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:272:39
    |
272 | pub const __ALTMON_9: C2RustUnnamed = 131191;
    |                                       ^^^^^^ help: consider: `131_191`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:273:39
    |
273 | pub const __ALTMON_8: C2RustUnnamed = 131190;
    |                                       ^^^^^^ help: consider: `131_190`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:274:39
    |
274 | pub const __ALTMON_7: C2RustUnnamed = 131189;
    |                                       ^^^^^^ help: consider: `131_189`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:275:39
    |
275 | pub const __ALTMON_6: C2RustUnnamed = 131188;
    |                                       ^^^^^^ help: consider: `131_188`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:276:39
    |
276 | pub const __ALTMON_5: C2RustUnnamed = 131187;
    |                                       ^^^^^^ help: consider: `131_187`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:277:39
    |
277 | pub const __ALTMON_4: C2RustUnnamed = 131186;
    |                                       ^^^^^^ help: consider: `131_186`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:278:39
    |
278 | pub const __ALTMON_3: C2RustUnnamed = 131185;
    |                                       ^^^^^^ help: consider: `131_185`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:279:39
    |
279 | pub const __ALTMON_2: C2RustUnnamed = 131184;
    |                                       ^^^^^^ help: consider: `131_184`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:280:39
    |
280 | pub const __ALTMON_1: C2RustUnnamed = 131183;
    |                                       ^^^^^^ help: consider: `131_183`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:281:45
    |
281 | pub const _NL_TIME_CODESET: C2RustUnnamed = 131182;
    |                                             ^^^^^^ help: consider: `131_182`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:282:43
    |
282 | pub const _NL_W_DATE_FMT: C2RustUnnamed = 131181;
    |                                           ^^^^^^ help: consider: `131_181`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:283:38
    |
283 | pub const _DATE_FMT: C2RustUnnamed = 131180;
    |                                      ^^^^^^ help: consider: `131_180`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:284:46
    |
284 | pub const _NL_TIME_TIMEZONE: C2RustUnnamed = 131179;
    |                                              ^^^^^^ help: consider: `131_179`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:285:51
    |
285 | pub const _NL_TIME_CAL_DIRECTION: C2RustUnnamed = 131178;
    |                                                   ^^^^^^ help: consider: `131_178`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:286:51
    |
286 | pub const _NL_TIME_FIRST_WORKDAY: C2RustUnnamed = 131177;
    |                                                   ^^^^^^ help: consider: `131_177`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:287:51
    |
287 | pub const _NL_TIME_FIRST_WEEKDAY: C2RustUnnamed = 131176;
    |                                                   ^^^^^^ help: consider: `131_176`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:288:50
    |
288 | pub const _NL_TIME_WEEK_1STWEEK: C2RustUnnamed = 131175;
    |                                                  ^^^^^^ help: consider: `131_175`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:289:49
    |
289 | pub const _NL_TIME_WEEK_1STDAY: C2RustUnnamed = 131174;
    |                                                 ^^^^^^ help: consider: `131_174`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:290:48
    |
290 | pub const _NL_TIME_WEEK_NDAYS: C2RustUnnamed = 131173;
    |                                                ^^^^^^ help: consider: `131_173`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:291:43
    |
291 | pub const _NL_WERA_T_FMT: C2RustUnnamed = 131172;
    |                                           ^^^^^^ help: consider: `131_172`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:292:45
    |
292 | pub const _NL_WERA_D_T_FMT: C2RustUnnamed = 131171;
    |                                             ^^^^^^ help: consider: `131_171`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:293:44
    |
293 | pub const _NL_WALT_DIGITS: C2RustUnnamed = 131170;
    |                                            ^^^^^^ help: consider: `131_170`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:294:43
    |
294 | pub const _NL_WERA_D_FMT: C2RustUnnamed = 131169;
    |                                           ^^^^^^ help: consider: `131_169`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:295:42
    |
295 | pub const _NL_WERA_YEAR: C2RustUnnamed = 131168;
    |                                          ^^^^^^ help: consider: `131_168`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:296:44
    |
296 | pub const _NL_WT_FMT_AMPM: C2RustUnnamed = 131167;
    |                                            ^^^^^^ help: consider: `131_167`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:297:39
    |
297 | pub const _NL_WT_FMT: C2RustUnnamed = 131166;
    |                                       ^^^^^^ help: consider: `131_166`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:298:39
    |
298 | pub const _NL_WD_FMT: C2RustUnnamed = 131165;
    |                                       ^^^^^^ help: consider: `131_165`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:299:41
    |
299 | pub const _NL_WD_T_FMT: C2RustUnnamed = 131164;
    |                                         ^^^^^^ help: consider: `131_164`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:300:40
    |
300 | pub const _NL_WPM_STR: C2RustUnnamed = 131163;
    |                                        ^^^^^^ help: consider: `131_163`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:301:40
    |
301 | pub const _NL_WAM_STR: C2RustUnnamed = 131162;
    |                                        ^^^^^^ help: consider: `131_162`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:302:40
    |
302 | pub const _NL_WMON_12: C2RustUnnamed = 131161;
    |                                        ^^^^^^ help: consider: `131_161`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:303:40
    |
303 | pub const _NL_WMON_11: C2RustUnnamed = 131160;
    |                                        ^^^^^^ help: consider: `131_160`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:304:40
    |
304 | pub const _NL_WMON_10: C2RustUnnamed = 131159;
    |                                        ^^^^^^ help: consider: `131_159`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:305:39
    |
305 | pub const _NL_WMON_9: C2RustUnnamed = 131158;
    |                                       ^^^^^^ help: consider: `131_158`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:306:39
    |
306 | pub const _NL_WMON_8: C2RustUnnamed = 131157;
    |                                       ^^^^^^ help: consider: `131_157`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:307:39
    |
307 | pub const _NL_WMON_7: C2RustUnnamed = 131156;
    |                                       ^^^^^^ help: consider: `131_156`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:308:39
    |
308 | pub const _NL_WMON_6: C2RustUnnamed = 131155;
    |                                       ^^^^^^ help: consider: `131_155`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:309:39
    |
309 | pub const _NL_WMON_5: C2RustUnnamed = 131154;
    |                                       ^^^^^^ help: consider: `131_154`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:310:39
    |
310 | pub const _NL_WMON_4: C2RustUnnamed = 131153;
    |                                       ^^^^^^ help: consider: `131_153`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:311:39
    |
311 | pub const _NL_WMON_3: C2RustUnnamed = 131152;
    |                                       ^^^^^^ help: consider: `131_152`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:312:39
    |
312 | pub const _NL_WMON_2: C2RustUnnamed = 131151;
    |                                       ^^^^^^ help: consider: `131_151`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:313:39
    |
313 | pub const _NL_WMON_1: C2RustUnnamed = 131150;
    |                                       ^^^^^^ help: consider: `131_150`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:314:42
    |
314 | pub const _NL_WABMON_12: C2RustUnnamed = 131149;
    |                                          ^^^^^^ help: consider: `131_149`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:315:42
    |
315 | pub const _NL_WABMON_11: C2RustUnnamed = 131148;
    |                                          ^^^^^^ help: consider: `131_148`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:316:42
    |
316 | pub const _NL_WABMON_10: C2RustUnnamed = 131147;
    |                                          ^^^^^^ help: consider: `131_147`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:317:41
    |
317 | pub const _NL_WABMON_9: C2RustUnnamed = 131146;
    |                                         ^^^^^^ help: consider: `131_146`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:318:41
    |
318 | pub const _NL_WABMON_8: C2RustUnnamed = 131145;
    |                                         ^^^^^^ help: consider: `131_145`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:319:41
    |
319 | pub const _NL_WABMON_7: C2RustUnnamed = 131144;
    |                                         ^^^^^^ help: consider: `131_144`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:320:41
    |
320 | pub const _NL_WABMON_6: C2RustUnnamed = 131143;
    |                                         ^^^^^^ help: consider: `131_143`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:321:41
    |
321 | pub const _NL_WABMON_5: C2RustUnnamed = 131142;
    |                                         ^^^^^^ help: consider: `131_142`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:322:41
    |
322 | pub const _NL_WABMON_4: C2RustUnnamed = 131141;
    |                                         ^^^^^^ help: consider: `131_141`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:323:41
    |
323 | pub const _NL_WABMON_3: C2RustUnnamed = 131140;
    |                                         ^^^^^^ help: consider: `131_140`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:324:41
    |
324 | pub const _NL_WABMON_2: C2RustUnnamed = 131139;
    |                                         ^^^^^^ help: consider: `131_139`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:325:41
    |
325 | pub const _NL_WABMON_1: C2RustUnnamed = 131138;
    |                                         ^^^^^^ help: consider: `131_138`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:326:39
    |
326 | pub const _NL_WDAY_7: C2RustUnnamed = 131137;
    |                                       ^^^^^^ help: consider: `131_137`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:327:39
    |
327 | pub const _NL_WDAY_6: C2RustUnnamed = 131136;
    |                                       ^^^^^^ help: consider: `131_136`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:328:39
    |
328 | pub const _NL_WDAY_5: C2RustUnnamed = 131135;
    |                                       ^^^^^^ help: consider: `131_135`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:329:39
    |
329 | pub const _NL_WDAY_4: C2RustUnnamed = 131134;
    |                                       ^^^^^^ help: consider: `131_134`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:330:39
    |
330 | pub const _NL_WDAY_3: C2RustUnnamed = 131133;
    |                                       ^^^^^^ help: consider: `131_133`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:331:39
    |
331 | pub const _NL_WDAY_2: C2RustUnnamed = 131132;
    |                                       ^^^^^^ help: consider: `131_132`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:332:39
    |
332 | pub const _NL_WDAY_1: C2RustUnnamed = 131131;
    |                                       ^^^^^^ help: consider: `131_131`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:333:41
    |
333 | pub const _NL_WABDAY_7: C2RustUnnamed = 131130;
    |                                         ^^^^^^ help: consider: `131_130`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:334:41
    |
334 | pub const _NL_WABDAY_6: C2RustUnnamed = 131129;
    |                                         ^^^^^^ help: consider: `131_129`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:335:41
    |
335 | pub const _NL_WABDAY_5: C2RustUnnamed = 131128;
    |                                         ^^^^^^ help: consider: `131_128`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:336:41
    |
336 | pub const _NL_WABDAY_4: C2RustUnnamed = 131127;
    |                                         ^^^^^^ help: consider: `131_127`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:337:41
    |
337 | pub const _NL_WABDAY_3: C2RustUnnamed = 131126;
    |                                         ^^^^^^ help: consider: `131_126`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:338:41
    |
338 | pub const _NL_WABDAY_2: C2RustUnnamed = 131125;
    |                                         ^^^^^^ help: consider: `131_125`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:339:41
    |
339 | pub const _NL_WABDAY_1: C2RustUnnamed = 131124;
    |                                         ^^^^^^ help: consider: `131_124`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:340:49
    |
340 | pub const _NL_TIME_ERA_ENTRIES: C2RustUnnamed = 131123;
    |                                                 ^^^^^^ help: consider: `131_123`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:341:53
    |
341 | pub const _NL_TIME_ERA_NUM_ENTRIES: C2RustUnnamed = 131122;
    |                                                     ^^^^^^ help: consider: `131_122`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:342:38
    |
342 | pub const ERA_T_FMT: C2RustUnnamed = 131121;
    |                                      ^^^^^^ help: consider: `131_121`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:343:40
    |
343 | pub const ERA_D_T_FMT: C2RustUnnamed = 131120;
    |                                        ^^^^^^ help: consider: `131_120`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:344:39
    |
344 | pub const ALT_DIGITS: C2RustUnnamed = 131119;
    |                                       ^^^^^^ help: consider: `131_119`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:345:38
    |
345 | pub const ERA_D_FMT: C2RustUnnamed = 131118;
    |                                      ^^^^^^ help: consider: `131_118`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:346:39
    |
346 | pub const __ERA_YEAR: C2RustUnnamed = 131117;
    |                                       ^^^^^^ help: consider: `131_117`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:347:32
    |
347 | pub const ERA: C2RustUnnamed = 131116;
    |                                ^^^^^^ help: consider: `131_116`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:348:39
    |
348 | pub const T_FMT_AMPM: C2RustUnnamed = 131115;
    |                                       ^^^^^^ help: consider: `131_115`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:349:34
    |
349 | pub const T_FMT: C2RustUnnamed = 131114;
    |                                  ^^^^^^ help: consider: `131_114`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:350:34
    |
350 | pub const D_FMT: C2RustUnnamed = 131113;
    |                                  ^^^^^^ help: consider: `131_113`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:351:36
    |
351 | pub const D_T_FMT: C2RustUnnamed = 131112;
    |                                    ^^^^^^ help: consider: `131_112`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:352:35
    |
352 | pub const PM_STR: C2RustUnnamed = 131111;
    |                                   ^^^^^^ help: consider: `131_111`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:353:35
    |
353 | pub const AM_STR: C2RustUnnamed = 131110;
    |                                   ^^^^^^ help: consider: `131_110`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:354:35
    |
354 | pub const MON_12: C2RustUnnamed = 131109;
    |                                   ^^^^^^ help: consider: `131_109`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:355:35
    |
355 | pub const MON_11: C2RustUnnamed = 131108;
    |                                   ^^^^^^ help: consider: `131_108`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:356:35
    |
356 | pub const MON_10: C2RustUnnamed = 131107;
    |                                   ^^^^^^ help: consider: `131_107`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:357:34
    |
357 | pub const MON_9: C2RustUnnamed = 131106;
    |                                  ^^^^^^ help: consider: `131_106`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:358:34
    |
358 | pub const MON_8: C2RustUnnamed = 131105;
    |                                  ^^^^^^ help: consider: `131_105`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:359:34
    |
359 | pub const MON_7: C2RustUnnamed = 131104;
    |                                  ^^^^^^ help: consider: `131_104`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:360:34
    |
360 | pub const MON_6: C2RustUnnamed = 131103;
    |                                  ^^^^^^ help: consider: `131_103`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:361:34
    |
361 | pub const MON_5: C2RustUnnamed = 131102;
    |                                  ^^^^^^ help: consider: `131_102`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:362:34
    |
362 | pub const MON_4: C2RustUnnamed = 131101;
    |                                  ^^^^^^ help: consider: `131_101`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:363:34
    |
363 | pub const MON_3: C2RustUnnamed = 131100;
    |                                  ^^^^^^ help: consider: `131_100`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:364:34
    |
364 | pub const MON_2: C2RustUnnamed = 131099;
    |                                  ^^^^^^ help: consider: `131_099`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:365:34
    |
365 | pub const MON_1: C2RustUnnamed = 131098;
    |                                  ^^^^^^ help: consider: `131_098`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:366:37
    |
366 | pub const ABMON_12: C2RustUnnamed = 131097;
    |                                     ^^^^^^ help: consider: `131_097`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:367:37
    |
367 | pub const ABMON_11: C2RustUnnamed = 131096;
    |                                     ^^^^^^ help: consider: `131_096`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:368:37
    |
368 | pub const ABMON_10: C2RustUnnamed = 131095;
    |                                     ^^^^^^ help: consider: `131_095`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:369:36
    |
369 | pub const ABMON_9: C2RustUnnamed = 131094;
    |                                    ^^^^^^ help: consider: `131_094`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:370:36
    |
370 | pub const ABMON_8: C2RustUnnamed = 131093;
    |                                    ^^^^^^ help: consider: `131_093`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:371:36
    |
371 | pub const ABMON_7: C2RustUnnamed = 131092;
    |                                    ^^^^^^ help: consider: `131_092`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:372:36
    |
372 | pub const ABMON_6: C2RustUnnamed = 131091;
    |                                    ^^^^^^ help: consider: `131_091`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:373:36
    |
373 | pub const ABMON_5: C2RustUnnamed = 131090;
    |                                    ^^^^^^ help: consider: `131_090`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:374:36
    |
374 | pub const ABMON_4: C2RustUnnamed = 131089;
    |                                    ^^^^^^ help: consider: `131_089`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:375:36
    |
375 | pub const ABMON_3: C2RustUnnamed = 131088;
    |                                    ^^^^^^ help: consider: `131_088`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/localcharset.rs:376:36
    |
376 | pub const ABMON_2: C2RustUnnamed = 131087;
    |                                    ^^^^^^ help: consider: `131_087`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:376:36
    |
376 | pub const ABMON_2: C2RustUnnamed = 131087;
    |                                    ^^^^^^ help: consider: `0x0002_000F`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:377:36
    |
377 | pub const ABMON_1: C2RustUnnamed = 131086;
    |                                    ^^^^^^ help: consider: `131_086`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:377:36
    |
377 | pub const ABMON_1: C2RustUnnamed = 131086;
    |                                    ^^^^^^ help: consider: `0x0002_000E`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:378:34
    |
378 | pub const DAY_7: C2RustUnnamed = 131085;
    |                                  ^^^^^^ help: consider: `131_085`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:378:34
    |
378 | pub const DAY_7: C2RustUnnamed = 131085;
    |                                  ^^^^^^ help: consider: `0x0002_000D`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:379:34
    |
379 | pub const DAY_6: C2RustUnnamed = 131084;
    |                                  ^^^^^^ help: consider: `131_084`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:379:34
    |
379 | pub const DAY_6: C2RustUnnamed = 131084;
    |                                  ^^^^^^ help: consider: `0x0002_000C`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:380:34
    |
380 | pub const DAY_5: C2RustUnnamed = 131083;
    |                                  ^^^^^^ help: consider: `131_083`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:380:34
    |
380 | pub const DAY_5: C2RustUnnamed = 131083;
    |                                  ^^^^^^ help: consider: `0x0002_000B`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:381:34
    |
381 | pub const DAY_4: C2RustUnnamed = 131082;
    |                                  ^^^^^^ help: consider: `131_082`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:381:34
    |
381 | pub const DAY_4: C2RustUnnamed = 131082;
    |                                  ^^^^^^ help: consider: `0x0002_000A`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:382:34
    |
382 | pub const DAY_3: C2RustUnnamed = 131081;
    |                                  ^^^^^^ help: consider: `131_081`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:382:34
    |
382 | pub const DAY_3: C2RustUnnamed = 131081;
    |                                  ^^^^^^ help: consider: `0x0002_0009`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:383:34
    |
383 | pub const DAY_2: C2RustUnnamed = 131080;
    |                                  ^^^^^^ help: consider: `131_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:383:34
    |
383 | pub const DAY_2: C2RustUnnamed = 131080;
    |                                  ^^^^^^ help: consider: `0x0002_0008`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:384:34
    |
384 | pub const DAY_1: C2RustUnnamed = 131079;
    |                                  ^^^^^^ help: consider: `131_079`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:384:34
    |
384 | pub const DAY_1: C2RustUnnamed = 131079;
    |                                  ^^^^^^ help: consider: `0x0002_0007`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:385:36
    |
385 | pub const ABDAY_7: C2RustUnnamed = 131078;
    |                                    ^^^^^^ help: consider: `131_078`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:385:36
    |
385 | pub const ABDAY_7: C2RustUnnamed = 131078;
    |                                    ^^^^^^ help: consider: `0x0002_0006`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:386:36
    |
386 | pub const ABDAY_6: C2RustUnnamed = 131077;
    |                                    ^^^^^^ help: consider: `131_077`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:386:36
    |
386 | pub const ABDAY_6: C2RustUnnamed = 131077;
    |                                    ^^^^^^ help: consider: `0x0002_0005`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:387:36
    |
387 | pub const ABDAY_5: C2RustUnnamed = 131076;
    |                                    ^^^^^^ help: consider: `131_076`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:387:36
    |
387 | pub const ABDAY_5: C2RustUnnamed = 131076;
    |                                    ^^^^^^ help: consider: `0x0002_0004`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:388:36
    |
388 | pub const ABDAY_4: C2RustUnnamed = 131075;
    |                                    ^^^^^^ help: consider: `131_075`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:388:36
    |
388 | pub const ABDAY_4: C2RustUnnamed = 131075;
    |                                    ^^^^^^ help: consider: `0x0002_0003`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:389:36
    |
389 | pub const ABDAY_3: C2RustUnnamed = 131074;
    |                                    ^^^^^^ help: consider: `131_074`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:389:36
    |
389 | pub const ABDAY_3: C2RustUnnamed = 131074;
    |                                    ^^^^^^ help: consider: `0x0002_0002`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:390:36
    |
390 | pub const ABDAY_2: C2RustUnnamed = 131073;
    |                                    ^^^^^^ help: consider: `131_073`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:390:36
    |
390 | pub const ABDAY_2: C2RustUnnamed = 131073;
    |                                    ^^^^^^ help: consider: `0x0002_0001`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: long literal lacking separators
   --> src/localcharset.rs:391:36
    |
391 | pub const ABDAY_1: C2RustUnnamed = 131072;
    |                                    ^^^^^^ help: consider: `131_072`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/localcharset.rs:391:36
    |
391 | pub const ABDAY_1: C2RustUnnamed = 131072;
    |                                    ^^^^^^ help: consider: `0x0002_0000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/localcharset.rs:394:65
    |
394 |     let codeset_ptr: *const libc::c_char = unsafe { nl_langinfo(CODESET as libc::c_int) };
    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:43:68
   |
43 |     let bytes: &mut [u8] = unsafe { std::slice::from_raw_parts_mut(ps as *mut _ as *mut u8, size) };
   |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:43:68
   |
43 |     let bytes: &mut [u8] = unsafe { std::slice::from_raw_parts_mut(ps as *mut _ as *mut u8, size) };
   |                                                                    ^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: binding's name is too similar to existing binding
  --> src/mbrtoc32.rs:60:9
   |
60 |     let local_ps = ps.get_or_insert_with(|| {
   |         ^^^^^^^^
   |
   = note: `-W clippy::similar-names` implied by `-W clippy::pedantic`
note: existing binding defined here
  --> src/mbrtoc32.rs:58:13
   |
58 |     let mut local_s = s.unwrap_or_else(|| &[0]);
   |             ^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:72:15
   |
72 |           ret = mbrtoc32(
   |  _______________^
73 | |             pwc.as_mut().map(|p| p as *mut char32_t).unwrap_or(std::ptr::null_mut()),
74 | |             local_s.as_ptr() as *const libc::c_char,
75 | |             n as libc::c_ulong,
76 | |             local_ps,
77 | |         ) as usize;
   | |__________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:73:34
   |
73 |             pwc.as_mut().map(|p| p as *mut char32_t).unwrap_or(std::ptr::null_mut()),
   |                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:74:13
   |
74 |             local_s.as_ptr() as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:75:13
   |
75 |             n as libc::c_ulong,
   |             ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:80:14
   |
80 |     if ret < !(3 as libc::c_int) as usize && unsafe { mbsinit(local_ps) } == 0 {
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:80:16
   |
80 |     if ret < !(3 as libc::c_int) as usize && unsafe { mbsinit(local_ps) } == 0 {
   |                ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:83:15
   |
83 |     if ret == !(3 as libc::c_int) as usize {
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:83:17
   |
83 |     if ret == !(3 as libc::c_int) as usize {
   |                 ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:86:8
   |
86 |     if !(2 as libc::c_int) as usize <= ret && n != 0 && !unsafe { hard_locale(0 as libc::c_int) } {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:86:10
   |
86 |     if !(2 as libc::c_int) as usize <= ret && n != 0 && !unsafe { hard_locale(0 as libc::c_int) } {
   |          ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:86:79
   |
86 |     if !(2 as libc::c_int) as usize <= ret && n != 0 && !unsafe { hard_locale(0 as libc::c_int) } {
   |                                                                               ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:88:18
   |
88 |             *p = *local_s.get(0).unwrap_or(&0) as libc::c_uchar as char32_t;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/mbrtoc32.rs:88:18
   |
88 |             *p = *local_s.get(0).unwrap_or(&0) as libc::c_uchar as char32_t;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:60:52
   |
60 | pub static mut program_name: *const libc::c_char = 0 as *const libc::c_char;
   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:76:49
   |
76 |                 program_invocation_short_name = base[3..].as_ptr() as *mut libc::c_char;
   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:80:28
   |
80 |             program_name = base.as_ptr() as *mut libc::c_char;
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:81:39
   |
81 |             program_invocation_name = base.as_ptr() as *mut libc::c_char;
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:85:28
   |
85 |             program_name = argv0 as *mut libc::c_char;
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/progname.rs:86:39
   |
86 |             program_invocation_name = argv0 as *mut libc::c_char;
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/propername_lite.rs:17:9
   |
17 |         b"UTF-8\0" as *const u8 as *const libc::c_char,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/propername_lite.rs:17:9
   |
17 |         b"UTF-8\0" as *const u8 as *const libc::c_char,
   |         ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/propername_lite.rs:18:10
   |
18 |     ) == 0 as libc::c_int
   |          ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: integer literal has a better hexadecimal representation
   --> src/quotearg.rs:120:39
    |
120 | pub const _ISprint: C2RustUnnamed_0 = 16384;
    |                                       ^^^^^ help: consider: `0x4000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
   --> src/quotearg.rs:133:39
    |
133 | pub const _ISgraph: C2RustUnnamed_0 = 32768;
    |                                       ^^^^^ help: consider: `0x8000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:152:9
    |
152 |         ps as *mut libc::c_void,
    |         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:153:9
    |
153 |         0 as libc::c_int,
    |         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:154:9
    |
154 |         ::core::mem::size_of::<mbstate_t>() as libc::c_ulong,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:159:5
    |
159 |     b"literal\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:159:5
    |
159 |     b"literal\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:160:5
    |
160 |     b"shell\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:160:5
    |
160 |     b"shell\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:161:5
    |
161 |     b"shell-always\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:161:5
    |
161 |     b"shell-always\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:162:5
    |
162 |     b"shell-escape\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:162:5
    |
162 |     b"shell-escape\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:163:5
    |
163 |     b"shell-escape-always\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:163:5
    |
163 |     b"shell-escape-always\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:164:5
    |
164 |     b"c\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:164:5
    |
164 |     b"c\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:165:5
    |
165 |     b"c-maybe\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:165:5
    |
165 |     b"c-maybe\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:166:5
    |
166 |     b"escape\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:166:5
    |
166 |     b"escape\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:167:5
    |
167 |     b"locale\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:167:5
    |
167 |     b"locale\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:168:5
    |
168 |     b"clocale\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:168:5
    |
168 |     b"clocale\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:169:5
    |
169 |     0 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:188:17
    |
188 |     left_quote: 0 as *const libc::c_char,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:189:18
    |
189 |     right_quote: 0 as *const libc::c_char,
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: 5 bindings with single-character names in scope
   --> src/quotearg.rs:226:9
    |
226 |     mut o: *mut quoting_options,
    |         ^
227 |     mut c: libc::c_char,
    |         ^
228 |     mut i: libc::c_int,
    |         ^
...
231 |     let mut p: *mut libc::c_uint = ((*(if !o.is_null() {
    |             ^
...
250 |     let mut r: libc::c_int = (*p >> shift & 1 as libc::c_int as libc::c_uint)
    |             ^
    |
    = note: `-W clippy::many-single-char-names` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#many_single_char_names

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:230:33
    |
230 |     let mut uc: libc::c_uchar = c as libc::c_uchar;
    |                                 ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:234:9
    |
234 |         &mut default_quoting_options as *mut quoting_options
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:239:13
    |
239 | /             (uc as libc::c_ulong)
240 | |                 .wrapping_div(
241 | |                     (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
242 | |                         .wrapping_mul(8 as libc::c_int as libc::c_ulong),
243 | |                 ) as isize,
    | |__________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:239:14
    |
239 |             (uc as libc::c_ulong)
    |              ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:241:22
    |
241 |                     (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:242:39
    |
242 |                         .wrapping_mul(8 as libc::c_int as libc::c_ulong),
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:242:39
    |
242 |                         .wrapping_mul(8 as libc::c_int as libc::c_ulong),
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:245:34
    |
245 |       let mut shift: libc::c_int = (uc as libc::c_ulong)
    |  __________________________________^
246 | |         .wrapping_rem(
247 | |             (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
248 | |                 .wrapping_mul(8 as libc::c_int as libc::c_ulong),
249 | |         ) as libc::c_int;
    | |________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:245:35
    |
245 |     let mut shift: libc::c_int = (uc as libc::c_ulong)
    |                                   ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:247:14
    |
247 |             (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:248:31
    |
248 |                 .wrapping_mul(8 as libc::c_int as libc::c_ulong),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:248:31
    |
248 |                 .wrapping_mul(8 as libc::c_int as libc::c_ulong),
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:250:30
    |
250 |       let mut r: libc::c_int = (*p >> shift & 1 as libc::c_int as libc::c_uint)
    |  ______________________________^
251 | |         as libc::c_int;
    | |______________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:250:45
    |
250 |     let mut r: libc::c_int = (*p >> shift & 1 as libc::c_int as libc::c_uint)
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:250:45
    |
250 |     let mut r: libc::c_int = (*p >> shift & 1 as libc::c_int as libc::c_uint)
    |                                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:252:11
    |
252 |     *p ^= ((i & 1 as libc::c_int ^ r) << shift) as libc::c_uint;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:252:17
    |
252 |     *p ^= ((i & 1 as libc::c_int ^ r) << shift) as libc::c_uint;
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:274:25
    |
274 |         unsafe { &mut *(&mut default_quoting_options as *mut _) }
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:298:8
    |
298 |     if style as u32 == custom_quoting_style as i32 as u32 {
    |        ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:298:24
    |
298 |     if style as u32 == custom_quoting_style as i32 as u32 {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:298:24
    |
298 |     if style as u32 == custom_quoting_style as i32 as u32 {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:311:48
    |
311 |     let mut locale_code: *const libc::c_char = 0 as *const libc::c_char;
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:316:34
    |
316 |     if c_strcasecmp(locale_code, b"UTF-8\0" as *const u8 as *const libc::c_char)
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:316:34
    |
316 |     if c_strcasecmp(locale_code, b"UTF-8\0" as *const u8 as *const libc::c_char)
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:317:12
    |
317 |         == 0 as libc::c_int
    |            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:319:19
    |
319 |         return if *msgid.offset(0 as libc::c_int as isize) as libc::c_int == '`' as i32 {
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:319:33
    |
319 |         return if *msgid.offset(0 as libc::c_int as isize) as libc::c_int == '`' as i32 {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:319:33
    |
319 |         return if *msgid.offset(0 as libc::c_int as isize) as libc::c_int == '`' as i32 {
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:319:78
    |
319 |         return if *msgid.offset(0 as libc::c_int as isize) as libc::c_int == '`' as i32 {
    |                                                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:320:13
    |
320 |             b"\xE2\x80\x98\0" as *const u8 as *const libc::c_char
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:320:13
    |
320 |             b"\xE2\x80\x98\0" as *const u8 as *const libc::c_char
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:322:13
    |
322 |             b"\xE2\x80\x99\0" as *const u8 as *const libc::c_char
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:322:13
    |
322 |             b"\xE2\x80\x99\0" as *const u8 as *const libc::c_char
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:325:34
    |
325 |     if c_strcasecmp(locale_code, b"GB18030\0" as *const u8 as *const libc::c_char)
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:325:34
    |
325 |     if c_strcasecmp(locale_code, b"GB18030\0" as *const u8 as *const libc::c_char)
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:326:12
    |
326 |         == 0 as libc::c_int
    |            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:328:19
    |
328 |         return if *msgid.offset(0 as libc::c_int as isize) as libc::c_int == '`' as i32 {
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:328:33
    |
328 |         return if *msgid.offset(0 as libc::c_int as isize) as libc::c_int == '`' as i32 {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:328:33
    |
328 |         return if *msgid.offset(0 as libc::c_int as isize) as libc::c_int == '`' as i32 {
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:328:78
    |
328 |         return if *msgid.offset(0 as libc::c_int as isize) as libc::c_int == '`' as i32 {
    |                                                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:329:13
    |
329 |             b"\xA1\x07e\0" as *const u8 as *const libc::c_char
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:329:13
    |
329 |             b"\xA1\x07e\0" as *const u8 as *const libc::c_char
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:331:13
    |
331 |             b"\xA1\xAF\0" as *const u8 as *const libc::c_char
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:331:13
    |
331 |             b"\xA1\xAF\0" as *const u8 as *const libc::c_char
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:334:15
    |
334 |     return if s as libc::c_uint == clocale_quoting_style as libc::c_int as libc::c_uint {
    |               ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:334:36
    |
334 |     return if s as libc::c_uint == clocale_quoting_style as libc::c_int as libc::c_uint {
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:334:36
    |
334 |     return if s as libc::c_uint == clocale_quoting_style as libc::c_int as libc::c_uint {
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:335:9
    |
335 |         b"\"\0" as *const u8 as *const libc::c_char
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:335:9
    |
335 |         b"\"\0" as *const u8 as *const libc::c_char
    |         ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:337:9
    |
337 |         b"'\0" as *const u8 as *const libc::c_char
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:337:9
    |
337 |         b"'\0" as *const u8 as *const libc::c_char
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: 5 bindings with single-character names in scope
   --> src/quotearg.rs:353:13
    |
353 |     let mut i: size_t = 0;
    |             ^
...
484 |             let mut c: u8 = 0;
    |                     ^
...
823 |          let mut m: size_t = 0;
    |                  ^
...
842 |                         let mut w: char32_t = 0;
    |                                 ^
...
867 |                                     let mut j: size_t = 0;
    |                                             ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#many_single_char_names

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:354:27
    |
354 |     let mut len: size_t = 0 as libc::c_int as size_t;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:354:27
    |
354 |     let mut len: size_t = 0 as libc::c_int as size_t;
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:355:39
    |
355 |     let mut orig_buffersize: size_t = 0 as libc::c_int as size_t;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:355:39
    |
355 |     let mut orig_buffersize: size_t = 0 as libc::c_int as size_t;
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:356:49
    |
356 |     let mut quote_string: *const libc::c_char = 0 as *const libc::c_char;
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:357:40
    |
357 |     let mut quote_string_len: size_t = 0 as libc::c_int as size_t;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:357:40
    |
357 |     let mut quote_string_len: size_t = 0 as libc::c_int as size_t;
    |                                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:358:39
    |
358 |     let mut backslash_escapes: bool = 0 as libc::c_int != 0;
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:360:12
    |
360 |         == 1 as libc::c_int as libc::c_ulong;
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:360:12
    |
360 |         == 1 as libc::c_int as libc::c_ulong;
    |            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:361:48
    |
361 |     let mut elide_outer_quotes: bool = flags & QA_ELIDE_OUTER_QUOTES as libc::c_int
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:362:12
    |
362 |         != 0 as libc::c_int;
    |            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:363:46
    |
363 |     let mut encountered_single_quote: bool = 0 as libc::c_int != 0;
    |                                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:364:50
    |
364 |     let mut all_c_and_shell_quote_compat: bool = 1 as libc::c_int != 0;
    |                                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:366:36
    |
366 |         pending_shell_escape_end = 0 as libc::c_int != 0;
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:368:15
    |
368 |         match quoting_style as libc::c_uint {
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:371:38
    |
371 |                 elide_outer_quotes = 1 as libc::c_int != 0;
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:372:36
    |
372 |                 current_block_48 = 1283995450065962895;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `1_283_995_450_065_962_895`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:375:36
    |
375 |                 current_block_48 = 1283995450065962895;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `1_283_995_450_065_962_895`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:378:37
    |
378 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:379:38
    |
379 |                 elide_outer_quotes = 0 as libc::c_int != 0;
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:380:36
    |
380 |                 current_block_48 = 2989495919056355252;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_989_495_919_056_355_252`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:383:20
    |
383 |                 if quoting_style as libc::c_uint
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:384:24
    |
384 |                     != custom_quoting_style as libc::c_int as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:384:24
    |
384 |                     != custom_quoting_style as libc::c_int as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:387:25
    |
387 |                         b"`\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:387:25
    |
387 |                         b"`\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:391:25
    |
391 |                         b"'\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:391:25
    |
391 |                         b"'\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:399:44
    |
399 | ...                   *buffer.offset(len as isize) = *quote_string;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:407:37
    |
407 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:410:36
    |
410 |                 current_block_48 = 2989495919056355252;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_989_495_919_056_355_252`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:413:37
    |
413 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:414:36
    |
414 |                 current_block_48 = 2694013637280298776;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_694_013_637_280_298_776`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:417:36
    |
417 |                 current_block_48 = 2694013637280298776;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_694_013_637_280_298_776`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:420:36
    |
420 |                 current_block_48 = 2266290538919981374;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_266_290_538_919_981_374`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:423:36
    |
423 |                 current_block_48 = 14141891332124833771;
    |                                    ^^^^^^^^^^^^^^^^^^^^ help: consider: `14_141_891_332_124_833_771`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:426:38
    |
426 |                 elide_outer_quotes = 0 as libc::c_int != 0;
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:427:36
    |
427 |                 current_block_48 = 2989495919056355252;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_989_495_919_056_355_252`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:434:13
    |
434 |             1283995450065962895 => {
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `1_283_995_450_065_962_895`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:437:40
    |
437 |                         *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                        ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:437:56
    |
437 |                         *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:437:56
    |
437 |                         *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                        ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:442:37
    |
442 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:443:32
    |
443 |                 quote_string = b"\"\0" as *const u8 as *const libc::c_char;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:443:32
    |
443 |                 quote_string = b"\"\0" as *const u8 as *const libc::c_char;
    |                                ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:444:36
    |
444 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:444:36
    |
444 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:445:36
    |
445 |                 current_block_48 = 2989495919056355252;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_989_495_919_056_355_252`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:447:13
    |
447 |             2694013637280298776 => {
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `2_694_013_637_280_298_776`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:448:38
    |
448 |                 elide_outer_quotes = 1 as libc::c_int != 0;
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:449:36
    |
449 |                 current_block_48 = 2266290538919981374;
    |                                    ^^^^^^^^^^^^^^^^^^^ help: consider: `2_266_290_538_919_981_374`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:454:13
    |
454 |             2266290538919981374 => {
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `2_266_290_538_919_981_374`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:456:41
    |
456 |                     backslash_escapes = 1 as libc::c_int != 0;
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:458:36
    |
458 |                 current_block_48 = 14141891332124833771;
    |                                    ^^^^^^^^^^^^^^^^^^^^ help: consider: `14_141_891_332_124_833_771`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:463:13
    |
463 |             14141891332124833771 => {
    |             ^^^^^^^^^^^^^^^^^^^^ help: consider: `14_141_891_332_124_833_771`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:467:40
    |
467 |                         *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
    |                                        ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:467:56
    |
467 |                         *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:467:56
    |
467 |                         *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
    |                                                        ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:472:32
    |
472 |                 quote_string = b"'\0" as *const u8 as *const libc::c_char;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:472:32
    |
472 |                 quote_string = b"'\0" as *const u8 as *const libc::c_char;
    |                                ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:473:36
    |
473 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:473:36
    |
473 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:477:13
    |
477 |         i = 0 as libc::c_int as size_t;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:477:13
    |
477 |         i = 0 as libc::c_int as size_t;
    |             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:478:29
    |
478 |         while if argsize == 18446744073709551615 as libc::c_ulong {
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:478:29
    |
478 |         while if argsize == 18446744073709551615 as libc::c_ulong {
    |                             ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/quotearg.rs:478:29
    |
478 |         while if argsize == 18446744073709551615 as libc::c_ulong {
    |                             ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:479:13
    |
479 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:479:14
    |
479 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:479:26
    |
479 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:479:56
    |
479 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |                                                        ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:481:13
    |
481 |             (i == argsize) as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:490:53
    |
490 | let arg_slice = unsafe { std::slice::from_raw_parts(arg as *const u8, argsize as usize) };
    |                                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:490:71
    |
490 | let arg_slice = unsafe { std::slice::from_raw_parts(arg as *const u8, argsize as usize) };
    |                                                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:496:19
    |
496 |         argsize = arg_slice.len() as u64;
    |                   ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:501:19
    |
501 |     && &arg_slice[i as usize..(i + quote_string_len) as usize] == unsafe { std::slice::from_raw_parts(quote_string as *const u8, quote_st...
    |                   ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:501:31
    |
501 |     && &arg_slice[i as usize..(i + quote_string_len) as usize] == unsafe { std::slice::from_raw_parts(quote_string as *const u8, quote_st...
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:501:103
    |
501 |     && &arg_slice[i as usize..(i + quote_string_len) as usize] == unsafe { std::slice::from_raw_parts(quote_string as *const u8, quote_st...
    |                                                                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:501:130
    |
501 | ...std::slice::from_raw_parts(quote_string as *const u8, quote_string_len as usize) }
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:504:25
    |
504 |         current_block = 7928555609993211441;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:510:15
    |
510 | c = arg_slice[i as usize];
    |               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:515:25
    |
515 |         current_block = 7928555609993211441;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:521:37
    |
521 |             unsafe { *buffer.offset(len as isize) = '\'' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:521:53
    |
521 |             unsafe { *buffer.offset(len as isize) = '\'' as i8 };
    |                                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:525:37
    |
525 |             unsafe { *buffer.offset(len as isize) = '$' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:525:53
    |
525 |             unsafe { *buffer.offset(len as isize) = '$' as i8 };
    |                                                     ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:529:37
    |
529 |             unsafe { *buffer.offset(len as isize) = '\'' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:529:53
    |
529 |             unsafe { *buffer.offset(len as isize) = '\'' as i8 };
    |                                                     ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:535:33
    |
535 |         unsafe { *buffer.offset(len as isize) = '\\' as i8 };
    |                                 ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:535:49
    |
535 |         unsafe { *buffer.offset(len as isize) = '\\' as i8 };
    |                                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:540:13
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |             ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:540:47
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:540:91
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                                                                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:540:114
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                                                                                                  ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:543:37
    |
543 |             unsafe { *buffer.offset(len as isize) = '0' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:543:53
    |
543 |             unsafe { *buffer.offset(len as isize) = '0' as i8 };
    |                                                     ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:547:37
    |
547 |             unsafe { *buffer.offset(len as isize) = '0' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:547:53
    |
547 |             unsafe { *buffer.offset(len as isize) = '0' as i8 };
    |                                                     ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:551:9
    |
551 |     c = '0' as u8;
    |         ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:552:21
    |
552 |     current_block = 253337042034819032;
    |                     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:553:20
    |
553 | } else if (flags & QA_ELIDE_NULL_BYTES as i32) != 0 {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:554:21
    |
554 |     current_block = 13619784596304402172;
    |                     ^^^^^^^^^^^^^^^^^^^^ help: consider: `13_619_784_596_304_402_172`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:556:21
    |
556 |     current_block = 253337042034819032;
    |                     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:562:16
    |
562 |          match quoting_style as libc::c_uint {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:564:45
    |
564 | ...                   current_block = 17954593875197965021;
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `17_954_593_875_197_965_021`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:566:33
    |
566 | ...                   17954593875197965021 => {
    |                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `17_954_593_875_197_965_021`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:568:57
    |
568 | ...                   current_block = 7928555609993211441;
    |                                       ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:573:48
    |
573 | ...                   if flags & QA_SPLIT_TRIGRAPHS as libc::c_int != 0
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:574:59
    |
574 | ...                   && i.wrapping_add(2 as libc::c_int as libc::c_ulong)
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:574:59
    |
574 | ...                   && i.wrapping_add(2 as libc::c_int as libc::c_ulong)
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:576:44
    |
576 |   ...                   && *arg
    |  __________________________^
577 | | ...                       .offset(
578 | | ...                           i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
579 | | ...                       ) as libc::c_int == '?' as i32
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:578:49
    |
578 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:578:64
    |
578 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:578:64
    |
578 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:579:65
    |
579 | ...                   ) as libc::c_int == '?' as i32
    |                                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:581:47
    |
581 |   ...                   match *arg
    |  _____________________________^
582 | | ...                       .offset(
583 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
584 | | ...                       ) as libc::c_int
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:583:49
    |
583 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:583:64
    |
583 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:583:64
    |
583 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:588:69
    |
588 | ...                   current_block = 7928555609993211441;
    |                                       ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:591:53
    |
591 |   ...                   c = *arg
    |  ___________________________^
592 | | ...                       .offset(
593 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
594 | | ...                       ) as libc::c_uchar;
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:593:57
    |
593 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:593:72
    |
593 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:593:72
    |
593 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:595:53
    |
595 |   ...                   i = (i as libc::c_ulong)
    |  ___________________________^
596 | | ...                       .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
597 | | ...                       as size_t;
    | |___________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:595:53
    |
595 |   ...                   i = (i as libc::c_ulong)
    |  ___________________________^
596 | | ...                       .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    | |____________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:595:54
    |
595 | ...                   i = (i as libc::c_ulong)
    |                            ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:596:67
    |
596 | ...                   .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:596:67
    |
596 | ...                   .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:599:68
    |
599 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:599:84
    |
599 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:599:84
    |
599 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:604:68
    |
604 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:604:84
    |
604 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:604:84
    |
604 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:609:68
    |
609 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:609:84
    |
609 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:609:84
    |
609 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:614:68
    |
614 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:614:84
    |
614 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:614:84
    |
614 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:624:45
    |
624 | ...                   current_block = 253337042034819032;
    |                                       ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:627:45
    |
627 | ...                   current_block = 14514781131754033399;
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `14_514_781_131_754_033_399`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:629:33
    |
629 | ...                   17954593875197965021 => {
    |                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `17_954_593_875_197_965_021`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:631:57
    |
631 | ...                   current_block = 7928555609993211441;
    |                                       ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:636:48
    |
636 | ...                   if flags & QA_SPLIT_TRIGRAPHS as libc::c_int != 0
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:637:59
    |
637 | ...                   && i.wrapping_add(2 as libc::c_int as libc::c_ulong)
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:637:59
    |
637 | ...                   && i.wrapping_add(2 as libc::c_int as libc::c_ulong)
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:639:44
    |
639 |   ...                   && *arg
    |  __________________________^
640 | | ...                       .offset(
641 | | ...                           i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
642 | | ...                       ) as libc::c_int == '?' as i32
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:641:49
    |
641 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:641:64
    |
641 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:641:64
    |
641 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:642:65
    |
642 | ...                   ) as libc::c_int == '?' as i32
    |                                           ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:644:47
    |
644 |   ...                   match *arg
    |  _____________________________^
645 | | ...                       .offset(
646 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
647 | | ...                       ) as libc::c_int
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:646:49
    |
646 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:646:64
    |
646 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:646:64
    |
646 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:651:69
    |
651 | ...                   current_block = 7928555609993211441;
    |                                       ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:654:53
    |
654 |   ...                   c = *arg
    |  ___________________________^
655 | | ...                       .offset(
656 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
657 | | ...                       ) as libc::c_uchar;
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:656:57
    |
656 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:656:72
    |
656 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:656:72
    |
656 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:658:53
    |
658 |   ...                   i = (i as libc::c_ulong)
    |  ___________________________^
659 | | ...                       .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
660 | | ...                       as size_t;
    | |___________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:658:53
    |
658 |   ...                   i = (i as libc::c_ulong)
    |  ___________________________^
659 | | ...                       .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    | |____________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:658:54
    |
658 | ...                   i = (i as libc::c_ulong)
    |                            ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:659:67
    |
659 | ...                   .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:659:67
    |
659 | ...                   .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:662:68
    |
662 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:662:84
    |
662 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:662:84
    |
662 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:667:68
    |
667 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:667:84
    |
667 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:667:84
    |
667 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:672:68
    |
672 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:672:84
    |
672 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:672:84
    |
672 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:677:68
    |
677 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:677:84
    |
677 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:677:84
    |
677 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:687:45
    |
687 | ...                   current_block = 253337042034819032;
    |                                       ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:690:45
    |
690 | ...                   current_block = 253337042034819032;
    |                                       ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:696:15
    |
696 |         esc = 'a' as u8;
    |               ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:697:25
    |
697 |         current_block = 1190876092451756080;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `1_190_876_092_451_756_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:700:15
    |
700 |         esc = 'b' as u8;
    |               ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:701:25
    |
701 |         current_block = 1190876092451756080;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `1_190_876_092_451_756_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:704:15
    |
704 |         esc = 'f' as u8;
    |               ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:705:25
    |
705 |         current_block = 1190876092451756080;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `1_190_876_092_451_756_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:708:15
    |
708 |         esc = 'n' as u8;
    |               ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:709:25
    |
709 |         current_block = 9215498979640025612;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `9_215_498_979_640_025_612`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:712:15
    |
712 |         esc = 'r' as u8;
    |               ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:713:25
    |
713 |         current_block = 9215498979640025612;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `9_215_498_979_640_025_612`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:716:15
    |
716 |         esc = 't' as u8;
    |               ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:717:25
    |
717 |         current_block = 9215498979640025612;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `9_215_498_979_640_025_612`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:720:15
    |
720 |         esc = 'v' as u8;
    |               ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:721:25
    |
721 |         current_block = 1190876092451756080;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `1_190_876_092_451_756_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:727:25
    |
727 |         current_block = 7928555609993211441;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:730:21
    |
730 |     current_block = 4476262310586904498;
    |                     ^^^^^^^^^^^^^^^^^^^ help: consider: `4_476_262_310_586_904_498`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:732:21
    |
732 |     current_block = 4476262310586904498;
    |                     ^^^^^^^^^^^^^^^^^^^ help: consider: `4_476_262_310_586_904_498`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:734:21
    |
734 |     current_block = 9215498979640025612;
    |                     ^^^^^^^^^^^^^^^^^^^ help: consider: `9_215_498_979_640_025_612`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:740:27
    |
740 |          if if argsize == 18446744073709551615 as libc::c_ulong {
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:740:27
    |
740 |          if if argsize == 18446744073709551615 as libc::c_ulong {
    |                           ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/quotearg.rs:740:27
    |
740 |          if if argsize == 18446744073709551615 as libc::c_ulong {
    |                           ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:741:25
    |
741 | /                         (*arg.offset(1 as libc::c_int as isize) as libc::c_int
742 | |                             == '\0' as i32) as libc::c_int
    | |__________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:741:26
    |
741 |                         (*arg.offset(1 as libc::c_int as isize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:741:38
    |
741 |                         (*arg.offset(1 as libc::c_int as isize) as libc::c_int
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:741:38
    |
741 |                         (*arg.offset(1 as libc::c_int as isize) as libc::c_int
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:742:32
    |
742 | ...                   == '\0' as i32) as libc::c_int
    |                          ^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:744:25
    |
744 |                         (argsize == 1 as libc::c_int as libc::c_ulong) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:744:37
    |
744 |                         (argsize == 1 as libc::c_int as libc::c_ulong) as libc::c_int
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:744:37
    |
744 |                         (argsize == 1 as libc::c_int as libc::c_ulong) as libc::c_int
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:747:41
    |
747 |                         current_block = 253337042034819032;
    |                                         ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:749:41
    |
749 |                         current_block = 16442922512115311366;
    |                                         ^^^^^^^^^^^^^^^^^^^^ help: consider: `16_442_922_512_115_311_366`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:754:25
    |
754 |         current_block = 16442922512115311366;
    |                         ^^^^^^^^^^^^^^^^^^^^ help: consider: `16_442_922_512_115_311_366`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:757:25
    |
757 |         current_block = 4634307283396172174;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `4_634_307_283_396_172_174`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:760:25
    |
760 |         current_block = 7549413860336125482;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `7_549_413_860_336_125_482`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:763:25
    |
763 |         current_block = 13059411171234995867;
    |                         ^^^^^^^^^^^^^^^^^^^^ help: consider: `13_059_411_171_234_995_867`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:766:25
    |
766 |         current_block = 16620298045565028098;
    |                         ^^^^^^^^^^^^^^^^^^^^ help: consider: `16_620_298_045_565_028_098`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:769:25
    |
769 |         current_block = 15155215915847730705;
    |                         ^^^^^^^^^^^^^^^^^^^^ help: consider: `15_155_215_915_847_730_705`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:777:25
    |
777 |         current_block = 7928555609993211441;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:786:28
    |
786 |             *buffer.offset(len as isize) = '\'' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:786:44
    |
786 |             *buffer.offset(len as isize) = '\'' as i8;
    |                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:793:28
    |
793 |             *buffer.offset(len as isize) = '\\' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:793:44
    |
793 |             *buffer.offset(len as isize) = '\\' as i8;
    |                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:800:28
    |
800 |             *buffer.offset(len as isize) = '\'' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:800:44
    |
800 |             *buffer.offset(len as isize) = '\'' as i8;
    |                                            ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:806:21
    |
806 |     current_block = 253337042034819032;
    |                     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:808:21
    |
808 |     current_block = 253337042034819032;
    |                     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:820:25
    |
820 |         current_block = 253337042034819032;
    |                         ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:826:29
    |
826 |                         m = 1 as libc::c_int as size_t;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:826:29
    |
826 |                         m = 1 as libc::c_int as size_t;
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:827:37
    |
827 |                           printable = *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
    |  _____________________________________^
828 | |                             as libc::c_int
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:827:64
    |
827 |                         printable = *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
    |                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:827:64
    |
827 |                         printable = *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
    |                                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:829:31
    |
829 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:829:31
    |
829 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:829:31
    |
829 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:830:32
    |
830 | ...                   != 0 as libc::c_int;
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:837:29
    |
837 |                         m = 0 as libc::c_int as size_t;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:837:29
    |
837 |                         m = 0 as libc::c_int as size_t;
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:838:37
    |
838 |                         printable = 1 as libc::c_int != 0;
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:839:39
    |
839 |                         if argsize == 18446744073709551615 as libc::c_ulong {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:839:39
    |
839 |                         if argsize == 18446744073709551615 as libc::c_ulong {
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/quotearg.rs:839:39
    |
839 |                         if argsize == 18446744073709551615 as libc::c_ulong {
    |                                       ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:845:42
    |
845 | ...                   &*arg.offset(i.wrapping_add(m) as isize),
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:849:39
    |
849 |                         if !(bytes == 0 as libc::c_int as libc::c_ulong) {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:849:39
    |
849 |                         if !(bytes == 0 as libc::c_int as libc::c_ulong) {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:850:41
    |
850 | ...                   if bytes == -(1 as libc::c_int) as size_t {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:850:43
    |
850 | ...                   if bytes == -(1 as libc::c_int) as size_t {
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:851:45
    |
851 | ...                   printable = 0 as libc::c_int != 0;
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:852:48
    |
852 | ...                   } else if bytes == -(2 as libc::c_int) as size_t {
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:852:50
    |
852 | ...                   } else if bytes == -(2 as libc::c_int) as size_t {
    |                                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:853:45
    |
853 | ...                   printable = 0 as libc::c_int != 0;
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:855:40
    |
855 | ...                   && *arg.offset(i.wrapping_add(m) as isize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:855:52
    |
855 | ...                   && *arg.offset(i.wrapping_add(m) as isize) as libc::c_int
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:862:36
    |
862 | ...                   if '[' as i32 == 0x5b as libc::c_int
    |                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:862:50
    |
862 | ...                   if '[' as i32 == 0x5b as libc::c_int
    |                                        ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:863:40
    |
863 | ...                   && elide_outer_quotes as libc::c_int != 0
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:864:40
    |
864 | ...                   && quoting_style as libc::c_uint
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:865:44
    |
865 | ...                   == shell_always_quoting_style as libc::c_int as libc::c_uint
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:865:44
    |
865 | ...                   == shell_always_quoting_style as libc::c_int as libc::c_uint
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:868:41
    |
868 | ...                   j = 1 as libc::c_int as size_t;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:868:41
    |
868 | ...                   j = 1 as libc::c_int as size_t;
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:870:47
    |
870 |   ...                   match *arg
    |  _____________________________^
871 | | ...                       .offset(i.wrapping_add(m).wrapping_add(j) as isize)
872 | | ...                       as libc::c_int
    | |________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:871:53
    |
871 | ...                   .offset(i.wrapping_add(m).wrapping_add(j) as isize)
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:875:65
    |
875 | ...                   current_block = 7928555609993211441;
    |                                       ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:885:49
    |
885 | ...                   printable = 0 as libc::c_int != 0;
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:887:37
    |
887 |   ...                   m = (m as libc::c_ulong).wrapping_add(bytes) as size_t
    |  ___________________________^
888 | | ...                       as size_t;
    | |___________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:887:37
    |
887 | ...                   m = (m as libc::c_ulong).wrapping_add(bytes) as size_t
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:887:38
    |
887 | ...                   m = (m as libc::c_ulong).wrapping_add(bytes) as size_t
    |                            ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:896:72
    |
896 |     let buffer_slice = unsafe { std::slice::from_raw_parts_mut(buffer, buffersize as usize) };
    |                                                                        ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `if` expression with an `else if`, but without a final `else`
   --> src/quotearg.rs:932:16
    |
932 |           } else if is_right_quote {
    |  ________________^
933 | |             if len < buffersize {
934 | |                 buffer_slice[len as usize] = '\\' as i8;
935 | |             }
936 | |             len = len.wrapping_add(1);
937 | |             is_right_quote = false;
938 | |         }
    | |_________^
    |
    = note: `-W clippy::else-if-without-else` implied by `-W clippy::restriction`
    = help: add an `else` block here
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else

warning: long literal lacking separators
   --> src/quotearg.rs:900:33
    |
900 |                 current_block = 7928555609993211441;
    |                                 ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:906:34
    |
906 |                     buffer_slice[len as usize] = '\'' as i8;
    |                                  ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:906:50
    |
906 |                     buffer_slice[len as usize] = '\'' as i8;
    |                                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:910:34
    |
910 |                     buffer_slice[len as usize] = '$' as i8;
    |                                  ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:910:50
    |
910 |                     buffer_slice[len as usize] = '$' as i8;
    |                                                  ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:914:34
    |
914 |                     buffer_slice[len as usize] = '\'' as i8;
    |                                  ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:914:50
    |
914 |                     buffer_slice[len as usize] = '\'' as i8;
    |                                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:920:30
    |
920 |                 buffer_slice[len as usize] = '\\' as i8;
    |                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:920:46
    |
920 |                 buffer_slice[len as usize] = '\\' as i8;
    |                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:924:30
    |
924 |                 buffer_slice[len as usize] = ('0' as i32 + (c as i32 >> 6)) as i8;
    |                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:924:46
    |
924 |                 buffer_slice[len as usize] = ('0' as i32 + (c as i32 >> 6)) as i8;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:924:47
    |
924 |                 buffer_slice[len as usize] = ('0' as i32 + (c as i32 >> 6)) as i8;
    |                                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:924:61
    |
924 |                 buffer_slice[len as usize] = ('0' as i32 + (c as i32 >> 6)) as i8;
    |                                                             ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:928:30
    |
928 |                 buffer_slice[len as usize] = ('0' as i32 + ((c as i32 >> 3) & 7)) as i8;
    |                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:928:46
    |
928 |                 buffer_slice[len as usize] = ('0' as i32 + ((c as i32 >> 3) & 7)) as i8;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:928:47
    |
928 |                 buffer_slice[len as usize] = ('0' as i32 + ((c as i32 >> 3) & 7)) as i8;
    |                                               ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:928:62
    |
928 |                 buffer_slice[len as usize] = ('0' as i32 + ((c as i32 >> 3) & 7)) as i8;
    |                                                              ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:931:17
    |
931 |             c = ('0' as i32 + (c as i32 & 7)) as u8;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:931:18
    |
931 |             c = ('0' as i32 + (c as i32 & 7)) as u8;
    |                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:931:32
    |
931 |             c = ('0' as i32 + (c as i32 & 7)) as u8;
    |                                ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:934:30
    |
934 |                 buffer_slice[len as usize] = '\\' as i8;
    |                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:934:46
    |
934 |                 buffer_slice[len as usize] = '\\' as i8;
    |                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:944:30
    |
944 |                 buffer_slice[len as usize] = '\'' as i8;
    |                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:944:46
    |
944 |                 buffer_slice[len as usize] = '\'' as i8;
    |                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:948:30
    |
948 |                 buffer_slice[len as usize] = '\'' as i8;
    |                              ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:948:46
    |
948 |                 buffer_slice[len as usize] = '\'' as i8;
    |                                              ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:954:26
    |
954 |             buffer_slice[len as usize] = c as i8;
    |                          ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:954:42
    |
954 |             buffer_slice[len as usize] = c as i8;
    |                                          ^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:958:13
    |
958 |         c = unsafe { *arg.offset(i as isize) } as u8;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/quotearg.rs:958:34
    |
958 |         c = unsafe { *arg.offset(i as isize) } as u8;
    |                                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/quotearg.rs:960:21
    |
960 |     current_block = 4476262310586904498;
    |                     ^^^^^^^^^^^^^^^^^^^ help: consider: `4_476_262_310_586_904_498`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:962:21
    |
962 |     current_block = 253337042034819032;
    |                     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:970:5
    |
970 |     16442922512115311366 => {
    |     ^^^^^^^^^^^^^^^^^^^^ help: consider: `16_442_922_512_115_311_366`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:972:29
    |
972 |             current_block = 253337042034819032;
    |                             ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:974:29
    |
974 |             current_block = 4634307283396172174;
    |                             ^^^^^^^^^^^^^^^^^^^ help: consider: `4_634_307_283_396_172_174`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:977:5
    |
977 |     9215498979640025612 => {
    |     ^^^^^^^^^^^^^^^^^^^ help: consider: `9_215_498_979_640_025_612`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:979:29
    |
979 |             current_block = 7928555609993211441;
    |                             ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:982:25
    |
982 |         current_block = 1190876092451756080;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `1_190_876_092_451_756_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:988:5
    |
988 |     1190876092451756080 => {
    |     ^^^^^^^^^^^^^^^^^^^ help: consider: `1_190_876_092_451_756_080`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:991:29
    |
991 |             current_block = 3173013908131212616;
    |                             ^^^^^^^^^^^^^^^^^^^ help: consider: `3_173_013_908_131_212_616`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:993:29
    |
993 |             current_block = 253337042034819032;
    |                             ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:996:5
    |
996 |     4634307283396172174 => {
    |     ^^^^^^^^^^^^^^^^^^^ help: consider: `4_634_307_283_396_172_174`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
   --> src/quotearg.rs:998:25
    |
998 |         current_block = 7549413860336125482;
    |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `7_549_413_860_336_125_482`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1004:5
     |
1004 |     7549413860336125482 => {
     |     ^^^^^^^^^^^^^^^^^^^ help: consider: `7_549_413_860_336_125_482`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1005:25
     |
1005 |         current_block = 13059411171234995867;
     |                         ^^^^^^^^^^^^^^^^^^^^ help: consider: `13_059_411_171_234_995_867`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1011:5
     |
1011 |     13059411171234995867 => {
     |     ^^^^^^^^^^^^^^^^^^^^ help: consider: `13_059_411_171_234_995_867`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1012:25
     |
1012 |         current_block = 16620298045565028098;
     |                         ^^^^^^^^^^^^^^^^^^^^ help: consider: `16_620_298_045_565_028_098`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1022:5
     |
1022 |     16620298045565028098 => {
     |     ^^^^^^^^^^^^^^^^^^^^ help: consider: `16_620_298_045_565_028_098`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1023:9
     |
1023 |         15155215915847730705
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider: `15_155_215_915_847_730_705`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1029:5
     |
1029 |     15155215915847730705 => {
     |     ^^^^^^^^^^^^^^^^^^^^ help: consider: `15_155_215_915_847_730_705`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1033:9
     |
1033 |         253337042034819032
     |         ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1039:5
     |
1039 |     253337042034819032 => {
     |     ^^^^^^^^^^^^^^^^^^ help: consider: `253_337_042_034_819_032`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1042:47
     |
1042 | ...   && (unsafe { *quote_these_too.add(c as usize / (std::mem::size_of::<u32>() * 8)) } >> (c as usize % (std::mem::size_of::<u32>() * 8...
     |                                         ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1042:100
     |
1042 | ...   && (unsafe { *quote_these_too.add(c as usize / (std::mem::size_of::<u32>() * 8)) } >> (c as usize % (std::mem::size_of::<u32>() * 8...
     |                                                                                              ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1044:13
     |
1044 |             4476262310586904498
     |             ^^^^^^^^^^^^^^^^^^^ help: consider: `4_476_262_310_586_904_498`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1046:13
     |
1046 |             3173013908131212616
     |             ^^^^^^^^^^^^^^^^^^^ help: consider: `3_173_013_908_131_212_616`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1053:5
     |
1053 |     3173013908131212616 => {
     |     ^^^^^^^^^^^^^^^^^^^ help: consider: `3_173_013_908_131_212_616`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1060:38
     |
1060 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                                      ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1060:54
     |
1060 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                                                      ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1064:38
     |
1064 |                 unsafe { *buffer.add(len as usize) = '$' as i8; }
     |                                      ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1064:54
     |
1064 |                 unsafe { *buffer.add(len as usize) = '$' as i8; }
     |                                                      ^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1068:38
     |
1068 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                                      ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1068:54
     |
1068 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                                                      ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1074:34
     |
1074 |             unsafe { *buffer.add(len as usize) = '\\' as i8; }
     |                                  ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1074:50
     |
1074 |             unsafe { *buffer.add(len as usize) = '\\' as i8; }
     |                                                  ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1077:9
     |
1077 |         4476262310586904498
     |         ^^^^^^^^^^^^^^^^^^^ help: consider: `4_476_262_310_586_904_498`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1083:5
     |
1083 |     4476262310586904498 => {
     |     ^^^^^^^^^^^^^^^^^^^ help: consider: `4_476_262_310_586_904_498`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1086:38
     |
1086 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                                      ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1086:54
     |
1086 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                                                      ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1090:38
     |
1090 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                                      ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1090:54
     |
1090 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                                                      ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1096:34
     |
1096 |             unsafe { *buffer.add(len as usize) = c as i8; }
     |                                  ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1096:50
     |
1096 |             unsafe { *buffer.add(len as usize) = c as i8; }
     |                                                  ^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1110:19
     |
1110 |         if len == 0 as libc::c_int as libc::c_ulong
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1110:19
     |
1110 |         if len == 0 as libc::c_int as libc::c_ulong
     |                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1111:16
     |
1111 |             && quoting_style as libc::c_uint
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1112:20
     |
1112 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1112:20
     |
1112 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1113:16
     |
1113 |             && elide_outer_quotes as libc::c_int != 0
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1115:29
     |
1115 |             current_block = 7928555609993211441;
     |                             ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1118:14
     |
1118 |         if !(quoting_style as libc::c_uint
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1119:16
     |
1119 |             == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1119:16
     |
1119 |             == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1120:39
     |
1120 |             && !elide_outer_quotes && encountered_single_quote as libc::c_int != 0)
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1122:29
     |
1122 |             current_block = 6412618891452676311;
     |                             ^^^^^^^^^^^^^^^^^^^ help: consider: `6_412_618_891_452_676_311`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: redundant else block
    --> src/quotearg.rs:1137:8
     |
1137 |   } else {
     |  ________^
1138 | |     if !(buffersize == 0 && orig_buffersize != 0) {
1139 | |         current_block = 6412618891452676311;
1140 | |         break;
...    |
1143 | |     len = 0;
1144 | | }
     | |_^
     |
     = help: remove the `else` block and move the contents out
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: long literal lacking separators
    --> src/quotearg.rs:1139:25
     |
1139 |         current_block = 6412618891452676311;
     |                         ^^^^^^^^^^^^^^^^^^^ help: consider: `6_412_618_891_452_676_311`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: long literal lacking separators
    --> src/quotearg.rs:1148:9
     |
1148 |         7928555609993211441 => {
     |         ^^^^^^^^^^^^^^^^^^^ help: consider: `7_928_555_609_993_211_441`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1149:16
     |
1149 |             if quoting_style as libc::c_uint
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1150:20
     |
1150 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1150:20
     |
1150 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1151:20
     |
1151 |                 && backslash_escapes as libc::c_int != 0
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1161:27
     |
1161 |                 flags & !(QA_ELIDE_OUTER_QUOTES as libc::c_int),
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1162:17
     |
1162 |                 0 as *const libc::c_uint,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1171:40
     |
1171 |                         *buffer.offset(len as isize) = *quote_string;
     |                                        ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1180:32
     |
1180 |                 *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
     |                                ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1180:48
     |
1180 |                 *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1180:48
     |
1180 |                 *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
     |                                                ^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1200:13
     |
1200 |             buffer.len() as u64,
     |             ^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1202:13
     |
1202 |             arg.len() as u64,
     |             ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1211:5
     |
1211 |     r as usize
     |     ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1219:19
     |
1219 |     let argsize = arg.len() as u64; // Convert usize to u64
     |                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1235:9
     |
1235 |         &mut default_quoting_options as *mut quoting_options as *const quoting_options
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1235:9
     |
1235 |         &mut default_quoting_options as *mut quoting_options as *const quoting_options
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1240:13
     |
1240 |             0 as libc::c_int
     |             ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1242:13
     |
1242 |             QA_ELIDE_NULL_BYTES as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1245:9
     |
1245 |         0 as *mut libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1246:9
     |
1246 |         0 as libc::c_int as size_t,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1246:9
     |
1246 |         0 as libc::c_int as size_t,
     |         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1255:23
     |
1255 |         .wrapping_add(1 as libc::c_int as libc::c_ulong);
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1255:23
     |
1255 |         .wrapping_add(1 as libc::c_int as libc::c_ulong);
     |                       ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1270:38
     |
1270 |         *size = bufsize.wrapping_sub(1 as libc::c_int as libc::c_ulong);
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1270:38
     |
1270 |         *size = bufsize.wrapping_sub(1 as libc::c_int as libc::c_ulong);
     |                                      ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1275:34
     |
1275 | static mut nslots: libc::c_int = 1 as libc::c_int;
     |                                  ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1279:19
     |
1279 |             size: ::core::mem::size_of::<[libc::c_char; 256]>() as libc::c_ulong,
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1280:18
     |
1280 |             val: slot0.as_ptr() as *mut _,
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1286:5
     |
1286 |     &slotvec0 as *const slotvec as *mut slotvec
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1286:5
     |
1286 |     &slotvec0 as *const slotvec as *mut slotvec
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1293:40
     |
1293 |             let val = (*sv).val.offset(i as isize);
     |                                        ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1303:29
     |
1303 |             slotvec0.size = std::mem::size_of::<[libc::c_char; 256]>() as libc::c_ulong;
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1306:12
     |
1306 |         if sv as *mut _ != &mut slotvec0 as *mut _ {
     |            ^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1306:28
     |
1306 |         if sv as *mut _ != &mut slotvec0 as *mut _ {
     |                            ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: binding's name is too similar to existing binding
    --> src/quotearg.rs:1358:13
     |
1358 |     let mut qsize: size_t = quotearg_buffer_restyled(
     |             ^^^^^
     |
note: existing binding defined here
    --> src/quotearg.rs:1355:13
     |
1355 |     let mut size: size_t = (*sv.offset(n as isize)).size;
     |             ^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1322:39
     |
1322 |       let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |  _______________________________________^
1323 | |         < 9223372036854775807 as libc::c_long
1324 | |     {
1325 | |         2147483647 as libc::c_int as libc::c_long
1326 | |     } else {
1327 | |         9223372036854775807 as libc::c_long
1328 | |     }) as libc::c_int;
     | |_____________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1322:44
     |
1322 |     let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1322:44
     |
1322 |     let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1322:44
     |
1322 |     let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |                                            ^^^^^^^^^^ help: consider: `2_147_483_647`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
    --> src/quotearg.rs:1322:44
     |
1322 |     let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |                                            ^^^^^^^^^^ help: consider: `0x7FFF_FFFF`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1323:11
     |
1323 |         < 9223372036854775807 as libc::c_long
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1323:11
     |
1323 |         < 9223372036854775807 as libc::c_long
     |           ^^^^^^^^^^^^^^^^^^^ help: consider: `9_223_372_036_854_775_807`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
    --> src/quotearg.rs:1323:11
     |
1323 |         < 9223372036854775807 as libc::c_long
     |           ^^^^^^^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF_FFFF_FFFF`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1325:9
     |
1325 |         2147483647 as libc::c_int as libc::c_long
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1325:9
     |
1325 |         2147483647 as libc::c_int as libc::c_long
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1325:9
     |
1325 |         2147483647 as libc::c_int as libc::c_long
     |         ^^^^^^^^^^ help: consider: `2_147_483_647`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
    --> src/quotearg.rs:1325:9
     |
1325 |         2147483647 as libc::c_int as libc::c_long
     |         ^^^^^^^^^^ help: consider: `0x7FFF_FFFF`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1327:9
     |
1327 |         9223372036854775807 as libc::c_long
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1327:9
     |
1327 |         9223372036854775807 as libc::c_long
     |         ^^^^^^^^^^^^^^^^^^^ help: consider: `9_223_372_036_854_775_807`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
    --> src/quotearg.rs:1327:9
     |
1327 |         9223372036854775807 as libc::c_long
     |         ^^^^^^^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF_FFFF_FFFF`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1329:10
     |
1329 |     if !(0 as libc::c_int <= n && n < nslots_max) {
     |          ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1333:44
     |
1333 |         let mut preallocated: bool = sv == &mut slotvec0 as *mut slotvec;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1334:37
     |
1334 |         let mut new_nslots: idx_t = nslots as idx_t;
     |                                     ^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1335:14
     |
1335 |           sv = xpalloc(
     |  ______________^
1336 | |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
1337 | |                 as *mut libc::c_void,
1338 | |             &mut new_nslots,
...    |
1341 | |             ::core::mem::size_of::<slotvec>() as libc::c_ulong as idx_t,
1342 | |         ) as *mut slotvec;
     | |_________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1336:13
     |
1336 | /             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
1337 | |                 as *mut libc::c_void,
     | |____________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1336:17
     |
1336 |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1336:52
     |
1336 |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
     |                                                    ^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1339:13
     |
1339 |             (n - nslots + 1 as libc::c_int) as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1339:27
     |
1339 |             (n - nslots + 1 as libc::c_int) as idx_t,
     |                           ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1340:13
     |
1340 |             nslots_max as ptrdiff_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1341:13
     |
1341 |             ::core::mem::size_of::<slotvec>() as libc::c_ulong as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1341:13
     |
1341 |             ::core::mem::size_of::<slotvec>() as libc::c_ulong as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1348:13
     |
1348 |             sv.offset(nslots as isize) as *mut libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1348:23
     |
1348 |             sv.offset(nslots as isize) as *mut libc::c_void,
     |                       ^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1349:13
     |
1349 |             0 as libc::c_int,
     |             ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1350:14
     |
1350 |             ((new_nslots - nslots as libc::c_long) as libc::c_ulong)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1350:28
     |
1350 |             ((new_nslots - nslots as libc::c_long) as libc::c_ulong)
     |                            ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1351:31
     |
1351 |                 .wrapping_mul(::core::mem::size_of::<slotvec>() as libc::c_ulong),
     |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1353:18
     |
1353 |         nslots = new_nslots as libc::c_int;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1355:40
     |
1355 |     let mut size: size_t = (*sv.offset(n as isize)).size;
     |                                        ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1356:50
     |
1356 |     let mut val: *mut libc::c_char = (*sv.offset(n as isize)).val;
     |                                                  ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1357:53
     |
1357 |     let mut flags: libc::c_int = (*options).flags | QA_ELIDE_NULL_BYTES as libc::c_int;
     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1370:35
     |
1370 |         size = qsize.wrapping_add(1 as libc::c_int as libc::c_ulong);
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1370:35
     |
1370 |         size = qsize.wrapping_add(1 as libc::c_int as libc::c_ulong);
     |                                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1371:21
     |
1371 |         (*sv.offset(n as isize)).size = size;
     |                     ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1373:18
     |
1373 |             free(val as *mut libc::c_void);
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1376:42
     |
1376 |         let ref mut fresh0 = (*sv.offset(n as isize)).val;
     |                                          ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1401:9
     |
1401 |         18446744073709551615 as libc::c_ulong,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1401:9
     |
1401 |         18446744073709551615 as libc::c_ulong,
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
    --> src/quotearg.rs:1401:9
     |
1401 |         18446744073709551615 as libc::c_ulong,
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1423:19
     |
1423 |     let argsize = arg.len() as u64;
     |                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1451:24
     |
1451 |     let argsize: u64 = arg.to_bytes().len() as u64;
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1483:21
     |
1483 |         left_quote: 0 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1484:22
     |
1484 |         right_quote: 0 as *const libc::c_char,
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1487:40
     |
1487 |     set_char_quoting(&mut options, ch, 1 as libc::c_int);
     |                                        ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1488:31
     |
1488 |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
     |                               ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1492:24
     |
1492 |     let ch_as_c_char = ch as libc::c_char;
     |                        ^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1494:41
     |
1494 |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1494:41
     |
1494 |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
     |                                         ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
    --> src/quotearg.rs:1494:41
     |
1494 |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
     |                                         ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1501:24
     |
1501 |     quotearg_char(arg, ':' as char)
     |                        ^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1506:19
     |
1506 |     let argsize = arg.len() as size_t;
     |                   ^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1508:27
     |
1508 |         quotearg_char_mem(arg.as_ptr() as *const libc::c_char, argsize, ':' as i32 as libc::c_char)
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1508:73
     |
1508 |         quotearg_char_mem(arg.as_ptr() as *const libc::c_char, argsize, ':' as i32 as libc::c_char)
     |                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1508:73
     |
1508 |         quotearg_char_mem(arg.as_ptr() as *const libc::c_char, argsize, ':' as i32 as libc::c_char)
     |                                                                         ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1529:40
     |
1529 |         set_char_quoting(&mut options, ':' as i32 as i8, 1);
     |                                        ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1529:40
     |
1529 |         set_char_quoting(&mut options, ':' as i32 as i8, 1);
     |                                        ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1552:9
     |
1552 |         18446744073709551615 as libc::c_ulong,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
    --> src/quotearg.rs:1552:9
     |
1552 |         18446744073709551615 as libc::c_ulong,
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
    --> src/quotearg.rs:1552:9
     |
1552 |         18446744073709551615 as libc::c_ulong,
     |         ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1564:24
     |
1564 |     set_custom_quoting(&mut o as *mut quoting_options, left_quote, right_quote);
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1593:19
     |
1593 |     let argsize = arg.len() as u64;
     |                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1616:16
     |
1616 |         flags: 0 as libc::c_int,
     |                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1617:27
     |
1617 |         quote_these_too: [0 as libc::c_int as libc::c_uint, 0, 0, 0, 0, 0, 0, 0],
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1617:27
     |
1617 |         quote_these_too: [0 as libc::c_int as libc::c_uint, 0, 0, 0, 0, 0, 0, 0],
     |                           ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1618:21
     |
1618 |         left_quote: 0 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1619:22
     |
1619 |         right_quote: 0 as *const libc::c_char,
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1633:19
     |
1633 |     let argsize = arg.to_bytes().len() as u64;
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/quotearg.rs:1635:32
     |
1635 |     unsafe { CString::from_raw(quoted_ptr as *mut c_char) }
     |                                ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/setlocale_null.rs:19:19
   |
19 |     let bufsize = buf.len() as u64; // Convert usize to u64
   |                   ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/setlocale_null.rs:20:19
   |
20 |     let buf_ptr = buf.as_mut_ptr() as *mut libc::c_char;
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/setlocale_null_unlocked.rs:21:63
   |
21 |     let mut result: *const libc::c_char = setlocale(category, 0 as *const libc::c_char);
   |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: redundant else block
  --> src/setlocale_null_unlocked.rs:40:12
   |
40 |       } else {
   |  ____________^
41 | |         let length: usize = unsafe { strlen(result) } as usize; // Cast to usize
42 | |         if length < buf.len() {
43 | |             buf[..length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, length) });
...  |
54 | |         }
55 | |     }
   | |_____^
   |
   = help: remove the `else` block and move the contents out
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: using a potentially dangerous silent `as` conversion
  --> src/setlocale_null_unlocked.rs:41:29
   |
41 |         let length: usize = unsafe { strlen(result) } as usize; // Cast to usize
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: redundant else block
  --> src/setlocale_null_unlocked.rs:46:16
   |
46 |           } else {
   |  ________________^
47 | |             let copy_length = buf.len() - 1;
48 | |             if !buf.is_empty() {
49 | |                 let source = unsafe { std::slice::from_raw_parts(result as *const u8, copy_length) };
...  |
53 | |             return 34;
54 | |         }
   | |_________^
   |
   = help: remove the `else` block and move the contents out
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: using a potentially dangerous silent `as` conversion
  --> src/setlocale_null_unlocked.rs:43:79
   |
43 |             buf[..length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, length) });
   |                                                                               ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/setlocale_null_unlocked.rs:49:66
   |
49 |                 let source = unsafe { std::slice::from_raw_parts(result as *const u8, copy_length) };
   |                                                                  ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
 --> src/version.rs:3:47
  |
3 |   pub static mut Version: *const libc::c_char = b"9.5.42-bbc97\0" as *const u8
  |  _______________________________________________^
4 | |     as *const libc::c_char;
  | |__________________________^
  |
  = help: consider using a safe wrapper for this conversion
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
 --> src/version.rs:3:47
  |
3 | pub static mut Version: *const libc::c_char = b"9.5.42-bbc97\0" as *const u8
  |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: consider using a safe wrapper for this conversion
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:79:13
   |
79 |             b"%s (%s) %s\n\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:79:13
   |
79 |             b"%s (%s) %s\n\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:87:13
   |
87 |             b"%s %s\n\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:87:13
   |
87 |             b"%s %s\n\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:95:17
   |
95 |         gettext(b"(C)\0" as *const u8 as *const libc::c_char),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:95:17
   |
95 |         gettext(b"(C)\0" as *const u8 as *const libc::c_char),
   |                 ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:96:9
   |
96 |         COPYRIGHT_YEAR as libc::c_int,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:98:20
   |
98 |     fputs_unlocked(b"\n\0" as *const u8 as *const libc::c_char, stream);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/version_etc.rs:98:20
   |
98 |     fputs_unlocked(b"\n\0" as *const u8 as *const libc::c_char, stream);
   |                    ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:102:13
    |
102 | / ...   b"License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere is NO...
103 | | ...       as *const u8 as *const libc::c_char,
    | |_____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:102:13
    |
102 | / ...   b"License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere is NO...
103 | | ...       as *const u8 as *const libc::c_char,
    | |______________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:105:9
    |
105 |         b"https://gnu.org/licenses/gpl.html\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:105:9
    |
105 |         b"https://gnu.org/licenses/gpl.html\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:107:20
    |
107 |     fputs_unlocked(b"\n\0" as *const u8 as *const libc::c_char, stream);
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:107:20
    |
107 |     fputs_unlocked(b"\n\0" as *const u8 as *const libc::c_char, stream);
    |                    ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:114:25
    |
114 |                 gettext(b"Written by %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:114:25
    |
114 |                 gettext(b"Written by %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:123:25
    |
123 |                 gettext(b"Written by %s and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:123:25
    |
123 |                 gettext(b"Written by %s and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:133:25
    |
133 |                 gettext(b"Written by %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:133:25
    |
133 |                 gettext(b"Written by %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:144:25
    |
144 |                 gettext(b"Written by %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:144:25
    |
144 |                 gettext(b"Written by %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:156:25
    |
156 |                 gettext(b"Written by %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:156:25
    |
156 |                 gettext(b"Written by %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:169:25
    |
169 |                 gettext(b"Written by %s, %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:169:25
    |
169 |                 gettext(b"Written by %s, %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:183:25
    |
183 |                 gettext(b"Written by %s, %s, %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:183:25
    |
183 |                 gettext(b"Written by %s, %s, %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:198:25
    |
198 |                 gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:198:25
    |
198 |                 gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:214:25
    |
214 |                 gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:214:25
    |
214 |                 gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:231:25
    |
231 |                 gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and others.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:231:25
    |
231 |                 gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and others.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:256:17
    |
256 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:256:17
    |
256 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:257:29
    |
257 |     while !(*authors.offset(n_authors as isize)).is_null() {
    |                             ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:272:51
    |
272 |     let mut authtab: [*const libc::c_char; 10] = [0 as *const libc::c_char; 10];
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:273:17
    |
273 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:273:17
    |
273 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:274:23
    |
274 |     while n_authors < 10 as libc::c_int as libc::c_ulong
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:274:23
    |
274 |     while n_authors < 10 as libc::c_int as libc::c_ulong
    |                       ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:276:21
    |
276 |             authtab[n_authors as usize] = authors.arg::<*const libc::c_char>();
    |                     ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:277:23
    |
277 |             !(authtab[n_authors as usize]).is_null()
    |                       ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:308:17
    |
308 |         gettext(b"Report bugs to: bug-coreutils@gnu.org\0".as_ptr() as *const libc::c_char)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:311:17
    |
311 |         gettext(b"GNU coreutils home page: <https://www.gnu.org/software/coreutils/>\0".as_ptr() as *const libc::c_char)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/version_etc.rs:314:17
    |
314 |         gettext(b"General help using GNU software: <https://www.gnu.org/gethelp/>\0".as_ptr() as *const libc::c_char)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:22:17
   |
22 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:22:17
   |
22 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:23:25
   |
23 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:23:25
   |
23 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:33:17
   |
33 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:33:17
   |
33 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:34:25
   |
34 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:34:25
   |
34 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:44:17
   |
44 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:44:17
   |
44 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:45:25
   |
45 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xalloc_die.rs:45:25
   |
45 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:39:31
   |
39 |     s_err = xstrtoimax(n_str, 0 as *mut *mut libc::c_char, base, &mut tnum, suffixes);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `if` expression with an `else if`, but without a final `else`
  --> src/xdectoimax.rs:56:12
   |
56 |       } else if s_err as libc::c_uint
   |  ____________^
57 | |         == LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW as libc::c_int as libc::c_uint
58 | |     {
59 | |         *__errno_location() = 0 as libc::c_int;
60 | |     }
   | |_____^
   |
   = help: add an `else` block here
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:40:8
   |
40 |     if s_err as libc::c_uint == LONGINT_OK as libc::c_int as libc::c_uint {
   |        ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:40:33
   |
40 |     if s_err as libc::c_uint == LONGINT_OK as libc::c_int as libc::c_uint {
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:40:33
   |
40 |     if s_err as libc::c_uint == LONGINT_OK as libc::c_int as libc::c_uint {
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:43:23
   |
43 |             if tnum > (2147483647 as libc::c_int / 2 as libc::c_int) as libc::c_long {
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:43:24
   |
43 |             if tnum > (2147483647 as libc::c_int / 2 as libc::c_int) as libc::c_long {
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
  --> src/xdectoimax.rs:43:24
   |
43 |             if tnum > (2147483647 as libc::c_int / 2 as libc::c_int) as libc::c_long {
   |                        ^^^^^^^^^^ help: consider: `2_147_483_647`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/xdectoimax.rs:43:24
   |
43 |             if tnum > (2147483647 as libc::c_int / 2 as libc::c_int) as libc::c_long {
   |                        ^^^^^^^^^^ help: consider: `0x7FFF_FFFF`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:43:52
   |
43 |             if tnum > (2147483647 as libc::c_int / 2 as libc::c_int) as libc::c_long {
   |                                                    ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:44:39
   |
44 |                 *__errno_location() = 75 as libc::c_int;
   |                                       ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:46:19
   |
46 |                   < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |  ___________________^
47 | |                     as libc::c_long
   | |___________________________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:46:23
   |
46 |                 < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
  --> src/xdectoimax.rs:46:23
   |
46 |                 < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |                       ^^^^^^^^^^ help: consider: `2_147_483_647`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/xdectoimax.rs:46:23
   |
46 |                 < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |                       ^^^^^^^^^^ help: consider: `0x7FFF_FFFF`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:46:52
   |
46 |                 < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |                                                    ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:46:72
   |
46 |                 < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |                                                                        ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:49:39
   |
49 |                 *__errno_location() = 75 as libc::c_int;
   |                                       ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:51:39
   |
51 |                 *__errno_location() = 34 as libc::c_int;
   |                                       ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:54:15
   |
54 |     } else if s_err as libc::c_uint == LONGINT_OVERFLOW as libc::c_int as libc::c_uint {
   |               ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:54:40
   |
54 |     } else if s_err as libc::c_uint == LONGINT_OVERFLOW as libc::c_int as libc::c_uint {
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:54:40
   |
54 |     } else if s_err as libc::c_uint == LONGINT_OVERFLOW as libc::c_int as libc::c_uint {
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:55:31
   |
55 |         *__errno_location() = 75 as libc::c_int;
   |                               ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:56:15
   |
56 |     } else if s_err as libc::c_uint
   |               ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:57:12
   |
57 |         == LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW as libc::c_int as libc::c_uint
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:57:12
   |
57 |         == LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW as libc::c_int as libc::c_uint
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:59:31
   |
59 |         *__errno_location() = 0 as libc::c_int;
   |                               ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:61:8
   |
61 |     if s_err as libc::c_uint != LONGINT_OK as libc::c_int as libc::c_uint {
   |        ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:61:33
   |
61 |     if s_err as libc::c_uint != LONGINT_OK as libc::c_int as libc::c_uint {
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:61:33
   |
61 |     if s_err as libc::c_uint != LONGINT_OK as libc::c_int as libc::c_uint {
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:64:54
   |
64 |                 if err_exit != 0 { err_exit } else { 1 as libc::c_int },
   |                                                      ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:65:43
   |
65 |                 if *__errno_location() == 22 as libc::c_int {
   |                                           ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:66:21
   |
66 |                     0 as libc::c_int
   |                     ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:70:17
   |
70 |                 b"%s: %s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:70:17
   |
70 |                 b"%s: %s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:74:54
   |
74 |             if (if err_exit != 0 { err_exit } else { 1 as libc::c_int })
   |                                                      ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:75:20
   |
75 |                 != 0 as libc::c_int
   |                    ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:84:21
   |
84 |                     1 as libc::c_int
   |                     ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:88:47
   |
88 |                     if *__errno_location() == 22 as libc::c_int {
   |                                               ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:89:25
   |
89 |                         0 as libc::c_int
   |                         ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:93:21
   |
93 |                     b"%s: %s\0" as *const u8 as *const libc::c_char,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:93:21
   |
93 |                     b"%s: %s\0" as *const u8 as *const libc::c_char,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xdectoimax.rs:97:35
   |
97 |                 if __errstatus != 0 as libc::c_int {
   |                                   ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xdectoimax.rs:106:21
    |
106 |                     1 as libc::c_int
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xdectoimax.rs:110:47
    |
110 |                     if *__errno_location() == 22 as libc::c_int {
    |                                               ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xdectoimax.rs:111:25
    |
111 |                         0 as libc::c_int
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xdectoimax.rs:115:21
    |
115 |                     b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xdectoimax.rs:115:21
    |
115 |                     b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xdectoimax.rs:119:35
    |
119 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xdectoimax.rs:138:30
    |
138 |     return xnumtoimax(n_str, 10 as libc::c_int, min, max, suffixes, err, err_exit);
    |                              ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: redundant else block
  --> src/xmalloc.rs:57:12
   |
57 |       } else {
   |  ____________^
58 | |         return _gl_alloc_nomem()
59 | |     };
   | |_____^
   |
   = help: remove the `else` block and move the contents out
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:54:8
   |
54 |     if s as libc::c_ulong <= 18446744073709551615 as libc::c_ulong {
   |        ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:54:30
   |
54 |     if s as libc::c_ulong <= 18446744073709551615 as libc::c_ulong {
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
  --> src/xmalloc.rs:54:30
   |
54 |     if s as libc::c_ulong <= 18446744073709551615 as libc::c_ulong {
   |                              ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/xmalloc.rs:54:30
   |
54 |     if s as libc::c_ulong <= 18446744073709551615 as libc::c_ulong {
   |                              ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:55:24
   |
55 |         p = realloc(p, (s | (s == 0) as libc::c_int as libc::c_long) as libc::c_ulong);
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:55:29
   |
55 |         p = realloc(p, (s | (s == 0) as libc::c_int as libc::c_long) as libc::c_ulong);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:55:29
   |
55 |         p = realloc(p, (s | (s == 0) as libc::c_int as libc::c_long) as libc::c_ulong);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:63:9
   |
63 |     if (18446744073709551615 as libc::c_ulong) < n as libc::c_ulong {
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
  --> src/xmalloc.rs:63:9
   |
63 |     if (18446744073709551615 as libc::c_ulong) < n as libc::c_ulong {
   |         ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/xmalloc.rs:63:9
   |
63 |     if (18446744073709551615 as libc::c_ulong) < n as libc::c_ulong {
   |         ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:63:50
   |
63 |     if (18446744073709551615 as libc::c_ulong) < n as libc::c_ulong {
   |                                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:64:17
   |
64 |         if s != 0 as libc::c_int as libc::c_long {
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:64:17
   |
64 |         if s != 0 as libc::c_int as libc::c_long {
   |                 ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:67:13
   |
67 |         n = 0 as libc::c_int as idx_t;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:67:13
   |
67 |         n = 0 as libc::c_int as idx_t;
   |             ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:69:9
   |
69 |     if (18446744073709551615 as libc::c_ulong) < s as libc::c_ulong {
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
  --> src/xmalloc.rs:69:9
   |
69 |     if (18446744073709551615 as libc::c_ulong) < s as libc::c_ulong {
   |         ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
  --> src/xmalloc.rs:69:9
   |
69 |     if (18446744073709551615 as libc::c_ulong) < s as libc::c_ulong {
   |         ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:69:50
   |
69 |     if (18446744073709551615 as libc::c_ulong) < s as libc::c_ulong {
   |                                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:70:17
   |
70 |         if n != 0 as libc::c_int as libc::c_long {
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:70:17
   |
70 |         if n != 0 as libc::c_int as libc::c_long {
   |                 ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:73:13
   |
73 |         s = 0 as libc::c_int as idx_t;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:73:13
   |
73 |         s = 0 as libc::c_int as idx_t;
   |             ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:75:19
   |
75 |     return calloc(n as libc::c_ulong, s as libc::c_ulong);
   |                   ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:75:39
   |
75 |     return calloc(n as libc::c_ulong, s as libc::c_ulong);
   |                                       ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: redundant else block
  --> src/xmalloc.rs:88:12
   |
88 |       } else {
   |  ____________^
89 | |         return std::ptr::null_mut(); // Handle out of memory or invalid allocation
90 | |     }
   | |_____^
   |
   = help: remove the `else` block and move the contents out
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:96:27
   |
96 |     *__errno_location() = 12 as libc::c_int;
   |                           ^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xmalloc.rs:97:12
   |
97 |     return 0 as *mut libc::c_void;
   |            ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:107:13
    |
107 |             ptr as *mut libc::c_void
    |             ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:132:12
    |
132 |       return (if ::core::mem::size_of::<libc::c_char>() as libc::c_ulong
    |  ____________^
133 | |         == 1 as libc::c_int as libc::c_ulong
134 | |     {
135 | |         xmalloc(n)
136 | |     } else {
137 | |         xnmalloc(n, ::core::mem::size_of::<libc::c_char>() as libc::c_ulong)
138 | |     }) as *mut libc::c_char;
    | |___________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:132:16
    |
132 |     return (if ::core::mem::size_of::<libc::c_char>() as libc::c_ulong
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:133:12
    |
133 |         == 1 as libc::c_int as libc::c_ulong
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:133:12
    |
133 |         == 1 as libc::c_int as libc::c_ulong
    |            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:137:21
    |
137 |         xnmalloc(n, ::core::mem::size_of::<libc::c_char>() as libc::c_ulong)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:149:61
    |
149 |         let slice = unsafe { std::slice::from_raw_parts_mut(p as *mut u8, s) };
    |                                                             ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:157:5
    |
157 |     ptr as *mut libc::c_void
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:192:26
    |
192 |     return xreallocarray(0 as *mut libc::c_void, n, s);
    |                          ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:197:24
    |
197 |     Vec::with_capacity(size as usize)
    |                        ^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:221:18
    |
221 |             n = (DEFAULT_MXFAST as libc::c_int as libc::c_ulong).wrapping_div(s);
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:221:18
    |
221 |             n = (DEFAULT_MXFAST as libc::c_int as libc::c_ulong).wrapping_div(s);
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:222:17
    |
222 |               n = (n as libc::c_ulong)
    |  _________________^
223 | |                 .wrapping_add((n == 0) as libc::c_int as libc::c_ulong) as size_t
224 | |                 as size_t;
    | |_________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:222:17
    |
222 |               n = (n as libc::c_ulong)
    |  _________________^
223 | |                 .wrapping_add((n == 0) as libc::c_int as libc::c_ulong) as size_t
    | |_________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:222:18
    |
222 |             n = (n as libc::c_ulong)
    |                  ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:223:31
    |
223 |                 .wrapping_add((n == 0) as libc::c_int as libc::c_ulong) as size_t
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:223:31
    |
223 |                 .wrapping_add((n == 0) as libc::c_int as libc::c_ulong) as size_t
    |                               ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:229:23
    |
229 |                 (n >> 1 as libc::c_int).wrapping_add(1 as libc::c_int as libc::c_ulong),
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:229:54
    |
229 |                 (n >> 1 as libc::c_int).wrapping_add(1 as libc::c_int as libc::c_ulong),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:229:54
    |
229 |                 (n >> 1 as libc::c_int).wrapping_add(1 as libc::c_int as libc::c_ulong),
    |                                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:231:11
    |
231 |         *(&mut n as *mut size_t) = fresh0;
    |           ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: binding's name is too similar to existing binding
   --> src/xmalloc.rs:604:18
    |
604 |             let (fresh12, fresh13) = n0.overflowing_add(n_incr_min);
    |                  ^^^^^^^
    |
note: existing binding defined here
   --> src/xmalloc.rs:250:10
    |
250 |     let (fresh2, fresh3) = n0.overflowing_add(n0 >> 1 as libc::c_int);
    |          ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: binding's name is too similar to existing binding
   --> src/xmalloc.rs:604:27
    |
604 |             let (fresh12, fresh13) = n0.overflowing_add(n_incr_min);
    |                           ^^^^^^^
    |
note: existing binding defined here
   --> src/xmalloc.rs:250:18
    |
250 |     let (fresh2, fresh3) = n0.overflowing_add(n0 >> 1 as libc::c_int);
    |                  ^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:250:53
    |
250 |     let (fresh2, fresh3) = n0.overflowing_add(n0 >> 1 as libc::c_int);
    |                                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:251:7
    |
251 |     *(&mut n as *mut idx_t) = fresh2;
    |       ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:253:13
    |
253 |         n = 9223372036854775807 as libc::c_long;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/xmalloc.rs:253:13
    |
253 |         n = 9223372036854775807 as libc::c_long;
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `9_223_372_036_854_775_807`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/xmalloc.rs:253:13
    |
253 |         n = 9223372036854775807 as libc::c_long;
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:255:8
    |
255 |     if 0 as libc::c_int as libc::c_long <= n_max && n_max < n {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:255:8
    |
255 |     if 0 as libc::c_int as libc::c_long <= n_max && n_max < n {
    |        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:259:38
    |
259 |       let mut adjusted_nbytes: idx_t = (if if (0 as libc::c_int as idx_t)
    |  ______________________________________^
260 | |         < -(1 as libc::c_int) as idx_t
261 | |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
262 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
...   |
593 | |         }) as libc::c_ulong
594 | |     }) as idx_t;
    | |_______________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:259:46
    |
259 |     let mut adjusted_nbytes: idx_t = (if if (0 as libc::c_int as idx_t)
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:259:46
    |
259 |     let mut adjusted_nbytes: idx_t = (if if (0 as libc::c_int as idx_t)
    |                                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:260:11
    |
260 |         < -(1 as libc::c_int) as idx_t
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:260:13
    |
260 |         < -(1 as libc::c_int) as idx_t
    |             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:261:17
    |
261 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:261:41
    |
261 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:261:41
    |
261 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:262:15
    |
262 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:262:15
    |
262 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:262:51
    |
262 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:262:51
    |
262 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:263:17
    |
263 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:263:41
    |
263 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:263:41
    |
263 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:264:15
    |
264 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:264:15
    |
264 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:264:51
    |
264 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:264:51
    |
264 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xmalloc.rs:455:16
    |
455 |           } else {
    |  ________________^
456 | |             if s == 0 as libc::c_int as libc::c_long {
457 | |                 0 as libc::c_int
458 | |             } else {
...   |
569 | |             }
570 | |         }) != 0
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
455 ~         } else if s == 0 as libc::c_int as libc::c_long {
456 +             0 as libc::c_int
457 +         } else {
458 +             if n < 0 as libc::c_int as libc::c_long {
459 +                 if (if (if ((if 1 as libc::c_int != 0 {
460 +                     0 as libc::c_int as libc::c_long
461 +                 } else {
462 +                     (if 1 as libc::c_int != 0 {
463 +                         0 as libc::c_int as libc::c_long
464 +                     } else {
465 +                         n
466 +                     }) + 0 as libc::c_int as idx_t
467 +                 }) - 1 as libc::c_int as libc::c_long)
468 +                     < 0 as libc::c_int as libc::c_long
469 +                 {
470 +                     !(((((if 1 as libc::c_int != 0 {
471 +                         0 as libc::c_int as libc::c_long
472 +                     } else {
473 +                         (if 1 as libc::c_int != 0 {
474 +                             0 as libc::c_int as libc::c_long
475 +                         } else {
476 +                             n
477 +                         }) + 0 as libc::c_int as idx_t
478 +                     }) + 1 as libc::c_int as libc::c_long)
479 +                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
480 +                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
481 +                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
482 +                         - 1 as libc::c_int as libc::c_long)
483 +                         * 2 as libc::c_int as libc::c_long
484 +                         + 1 as libc::c_int as libc::c_long)
485 +                 } else {
486 +                     (if 1 as libc::c_int != 0 {
487 +                         0 as libc::c_int as libc::c_long
488 +                     } else {
489 +                         (if 1 as libc::c_int != 0 {
490 +                             0 as libc::c_int as libc::c_long
491 +                         } else {
492 +                             n
493 +                         }) + 0 as libc::c_int as idx_t
494 +                     }) + 0 as libc::c_int as libc::c_long
495 +                 }) < 0 as libc::c_int as libc::c_long
496 +                 {
497 +                     (((if 1 as libc::c_int != 0 {
498 +                         0 as libc::c_int as libc::c_long
499 +                     } else {
500 +                         n
501 +                     }) + 0 as libc::c_int as idx_t)
502 +                         < -(if ((if 1 as libc::c_int != 0 {
503 +                             0 as libc::c_int as libc::c_long
504 +                         } else {
505 +                             (if 1 as libc::c_int != 0 {
506 +                                 0 as libc::c_int as libc::c_long
507 +                             } else {
508 +                                 n
509 +                             }) + 0 as libc::c_int as idx_t
510 +                         }) - 1 as libc::c_int as libc::c_long)
511 +                             < 0 as libc::c_int as libc::c_long
512 +                         {
513 +                             ((((if 1 as libc::c_int != 0 {
514 +                                 0 as libc::c_int as libc::c_long
515 +                             } else {
516 +                                 (if 1 as libc::c_int != 0 {
517 +                                     0 as libc::c_int as libc::c_long
518 +                                 } else {
519 +                                     n
520 +                                 }) + 0 as libc::c_int as idx_t
521 +                             }) + 1 as libc::c_int as libc::c_long)
522 +                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
523 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
524 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
525 +                                 - 1 as libc::c_int as libc::c_long)
526 +                                 * 2 as libc::c_int as libc::c_long
527 +                                 + 1 as libc::c_int as libc::c_long
528 +                         } else {
529 +                             (if 1 as libc::c_int != 0 {
530 +                                 0 as libc::c_int as libc::c_long
531 +                             } else {
532 +                                 (if 1 as libc::c_int != 0 {
533 +                                     0 as libc::c_int as libc::c_long
534 +                                 } else {
535 +                                     n
536 +                                 }) + 0 as libc::c_int as idx_t
537 +                             }) - 1 as libc::c_int as libc::c_long
538 +                         })) as libc::c_int
539 +                 } else {
540 +                     ((0 as libc::c_int as libc::c_long)
541 +                         < (if 1 as libc::c_int != 0 {
542 +                             0 as libc::c_int as libc::c_long
543 +                         } else {
544 +                             n
545 +                         }) + 0 as libc::c_int as idx_t) as libc::c_int
546 +                 }) != 0 && n == -(1 as libc::c_int) as libc::c_long
547 +                 {
548 +                     if ((if 1 as libc::c_int != 0 {
549 +                         0 as libc::c_int as libc::c_long
550 +                     } else {
551 +                         s
552 +                     }) - 1 as libc::c_int as libc::c_long)
553 +                         < 0 as libc::c_int as libc::c_long
554 +                     {
555 +                         ((0 as libc::c_int as libc::c_long)
556 +                             < s + 0 as libc::c_int as idx_t) as libc::c_int
557 +                     } else {
558 +                         ((-(1 as libc::c_int) as libc::c_long
559 +                             - 0 as libc::c_int as idx_t)
560 +                             < s - 1 as libc::c_int as libc::c_long) as libc::c_int
561 +                     }
562 +                 } else {
563 +                     (0 as libc::c_int as idx_t / n < s) as libc::c_int
564 +                 }
565 +             } else {
566 +                 (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
567 +             }
568 ~         }) != 0
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:265:20
    |
265 |         && (if s < 0 as libc::c_int as libc::c_long {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:265:20
    |
265 |         && (if s < 0 as libc::c_int as libc::c_long {
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xmalloc.rs:347:20
    |
347 |               } else {
    |  ____________________^
348 | |                 if (if (if ((if 1 as libc::c_int != 0 {
349 | |                     0 as libc::c_int as libc::c_long
350 | |                 } else {
...   |
453 | |                 }
454 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
347 ~             } else if (if (if ((if 1 as libc::c_int != 0 {
348 +                 0 as libc::c_int as libc::c_long
349 +             } else {
350 +                 (if 1 as libc::c_int != 0 {
351 +                     0 as libc::c_int as libc::c_long
352 +                 } else {
353 +                     s
354 +                 }) + 0 as libc::c_int as idx_t
355 +             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
356 +             {
357 +                 !(((((if 1 as libc::c_int != 0 {
358 +                     0 as libc::c_int as libc::c_long
359 +                 } else {
360 +                     (if 1 as libc::c_int != 0 {
361 +                         0 as libc::c_int as libc::c_long
362 +                     } else {
363 +                         s
364 +                     }) + 0 as libc::c_int as idx_t
365 +                 }) + 1 as libc::c_int as libc::c_long)
366 +                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
367 +                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
368 +                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
369 +                     - 1 as libc::c_int as libc::c_long)
370 +                     * 2 as libc::c_int as libc::c_long
371 +                     + 1 as libc::c_int as libc::c_long)
372 +             } else {
373 +                 (if 1 as libc::c_int != 0 {
374 +                     0 as libc::c_int as libc::c_long
375 +                 } else {
376 +                     (if 1 as libc::c_int != 0 {
377 +                         0 as libc::c_int as libc::c_long
378 +                     } else {
379 +                         s
380 +                     }) + 0 as libc::c_int as idx_t
381 +                 }) + 0 as libc::c_int as libc::c_long
382 +             }) < 0 as libc::c_int as libc::c_long
383 +             {
384 +                 (((if 1 as libc::c_int != 0 {
385 +                     0 as libc::c_int as libc::c_long
386 +                 } else {
387 +                     s
388 +                 }) + 0 as libc::c_int as idx_t)
389 +                     < -(if ((if 1 as libc::c_int != 0 {
390 +                         0 as libc::c_int as libc::c_long
391 +                     } else {
392 +                         (if 1 as libc::c_int != 0 {
393 +                             0 as libc::c_int as libc::c_long
394 +                         } else {
395 +                             s
396 +                         }) + 0 as libc::c_int as idx_t
397 +                     }) - 1 as libc::c_int as libc::c_long)
398 +                         < 0 as libc::c_int as libc::c_long
399 +                     {
400 +                         ((((if 1 as libc::c_int != 0 {
401 +                             0 as libc::c_int as libc::c_long
402 +                         } else {
403 +                             (if 1 as libc::c_int != 0 {
404 +                                 0 as libc::c_int as libc::c_long
405 +                             } else {
406 +                                 s
407 +                             }) + 0 as libc::c_int as idx_t
408 +                         }) + 1 as libc::c_int as libc::c_long)
409 +                             << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
410 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
411 +                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
412 +                             - 1 as libc::c_int as libc::c_long)
413 +                             * 2 as libc::c_int as libc::c_long
414 +                             + 1 as libc::c_int as libc::c_long
415 +                     } else {
416 +                         (if 1 as libc::c_int != 0 {
417 +                             0 as libc::c_int as libc::c_long
418 +                         } else {
419 +                             (if 1 as libc::c_int != 0 {
420 +                                 0 as libc::c_int as libc::c_long
421 +                             } else {
422 +                                 s
423 +                             }) + 0 as libc::c_int as idx_t
424 +                         }) - 1 as libc::c_int as libc::c_long
425 +                     })) as libc::c_int
426 +             } else {
427 +                 ((0 as libc::c_int as libc::c_long)
428 +                     < (if 1 as libc::c_int != 0 {
429 +                         0 as libc::c_int as libc::c_long
430 +                     } else {
431 +                         s
432 +                     }) + 0 as libc::c_int as idx_t) as libc::c_int
433 +             }) != 0 && s == -(1 as libc::c_int) as libc::c_long
434 +             {
435 +                 if ((if 1 as libc::c_int != 0 {
436 +                     0 as libc::c_int as libc::c_long
437 +                 } else {
438 +                     n
439 +                 }) - 1 as libc::c_int as libc::c_long)
440 +                     < 0 as libc::c_int as libc::c_long
441 +                 {
442 +                     ((0 as libc::c_int as libc::c_long)
443 +                         < n + 0 as libc::c_int as idx_t) as libc::c_int
444 +                 } else {
445 +                     ((0 as libc::c_int as libc::c_long) < n
446 +                         && (-(1 as libc::c_int) as libc::c_long
447 +                             - 0 as libc::c_int as idx_t)
448 +                             < n - 1 as libc::c_int as libc::c_long) as libc::c_int
449 +                 }
450 +             } else {
451 +                 (0 as libc::c_int as idx_t / s < n) as libc::c_int
452 +             }
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:266:20
    |
266 |             if n < 0 as libc::c_int as libc::c_long {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:266:20
    |
266 |             if n < 0 as libc::c_int as libc::c_long {
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:267:25
    |
267 |                 if ((if 1 as libc::c_int != 0 {
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:268:21
    |
268 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:268:21
    |
268 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:270:25
    |
270 |                     (if 1 as libc::c_int != 0 {
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:271:25
    |
271 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:271:25
    |
271 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:273:25
    |
273 |                         -(1 as libc::c_int) as idx_t
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:273:27
    |
273 |                         -(1 as libc::c_int) as idx_t
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:275:22
    |
275 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:275:22
    |
275 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:275:58
    |
275 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:275:58
    |
275 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:277:21
    |
277 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:277:26
    |
277 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:277:28
    |
277 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:279:21
    |
279 | /                     ((if (if (if ((if 1 as libc::c_int != 0 {
280 | |                         0 as libc::c_int as libc::c_long
281 | |                     } else {
282 | |                         s
...   |
344 | |                         -(1 as libc::c_int) as idx_t / -s
345 | |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    | |_________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:279:39
    |
279 |                     ((if (if (if ((if 1 as libc::c_int != 0 {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:280:25
    |
280 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:280:25
    |
280 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:283:26
    |
283 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:283:26
    |
283 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:284:27
    |
284 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:284:27
    |
284 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:286:34
    |
286 |                         !(((((if 1 as libc::c_int != 0 {
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:287:29
    |
287 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:287:29
    |
287 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:290:30
    |
290 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:290:30
    |
290 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:291:33
    |
291 | ...                   << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:292:47
    |
292 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:292:47
    |
292 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:293:47
    |
293 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:293:47
    |
293 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:294:31
    |
294 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:294:31
    |
294 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:295:31
    |
295 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:295:31
    |
295 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:296:31
    |
296 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:296:31
    |
296 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:298:29
    |
298 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:299:29
    |
299 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:299:29
    |
299 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:302:30
    |
302 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:302:30
    |
302 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:303:26
    |
303 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:303:26
    |
303 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:305:25
    |
305 | /                         (s
306 | |                             < -(if ((if 1 as libc::c_int != 0 {
307 | |                                 0 as libc::c_int as libc::c_long
308 | |                             } else {
...   |
329 | |                                 }) - 1 as libc::c_int as libc::c_long
330 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:306:41
    |
306 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:307:33
    |
307 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:307:33
    |
307 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:310:34
    |
310 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:310:34
    |
310 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:311:35
    |
311 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:311:35
    |
311 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:313:40
    |
313 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:314:37
    |
314 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:314:37
    |
314 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:317:38
    |
317 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:317:38
    |
317 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:318:41
    |
318 | ...                   << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:319:55
    |
319 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:319:55
    |
319 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:320:55
    |
320 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:320:55
    |
320 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:321:39
    |
321 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:321:39
    |
321 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:322:39
    |
322 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:322:39
    |
322 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:323:39
    |
323 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:323:39
    |
323 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:325:37
    |
325 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:326:37
    |
326 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:326:37
    |
326 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:329:38
    |
329 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:329:38
    |
329 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:332:25
    |
332 |                         ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:332:27
    |
332 |                         ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:332:27
    |
332 |                         ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: operator precedence can trip the unwary
   --> src/xmalloc.rs:335:25
    |
335 | /                         (if 1 as libc::c_int != 0 {
336 | |                             0 as libc::c_int as libc::c_long
337 | |                         } else {
338 | |                             s
...   |
341 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
342 | |                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |________________________________________________________________________________^
    |
    = note: `-W clippy::precedence` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
335 ~                         ((if 1 as libc::c_int != 0 {
336 +                             0 as libc::c_int as libc::c_long
337 +                         } else {
338 +                             s
339 +                         }) + -(1 as libc::c_int) as idx_t) >> (::core::mem::size_of::<idx_t>() as libc::c_ulong)
340 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
341 +                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:335:29
    |
335 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:336:29
    |
336 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:336:29
    |
336 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:339:30
    |
339 |                         }) + -(1 as libc::c_int) as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:339:32
    |
339 |                         }) + -(1 as libc::c_int) as idx_t
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:340:33
    |
340 | ...                   >> (::core::mem::size_of::<idx_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:341:47
    |
341 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:341:47
    |
341 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:342:47
    |
342 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:342:47
    |
342 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:344:25
    |
344 |                         -(1 as libc::c_int) as idx_t / -s
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:344:27
    |
344 |                         -(1 as libc::c_int) as idx_t / -s
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:345:27
    |
345 |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:345:29
    |
345 |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:348:33
    |
348 |                 if (if (if ((if 1 as libc::c_int != 0 {
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:349:21
    |
349 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:349:21
    |
349 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:351:25
    |
351 |                     (if 1 as libc::c_int != 0 {
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:352:25
    |
352 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:352:25
    |
352 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:355:26
    |
355 |                     }) + 0 as libc::c_int as idx_t
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:355:26
    |
355 |                     }) + 0 as libc::c_int as idx_t
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:356:22
    |
356 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:356:22
    |
356 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:356:58
    |
356 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:356:58
    |
356 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:358:30
    |
358 |                     !(((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:359:25
    |
359 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:359:25
    |
359 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:361:29
    |
361 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:362:29
    |
362 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:362:29
    |
362 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:365:30
    |
365 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:365:30
    |
365 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:366:26
    |
366 |                     }) + 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:366:26
    |
366 |                     }) + 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:367:29
    |
367 |                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:368:43
    |
368 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:368:43
    |
368 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:369:43
    |
369 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:369:43
    |
369 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:370:27
    |
370 |                         - 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:370:27
    |
370 |                         - 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:371:27
    |
371 |                         * 2 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:371:27
    |
371 |                         * 2 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:372:27
    |
372 |                         + 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:372:27
    |
372 |                         + 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:374:25
    |
374 |                     (if 1 as libc::c_int != 0 {
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:375:25
    |
375 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:375:25
    |
375 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:377:29
    |
377 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:378:29
    |
378 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:378:29
    |
378 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:381:30
    |
381 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:381:30
    |
381 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:382:26
    |
382 |                     }) + 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:382:26
    |
382 |                     }) + 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:383:22
    |
383 |                 }) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:383:22
    |
383 |                 }) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:385:21
    |
385 | /                     (((if 1 as libc::c_int != 0 {
386 | |                         0 as libc::c_int as libc::c_long
387 | |                     } else {
388 | |                         s
...   |
425 | |                             }) - 1 as libc::c_int as libc::c_long
426 | |                         })) as libc::c_int
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:385:27
    |
385 |                     (((if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:386:25
    |
386 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:386:25
    |
386 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:389:26
    |
389 |                     }) + 0 as libc::c_int as idx_t)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:389:26
    |
389 |                     }) + 0 as libc::c_int as idx_t)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:390:37
    |
390 |                         < -(if ((if 1 as libc::c_int != 0 {
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:391:29
    |
391 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:391:29
    |
391 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:393:33
    |
393 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:394:33
    |
394 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:394:33
    |
394 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:397:34
    |
397 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:397:34
    |
397 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:398:30
    |
398 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:398:30
    |
398 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:399:31
    |
399 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:399:31
    |
399 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:401:36
    |
401 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:402:33
    |
402 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:402:33
    |
402 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:404:37
    |
404 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:405:37
    |
405 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:405:37
    |
405 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:408:38
    |
408 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:408:38
    |
408 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:409:34
    |
409 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:409:34
    |
409 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:410:37
    |
410 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:411:51
    |
411 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:411:51
    |
411 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:412:51
    |
412 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:412:51
    |
412 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:413:35
    |
413 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:413:35
    |
413 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:414:35
    |
414 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:414:35
    |
414 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:415:35
    |
415 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:415:35
    |
415 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:417:33
    |
417 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:418:33
    |
418 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:418:33
    |
418 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:420:37
    |
420 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:421:37
    |
421 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:421:37
    |
421 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:424:38
    |
424 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:424:38
    |
424 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:425:34
    |
425 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:425:34
    |
425 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:428:21
    |
428 | /                     ((0 as libc::c_int as libc::c_long)
429 | |                         < (if 1 as libc::c_int != 0 {
430 | |                             0 as libc::c_int as libc::c_long
431 | |                         } else {
432 | |                             s
433 | |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |______________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:428:23
    |
428 |                     ((0 as libc::c_int as libc::c_long)
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:428:23
    |
428 |                     ((0 as libc::c_int as libc::c_long)
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:429:31
    |
429 |                         < (if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:430:29
    |
430 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:430:29
    |
430 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:433:30
    |
433 |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:433:30
    |
433 |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:434:33
    |
434 |                 }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:434:35
    |
434 |                 }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:436:29
    |
436 |                     if ((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:437:25
    |
437 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:437:25
    |
437 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:440:26
    |
440 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:440:26
    |
440 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:441:27
    |
441 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:441:27
    |
441 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:443:25
    |
443 | /                         ((0 as libc::c_int as libc::c_long)
444 | |                             < n + 0 as libc::c_int as idx_t) as libc::c_int
    | |___________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:443:27
    |
443 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:443:27
    |
443 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:444:35
    |
444 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:444:35
    |
444 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:446:25
    |
446 | /                         ((0 as libc::c_int as libc::c_long) < n
447 | |                             && (-(1 as libc::c_int) as libc::c_long
448 | |                                 - 0 as libc::c_int as idx_t)
449 | |                                 < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |______________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:446:27
    |
446 |                         ((0 as libc::c_int as libc::c_long) < n
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:446:27
    |
446 |                         ((0 as libc::c_int as libc::c_long) < n
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:447:33
    |
447 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:447:35
    |
447 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:448:35
    |
448 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:448:35
    |
448 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:449:39
    |
449 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:449:39
    |
449 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:452:21
    |
452 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:452:22
    |
452 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:452:22
    |
452 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xmalloc.rs:458:20
    |
458 |               } else {
    |  ____________________^
459 | |                 if n < 0 as libc::c_int as libc::c_long {
460 | |                     if (if (if ((if 1 as libc::c_int != 0 {
461 | |                         0 as libc::c_int as libc::c_long
...   |
568 | |                 }
569 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
458 ~             } else if n < 0 as libc::c_int as libc::c_long {
459 +                 if (if (if ((if 1 as libc::c_int != 0 {
460 +                     0 as libc::c_int as libc::c_long
461 +                 } else {
462 +                     (if 1 as libc::c_int != 0 {
463 +                         0 as libc::c_int as libc::c_long
464 +                     } else {
465 +                         n
466 +                     }) + 0 as libc::c_int as idx_t
467 +                 }) - 1 as libc::c_int as libc::c_long)
468 +                     < 0 as libc::c_int as libc::c_long
469 +                 {
470 +                     !(((((if 1 as libc::c_int != 0 {
471 +                         0 as libc::c_int as libc::c_long
472 +                     } else {
473 +                         (if 1 as libc::c_int != 0 {
474 +                             0 as libc::c_int as libc::c_long
475 +                         } else {
476 +                             n
477 +                         }) + 0 as libc::c_int as idx_t
478 +                     }) + 1 as libc::c_int as libc::c_long)
479 +                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
480 +                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
481 +                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
482 +                         - 1 as libc::c_int as libc::c_long)
483 +                         * 2 as libc::c_int as libc::c_long
484 +                         + 1 as libc::c_int as libc::c_long)
485 +                 } else {
486 +                     (if 1 as libc::c_int != 0 {
487 +                         0 as libc::c_int as libc::c_long
488 +                     } else {
489 +                         (if 1 as libc::c_int != 0 {
490 +                             0 as libc::c_int as libc::c_long
491 +                         } else {
492 +                             n
493 +                         }) + 0 as libc::c_int as idx_t
494 +                     }) + 0 as libc::c_int as libc::c_long
495 +                 }) < 0 as libc::c_int as libc::c_long
496 +                 {
497 +                     (((if 1 as libc::c_int != 0 {
498 +                         0 as libc::c_int as libc::c_long
499 +                     } else {
500 +                         n
501 +                     }) + 0 as libc::c_int as idx_t)
502 +                         < -(if ((if 1 as libc::c_int != 0 {
503 +                             0 as libc::c_int as libc::c_long
504 +                         } else {
505 +                             (if 1 as libc::c_int != 0 {
506 +                                 0 as libc::c_int as libc::c_long
507 +                             } else {
508 +                                 n
509 +                             }) + 0 as libc::c_int as idx_t
510 +                         }) - 1 as libc::c_int as libc::c_long)
511 +                             < 0 as libc::c_int as libc::c_long
512 +                         {
513 +                             ((((if 1 as libc::c_int != 0 {
514 +                                 0 as libc::c_int as libc::c_long
515 +                             } else {
516 +                                 (if 1 as libc::c_int != 0 {
517 +                                     0 as libc::c_int as libc::c_long
518 +                                 } else {
519 +                                     n
520 +                                 }) + 0 as libc::c_int as idx_t
521 +                             }) + 1 as libc::c_int as libc::c_long)
522 +                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
523 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
524 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
525 +                                 - 1 as libc::c_int as libc::c_long)
526 +                                 * 2 as libc::c_int as libc::c_long
527 +                                 + 1 as libc::c_int as libc::c_long
528 +                         } else {
529 +                             (if 1 as libc::c_int != 0 {
530 +                                 0 as libc::c_int as libc::c_long
531 +                             } else {
532 +                                 (if 1 as libc::c_int != 0 {
533 +                                     0 as libc::c_int as libc::c_long
534 +                                 } else {
535 +                                     n
536 +                                 }) + 0 as libc::c_int as idx_t
537 +                             }) - 1 as libc::c_int as libc::c_long
538 +                         })) as libc::c_int
539 +                 } else {
540 +                     ((0 as libc::c_int as libc::c_long)
541 +                         < (if 1 as libc::c_int != 0 {
542 +                             0 as libc::c_int as libc::c_long
543 +                         } else {
544 +                             n
545 +                         }) + 0 as libc::c_int as idx_t) as libc::c_int
546 +                 }) != 0 && n == -(1 as libc::c_int) as libc::c_long
547 +                 {
548 +                     if ((if 1 as libc::c_int != 0 {
549 +                         0 as libc::c_int as libc::c_long
550 +                     } else {
551 +                         s
552 +                     }) - 1 as libc::c_int as libc::c_long)
553 +                         < 0 as libc::c_int as libc::c_long
554 +                     {
555 +                         ((0 as libc::c_int as libc::c_long)
556 +                             < s + 0 as libc::c_int as idx_t) as libc::c_int
557 +                     } else {
558 +                         ((-(1 as libc::c_int) as libc::c_long
559 +                             - 0 as libc::c_int as idx_t)
560 +                             < s - 1 as libc::c_int as libc::c_long) as libc::c_int
561 +                     }
562 +                 } else {
563 +                     (0 as libc::c_int as idx_t / n < s) as libc::c_int
564 +                 }
565 +             } else {
566 +                 (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
567 +             }
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:456:21
    |
456 |             if s == 0 as libc::c_int as libc::c_long {
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:456:21
    |
456 |             if s == 0 as libc::c_int as libc::c_long {
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:457:17
    |
457 |                 0 as libc::c_int
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:459:24
    |
459 |                 if n < 0 as libc::c_int as libc::c_long {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:459:24
    |
459 |                 if n < 0 as libc::c_int as libc::c_long {
    |                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:460:37
    |
460 |                     if (if (if ((if 1 as libc::c_int != 0 {
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:461:25
    |
461 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:461:25
    |
461 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:463:29
    |
463 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:464:29
    |
464 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:464:29
    |
464 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:467:30
    |
467 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:467:30
    |
467 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:468:26
    |
468 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:468:26
    |
468 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:469:27
    |
469 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:469:27
    |
469 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:471:34
    |
471 |                         !(((((if 1 as libc::c_int != 0 {
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:472:29
    |
472 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:472:29
    |
472 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:474:33
    |
474 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:475:33
    |
475 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:475:33
    |
475 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:478:34
    |
478 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:478:34
    |
478 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:479:30
    |
479 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:479:30
    |
479 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:480:33
    |
480 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:481:47
    |
481 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:481:47
    |
481 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:482:47
    |
482 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:482:47
    |
482 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:483:31
    |
483 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:483:31
    |
483 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:484:31
    |
484 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:484:31
    |
484 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:485:31
    |
485 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:485:31
    |
485 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:487:29
    |
487 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:488:29
    |
488 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:488:29
    |
488 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:490:33
    |
490 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:491:33
    |
491 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:491:33
    |
491 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:494:34
    |
494 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:494:34
    |
494 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:495:30
    |
495 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:495:30
    |
495 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:496:26
    |
496 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:496:26
    |
496 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:498:25
    |
498 | /                         (((if 1 as libc::c_int != 0 {
499 | |                             0 as libc::c_int as libc::c_long
500 | |                         } else {
501 | |                             n
...   |
538 | |                                 }) - 1 as libc::c_int as libc::c_long
539 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:498:31
    |
498 |                         (((if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:499:29
    |
499 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:499:29
    |
499 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:502:30
    |
502 |                         }) + 0 as libc::c_int as idx_t)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:502:30
    |
502 |                         }) + 0 as libc::c_int as idx_t)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:503:41
    |
503 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:504:33
    |
504 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:504:33
    |
504 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:506:37
    |
506 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:507:37
    |
507 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:507:37
    |
507 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:510:38
    |
510 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:510:38
    |
510 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:511:34
    |
511 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:511:34
    |
511 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:512:35
    |
512 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:512:35
    |
512 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:514:40
    |
514 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:515:37
    |
515 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:515:37
    |
515 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:517:41
    |
517 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:518:41
    |
518 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:518:41
    |
518 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:521:42
    |
521 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:521:42
    |
521 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:522:38
    |
522 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:522:38
    |
522 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:523:41
    |
523 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:524:55
    |
524 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:524:55
    |
524 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:525:55
    |
525 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:525:55
    |
525 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:526:39
    |
526 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:526:39
    |
526 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:527:39
    |
527 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:527:39
    |
527 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:528:39
    |
528 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:528:39
    |
528 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:530:37
    |
530 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:531:37
    |
531 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:531:37
    |
531 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:533:41
    |
533 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:534:41
    |
534 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:534:41
    |
534 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:537:42
    |
537 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:537:42
    |
537 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:538:38
    |
538 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:538:38
    |
538 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:541:25
    |
541 | /                         ((0 as libc::c_int as libc::c_long)
542 | |                             < (if 1 as libc::c_int != 0 {
543 | |                                 0 as libc::c_int as libc::c_long
544 | |                             } else {
545 | |                                 n
546 | |                             }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |__________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:541:27
    |
541 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:541:27
    |
541 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:542:35
    |
542 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:543:33
    |
543 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:543:33
    |
543 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:546:34
    |
546 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:546:34
    |
546 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:547:37
    |
547 |                     }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:547:39
    |
547 |                     }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:549:33
    |
549 |                         if ((if 1 as libc::c_int != 0 {
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:550:29
    |
550 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:550:29
    |
550 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:553:30
    |
553 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:553:30
    |
553 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:554:31
    |
554 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:554:31
    |
554 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:556:29
    |
556 | / ...                   ((0 as libc::c_int as libc::c_long)
557 | | ...                       < s + 0 as libc::c_int as idx_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:556:31
    |
556 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:556:31
    |
556 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:557:39
    |
557 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:557:39
    |
557 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:559:29
    |
559 | / ...                   ((-(1 as libc::c_int) as libc::c_long
560 | | ...                       - 0 as libc::c_int as idx_t)
561 | | ...                       < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:559:31
    |
559 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:559:33
    |
559 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:560:35
    |
560 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:560:35
    |
560 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:561:39
    |
561 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:561:39
    |
561 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:564:25
    |
564 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:564:26
    |
564 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:564:26
    |
564 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:567:21
    |
567 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:567:22
    |
567 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:567:24
    |
567 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:573:11
    |
573 |         *(&mut nbytes as *mut idx_t) = fresh8;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:574:9
    |
574 |         1 as libc::c_int
    |         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:577:11
    |
577 |         *(&mut nbytes as *mut idx_t) = fresh10;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:578:9
    |
578 |         fresh11 as libc::c_int
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:581:13
    |
581 |         if (9223372036854775807 as libc::c_long as libc::c_ulong)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:581:13
    |
581 |         if (9223372036854775807 as libc::c_long as libc::c_ulong)
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/xmalloc.rs:581:13
    |
581 |         if (9223372036854775807 as libc::c_long as libc::c_ulong)
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `9_223_372_036_854_775_807`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/xmalloc.rs:581:13
    |
581 |         if (9223372036854775807 as libc::c_long as libc::c_ulong)
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:582:15
    |
582 |             < 18446744073709551615 as libc::c_ulong
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/xmalloc.rs:582:15
    |
582 |             < 18446744073709551615 as libc::c_ulong
    |               ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/xmalloc.rs:582:15
    |
582 |             < 18446744073709551615 as libc::c_ulong
    |               ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:584:13
    |
584 |             9223372036854775807 as libc::c_long as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:584:13
    |
584 |             9223372036854775807 as libc::c_long as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/xmalloc.rs:584:13
    |
584 |             9223372036854775807 as libc::c_long as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `9_223_372_036_854_775_807`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/xmalloc.rs:584:13
    |
584 |             9223372036854775807 as libc::c_long as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^ help: consider: `0x7FFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:586:13
    |
586 |             18446744073709551615 as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/xmalloc.rs:586:13
    |
586 |             18446744073709551615 as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^^ help: consider: `18_446_744_073_709_551_615`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: integer literal has a better hexadecimal representation
   --> src/xmalloc.rs:586:13
    |
586 |             18446744073709551615 as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^^ help: consider: `0xFFFF_FFFF_FFFF_FFFF`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:589:9
    |
589 | /         (if nbytes < DEFAULT_MXFAST_0 as libc::c_int as libc::c_long {
590 | |             DEFAULT_MXFAST_0 as libc::c_int
591 | |         } else {
592 | |             0 as libc::c_int
593 | |         }) as libc::c_ulong
    | |___________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:589:22
    |
589 |         (if nbytes < DEFAULT_MXFAST_0 as libc::c_int as libc::c_long {
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:589:22
    |
589 |         (if nbytes < DEFAULT_MXFAST_0 as libc::c_int as libc::c_long {
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:590:13
    |
590 |             DEFAULT_MXFAST_0 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:592:13
    |
592 |             0 as libc::c_int
    |             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:600:15
    |
600 |         *pn = 0 as libc::c_int as idx_t;
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:600:15
    |
600 |         *pn = 0 as libc::c_int as idx_t;
    |               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:605:15
    |
605 |             *(&mut n as *mut idx_t) = fresh12;
    |               ^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:606:13
    |
606 |             fresh13 as libc::c_int != 0
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:607:20
    |
607 |                 || 0 as libc::c_int as libc::c_long <= n_max && n_max < n
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:607:20
    |
607 |                 || 0 as libc::c_int as libc::c_long <= n_max && n_max < n
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:608:25
    |
608 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:608:25
    |
608 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:608:54
    |
608 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:608:56
    |
608 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                                                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:609:29
    |
609 |                     && ((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:610:25
    |
610 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:610:25
    |
610 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:613:26
    |
613 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:613:26
    |
613 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:614:27
    |
614 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:614:27
    |
614 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:615:29
    |
615 |                     && ((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:616:25
    |
616 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:616:25
    |
616 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:619:26
    |
619 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:619:26
    |
619 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:620:27
    |
620 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:620:27
    |
620 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xmalloc.rs:814:28
    |
814 |                       } else {
    |  ____________________________^
815 | |                         if s == 0 as libc::c_int as libc::c_long {
816 | |                             0 as libc::c_int
817 | |                         } else {
...   |
928 | |                         }
929 | |                     }) != 0
    | |_____________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
814 ~                     } else if s == 0 as libc::c_int as libc::c_long {
815 +                         0 as libc::c_int
816 +                     } else {
817 +                         if n < 0 as libc::c_int as libc::c_long {
818 +                             if (if (if ((if 1 as libc::c_int != 0 {
819 +                                 0 as libc::c_int as libc::c_long
820 +                             } else {
821 +                                 (if 1 as libc::c_int != 0 {
822 +                                     0 as libc::c_int as libc::c_long
823 +                                 } else {
824 +                                     n
825 +                                 }) + 0 as libc::c_int as idx_t
826 +                             }) - 1 as libc::c_int as libc::c_long)
827 +                                 < 0 as libc::c_int as libc::c_long
828 +                             {
829 +                                 !(((((if 1 as libc::c_int != 0 {
830 +                                     0 as libc::c_int as libc::c_long
831 +                                 } else {
832 +                                     (if 1 as libc::c_int != 0 {
833 +                                         0 as libc::c_int as libc::c_long
834 +                                     } else {
835 +                                         n
836 +                                     }) + 0 as libc::c_int as idx_t
837 +                                 }) + 1 as libc::c_int as libc::c_long)
838 +                                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
839 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
840 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
841 +                                     - 1 as libc::c_int as libc::c_long)
842 +                                     * 2 as libc::c_int as libc::c_long
843 +                                     + 1 as libc::c_int as libc::c_long)
844 +                             } else {
845 +                                 (if 1 as libc::c_int != 0 {
846 +                                     0 as libc::c_int as libc::c_long
847 +                                 } else {
848 +                                     (if 1 as libc::c_int != 0 {
849 +                                         0 as libc::c_int as libc::c_long
850 +                                     } else {
851 +                                         n
852 +                                     }) + 0 as libc::c_int as idx_t
853 +                                 }) + 0 as libc::c_int as libc::c_long
854 +                             }) < 0 as libc::c_int as libc::c_long
855 +                             {
856 +                                 (((if 1 as libc::c_int != 0 {
857 +                                     0 as libc::c_int as libc::c_long
858 +                                 } else {
859 +                                     n
860 +                                 }) + 0 as libc::c_int as idx_t)
861 +                                     < -(if ((if 1 as libc::c_int != 0 {
862 +                                         0 as libc::c_int as libc::c_long
863 +                                     } else {
864 +                                         (if 1 as libc::c_int != 0 {
865 +                                             0 as libc::c_int as libc::c_long
866 +                                         } else {
867 +                                             n
868 +                                         }) + 0 as libc::c_int as idx_t
869 +                                     }) - 1 as libc::c_int as libc::c_long)
870 +                                         < 0 as libc::c_int as libc::c_long
871 +                                     {
872 +                                         ((((if 1 as libc::c_int != 0 {
873 +                                             0 as libc::c_int as libc::c_long
874 +                                         } else {
875 +                                             (if 1 as libc::c_int != 0 {
876 +                                                 0 as libc::c_int as libc::c_long
877 +                                             } else {
878 +                                                 n
879 +                                             }) + 0 as libc::c_int as idx_t
880 +                                         }) + 1 as libc::c_int as libc::c_long)
881 +                                             << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
882 +                                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
883 +                                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
884 +                                             - 1 as libc::c_int as libc::c_long)
885 +                                             * 2 as libc::c_int as libc::c_long
886 +                                             + 1 as libc::c_int as libc::c_long
887 +                                     } else {
888 +                                         (if 1 as libc::c_int != 0 {
889 +                                             0 as libc::c_int as libc::c_long
890 +                                         } else {
891 +                                             (if 1 as libc::c_int != 0 {
892 +                                                 0 as libc::c_int as libc::c_long
893 +                                             } else {
894 +                                                 n
895 +                                             }) + 0 as libc::c_int as idx_t
896 +                                         }) - 1 as libc::c_int as libc::c_long
897 +                                     })) as libc::c_int
898 +                             } else {
899 +                                 ((0 as libc::c_int as libc::c_long)
900 +                                     < (if 1 as libc::c_int != 0 {
901 +                                         0 as libc::c_int as libc::c_long
902 +                                     } else {
903 +                                         n
904 +                                     }) + 0 as libc::c_int as idx_t) as libc::c_int
905 +                             }) != 0 && n == -(1 as libc::c_int) as libc::c_long
906 +                             {
907 +                                 if ((if 1 as libc::c_int != 0 {
908 +                                     0 as libc::c_int as libc::c_long
909 +                                 } else {
910 +                                     s
911 +                                 }) - 1 as libc::c_int as libc::c_long)
912 +                                     < 0 as libc::c_int as libc::c_long
913 +                                 {
914 +                                     ((0 as libc::c_int as libc::c_long)
915 +                                         < s + 0 as libc::c_int as idx_t) as libc::c_int
916 +                                 } else {
917 +                                     ((-(1 as libc::c_int) as libc::c_long
918 +                                         - 0 as libc::c_int as idx_t)
919 +                                         < s - 1 as libc::c_int as libc::c_long) as libc::c_int
920 +                                 }
921 +                             } else {
922 +                                 (0 as libc::c_int as idx_t / n < s) as libc::c_int
923 +                             }
924 +                         } else {
925 +                             (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
926 +                         }
927 ~                     }) != 0
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:621:32
    |
621 |                     && (if s < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:621:32
    |
621 |                     && (if s < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xmalloc.rs:705:32
    |
705 |                           } else {
    |  ________________________________^
706 | |                             if (if (if ((if 1 as libc::c_int != 0 {
707 | |                                 0 as libc::c_int as libc::c_long
708 | |                             } else {
...   |
812 | |                             }
813 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
705 ~                         } else if (if (if ((if 1 as libc::c_int != 0 {
706 +                             0 as libc::c_int as libc::c_long
707 +                         } else {
708 +                             (if 1 as libc::c_int != 0 {
709 +                                 0 as libc::c_int as libc::c_long
710 +                             } else {
711 +                                 s
712 +                             }) + 0 as libc::c_int as idx_t
713 +                         }) - 1 as libc::c_int as libc::c_long)
714 +                             < 0 as libc::c_int as libc::c_long
715 +                         {
716 +                             !(((((if 1 as libc::c_int != 0 {
717 +                                 0 as libc::c_int as libc::c_long
718 +                             } else {
719 +                                 (if 1 as libc::c_int != 0 {
720 +                                     0 as libc::c_int as libc::c_long
721 +                                 } else {
722 +                                     s
723 +                                 }) + 0 as libc::c_int as idx_t
724 +                             }) + 1 as libc::c_int as libc::c_long)
725 +                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
726 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
727 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
728 +                                 - 1 as libc::c_int as libc::c_long)
729 +                                 * 2 as libc::c_int as libc::c_long
730 +                                 + 1 as libc::c_int as libc::c_long)
731 +                         } else {
732 +                             (if 1 as libc::c_int != 0 {
733 +                                 0 as libc::c_int as libc::c_long
734 +                             } else {
735 +                                 (if 1 as libc::c_int != 0 {
736 +                                     0 as libc::c_int as libc::c_long
737 +                                 } else {
738 +                                     s
739 +                                 }) + 0 as libc::c_int as idx_t
740 +                             }) + 0 as libc::c_int as libc::c_long
741 +                         }) < 0 as libc::c_int as libc::c_long
742 +                         {
743 +                             (((if 1 as libc::c_int != 0 {
744 +                                 0 as libc::c_int as libc::c_long
745 +                             } else {
746 +                                 s
747 +                             }) + 0 as libc::c_int as idx_t)
748 +                                 < -(if ((if 1 as libc::c_int != 0 {
749 +                                     0 as libc::c_int as libc::c_long
750 +                                 } else {
751 +                                     (if 1 as libc::c_int != 0 {
752 +                                         0 as libc::c_int as libc::c_long
753 +                                     } else {
754 +                                         s
755 +                                     }) + 0 as libc::c_int as idx_t
756 +                                 }) - 1 as libc::c_int as libc::c_long)
757 +                                     < 0 as libc::c_int as libc::c_long
758 +                                 {
759 +                                     ((((if 1 as libc::c_int != 0 {
760 +                                         0 as libc::c_int as libc::c_long
761 +                                     } else {
762 +                                         (if 1 as libc::c_int != 0 {
763 +                                             0 as libc::c_int as libc::c_long
764 +                                         } else {
765 +                                             s
766 +                                         }) + 0 as libc::c_int as idx_t
767 +                                     }) + 1 as libc::c_int as libc::c_long)
768 +                                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
769 +                                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
770 +                                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
771 +                                         - 1 as libc::c_int as libc::c_long)
772 +                                         * 2 as libc::c_int as libc::c_long
773 +                                         + 1 as libc::c_int as libc::c_long
774 +                                 } else {
775 +                                     (if 1 as libc::c_int != 0 {
776 +                                         0 as libc::c_int as libc::c_long
777 +                                     } else {
778 +                                         (if 1 as libc::c_int != 0 {
779 +                                             0 as libc::c_int as libc::c_long
780 +                                         } else {
781 +                                             s
782 +                                         }) + 0 as libc::c_int as idx_t
783 +                                     }) - 1 as libc::c_int as libc::c_long
784 +                                 })) as libc::c_int
785 +                         } else {
786 +                             ((0 as libc::c_int as libc::c_long)
787 +                                 < (if 1 as libc::c_int != 0 {
788 +                                     0 as libc::c_int as libc::c_long
789 +                                 } else {
790 +                                     s
791 +                                 }) + 0 as libc::c_int as idx_t) as libc::c_int
792 +                         }) != 0 && s == -(1 as libc::c_int) as libc::c_long
793 +                         {
794 +                             if ((if 1 as libc::c_int != 0 {
795 +                                 0 as libc::c_int as libc::c_long
796 +                             } else {
797 +                                 n
798 +                             }) - 1 as libc::c_int as libc::c_long)
799 +                                 < 0 as libc::c_int as libc::c_long
800 +                             {
801 +                                 ((0 as libc::c_int as libc::c_long)
802 +                                     < n + 0 as libc::c_int as idx_t) as libc::c_int
803 +                             } else {
804 +                                 ((0 as libc::c_int as libc::c_long) < n
805 +                                     && (-(1 as libc::c_int) as libc::c_long
806 +                                         - 0 as libc::c_int as idx_t)
807 +                                         < n - 1 as libc::c_int as libc::c_long) as libc::c_int
808 +                             }
809 +                         } else {
810 +                             (0 as libc::c_int as idx_t / s < n) as libc::c_int
811 +                         }
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:622:32
    |
622 |                         if n < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:622:32
    |
622 |                         if n < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:623:37
    |
623 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:624:33
    |
624 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:624:33
    |
624 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:626:37
    |
626 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:627:37
    |
627 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:627:37
    |
627 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:629:37
    |
629 | ...                   -(1 as libc::c_int) as idx_t
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:629:39
    |
629 | ...                   -(1 as libc::c_int) as idx_t
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:631:34
    |
631 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:631:34
    |
631 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:632:35
    |
632 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:632:35
    |
632 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:634:33
    |
634 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:634:38
    |
634 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:634:40
    |
634 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:636:33
    |
636 | / ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
637 | | ...                       0 as libc::c_int as libc::c_long
638 | | ...                   } else {
639 | | ...                       s
...   |
702 | | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
703 | | ...                       as libc::c_int
    | |________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:636:51
    |
636 | ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:637:37
    |
637 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:637:37
    |
637 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:640:38
    |
640 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:640:38
    |
640 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:641:39
    |
641 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:641:39
    |
641 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:643:46
    |
643 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:644:41
    |
644 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:644:41
    |
644 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:647:42
    |
647 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:647:42
    |
647 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:648:45
    |
648 | ...                   << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:649:59
    |
649 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:649:59
    |
649 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:650:59
    |
650 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:650:59
    |
650 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:651:43
    |
651 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:651:43
    |
651 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:652:43
    |
652 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:652:43
    |
652 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:653:43
    |
653 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:653:43
    |
653 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:655:41
    |
655 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:656:41
    |
656 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:656:41
    |
656 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:659:42
    |
659 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:659:42
    |
659 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:660:38
    |
660 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:660:38
    |
660 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:662:37
    |
662 | / ...                   (s
663 | | ...                       < -(if ((if 1 as libc::c_int != 0 {
664 | | ...                           0 as libc::c_int as libc::c_long
665 | | ...                       } else {
...   |
686 | | ...                           }) - 1 as libc::c_int as libc::c_long
687 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:663:53
    |
663 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:664:45
    |
664 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:664:45
    |
664 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:667:46
    |
667 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:667:46
    |
667 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:668:47
    |
668 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:668:47
    |
668 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:670:52
    |
670 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:671:49
    |
671 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:671:49
    |
671 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:674:50
    |
674 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:674:50
    |
674 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:675:53
    |
675 | ...                   << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:676:67
    |
676 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:676:67
    |
676 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:677:67
    |
677 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:677:67
    |
677 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:678:51
    |
678 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:678:51
    |
678 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:679:51
    |
679 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:679:51
    |
679 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:680:51
    |
680 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:680:51
    |
680 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:682:49
    |
682 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:683:49
    |
683 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:683:49
    |
683 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:686:50
    |
686 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:686:50
    |
686 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:689:37
    |
689 | ...                   ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:689:39
    |
689 | ...                   ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:689:39
    |
689 | ...                   ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: operator precedence can trip the unwary
   --> src/xmalloc.rs:692:37
    |
692 | / ...                   (if 1 as libc::c_int != 0 {
693 | | ...                       0 as libc::c_int as libc::c_long
694 | | ...                   } else {
695 | | ...                       s
...   |
698 | | ...                           .wrapping_mul(8 as libc::c_int as libc::c_ulong)
699 | | ...                           .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
692 ~                                     ((if 1 as libc::c_int != 0 {
693 +                                         0 as libc::c_int as libc::c_long
694 +                                     } else {
695 +                                         s
696 +                                     }) + -(1 as libc::c_int) as idx_t) >> (::core::mem::size_of::<idx_t>() as libc::c_ulong)
697 +                                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
698 +                                             .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:692:41
    |
692 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:693:41
    |
693 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:693:41
    |
693 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:696:42
    |
696 | ...                   }) + -(1 as libc::c_int) as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:696:44
    |
696 | ...                   }) + -(1 as libc::c_int) as idx_t
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:697:45
    |
697 | ...                   >> (::core::mem::size_of::<idx_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:698:59
    |
698 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:698:59
    |
698 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:699:59
    |
699 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:699:59
    |
699 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:701:37
    |
701 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:701:39
    |
701 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:702:39
    |
702 | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:702:41
    |
702 | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:706:45
    |
706 | ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:707:33
    |
707 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:707:33
    |
707 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:709:37
    |
709 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:710:37
    |
710 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:710:37
    |
710 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:713:38
    |
713 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:713:38
    |
713 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:714:34
    |
714 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:714:34
    |
714 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:715:35
    |
715 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:715:35
    |
715 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:717:42
    |
717 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:718:37
    |
718 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:718:37
    |
718 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:720:41
    |
720 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:721:41
    |
721 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:721:41
    |
721 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:724:42
    |
724 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:724:42
    |
724 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:725:38
    |
725 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:725:38
    |
725 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:726:41
    |
726 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:727:55
    |
727 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:727:55
    |
727 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:728:55
    |
728 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:728:55
    |
728 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:729:39
    |
729 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:729:39
    |
729 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:730:39
    |
730 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:730:39
    |
730 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:731:39
    |
731 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:731:39
    |
731 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:733:37
    |
733 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:734:37
    |
734 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:734:37
    |
734 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:736:41
    |
736 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:737:41
    |
737 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:737:41
    |
737 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:740:42
    |
740 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:740:42
    |
740 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:741:38
    |
741 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:741:38
    |
741 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:742:34
    |
742 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:742:34
    |
742 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:744:33
    |
744 | / ...                   (((if 1 as libc::c_int != 0 {
745 | | ...                       0 as libc::c_int as libc::c_long
746 | | ...                   } else {
747 | | ...                       s
...   |
784 | | ...                           }) - 1 as libc::c_int as libc::c_long
785 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:744:39
    |
744 | ...                   (((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:745:37
    |
745 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:745:37
    |
745 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:748:38
    |
748 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:748:38
    |
748 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:749:49
    |
749 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:750:41
    |
750 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:750:41
    |
750 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:752:45
    |
752 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:753:45
    |
753 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:753:45
    |
753 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:756:46
    |
756 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:756:46
    |
756 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:757:42
    |
757 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:757:42
    |
757 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:758:43
    |
758 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:758:43
    |
758 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:760:48
    |
760 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:761:45
    |
761 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:761:45
    |
761 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:763:49
    |
763 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:764:49
    |
764 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:764:49
    |
764 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:767:50
    |
767 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:767:50
    |
767 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:768:46
    |
768 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:768:46
    |
768 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:769:49
    |
769 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:770:63
    |
770 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:770:63
    |
770 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:771:63
    |
771 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:771:63
    |
771 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:772:47
    |
772 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:772:47
    |
772 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:773:47
    |
773 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:773:47
    |
773 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:774:47
    |
774 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:774:47
    |
774 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:776:45
    |
776 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:777:45
    |
777 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:777:45
    |
777 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:779:49
    |
779 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:780:49
    |
780 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:780:49
    |
780 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:783:50
    |
783 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:783:50
    |
783 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:784:46
    |
784 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:784:46
    |
784 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:787:33
    |
787 | / ...                   ((0 as libc::c_int as libc::c_long)
788 | | ...                       < (if 1 as libc::c_int != 0 {
789 | | ...                           0 as libc::c_int as libc::c_long
790 | | ...                       } else {
791 | | ...                           s
792 | | ...                       }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:787:35
    |
787 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:787:35
    |
787 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:788:43
    |
788 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:789:41
    |
789 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:789:41
    |
789 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:792:42
    |
792 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:792:42
    |
792 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:793:45
    |
793 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:793:47
    |
793 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:795:41
    |
795 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:796:37
    |
796 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:796:37
    |
796 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:799:38
    |
799 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:799:38
    |
799 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:800:39
    |
800 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:800:39
    |
800 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:802:37
    |
802 | / ...                   ((0 as libc::c_int as libc::c_long)
803 | | ...                       < n + 0 as libc::c_int as idx_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:802:39
    |
802 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:802:39
    |
802 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:803:47
    |
803 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:803:47
    |
803 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:805:37
    |
805 | / ...                   ((0 as libc::c_int as libc::c_long) < n
806 | | ...                       && (-(1 as libc::c_int) as libc::c_long
807 | | ...                           - 0 as libc::c_int as idx_t)
808 | | ...                           < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |____________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:805:39
    |
805 | ...                   ((0 as libc::c_int as libc::c_long) < n
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:805:39
    |
805 | ...                   ((0 as libc::c_int as libc::c_long) < n
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:806:45
    |
806 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:806:47
    |
806 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:807:47
    |
807 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:807:47
    |
807 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:808:51
    |
808 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:808:51
    |
808 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:811:33
    |
811 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:811:34
    |
811 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:811:34
    |
811 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xmalloc.rs:817:32
    |
817 |                           } else {
    |  ________________________________^
818 | |                             if n < 0 as libc::c_int as libc::c_long {
819 | |                                 if (if (if ((if 1 as libc::c_int != 0 {
820 | |                                     0 as libc::c_int as libc::c_long
...   |
927 | |                             }
928 | |                         }
    | |_________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
817 ~                         } else if n < 0 as libc::c_int as libc::c_long {
818 +                             if (if (if ((if 1 as libc::c_int != 0 {
819 +                                 0 as libc::c_int as libc::c_long
820 +                             } else {
821 +                                 (if 1 as libc::c_int != 0 {
822 +                                     0 as libc::c_int as libc::c_long
823 +                                 } else {
824 +                                     n
825 +                                 }) + 0 as libc::c_int as idx_t
826 +                             }) - 1 as libc::c_int as libc::c_long)
827 +                                 < 0 as libc::c_int as libc::c_long
828 +                             {
829 +                                 !(((((if 1 as libc::c_int != 0 {
830 +                                     0 as libc::c_int as libc::c_long
831 +                                 } else {
832 +                                     (if 1 as libc::c_int != 0 {
833 +                                         0 as libc::c_int as libc::c_long
834 +                                     } else {
835 +                                         n
836 +                                     }) + 0 as libc::c_int as idx_t
837 +                                 }) + 1 as libc::c_int as libc::c_long)
838 +                                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
839 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
840 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
841 +                                     - 1 as libc::c_int as libc::c_long)
842 +                                     * 2 as libc::c_int as libc::c_long
843 +                                     + 1 as libc::c_int as libc::c_long)
844 +                             } else {
845 +                                 (if 1 as libc::c_int != 0 {
846 +                                     0 as libc::c_int as libc::c_long
847 +                                 } else {
848 +                                     (if 1 as libc::c_int != 0 {
849 +                                         0 as libc::c_int as libc::c_long
850 +                                     } else {
851 +                                         n
852 +                                     }) + 0 as libc::c_int as idx_t
853 +                                 }) + 0 as libc::c_int as libc::c_long
854 +                             }) < 0 as libc::c_int as libc::c_long
855 +                             {
856 +                                 (((if 1 as libc::c_int != 0 {
857 +                                     0 as libc::c_int as libc::c_long
858 +                                 } else {
859 +                                     n
860 +                                 }) + 0 as libc::c_int as idx_t)
861 +                                     < -(if ((if 1 as libc::c_int != 0 {
862 +                                         0 as libc::c_int as libc::c_long
863 +                                     } else {
864 +                                         (if 1 as libc::c_int != 0 {
865 +                                             0 as libc::c_int as libc::c_long
866 +                                         } else {
867 +                                             n
868 +                                         }) + 0 as libc::c_int as idx_t
869 +                                     }) - 1 as libc::c_int as libc::c_long)
870 +                                         < 0 as libc::c_int as libc::c_long
871 +                                     {
872 +                                         ((((if 1 as libc::c_int != 0 {
873 +                                             0 as libc::c_int as libc::c_long
874 +                                         } else {
875 +                                             (if 1 as libc::c_int != 0 {
876 +                                                 0 as libc::c_int as libc::c_long
877 +                                             } else {
878 +                                                 n
879 +                                             }) + 0 as libc::c_int as idx_t
880 +                                         }) + 1 as libc::c_int as libc::c_long)
881 +                                             << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
882 +                                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
883 +                                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
884 +                                             - 1 as libc::c_int as libc::c_long)
885 +                                             * 2 as libc::c_int as libc::c_long
886 +                                             + 1 as libc::c_int as libc::c_long
887 +                                     } else {
888 +                                         (if 1 as libc::c_int != 0 {
889 +                                             0 as libc::c_int as libc::c_long
890 +                                         } else {
891 +                                             (if 1 as libc::c_int != 0 {
892 +                                                 0 as libc::c_int as libc::c_long
893 +                                             } else {
894 +                                                 n
895 +                                             }) + 0 as libc::c_int as idx_t
896 +                                         }) - 1 as libc::c_int as libc::c_long
897 +                                     })) as libc::c_int
898 +                             } else {
899 +                                 ((0 as libc::c_int as libc::c_long)
900 +                                     < (if 1 as libc::c_int != 0 {
901 +                                         0 as libc::c_int as libc::c_long
902 +                                     } else {
903 +                                         n
904 +                                     }) + 0 as libc::c_int as idx_t) as libc::c_int
905 +                             }) != 0 && n == -(1 as libc::c_int) as libc::c_long
906 +                             {
907 +                                 if ((if 1 as libc::c_int != 0 {
908 +                                     0 as libc::c_int as libc::c_long
909 +                                 } else {
910 +                                     s
911 +                                 }) - 1 as libc::c_int as libc::c_long)
912 +                                     < 0 as libc::c_int as libc::c_long
913 +                                 {
914 +                                     ((0 as libc::c_int as libc::c_long)
915 +                                         < s + 0 as libc::c_int as idx_t) as libc::c_int
916 +                                 } else {
917 +                                     ((-(1 as libc::c_int) as libc::c_long
918 +                                         - 0 as libc::c_int as idx_t)
919 +                                         < s - 1 as libc::c_int as libc::c_long) as libc::c_int
920 +                                 }
921 +                             } else {
922 +                                 (0 as libc::c_int as idx_t / n < s) as libc::c_int
923 +                             }
924 +                         } else {
925 +                             (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
926 +                         }
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:815:33
    |
815 |                         if s == 0 as libc::c_int as libc::c_long {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:815:33
    |
815 |                         if s == 0 as libc::c_int as libc::c_long {
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:816:29
    |
816 | ...                   0 as libc::c_int
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:818:36
    |
818 | ...                   if n < 0 as libc::c_int as libc::c_long {
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:818:36
    |
818 | ...                   if n < 0 as libc::c_int as libc::c_long {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:819:49
    |
819 | ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:820:37
    |
820 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:820:37
    |
820 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:822:41
    |
822 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:823:41
    |
823 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:823:41
    |
823 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:826:42
    |
826 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:826:42
    |
826 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:827:38
    |
827 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:827:38
    |
827 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:828:39
    |
828 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:828:39
    |
828 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:830:46
    |
830 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:831:41
    |
831 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:831:41
    |
831 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:833:45
    |
833 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:834:45
    |
834 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:834:45
    |
834 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:837:46
    |
837 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:837:46
    |
837 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:838:42
    |
838 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:838:42
    |
838 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:839:45
    |
839 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:840:59
    |
840 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:840:59
    |
840 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:841:59
    |
841 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:841:59
    |
841 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:842:43
    |
842 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:842:43
    |
842 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:843:43
    |
843 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:843:43
    |
843 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:844:43
    |
844 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:844:43
    |
844 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:846:41
    |
846 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:847:41
    |
847 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:847:41
    |
847 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:849:45
    |
849 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:850:45
    |
850 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:850:45
    |
850 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:853:46
    |
853 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:853:46
    |
853 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:854:42
    |
854 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:854:42
    |
854 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:855:38
    |
855 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:855:38
    |
855 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:857:37
    |
857 | / ...                   (((if 1 as libc::c_int != 0 {
858 | | ...                       0 as libc::c_int as libc::c_long
859 | | ...                   } else {
860 | | ...                       n
...   |
897 | | ...                           }) - 1 as libc::c_int as libc::c_long
898 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:857:43
    |
857 | ...                   (((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:858:41
    |
858 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:858:41
    |
858 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:861:42
    |
861 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:861:42
    |
861 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:862:53
    |
862 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:863:45
    |
863 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:863:45
    |
863 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:865:49
    |
865 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:866:49
    |
866 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:866:49
    |
866 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:869:50
    |
869 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:869:50
    |
869 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:870:46
    |
870 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:870:46
    |
870 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:871:47
    |
871 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:871:47
    |
871 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:873:52
    |
873 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:874:49
    |
874 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:874:49
    |
874 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:876:53
    |
876 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:877:53
    |
877 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:877:53
    |
877 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:880:54
    |
880 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:880:54
    |
880 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:881:50
    |
881 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:881:50
    |
881 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:882:53
    |
882 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:883:67
    |
883 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:883:67
    |
883 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:884:67
    |
884 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:884:67
    |
884 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:885:51
    |
885 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:885:51
    |
885 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:886:51
    |
886 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:886:51
    |
886 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:887:51
    |
887 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:887:51
    |
887 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:889:49
    |
889 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:890:49
    |
890 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:890:49
    |
890 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:892:53
    |
892 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:893:53
    |
893 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:893:53
    |
893 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:896:54
    |
896 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:896:54
    |
896 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:897:50
    |
897 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:897:50
    |
897 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:900:37
    |
900 | / ...                   ((0 as libc::c_int as libc::c_long)
901 | | ...                       < (if 1 as libc::c_int != 0 {
902 | | ...                           0 as libc::c_int as libc::c_long
903 | | ...                       } else {
904 | | ...                           n
905 | | ...                       }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:900:39
    |
900 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:900:39
    |
900 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:901:47
    |
901 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:902:45
    |
902 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:902:45
    |
902 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:905:46
    |
905 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:905:46
    |
905 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:906:49
    |
906 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:906:51
    |
906 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:908:45
    |
908 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:909:41
    |
909 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:909:41
    |
909 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:912:42
    |
912 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:912:42
    |
912 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:913:43
    |
913 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:913:43
    |
913 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:915:41
    |
915 | / ...                   ((0 as libc::c_int as libc::c_long)
916 | | ...                       < s + 0 as libc::c_int as idx_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:915:43
    |
915 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:915:43
    |
915 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:916:51
    |
916 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:916:51
    |
916 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:918:41
    |
918 | / ...                   ((-(1 as libc::c_int) as libc::c_long
919 | | ...                       - 0 as libc::c_int as idx_t)
920 | | ...                       < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:918:43
    |
918 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:918:45
    |
918 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:919:47
    |
919 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:919:47
    |
919 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:920:51
    |
920 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:920:51
    |
920 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:923:37
    |
923 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:923:38
    |
923 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:923:38
    |
923 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:926:33
    |
926 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:926:34
    |
926 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:926:36
    |
926 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:932:23
    |
932 |                     *(&mut nbytes as *mut idx_t) = fresh18;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:933:21
    |
933 |                     1 as libc::c_int
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:936:23
    |
936 |                     *(&mut nbytes as *mut idx_t) = fresh20;
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:937:21
    |
937 |                     fresh21 as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:943:19
    |
943 |     pa = xrealloc(pa as *mut libc::c_void, nbytes as usize);
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:943:44
    |
943 |     pa = xrealloc(pa as *mut libc::c_void, nbytes as usize);
    |                                            ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:955:42
    |
955 |     let layout = Layout::from_size_align(s as usize, 1).expect("Invalid layout");
    |                                          ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:960:49
    |
960 |     let vec = unsafe { Vec::from_raw_parts(ptr, s as usize, s as usize) };
    |                                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:960:61
    |
960 |     let vec = unsafe { Vec::from_raw_parts(ptr, s as usize, s as usize) };
    |                                                             ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: integer type suffix should be separated by an underscore
   --> src/xmalloc.rs:967:20
    |
967 |     let vec = vec![0u8; total_size];
    |                    ^^^ help: add an underscore: `0_u8`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:969:5
    |
969 |     Box::into_raw(boxed_slice) as *mut libc::c_void
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: integer type suffix should be separated by an underscore
   --> src/xmalloc.rs:975:27
    |
975 |     let allocation = vec![0u8; total_size].into_boxed_slice();
    |                           ^^^ help: add an underscore: `0_u8`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unseparated_literal_suffix

warning: using a potentially dangerous silent `as` conversion
   --> src/xmalloc.rs:976:5
    |
976 |     Box::into_raw(allocation) as *mut libc::c_void
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: integer literal has a better hexadecimal representation
  --> src/xstrtoimax.rs:34:37
   |
34 | pub const _ISgraph: C2RustUnnamed = 32768;
   |                                     ^^^^^ help: consider: `0x8000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
  --> src/xstrtoimax.rs:35:37
   |
35 | pub const _ISprint: C2RustUnnamed = 16384;
   |                                     ^^^^^ help: consider: `0x4000`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:46:12
   |
46 |     if if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:46:12
   |
46 |     if if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t
   |            ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:46:44
   |
46 |     if if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:46:46
   |
46 |     if if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t
   |                                              ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:47:17
   |
47 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { *x })
   |                 ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:47:41
   |
47 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { *x })
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:47:41
   |
47 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { *x })
   |                                         ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:48:15
   |
48 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:48:15
   |
48 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |               ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:48:51
   |
48 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:48:51
   |
48 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |                                                   ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:49:17
   |
49 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
   |                 ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:49:41
   |
49 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
   |                                         ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:50:15
   |
50 |             - 1 as libc::c_int) < 0 as libc::c_int
   |               ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:50:35
   |
50 |             - 1 as libc::c_int) < 0 as libc::c_int
   |                                   ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xstrtoimax.rs:234:16
    |
234 |           } else {
    |  ________________^
235 | |             if scale_factor == 0 as libc::c_int {
236 | |                 0 as libc::c_int
237 | |             } else {
...   |
351 | |             }
352 | |         }) != 0
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
234 ~         } else if scale_factor == 0 as libc::c_int {
235 +             0 as libc::c_int
236 +         } else {
237 +             if *x < 0 as libc::c_int as libc::c_long {
238 +                 if (if (if ((if 1 as libc::c_int != 0 {
239 +                     0 as libc::c_int as libc::c_long
240 +                 } else {
241 +                     (if 1 as libc::c_int != 0 {
242 +                         0 as libc::c_int as libc::c_long
243 +                     } else {
244 +                         *x
245 +                     }) + 0 as libc::c_int as intmax_t
246 +                 }) - 1 as libc::c_int as libc::c_long)
247 +                     < 0 as libc::c_int as libc::c_long
248 +                 {
249 +                     !(((((if 1 as libc::c_int != 0 {
250 +                         0 as libc::c_int as libc::c_long
251 +                     } else {
252 +                         (if 1 as libc::c_int != 0 {
253 +                             0 as libc::c_int as libc::c_long
254 +                         } else {
255 +                             *x
256 +                         }) + 0 as libc::c_int as intmax_t
257 +                     }) + 1 as libc::c_int as libc::c_long)
258 +                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
259 +                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
260 +                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
261 +                         - 1 as libc::c_int as libc::c_long)
262 +                         * 2 as libc::c_int as libc::c_long
263 +                         + 1 as libc::c_int as libc::c_long)
264 +                 } else {
265 +                     (if 1 as libc::c_int != 0 {
266 +                         0 as libc::c_int as libc::c_long
267 +                     } else {
268 +                         (if 1 as libc::c_int != 0 {
269 +                             0 as libc::c_int as libc::c_long
270 +                         } else {
271 +                             *x
272 +                         }) + 0 as libc::c_int as intmax_t
273 +                     }) + 0 as libc::c_int as libc::c_long
274 +                 }) < 0 as libc::c_int as libc::c_long
275 +                 {
276 +                     (((if 1 as libc::c_int != 0 {
277 +                         0 as libc::c_int as libc::c_long
278 +                     } else {
279 +                         *x
280 +                     }) + 0 as libc::c_int as intmax_t)
281 +                         < -(if ((if 1 as libc::c_int != 0 {
282 +                             0 as libc::c_int as libc::c_long
283 +                         } else {
284 +                             (if 1 as libc::c_int != 0 {
285 +                                 0 as libc::c_int as libc::c_long
286 +                             } else {
287 +                                 *x
288 +                             }) + 0 as libc::c_int as intmax_t
289 +                         }) - 1 as libc::c_int as libc::c_long)
290 +                             < 0 as libc::c_int as libc::c_long
291 +                         {
292 +                             ((((if 1 as libc::c_int != 0 {
293 +                                 0 as libc::c_int as libc::c_long
294 +                             } else {
295 +                                 (if 1 as libc::c_int != 0 {
296 +                                     0 as libc::c_int as libc::c_long
297 +                                 } else {
298 +                                     *x
299 +                                 }) + 0 as libc::c_int as intmax_t
300 +                             }) + 1 as libc::c_int as libc::c_long)
301 +                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
302 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
303 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
304 +                                 - 1 as libc::c_int as libc::c_long)
305 +                                 * 2 as libc::c_int as libc::c_long
306 +                                 + 1 as libc::c_int as libc::c_long
307 +                         } else {
308 +                             (if 1 as libc::c_int != 0 {
309 +                                 0 as libc::c_int as libc::c_long
310 +                             } else {
311 +                                 (if 1 as libc::c_int != 0 {
312 +                                     0 as libc::c_int as libc::c_long
313 +                                 } else {
314 +                                     *x
315 +                                 }) + 0 as libc::c_int as intmax_t
316 +                             }) - 1 as libc::c_int as libc::c_long
317 +                         })) as libc::c_int
318 +                 } else {
319 +                     ((0 as libc::c_int as libc::c_long)
320 +                         < (if 1 as libc::c_int != 0 {
321 +                             0 as libc::c_int as libc::c_long
322 +                         } else {
323 +                             *x
324 +                         }) + 0 as libc::c_int as intmax_t) as libc::c_int
325 +                 }) != 0 && *x == -(1 as libc::c_int) as libc::c_long
326 +                 {
327 +                     if ((if 1 as libc::c_int != 0 {
328 +                         0 as libc::c_int
329 +                     } else {
330 +                         scale_factor
331 +                     }) - 1 as libc::c_int) < 0 as libc::c_int
332 +                     {
333 +                         ((0 as libc::c_int as libc::c_long)
334 +                             < scale_factor as libc::c_long
335 +                                 + 0 as libc::c_int as intmax_t) as libc::c_int
336 +                     } else {
337 +                         ((-(1 as libc::c_int) as libc::c_long
338 +                             - 0 as libc::c_int as intmax_t)
339 +                             < (scale_factor - 1 as libc::c_int) as libc::c_long)
340 +                             as libc::c_int
341 +                     }
342 +                 } else {
343 +                     (0 as libc::c_int as intmax_t / *x
344 +                         < scale_factor as libc::c_long) as libc::c_int
345 +                 }
346 +             } else {
347 +                 ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
348 +                     < *x) as libc::c_int
349 +             }
350 ~         }) != 0
    |

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:51:31
   |
51 |         && (if scale_factor < 0 as libc::c_int {
   |                               ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xstrtoimax.rs:128:20
    |
128 |               } else {
    |  ____________________^
129 | |                 if (if (if ((if 1 as libc::c_int != 0 {
130 | |                     0 as libc::c_int as libc::c_long
131 | |                 } else {
...   |
232 | |                 }
233 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
128 ~             } else if (if (if ((if 1 as libc::c_int != 0 {
129 +                 0 as libc::c_int as libc::c_long
130 +             } else {
131 +                 (if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
132 +                     as libc::c_long + 0 as libc::c_int as intmax_t
133 +             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
134 +             {
135 +                 !(((((if 1 as libc::c_int != 0 {
136 +                     0 as libc::c_int as libc::c_long
137 +                 } else {
138 +                     (if 1 as libc::c_int != 0 {
139 +                         0 as libc::c_int
140 +                     } else {
141 +                         scale_factor
142 +                     }) as libc::c_long + 0 as libc::c_int as intmax_t
143 +                 }) + 1 as libc::c_int as libc::c_long)
144 +                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
145 +                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
146 +                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
147 +                     - 1 as libc::c_int as libc::c_long)
148 +                     * 2 as libc::c_int as libc::c_long
149 +                     + 1 as libc::c_int as libc::c_long)
150 +             } else {
151 +                 (if 1 as libc::c_int != 0 {
152 +                     0 as libc::c_int as libc::c_long
153 +                 } else {
154 +                     (if 1 as libc::c_int != 0 {
155 +                         0 as libc::c_int
156 +                     } else {
157 +                         scale_factor
158 +                     }) as libc::c_long + 0 as libc::c_int as intmax_t
159 +                 }) + 0 as libc::c_int as libc::c_long
160 +             }) < 0 as libc::c_int as libc::c_long
161 +             {
162 +                 (((if 1 as libc::c_int != 0 {
163 +                     0 as libc::c_int
164 +                 } else {
165 +                     scale_factor
166 +                 }) as libc::c_long + 0 as libc::c_int as intmax_t)
167 +                     < -(if ((if 1 as libc::c_int != 0 {
168 +                         0 as libc::c_int as libc::c_long
169 +                     } else {
170 +                         (if 1 as libc::c_int != 0 {
171 +                             0 as libc::c_int
172 +                         } else {
173 +                             scale_factor
174 +                         }) as libc::c_long + 0 as libc::c_int as intmax_t
175 +                     }) - 1 as libc::c_int as libc::c_long)
176 +                         < 0 as libc::c_int as libc::c_long
177 +                     {
178 +                         ((((if 1 as libc::c_int != 0 {
179 +                             0 as libc::c_int as libc::c_long
180 +                         } else {
181 +                             (if 1 as libc::c_int != 0 {
182 +                                 0 as libc::c_int
183 +                             } else {
184 +                                 scale_factor
185 +                             }) as libc::c_long + 0 as libc::c_int as intmax_t
186 +                         }) + 1 as libc::c_int as libc::c_long)
187 +                             << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
188 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
189 +                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
190 +                             - 1 as libc::c_int as libc::c_long)
191 +                             * 2 as libc::c_int as libc::c_long
192 +                             + 1 as libc::c_int as libc::c_long
193 +                     } else {
194 +                         (if 1 as libc::c_int != 0 {
195 +                             0 as libc::c_int as libc::c_long
196 +                         } else {
197 +                             (if 1 as libc::c_int != 0 {
198 +                                 0 as libc::c_int
199 +                             } else {
200 +                                 scale_factor
201 +                             }) as libc::c_long + 0 as libc::c_int as intmax_t
202 +                         }) - 1 as libc::c_int as libc::c_long
203 +                     })) as libc::c_int
204 +             } else {
205 +                 ((0 as libc::c_int as libc::c_long)
206 +                     < (if 1 as libc::c_int != 0 {
207 +                         0 as libc::c_int
208 +                     } else {
209 +                         scale_factor
210 +                     }) as libc::c_long + 0 as libc::c_int as intmax_t) as libc::c_int
211 +             }) != 0 && scale_factor == -(1 as libc::c_int)
212 +             {
213 +                 if ((if 1 as libc::c_int != 0 {
214 +                     0 as libc::c_int as libc::c_long
215 +                 } else {
216 +                     *x
217 +                 }) - 1 as libc::c_int as libc::c_long)
218 +                     < 0 as libc::c_int as libc::c_long
219 +                 {
220 +                     ((0 as libc::c_int as libc::c_long)
221 +                         < *x + 0 as libc::c_int as intmax_t) as libc::c_int
222 +                 } else {
223 +                     ((0 as libc::c_int as libc::c_long) < *x
224 +                         && (-(1 as libc::c_int) as libc::c_long
225 +                             - 0 as libc::c_int as intmax_t)
226 +                             < *x - 1 as libc::c_int as libc::c_long) as libc::c_int
227 +                 }
228 +             } else {
229 +                 ((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)
230 +                     as libc::c_int
231 +             }
    |

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:52:21
   |
52 |             if *x < 0 as libc::c_int as libc::c_long {
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:52:21
   |
52 |             if *x < 0 as libc::c_int as libc::c_long {
   |                     ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:53:25
   |
53 |                 if ((if 1 as libc::c_int != 0 {
   |                         ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:54:21
   |
54 |                     0 as libc::c_int as libc::c_long
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:54:21
   |
54 |                     0 as libc::c_int as libc::c_long
   |                     ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:56:25
   |
56 |                     (if 1 as libc::c_int != 0 {
   |                         ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:57:25
   |
57 |                         0 as libc::c_int as libc::c_long
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:57:25
   |
57 |                         0 as libc::c_int as libc::c_long
   |                         ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:59:25
   |
59 |                         -(1 as libc::c_int) as intmax_t
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:59:27
   |
59 |                         -(1 as libc::c_int) as intmax_t
   |                           ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:60:26
   |
60 |                     }) + scale_factor as libc::c_long
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:61:22
   |
61 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:61:22
   |
61 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |                      ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:61:58
   |
61 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:61:58
   |
61 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |                                                          ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:63:21
   |
63 | /                     (*x < -(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
64 | |                         as libc::c_int
   | |______________________________________^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:63:27
   |
63 |                     (*x < -(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:63:29
   |
63 |                     (*x < -(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
   |                             ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:63:61
   |
63 |                     (*x < -(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
   |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:66:21
    |
66  | /                     ((if (if (if ((if 1 as libc::c_int != 0 {
67  | |                         0 as libc::c_int
68  | |                     } else {
69  | |                         scale_factor
...   |
125 | |                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
126 | |                     }) <= -(1 as libc::c_int) as libc::c_long - *x) as libc::c_int
    | |__________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:66:39
   |
66 |                     ((if (if (if ((if 1 as libc::c_int != 0 {
   |                                       ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:67:25
   |
67 |                         0 as libc::c_int
   |                         ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:70:26
   |
70 |                     }) - 1 as libc::c_int) < 0 as libc::c_int
   |                          ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:70:46
   |
70 |                     }) - 1 as libc::c_int) < 0 as libc::c_int
   |                                              ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:72:34
   |
72 |                         !(((((if 1 as libc::c_int != 0 {
   |                                  ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:73:29
   |
73 | ...                   0 as libc::c_int
   |                       ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:76:30
   |
76 |                         }) + 1 as libc::c_int)
   |                              ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:77:33
   |
77 | ...                   << (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:78:47
   |
78 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:78:47
   |
78 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
   |                                     ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:79:47
   |
79 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:79:47
   |
79 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
   |                                     ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:80:31
   |
80 | ...                   - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int)
   |                         ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:80:51
   |
80 | ...                   - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int)
   |                                             ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:80:70
   |
80 | ...                   - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int)
   |                                                                ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:82:29
   |
82 |                         (if 1 as libc::c_int != 0 {
   |                             ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:83:29
   |
83 | ...                   0 as libc::c_int
   |                       ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:86:30
   |
86 |                         }) + 0 as libc::c_int
   |                              ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:87:26
   |
87 |                     }) < 0 as libc::c_int
   |                          ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:89:25
    |
89  | /                         (scale_factor
90  | |                             < -(if ((if 1 as libc::c_int != 0 {
91  | |                                 0 as libc::c_int
92  | |                             } else {
...   |
110 | |                                 }) - 1 as libc::c_int
111 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:90:41
   |
90 | ...                   < -(if ((if 1 as libc::c_int != 0 {
   |                                   ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:91:33
   |
91 | ...                   0 as libc::c_int
   |                       ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:94:34
   |
94 | ...                   }) - 1 as libc::c_int) < 0 as libc::c_int
   |                            ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:94:54
   |
94 | ...                   }) - 1 as libc::c_int) < 0 as libc::c_int
   |                                                ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:96:40
   |
96 | ...                   ((((if 1 as libc::c_int != 0 {
   |                              ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
  --> src/xstrtoimax.rs:97:37
   |
97 | ...                   0 as libc::c_int
   |                       ^^^^^^^^^^^^^^^^
   |
   = help: consider using a safe wrapper for this conversion
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:100:38
    |
100 | ...                   }) + 1 as libc::c_int)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:101:41
    |
101 | ...                   << (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:102:55
    |
102 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:102:55
    |
102 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:103:55
    |
103 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:103:55
    |
103 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:104:39
    |
104 | ...                   - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:104:59
    |
104 | ...                   - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int
    |                                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:104:78
    |
104 | ...                   - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int
    |                                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:106:37
    |
106 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:107:37
    |
107 | ...                   0 as libc::c_int
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:110:38
    |
110 | ...                   }) - 1 as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:113:25
    |
113 |                         ((0 as libc::c_int) < scale_factor) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:113:27
    |
113 |                         ((0 as libc::c_int) < scale_factor) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: operator precedence can trip the unwary
   --> src/xstrtoimax.rs:116:25
    |
116 | /                         (if 1 as libc::c_int != 0 {
117 | |                             0 as libc::c_int
118 | |                         } else {
119 | |                             scale_factor
...   |
122 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
123 | |                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
116 ~                         ((if 1 as libc::c_int != 0 {
117 +                             0 as libc::c_int
118 +                         } else {
119 +                             scale_factor
120 +                         }) as libc::c_long + -(1 as libc::c_int) as intmax_t) >> (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
121 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
122 +                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:116:25
    |
116 | /                         (if 1 as libc::c_int != 0 {
117 | |                             0 as libc::c_int
118 | |                         } else {
119 | |                             scale_factor
120 | |                         }) as libc::c_long + -(1 as libc::c_int) as intmax_t
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:116:29
    |
116 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:117:29
    |
117 | ...                   0 as libc::c_int
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:120:46
    |
120 |                         }) as libc::c_long + -(1 as libc::c_int) as intmax_t
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:120:48
    |
120 |                         }) as libc::c_long + -(1 as libc::c_int) as intmax_t
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:121:33
    |
121 | ...                   >> (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:122:47
    |
122 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:122:47
    |
122 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:123:47
    |
123 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:123:47
    |
123 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:125:25
    |
125 |                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:125:27
    |
125 |                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:125:59
    |
125 |                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:126:27
    |
126 |                     }) <= -(1 as libc::c_int) as libc::c_long - *x) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:126:29
    |
126 |                     }) <= -(1 as libc::c_int) as libc::c_long - *x) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:129:33
    |
129 |                 if (if (if ((if 1 as libc::c_int != 0 {
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:130:21
    |
130 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:130:21
    |
130 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:132:21
    |
132 | /                     (if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
133 | |                         as libc::c_long + 0 as libc::c_int as intmax_t
    | |_______________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:132:25
    |
132 |                     (if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:132:49
    |
132 |                     (if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
    |                                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:133:43
    |
133 |                         as libc::c_long + 0 as libc::c_int as intmax_t
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:133:43
    |
133 |                         as libc::c_long + 0 as libc::c_int as intmax_t
    |                                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:134:22
    |
134 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:134:22
    |
134 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:134:58
    |
134 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:134:58
    |
134 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:136:30
    |
136 |                     !(((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:137:25
    |
137 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:137:25
    |
137 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:139:25
    |
139 | /                         (if 1 as libc::c_int != 0 {
140 | |                             0 as libc::c_int
141 | |                         } else {
142 | |                             scale_factor
143 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:139:29
    |
139 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:140:29
    |
140 | ...                   0 as libc::c_int
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:143:46
    |
143 |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:143:46
    |
143 |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:144:26
    |
144 |                     }) + 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:144:26
    |
144 |                     }) + 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:145:29
    |
145 |                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:146:43
    |
146 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:146:43
    |
146 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:147:43
    |
147 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:147:43
    |
147 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:148:27
    |
148 |                         - 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:148:27
    |
148 |                         - 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:149:27
    |
149 |                         * 2 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:149:27
    |
149 |                         * 2 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:150:27
    |
150 |                         + 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:150:27
    |
150 |                         + 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:152:25
    |
152 |                     (if 1 as libc::c_int != 0 {
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:153:25
    |
153 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:153:25
    |
153 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:155:25
    |
155 | /                         (if 1 as libc::c_int != 0 {
156 | |                             0 as libc::c_int
157 | |                         } else {
158 | |                             scale_factor
159 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:155:29
    |
155 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:156:29
    |
156 | ...                   0 as libc::c_int
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:159:46
    |
159 |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:159:46
    |
159 |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:160:26
    |
160 |                     }) + 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:160:26
    |
160 |                     }) + 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:161:22
    |
161 |                 }) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:161:22
    |
161 |                 }) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:163:21
    |
163 | /                     (((if 1 as libc::c_int != 0 {
164 | |                         0 as libc::c_int
165 | |                     } else {
166 | |                         scale_factor
...   |
203 | |                             }) - 1 as libc::c_int as libc::c_long
204 | |                         })) as libc::c_int
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:163:23
    |
163 |                       (((if 1 as libc::c_int != 0 {
    |  _______________________^
164 | |                         0 as libc::c_int
165 | |                     } else {
166 | |                         scale_factor
167 | |                     }) as libc::c_long + 0 as libc::c_int as intmax_t)
    | |______________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:163:27
    |
163 |                     (((if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:164:25
    |
164 |                         0 as libc::c_int
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:167:42
    |
167 |                     }) as libc::c_long + 0 as libc::c_int as intmax_t)
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:167:42
    |
167 |                     }) as libc::c_long + 0 as libc::c_int as intmax_t)
    |                                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:168:37
    |
168 |                         < -(if ((if 1 as libc::c_int != 0 {
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:169:29
    |
169 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:169:29
    |
169 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:171:29
    |
171 | / ...                   (if 1 as libc::c_int != 0 {
172 | | ...                       0 as libc::c_int
173 | | ...                   } else {
174 | | ...                       scale_factor
175 | | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:171:33
    |
171 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:172:33
    |
172 | ...                   0 as libc::c_int
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:175:50
    |
175 | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:175:50
    |
175 | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:176:30
    |
176 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:176:30
    |
176 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:177:31
    |
177 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:177:31
    |
177 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:179:36
    |
179 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:180:33
    |
180 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:180:33
    |
180 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:182:33
    |
182 | / ...                   (if 1 as libc::c_int != 0 {
183 | | ...                       0 as libc::c_int
184 | | ...                   } else {
185 | | ...                       scale_factor
186 | | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:182:37
    |
182 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:183:37
    |
183 | ...                   0 as libc::c_int
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:186:54
    |
186 | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:186:54
    |
186 | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:187:34
    |
187 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:187:34
    |
187 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:188:37
    |
188 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:189:51
    |
189 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:189:51
    |
189 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:190:51
    |
190 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:190:51
    |
190 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:191:35
    |
191 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:191:35
    |
191 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:192:35
    |
192 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:192:35
    |
192 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:193:35
    |
193 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:193:35
    |
193 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:195:33
    |
195 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:196:33
    |
196 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:196:33
    |
196 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:198:33
    |
198 | / ...                   (if 1 as libc::c_int != 0 {
199 | | ...                       0 as libc::c_int
200 | | ...                   } else {
201 | | ...                       scale_factor
202 | | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:198:37
    |
198 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:199:37
    |
199 | ...                   0 as libc::c_int
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:202:54
    |
202 | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:202:54
    |
202 | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:203:34
    |
203 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:203:34
    |
203 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:206:21
    |
206 | /                     ((0 as libc::c_int as libc::c_long)
207 | |                         < (if 1 as libc::c_int != 0 {
208 | |                             0 as libc::c_int
209 | |                         } else {
210 | |                             scale_factor
211 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t) as libc::c_int
    | |_________________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:206:23
    |
206 |                     ((0 as libc::c_int as libc::c_long)
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:206:23
    |
206 |                     ((0 as libc::c_int as libc::c_long)
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:207:27
    |
207 |                           < (if 1 as libc::c_int != 0 {
    |  ___________________________^
208 | |                             0 as libc::c_int
209 | |                         } else {
210 | |                             scale_factor
211 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t) as libc::c_int
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:207:31
    |
207 |                         < (if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:208:29
    |
208 | ...                   0 as libc::c_int
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:211:46
    |
211 |                         }) as libc::c_long + 0 as libc::c_int as intmax_t) as libc::c_int
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:211:46
    |
211 |                         }) as libc::c_long + 0 as libc::c_int as intmax_t) as libc::c_int
    |                                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:212:46
    |
212 |                 }) != 0 && scale_factor == -(1 as libc::c_int)
    |                                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:214:29
    |
214 |                     if ((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:215:25
    |
215 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:215:25
    |
215 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:218:26
    |
218 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:218:26
    |
218 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:219:27
    |
219 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:219:27
    |
219 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:221:25
    |
221 | /                         ((0 as libc::c_int as libc::c_long)
222 | |                             < *x + 0 as libc::c_int as intmax_t) as libc::c_int
    | |_______________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:221:27
    |
221 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:221:27
    |
221 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:222:36
    |
222 | ...                   < *x + 0 as libc::c_int as intmax_t) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:222:36
    |
222 | ...                   < *x + 0 as libc::c_int as intmax_t) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:224:25
    |
224 | /                         ((0 as libc::c_int as libc::c_long) < *x
225 | |                             && (-(1 as libc::c_int) as libc::c_long
226 | |                                 - 0 as libc::c_int as intmax_t)
227 | |                                 < *x - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |_______________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:224:27
    |
224 |                         ((0 as libc::c_int as libc::c_long) < *x
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:224:27
    |
224 |                         ((0 as libc::c_int as libc::c_long) < *x
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:225:33
    |
225 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:225:35
    |
225 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:226:35
    |
226 | ...                   - 0 as libc::c_int as intmax_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:226:35
    |
226 | ...                   - 0 as libc::c_int as intmax_t)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:227:40
    |
227 | ...                   < *x - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:227:40
    |
227 | ...                   < *x - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:230:21
    |
230 | /                     ((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)
231 | |                         as libc::c_int
    | |______________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:230:23
    |
230 |                     ((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:230:23
    |
230 |                     ((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:230:54
    |
230 |                     ((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/xstrtoimax.rs:237:20
    |
237 |               } else {
    |  ____________________^
238 | |                 if *x < 0 as libc::c_int as libc::c_long {
239 | |                     if (if (if ((if 1 as libc::c_int != 0 {
240 | |                         0 as libc::c_int as libc::c_long
...   |
350 | |                 }
351 | |             }
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
237 ~             } else if *x < 0 as libc::c_int as libc::c_long {
238 +                 if (if (if ((if 1 as libc::c_int != 0 {
239 +                     0 as libc::c_int as libc::c_long
240 +                 } else {
241 +                     (if 1 as libc::c_int != 0 {
242 +                         0 as libc::c_int as libc::c_long
243 +                     } else {
244 +                         *x
245 +                     }) + 0 as libc::c_int as intmax_t
246 +                 }) - 1 as libc::c_int as libc::c_long)
247 +                     < 0 as libc::c_int as libc::c_long
248 +                 {
249 +                     !(((((if 1 as libc::c_int != 0 {
250 +                         0 as libc::c_int as libc::c_long
251 +                     } else {
252 +                         (if 1 as libc::c_int != 0 {
253 +                             0 as libc::c_int as libc::c_long
254 +                         } else {
255 +                             *x
256 +                         }) + 0 as libc::c_int as intmax_t
257 +                     }) + 1 as libc::c_int as libc::c_long)
258 +                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
259 +                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
260 +                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
261 +                         - 1 as libc::c_int as libc::c_long)
262 +                         * 2 as libc::c_int as libc::c_long
263 +                         + 1 as libc::c_int as libc::c_long)
264 +                 } else {
265 +                     (if 1 as libc::c_int != 0 {
266 +                         0 as libc::c_int as libc::c_long
267 +                     } else {
268 +                         (if 1 as libc::c_int != 0 {
269 +                             0 as libc::c_int as libc::c_long
270 +                         } else {
271 +                             *x
272 +                         }) + 0 as libc::c_int as intmax_t
273 +                     }) + 0 as libc::c_int as libc::c_long
274 +                 }) < 0 as libc::c_int as libc::c_long
275 +                 {
276 +                     (((if 1 as libc::c_int != 0 {
277 +                         0 as libc::c_int as libc::c_long
278 +                     } else {
279 +                         *x
280 +                     }) + 0 as libc::c_int as intmax_t)
281 +                         < -(if ((if 1 as libc::c_int != 0 {
282 +                             0 as libc::c_int as libc::c_long
283 +                         } else {
284 +                             (if 1 as libc::c_int != 0 {
285 +                                 0 as libc::c_int as libc::c_long
286 +                             } else {
287 +                                 *x
288 +                             }) + 0 as libc::c_int as intmax_t
289 +                         }) - 1 as libc::c_int as libc::c_long)
290 +                             < 0 as libc::c_int as libc::c_long
291 +                         {
292 +                             ((((if 1 as libc::c_int != 0 {
293 +                                 0 as libc::c_int as libc::c_long
294 +                             } else {
295 +                                 (if 1 as libc::c_int != 0 {
296 +                                     0 as libc::c_int as libc::c_long
297 +                                 } else {
298 +                                     *x
299 +                                 }) + 0 as libc::c_int as intmax_t
300 +                             }) + 1 as libc::c_int as libc::c_long)
301 +                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
302 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
303 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
304 +                                 - 1 as libc::c_int as libc::c_long)
305 +                                 * 2 as libc::c_int as libc::c_long
306 +                                 + 1 as libc::c_int as libc::c_long
307 +                         } else {
308 +                             (if 1 as libc::c_int != 0 {
309 +                                 0 as libc::c_int as libc::c_long
310 +                             } else {
311 +                                 (if 1 as libc::c_int != 0 {
312 +                                     0 as libc::c_int as libc::c_long
313 +                                 } else {
314 +                                     *x
315 +                                 }) + 0 as libc::c_int as intmax_t
316 +                             }) - 1 as libc::c_int as libc::c_long
317 +                         })) as libc::c_int
318 +                 } else {
319 +                     ((0 as libc::c_int as libc::c_long)
320 +                         < (if 1 as libc::c_int != 0 {
321 +                             0 as libc::c_int as libc::c_long
322 +                         } else {
323 +                             *x
324 +                         }) + 0 as libc::c_int as intmax_t) as libc::c_int
325 +                 }) != 0 && *x == -(1 as libc::c_int) as libc::c_long
326 +                 {
327 +                     if ((if 1 as libc::c_int != 0 {
328 +                         0 as libc::c_int
329 +                     } else {
330 +                         scale_factor
331 +                     }) - 1 as libc::c_int) < 0 as libc::c_int
332 +                     {
333 +                         ((0 as libc::c_int as libc::c_long)
334 +                             < scale_factor as libc::c_long
335 +                                 + 0 as libc::c_int as intmax_t) as libc::c_int
336 +                     } else {
337 +                         ((-(1 as libc::c_int) as libc::c_long
338 +                             - 0 as libc::c_int as intmax_t)
339 +                             < (scale_factor - 1 as libc::c_int) as libc::c_long)
340 +                             as libc::c_int
341 +                     }
342 +                 } else {
343 +                     (0 as libc::c_int as intmax_t / *x
344 +                         < scale_factor as libc::c_long) as libc::c_int
345 +                 }
346 +             } else {
347 +                 ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
348 +                     < *x) as libc::c_int
349 +             }
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:235:32
    |
235 |             if scale_factor == 0 as libc::c_int {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:236:17
    |
236 |                 0 as libc::c_int
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:238:25
    |
238 |                 if *x < 0 as libc::c_int as libc::c_long {
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:238:25
    |
238 |                 if *x < 0 as libc::c_int as libc::c_long {
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:239:37
    |
239 |                     if (if (if ((if 1 as libc::c_int != 0 {
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:240:25
    |
240 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:240:25
    |
240 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:242:29
    |
242 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:243:29
    |
243 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:243:29
    |
243 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:246:30
    |
246 |                         }) + 0 as libc::c_int as intmax_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:246:30
    |
246 |                         }) + 0 as libc::c_int as intmax_t
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:247:26
    |
247 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:247:26
    |
247 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:248:27
    |
248 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:248:27
    |
248 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:250:34
    |
250 |                         !(((((if 1 as libc::c_int != 0 {
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:251:29
    |
251 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:251:29
    |
251 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:253:33
    |
253 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:254:33
    |
254 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:254:33
    |
254 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:257:34
    |
257 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:257:34
    |
257 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:258:30
    |
258 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:258:30
    |
258 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:259:33
    |
259 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:260:47
    |
260 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:260:47
    |
260 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:261:47
    |
261 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:261:47
    |
261 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:262:31
    |
262 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:262:31
    |
262 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:263:31
    |
263 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:263:31
    |
263 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:264:31
    |
264 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:264:31
    |
264 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:266:29
    |
266 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:267:29
    |
267 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:267:29
    |
267 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:269:33
    |
269 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:270:33
    |
270 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:270:33
    |
270 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:273:34
    |
273 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:273:34
    |
273 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:274:30
    |
274 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:274:30
    |
274 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:275:26
    |
275 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:275:26
    |
275 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:277:25
    |
277 | /                         (((if 1 as libc::c_int != 0 {
278 | |                             0 as libc::c_int as libc::c_long
279 | |                         } else {
280 | |                             *x
...   |
317 | |                                 }) - 1 as libc::c_int as libc::c_long
318 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:277:31
    |
277 |                         (((if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:278:29
    |
278 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:278:29
    |
278 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:281:30
    |
281 |                         }) + 0 as libc::c_int as intmax_t)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:281:30
    |
281 |                         }) + 0 as libc::c_int as intmax_t)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:282:41
    |
282 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:283:33
    |
283 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:283:33
    |
283 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:285:37
    |
285 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:286:37
    |
286 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:286:37
    |
286 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:289:38
    |
289 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:289:38
    |
289 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:290:34
    |
290 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:290:34
    |
290 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:291:35
    |
291 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:291:35
    |
291 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:293:40
    |
293 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:294:37
    |
294 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:294:37
    |
294 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:296:41
    |
296 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:297:41
    |
297 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:297:41
    |
297 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:300:42
    |
300 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:300:42
    |
300 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:301:38
    |
301 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:301:38
    |
301 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:302:41
    |
302 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:303:55
    |
303 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:303:55
    |
303 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:304:55
    |
304 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:304:55
    |
304 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:305:39
    |
305 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:305:39
    |
305 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:306:39
    |
306 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:306:39
    |
306 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:307:39
    |
307 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:307:39
    |
307 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:309:37
    |
309 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:310:37
    |
310 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:310:37
    |
310 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:312:41
    |
312 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:313:41
    |
313 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:313:41
    |
313 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:316:42
    |
316 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:316:42
    |
316 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:317:38
    |
317 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:317:38
    |
317 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:320:25
    |
320 | /                         ((0 as libc::c_int as libc::c_long)
321 | |                             < (if 1 as libc::c_int != 0 {
322 | |                                 0 as libc::c_int as libc::c_long
323 | |                             } else {
324 | |                                 *x
325 | |                             }) + 0 as libc::c_int as intmax_t) as libc::c_int
    | |_____________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:320:27
    |
320 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:320:27
    |
320 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:321:35
    |
321 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:322:33
    |
322 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:322:33
    |
322 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:325:34
    |
325 | ...                   }) + 0 as libc::c_int as intmax_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:325:34
    |
325 | ...                   }) + 0 as libc::c_int as intmax_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:326:38
    |
326 |                     }) != 0 && *x == -(1 as libc::c_int) as libc::c_long
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:326:40
    |
326 |                     }) != 0 && *x == -(1 as libc::c_int) as libc::c_long
    |                                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:328:33
    |
328 |                         if ((if 1 as libc::c_int != 0 {
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:329:29
    |
329 | ...                   0 as libc::c_int
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:332:30
    |
332 |                         }) - 1 as libc::c_int) < 0 as libc::c_int
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:332:50
    |
332 |                         }) - 1 as libc::c_int) < 0 as libc::c_int
    |                                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:334:29
    |
334 | / ...                   ((0 as libc::c_int as libc::c_long)
335 | | ...                       < scale_factor as libc::c_long
336 | | ...                           + 0 as libc::c_int as intmax_t) as libc::c_int
    | |____________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:334:31
    |
334 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:334:31
    |
334 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:335:35
    |
335 | ...                   < scale_factor as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:336:39
    |
336 | ...                   + 0 as libc::c_int as intmax_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:336:39
    |
336 | ...                   + 0 as libc::c_int as intmax_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:338:29
    |
338 | / ...                   ((-(1 as libc::c_int) as libc::c_long
339 | | ...                       - 0 as libc::c_int as intmax_t)
340 | | ...                       < (scale_factor - 1 as libc::c_int) as libc::c_long)
341 | | ...                       as libc::c_int
    | |________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:338:31
    |
338 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:338:33
    |
338 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:339:35
    |
339 | ...                   - 0 as libc::c_int as intmax_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:339:35
    |
339 | ...                   - 0 as libc::c_int as intmax_t)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:340:35
    |
340 | ...                   < (scale_factor - 1 as libc::c_int) as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:340:51
    |
340 | ...                   < (scale_factor - 1 as libc::c_int) as libc::c_long)
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:344:25
    |
344 | /                         (0 as libc::c_int as intmax_t / *x
345 | |                             < scale_factor as libc::c_long) as libc::c_int
    | |__________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:344:26
    |
344 |                         (0 as libc::c_int as intmax_t / *x
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:344:26
    |
344 |                         (0 as libc::c_int as intmax_t / *x
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:345:31
    |
345 | ...                   < scale_factor as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:348:21
    |
348 | /                     ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
349 | |                         < *x) as libc::c_int
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:348:23
    |
348 |                     ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:348:25
    |
348 |                     ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:348:57
    |
348 |                     ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
    |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:355:11
    |
355 |         *(&mut scaled as *mut intmax_t) = fresh4;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:356:9
    |
356 |         1 as libc::c_int
    |         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:359:11
    |
359 |         *(&mut scaled as *mut intmax_t) = fresh6;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:360:9
    |
360 |         fresh7 as libc::c_int
    |         ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:363:22
    |
363 |         *x = if *x < 0 as libc::c_int as libc::c_long {
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:363:22
    |
363 |         *x = if *x < 0 as libc::c_int as libc::c_long {
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:364:18
    |
364 |             !if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:364:18
    |
364 |             !if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:364:50
    |
364 |             !if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:364:52
    |
364 |             !if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:365:17
    |
365 |                 -(1 as libc::c_int) as intmax_t
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:365:19
    |
365 |                 -(1 as libc::c_int) as intmax_t
    |                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:367:20
    |
367 |                 (((1 as libc::c_int as intmax_t)
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:367:20
    |
367 |                 (((1 as libc::c_int as intmax_t)
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:368:25
    |
368 |                     << (::core::mem::size_of::<intmax_t>() as libc::c_ulong)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:369:39
    |
369 |                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:369:39
    |
369 |                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:370:39
    |
370 |                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:370:39
    |
370 |                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:371:23
    |
371 |                     - 1 as libc::c_int as libc::c_long)
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:371:23
    |
371 |                     - 1 as libc::c_int as libc::c_long)
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:372:23
    |
372 |                     * 2 as libc::c_int as libc::c_long + 1 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:372:23
    |
372 |                     * 2 as libc::c_int as libc::c_long + 1 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:372:58
    |
372 |                     * 2 as libc::c_int as libc::c_long + 1 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:372:58
    |
372 |                     * 2 as libc::c_int as libc::c_long + 1 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:374:20
    |
374 |         } else if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:374:20
    |
374 |         } else if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:374:52
    |
374 |         } else if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:374:54
    |
374 |         } else if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:375:13
    |
375 |             -(1 as libc::c_int) as intmax_t
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:375:15
    |
375 |             -(1 as libc::c_int) as intmax_t
    |               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:377:16
    |
377 |             (((1 as libc::c_int as intmax_t)
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:377:16
    |
377 |             (((1 as libc::c_int as intmax_t)
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:378:21
    |
378 |                 << (::core::mem::size_of::<intmax_t>() as libc::c_ulong)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:379:35
    |
379 |                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:379:35
    |
379 |                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:380:35
    |
380 |                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:380:35
    |
380 |                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:381:19
    |
381 |                 - 1 as libc::c_int as libc::c_long) * 2 as libc::c_int as libc::c_long
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:381:19
    |
381 |                 - 1 as libc::c_int as libc::c_long) * 2 as libc::c_int as libc::c_long
    |                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:381:55
    |
381 |                 - 1 as libc::c_int as libc::c_long) * 2 as libc::c_int as libc::c_long
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:381:55
    |
381 |                 - 1 as libc::c_int as libc::c_long) * 2 as libc::c_int as libc::c_long
    |                                                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:382:19
    |
382 |                 + 1 as libc::c_int as libc::c_long
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:382:19
    |
382 |                 + 1 as libc::c_int as libc::c_long
    |                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:413:40
    |
413 |     let mut t_ptr: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:414:41
    |
414 |     let mut p: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:417:8
    |
417 |     if 0 as libc::c_int <= strtol_base && strtol_base <= 36 as libc::c_int {} else {
    |        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:417:58
    |
417 |     if 0 as libc::c_int <= strtol_base && strtol_base <= 36 as libc::c_int {} else {
    |                                                          ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:419:13
    |
419 | /             b"0 <= strtol_base && strtol_base <= 36\0" as *const u8
420 | |                 as *const libc::c_char,
    | |______________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:419:13
    |
419 |             b"0 <= strtol_base && strtol_base <= 36\0" as *const u8
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:421:13
    |
421 |             b"./include/xstrtol.c\0" as *const u8 as *const libc::c_char,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:421:13
    |
421 |             b"./include/xstrtol.c\0" as *const u8 as *const libc::c_char,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:422:13
    |
422 |             86 as libc::c_int as libc::c_uint,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:422:13
    |
422 |             86 as libc::c_int as libc::c_uint,
    |             ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:433:12
    |
433 |         if 0 as libc::c_int <= strtol_base && strtol_base <= 36 as libc::c_int {} else {
    |            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:433:62
    |
433 |         if 0 as libc::c_int <= strtol_base && strtol_base <= 36 as libc::c_int {} else {
    |                                                              ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:435:17
    |
435 | /                 b"0 <= strtol_base && strtol_base <= 36\0" as *const u8
436 | |                     as *const libc::c_char,
    | |__________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:435:17
    |
435 |                 b"0 <= strtol_base && strtol_base <= 36\0" as *const u8
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:437:17
    |
437 |                 b"./include/xstrtol.c\0" as *const u8 as *const libc::c_char,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:437:17
    |
437 |                 b"./include/xstrtol.c\0" as *const u8 as *const libc::c_char,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:438:17
    |
438 |                 86 as libc::c_int as libc::c_uint,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:438:17
    |
438 |                 86 as libc::c_int as libc::c_uint,
    |                 ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:450:27
    |
450 |     *__errno_location() = 0 as libc::c_int;
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:451:9
    |
451 |     if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:451:9
    |
451 |     if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:451:41
    |
451 |     if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:451:43
    |
451 |     if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:453:37
    |
453 |         let mut ch: libc::c_uchar = *q as libc::c_uchar;
    |                                     ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:454:15
    |
454 |         while *(*__ctype_b_loc()).offset(ch as libc::c_int as isize) as libc::c_int
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:454:42
    |
454 |         while *(*__ctype_b_loc()).offset(ch as libc::c_int as isize) as libc::c_int
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:454:42
    |
454 |         while *(*__ctype_b_loc()).offset(ch as libc::c_int as isize) as libc::c_int
    |                                          ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:455:15
    |
455 |             & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:455:15
    |
455 |             & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:455:15
    |
455 |             & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
    |               ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:458:18
    |
458 |             ch = *q as libc::c_uchar;
    |                  ^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:460:12
    |
460 |         if ch as libc::c_int == '-' as i32 {
    |            ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:460:33
    |
460 |         if ch as libc::c_int == '-' as i32 {
    |                                 ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: `if` expression with an `else if`, but without a final `else`
   --> src/xstrtoimax.rs:473:12
    |
473 |       } else if *__errno_location() != 0 as libc::c_int {
    |  ____________^
474 | |         if *__errno_location() != 34 as libc::c_int {
475 | |             return LONGINT_INVALID;
476 | |         }
477 | |         err = LONGINT_OVERFLOW;
478 | |     }
    | |_____^
    |
    = help: add an `else` block here
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#else_if_without_else

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:465:14
    |
465 |     if *p == s as *mut libc::c_char {
    |              ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:466:41
    |
466 |         if !valid_suffixes.is_null() && **p as libc::c_int != 0
    |                                         ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:467:41
    |
467 |             && !(strchr(valid_suffixes, **p as libc::c_int)).is_null()
    |                                         ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:469:19
    |
469 |             tmp = 1 as libc::c_int as intmax_t;
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:469:19
    |
469 |             tmp = 1 as libc::c_int as intmax_t;
    |                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:473:38
    |
473 |     } else if *__errno_location() != 0 as libc::c_int {
    |                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:474:35
    |
474 |         if *__errno_location() != 34 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:489:37
    |
489 |     if !valid_suffixes_str.contains(**p as u8 as char) {
    |                                     ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:489:37
    |
489 |     if !valid_suffixes_str.contains(**p as u8 as char) {
    |                                     ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:491:16
    |
491 |         return (err | LONGINT_INVALID_SUFFIX_CHAR) as strtol_error;
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:494:11
    |
494 |     match **p as u8 {
    |           ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:497:23
    |
497 |                 match unsafe { *(*p).offset(1) } as u8 {
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:499:28
    |
499 |                         if unsafe { *(*p).offset(2) } as u8 == b'B' {
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:514:11
    |
514 |     match **p as u8 {
    |           ^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:559:20
    |
559 |             return (err | LONGINT_INVALID_SUFFIX_CHAR) as strtol_error;
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:563:12
    |
563 |     err |= overflow as u32;
    |            ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/xstrtoimax.rs:564:31
    |
564 |     *p = unsafe { (*p).offset(suffixes as isize) };
    |                               ^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: unused variable: `len`
   --> src/xmalloc.rs:163:9
    |
163 |     let len = p.len();
    |         ^^^ help: if this is intentional, prefix it with an underscore: `_len`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unnecessary `unsafe` block
  --> src/fflush.rs:65:13
   |
65 |             unsafe { clear_ungetc_buffer_preserving_position(s) };
   |             ^^^^^^ unnecessary `unsafe` block
   |
   = note: `#[warn(unused_unsafe)]` on by default

warning: unnecessary `unsafe` block
  --> src/mbrtoc32.rs:81:9
   |
81 |         unsafe { mbszero(local_ps) };
   |         ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:490:17
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
490 |   let arg_slice = unsafe { std::slice::from_raw_parts(arg as *const u8, argsize as usize) };
    |                   ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`
    = note: `#[allow(unsafe_op_in_unsafe_fn)]` on by default

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:501:67
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
501 |       && &arg_slice[i as usize..(i + quote_string_len) as usize] == unsafe { std::slice::from_raw_parts(quote_string as *const u8, quote_st...
    |                                                                     ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:521:13
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
521 |               unsafe { *buffer.offset(len as isize) = '\'' as i8 };
    |               ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:525:13
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
525 |               unsafe { *buffer.offset(len as isize) = '$' as i8 };
    |               ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:529:13
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
529 |               unsafe { *buffer.offset(len as isize) = '\'' as i8 };
    |               ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:535:9
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
535 |           unsafe { *buffer.offset(len as isize) = '\\' as i8 };
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:540:26
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
540 |           && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                            ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:540:70
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
540 |           && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                                                        ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:543:13
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
543 |               unsafe { *buffer.offset(len as isize) = '0' as i8 };
    |               ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:547:13
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
547 |               unsafe { *buffer.offset(len as isize) = '0' as i8 };
    |               ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:785:9
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
785 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:792:9
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
792 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:799:9
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
799 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:896:24
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
896 |       let buffer_slice = unsafe { std::slice::from_raw_parts_mut(buffer, buffersize as usize) };
    |                          ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/quotearg.rs:958:13
    |
340 | / unsafe extern "C" fn quotearg_buffer_restyled(
341 | |     mut buffer: *mut libc::c_char,
342 | |     mut buffersize: size_t,
343 | |     mut arg: *const libc::c_char,
...   |
349 | |     mut right_quote: *const libc::c_char,
350 | | ) -> size_t {
    | |___________- because it's nested under this `unsafe` fn
...
958 |           c = unsafe { *arg.offset(i as isize) } as u8;
    |               ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1042:17
     |
340  | / unsafe extern "C" fn quotearg_buffer_restyled(
341  | |     mut buffer: *mut libc::c_char,
342  | |     mut buffersize: size_t,
343  | |     mut arg: *const libc::c_char,
...    |
349  | |     mut right_quote: *const libc::c_char,
350  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1042 |               && (unsafe { *quote_these_too.add(c as usize / (std::mem::size_of::<u32>() * 8)) } >> (c as usize % (std::mem::size_of::<u32>...
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1060:17
     |
340  | / unsafe extern "C" fn quotearg_buffer_restyled(
341  | |     mut buffer: *mut libc::c_char,
342  | |     mut buffersize: size_t,
343  | |     mut arg: *const libc::c_char,
...    |
349  | |     mut right_quote: *const libc::c_char,
350  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1060 |                   unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1064:17
     |
340  | / unsafe extern "C" fn quotearg_buffer_restyled(
341  | |     mut buffer: *mut libc::c_char,
342  | |     mut buffersize: size_t,
343  | |     mut arg: *const libc::c_char,
...    |
349  | |     mut right_quote: *const libc::c_char,
350  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1064 |                   unsafe { *buffer.add(len as usize) = '$' as i8; }
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1068:17
     |
340  | / unsafe extern "C" fn quotearg_buffer_restyled(
341  | |     mut buffer: *mut libc::c_char,
342  | |     mut buffersize: size_t,
343  | |     mut arg: *const libc::c_char,
...    |
349  | |     mut right_quote: *const libc::c_char,
350  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1068 |                   unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1074:13
     |
340  | / unsafe extern "C" fn quotearg_buffer_restyled(
341  | |     mut buffer: *mut libc::c_char,
342  | |     mut buffersize: size_t,
343  | |     mut arg: *const libc::c_char,
...    |
349  | |     mut right_quote: *const libc::c_char,
350  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1074 |               unsafe { *buffer.add(len as usize) = '\\' as i8; }
     |               ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1086:17
     |
340  | / unsafe extern "C" fn quotearg_buffer_restyled(
341  | |     mut buffer: *mut libc::c_char,
342  | |     mut buffersize: size_t,
343  | |     mut arg: *const libc::c_char,
...    |
349  | |     mut right_quote: *const libc::c_char,
350  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1086 |                   unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1090:17
     |
340  | / unsafe extern "C" fn quotearg_buffer_restyled(
341  | |     mut buffer: *mut libc::c_char,
342  | |     mut buffersize: size_t,
343  | |     mut arg: *const libc::c_char,
...    |
349  | |     mut right_quote: *const libc::c_char,
350  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1090 |                   unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1096:13
     |
340  | / unsafe extern "C" fn quotearg_buffer_restyled(
341  | |     mut buffer: *mut libc::c_char,
342  | |     mut buffersize: size_t,
343  | |     mut arg: *const libc::c_char,
...    |
349  | |     mut right_quote: *const libc::c_char,
350  | | ) -> size_t {
     | |___________- because it's nested under this `unsafe` fn
...
1096 |               unsafe { *buffer.add(len as usize) = c as i8; }
     |               ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/quotearg.rs:1646:19
     |
1645 | pub unsafe extern "C" fn quote(mut arg: *const libc::c_char) -> *const libc::c_char {
     | ----------------------------------------------------------------------------------- because it's nested under this `unsafe` fn
1646 |     let arg_str = unsafe { CStr::from_ptr(arg).to_string_lossy().into_owned() };
     |                   ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:111:9
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
74  | |     mut n_authors: size_t,
75  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
111 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:120:9
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
74  | |     mut n_authors: size_t,
75  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
120 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:130:9
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
74  | |     mut n_authors: size_t,
75  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
130 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:141:9
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
74  | |     mut n_authors: size_t,
75  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
141 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:153:9
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
74  | |     mut n_authors: size_t,
75  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
153 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:166:9
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
74  | |     mut n_authors: size_t,
75  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
166 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:180:9
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
74  | |     mut n_authors: size_t,
75  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
180 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:195:9
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
74  | |     mut n_authors: size_t,
75  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
195 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:211:9
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
74  | |     mut n_authors: size_t,
75  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
211 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/version_etc.rs:228:9
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
74  | |     mut n_authors: size_t,
75  | | ) {
    | |_- because it's nested under this `unsafe` fn
...
228 |           unsafe {
    |           ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/xstrtoimax.rs:488:30
    |
406 | / pub unsafe extern "C" fn xstrtoimax(
407 | |     mut s: *const libc::c_char,
408 | |     mut ptr: *mut *mut libc::c_char,
409 | |     mut strtol_base: libc::c_int,
410 | |     mut val: *mut intmax_t,
411 | |     mut valid_suffixes: *const libc::c_char,
412 | | ) -> strtol_error {
    | |_________________- because it's nested under this `unsafe` fn
...
488 |       let valid_suffixes_str = unsafe { std::ffi::CStr::from_ptr(valid_suffixes).to_string_lossy() };
    |                                ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/xstrtoimax.rs:497:23
    |
406 | / pub unsafe extern "C" fn xstrtoimax(
407 | |     mut s: *const libc::c_char,
408 | |     mut ptr: *mut *mut libc::c_char,
409 | |     mut strtol_base: libc::c_int,
410 | |     mut val: *mut intmax_t,
411 | |     mut valid_suffixes: *const libc::c_char,
412 | | ) -> strtol_error {
    | |_________________- because it's nested under this `unsafe` fn
...
497 |                   match unsafe { *(*p).offset(1) } as u8 {
    |                         ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/xstrtoimax.rs:499:28
    |
406 | / pub unsafe extern "C" fn xstrtoimax(
407 | |     mut s: *const libc::c_char,
408 | |     mut ptr: *mut *mut libc::c_char,
409 | |     mut strtol_base: libc::c_int,
410 | |     mut val: *mut intmax_t,
411 | |     mut valid_suffixes: *const libc::c_char,
412 | | ) -> strtol_error {
    | |_________________- because it's nested under this `unsafe` fn
...
499 |                           if unsafe { *(*p).offset(2) } as u8 == b'B' {
    |                              ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
   --> src/xstrtoimax.rs:564:10
    |
406 | / pub unsafe extern "C" fn xstrtoimax(
407 | |     mut s: *const libc::c_char,
408 | |     mut ptr: *mut *mut libc::c_char,
409 | |     mut strtol_base: libc::c_int,
410 | |     mut val: *mut intmax_t,
411 | |     mut valid_suffixes: *const libc::c_char,
412 | | ) -> strtol_error {
    | |_________________- because it's nested under this `unsafe` fn
...
564 |       *p = unsafe { (*p).offset(suffixes as isize) };
    |            ^^^^^^ unnecessary `unsafe` block
    |
    = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: missing documentation for the crate
  --> lib.rs:1:1
   |
1  | / #![allow(dead_code)]
2  | | #![allow(mutable_transmutes)]
3  | | #![allow(non_camel_case_types)]
4  | | #![allow(non_snake_case)]
...  |
41 | | pub mod xstrtoimax;
42 | | } // mod src
   | |_^
   |
   = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a module
  --> lib.rs:15:1
   |
15 | / pub mod src {
16 | | pub mod c32isprint;
17 | | pub mod c_ctype;
18 | | pub mod c_strcasecmp;
...  |
41 | | pub mod xstrtoimax;
42 | | } // mod src
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a module
  --> lib.rs:16:1
   |
16 | pub mod c32isprint;
   | ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a module
  --> lib.rs:17:1
   |
17 | pub mod c_ctype;
   | ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/c_ctype.rs:15:5
   |
15 | use std::ops::RangeInclusive;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::std-instead-of-core` implied by `-W clippy::restriction`
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a function
  --> src/c_ctype.rs:21:1
   |
21 | / pub fn c_isalnum(c: i32) -> bool {
22 | |     matches!(c, 48..=57 | 65..=90 | 97..=122)
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:22:5
   |
22 |     matches!(c, 48..=57 | 65..=90 | 97..=122)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return matches!(c, 48..=57 | 65..=90 | 97..=122)`
   |
   = note: `-W clippy::implicit-return` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:21:1
   |
21 | / pub fn c_isalnum(c: i32) -> bool {
22 | |     matches!(c, 48..=57 | 65..=90 | 97..=122)
23 | | }
   | |_^
   |
   = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
  --> src/c_ctype.rs:22:17
   |
22 |     matches!(c, 48..=57 | 65..=90 | 97..=122)
   |                 ^^ help: consider adding suffix: `48_i32`
   |
   = note: `-W clippy::default-numeric-fallback` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:22:22
   |
22 |     matches!(c, 48..=57 | 65..=90 | 97..=122)
   |                      ^^ help: consider adding suffix: `57_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:22:27
   |
22 |     matches!(c, 48..=57 | 65..=90 | 97..=122)
   |                           ^^ help: consider adding suffix: `65_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:22:32
   |
22 |     matches!(c, 48..=57 | 65..=90 | 97..=122)
   |                                ^^ help: consider adding suffix: `90_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:22:37
   |
22 |     matches!(c, 48..=57 | 65..=90 | 97..=122)
   |                                     ^^ help: consider adding suffix: `97_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:22:42
   |
22 |     matches!(c, 48..=57 | 65..=90 | 97..=122)
   |                                          ^^^ help: consider adding suffix: `122_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/c_ctype.rs:28:1
   |
28 | / pub fn c_isalpha(c: i32) -> bool {
29 | |     (b'a'..=b'z').contains(&(c as u8)) || (b'A'..=b'Z').contains(&(c as u8))
30 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:29:5
   |
29 |     (b'a'..=b'z').contains(&(c as u8)) || (b'A'..=b'Z').contains(&(c as u8))
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return (b'a'..=b'z').contains(&(c as u8)) || (b'A'..=b'Z').contains(&(c as u8))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: casting `i32` to `u8` may truncate the value
  --> src/c_ctype.rs:29:29
   |
29 |     (b'a'..=b'z').contains(&(c as u8)) || (b'A'..=b'Z').contains(&(c as u8))
   |                             ^^^^^^^^^
   |
   = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/c_ctype.rs:29:29
   |
29 |     (b'a'..=b'z').contains(&(c as u8)) || (b'A'..=b'Z').contains(&(c as u8))
   |                             ^^^^^^^^^
   |
   = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u8` may truncate the value
  --> src/c_ctype.rs:29:67
   |
29 |     (b'a'..=b'z').contains(&(c as u8)) || (b'A'..=b'Z').contains(&(c as u8))
   |                                                                   ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/c_ctype.rs:29:67
   |
29 |     (b'a'..=b'z').contains(&(c as u8)) || (b'A'..=b'Z').contains(&(c as u8))
   |                                                                   ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `return` statement
  --> src/c_ctype.rs:45:37
   |
45 |         | 86 | 87 | 88 | 89 | 90 => true,
   |                                     ^^^^ help: add `return` as shown: `return true`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
  --> src/c_ctype.rs:46:14
   |
46 |         _ => false,
   |              ^^^^^ help: add `return` as shown: `return false`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a function
  --> src/c_ctype.rs:35:1
   |
35 | / pub fn c_isascii(c: i32) -> bool {
36 | |     match c {
37 | |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
38 | |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
...  |
47 | |     }
48 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this could be a `const fn`
  --> src/c_ctype.rs:35:1
   |
35 | / pub fn c_isascii(c: i32) -> bool {
36 | |     match c {
37 | |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
38 | |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
...  |
47 | |     }
48 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:9
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |         ^^ help: consider adding suffix: `32_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:14
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |              ^ help: consider adding suffix: `7_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:18
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                  ^ help: consider adding suffix: `8_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:22
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                      ^^ help: consider adding suffix: `12_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:27
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                           ^^ help: consider adding suffix: `10_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:32
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                ^^ help: consider adding suffix: `13_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:37
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                     ^ help: consider adding suffix: `9_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:41
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                         ^^ help: consider adding suffix: `11_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:46
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                              ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:50
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                                  ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:54
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                                      ^ help: consider adding suffix: `2_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:58
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                                          ^ help: consider adding suffix: `3_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:62
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                                              ^ help: consider adding suffix: `4_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:66
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                                                  ^ help: consider adding suffix: `5_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:70
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                                                      ^ help: consider adding suffix: `6_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:74
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                                                          ^^ help: consider adding suffix: `14_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:79
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                                                               ^^ help: consider adding suffix: `15_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:37:84
   |
37 |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
   |                                                                                    ^^ help: consider adding suffix: `16_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:11
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |           ^^ help: consider adding suffix: `17_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:16
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                ^^ help: consider adding suffix: `18_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:21
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                     ^^ help: consider adding suffix: `19_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:26
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                          ^^ help: consider adding suffix: `20_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:31
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                               ^^ help: consider adding suffix: `21_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:36
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                                    ^^ help: consider adding suffix: `22_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:41
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                                         ^^ help: consider adding suffix: `23_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:46
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                                              ^^ help: consider adding suffix: `24_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:51
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                                                   ^^ help: consider adding suffix: `25_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:56
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                                                        ^^ help: consider adding suffix: `26_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:61
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                                                             ^^ help: consider adding suffix: `27_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:66
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                                                                  ^^ help: consider adding suffix: `28_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:71
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                                                                       ^^ help: consider adding suffix: `29_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:76
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                                                                            ^^ help: consider adding suffix: `30_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:81
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                                                                                 ^^ help: consider adding suffix: `31_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:38:86
   |
38 |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
   |                                                                                      ^^^ help: consider adding suffix: `127_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:11
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |           ^^ help: consider adding suffix: `48_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:16
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                ^^ help: consider adding suffix: `49_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:21
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                     ^^ help: consider adding suffix: `50_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:26
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                          ^^ help: consider adding suffix: `51_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:31
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                               ^^ help: consider adding suffix: `52_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:36
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                                    ^^ help: consider adding suffix: `53_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:41
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                                         ^^ help: consider adding suffix: `54_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:46
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                                              ^^ help: consider adding suffix: `55_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:51
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                                                   ^^ help: consider adding suffix: `56_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:56
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                                                        ^^ help: consider adding suffix: `57_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:61
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                                                             ^^ help: consider adding suffix: `97_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:66
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                                                                  ^^ help: consider adding suffix: `98_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:71
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                                                                       ^^ help: consider adding suffix: `99_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:76
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                                                                            ^^^ help: consider adding suffix: `100_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:39:82
   |
39 |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
   |                                                                                  ^^^ help: consider adding suffix: `101_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:11
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |           ^^^ help: consider adding suffix: `102_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:17
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |                 ^^^ help: consider adding suffix: `103_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:23
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |                       ^^^ help: consider adding suffix: `104_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:29
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |                             ^^^ help: consider adding suffix: `105_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:35
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |                                   ^^^ help: consider adding suffix: `106_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:41
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |                                         ^^^ help: consider adding suffix: `107_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:47
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |                                               ^^^ help: consider adding suffix: `108_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:53
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |                                                     ^^^ help: consider adding suffix: `109_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:59
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |                                                           ^^^ help: consider adding suffix: `110_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:65
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |                                                                 ^^^ help: consider adding suffix: `111_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:71
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |                                                                       ^^^ help: consider adding suffix: `112_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:77
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |                                                                             ^^^ help: consider adding suffix: `113_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:40:83
   |
40 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
   |                                                                                   ^^^ help: consider adding suffix: `114_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:11
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |           ^^^ help: consider adding suffix: `115_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:17
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                 ^^^ help: consider adding suffix: `116_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:23
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                       ^^^ help: consider adding suffix: `117_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:29
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                             ^^^ help: consider adding suffix: `118_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:35
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                                   ^^^ help: consider adding suffix: `119_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:41
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                                         ^^^ help: consider adding suffix: `120_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:47
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                                               ^^^ help: consider adding suffix: `121_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:53
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                                                     ^^^ help: consider adding suffix: `122_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:59
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                                                           ^^ help: consider adding suffix: `33_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:64
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                                                                ^^ help: consider adding suffix: `34_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:69
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                                                                     ^^ help: consider adding suffix: `35_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:74
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                                                                          ^^ help: consider adding suffix: `36_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:79
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                                                                               ^^ help: consider adding suffix: `37_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:41:84
   |
41 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
   |                                                                                    ^^ help: consider adding suffix: `38_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:11
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |           ^^ help: consider adding suffix: `39_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:16
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                ^^ help: consider adding suffix: `40_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:21
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                     ^^ help: consider adding suffix: `41_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:26
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                          ^^ help: consider adding suffix: `42_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:31
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                               ^^ help: consider adding suffix: `43_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:36
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                                    ^^ help: consider adding suffix: `44_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:41
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                                         ^^ help: consider adding suffix: `45_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:46
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                                              ^^ help: consider adding suffix: `46_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:51
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                                                   ^^ help: consider adding suffix: `47_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:56
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                                                        ^^ help: consider adding suffix: `58_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:61
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                                                             ^^ help: consider adding suffix: `59_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:66
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                                                                  ^^ help: consider adding suffix: `60_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:71
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                                                                       ^^ help: consider adding suffix: `61_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:76
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                                                                            ^^ help: consider adding suffix: `62_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:81
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                                                                                 ^^ help: consider adding suffix: `63_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:42:86
   |
42 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
   |                                                                                      ^^ help: consider adding suffix: `64_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:11
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |           ^^ help: consider adding suffix: `91_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:16
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                ^^ help: consider adding suffix: `92_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:21
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                     ^^ help: consider adding suffix: `93_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:26
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                          ^^ help: consider adding suffix: `94_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:31
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                               ^^ help: consider adding suffix: `95_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:36
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                                    ^^ help: consider adding suffix: `96_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:41
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                                         ^^^ help: consider adding suffix: `123_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:47
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                                               ^^^ help: consider adding suffix: `124_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:53
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                                                     ^^^ help: consider adding suffix: `125_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:59
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                                                           ^^^ help: consider adding suffix: `126_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:65
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                                                                 ^^ help: consider adding suffix: `65_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:70
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                                                                      ^^ help: consider adding suffix: `66_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:75
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                                                                           ^^ help: consider adding suffix: `67_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:80
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                                                                                ^^ help: consider adding suffix: `68_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:43:85
   |
43 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
   |                                                                                     ^^ help: consider adding suffix: `69_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:11
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |           ^^ help: consider adding suffix: `70_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:16
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                ^^ help: consider adding suffix: `71_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:21
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                     ^^ help: consider adding suffix: `72_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:26
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                          ^^ help: consider adding suffix: `73_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:31
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                               ^^ help: consider adding suffix: `74_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:36
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                                    ^^ help: consider adding suffix: `75_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:41
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                                         ^^ help: consider adding suffix: `76_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:46
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                                              ^^ help: consider adding suffix: `77_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:51
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                                                   ^^ help: consider adding suffix: `78_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:56
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                                                        ^^ help: consider adding suffix: `79_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:61
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                                                             ^^ help: consider adding suffix: `80_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:66
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                                                                  ^^ help: consider adding suffix: `81_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:71
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                                                                       ^^ help: consider adding suffix: `82_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:76
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                                                                            ^^ help: consider adding suffix: `83_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:81
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                                                                                 ^^ help: consider adding suffix: `84_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:44:86
   |
44 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
   |                                                                                      ^^ help: consider adding suffix: `85_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:45:11
   |
45 |         | 86 | 87 | 88 | 89 | 90 => true,
   |           ^^ help: consider adding suffix: `86_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:45:16
   |
45 |         | 86 | 87 | 88 | 89 | 90 => true,
   |                ^^ help: consider adding suffix: `87_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:45:21
   |
45 |         | 86 | 87 | 88 | 89 | 90 => true,
   |                     ^^ help: consider adding suffix: `88_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:45:26
   |
45 |         | 86 | 87 | 88 | 89 | 90 => true,
   |                          ^^ help: consider adding suffix: `89_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:45:31
   |
45 |         | 86 | 87 | 88 | 89 | 90 => true,
   |                               ^^ help: consider adding suffix: `90_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: match expression looks like `matches!` macro
  --> src/c_ctype.rs:36:5
   |
36 | /     match c {
37 | |         32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
38 | |         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
39 | |         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
...  |
46 | |         _ => false,
47 | |     }
   | |_____^
   |
   = note: `-W clippy::match-like-matches-macro` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro
help: try this
   |
36 ~     matches!(c, 32 | 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16
37 +         | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127
38 +         | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
39 +         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
40 +         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
41 +         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
42 +         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
43 +         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
44 +         | 86 | 87 | 88 | 89 | 90)
   |

warning: missing `return` statement
  --> src/c_ctype.rs:54:5
   |
54 |     c == ' ' as i32 || c == '\t' as i32
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return c == ' ' as i32 || c == '\t' as i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:53:1
   |
53 | / pub fn c_isblank(c: i32) -> bool {
54 | |     c == ' ' as i32 || c == '\t' as i32
55 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: missing `return` statement
  --> src/c_ctype.rs:63:88
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                                                                                        ^^^^ help: add `return` as shown: `return true`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a function
  --> src/c_ctype.rs:53:1
   |
53 | / pub fn c_isblank(c: i32) -> bool {
54 | |     c == ' ' as i32 || c == '\t' as i32
55 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/c_ctype.rs:64:14
   |
64 |         _ => false,
   |              ^^^^^ help: add `return` as shown: `return false`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:60:1
   |
60 | / pub fn c_iscntrl(c: i32) -> bool {
61 | |     match c {
62 | |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
63 | |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
64 | |         _ => false,
65 | |     }
66 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:9
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |         ^ help: consider adding suffix: `7_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:13
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |             ^ help: consider adding suffix: `8_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/c_ctype.rs:60:1
   |
60 | / pub fn c_iscntrl(c: i32) -> bool {
61 | |     match c {
62 | |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
63 | |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
64 | |         _ => false,
65 | |     }
66 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:17
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                 ^^ help: consider adding suffix: `12_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:22
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                      ^^ help: consider adding suffix: `10_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:27
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                           ^^ help: consider adding suffix: `13_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:32
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                ^ help: consider adding suffix: `9_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:36
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                    ^^ help: consider adding suffix: `11_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:41
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                         ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:45
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                             ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:49
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                                 ^ help: consider adding suffix: `2_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:53
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                                     ^ help: consider adding suffix: `3_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:57
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                                         ^ help: consider adding suffix: `4_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:61
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                                             ^ help: consider adding suffix: `5_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:65
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                                                 ^ help: consider adding suffix: `6_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:69
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                                                     ^^ help: consider adding suffix: `14_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:74
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                                                          ^^ help: consider adding suffix: `15_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:79
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                                                               ^^ help: consider adding suffix: `16_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:62:84
   |
62 |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
   |                                                                                    ^^ help: consider adding suffix: `17_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:11
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |           ^^ help: consider adding suffix: `18_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:16
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                ^^ help: consider adding suffix: `19_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:21
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                     ^^ help: consider adding suffix: `20_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:26
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                          ^^ help: consider adding suffix: `21_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:31
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                               ^^ help: consider adding suffix: `22_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:36
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                                    ^^ help: consider adding suffix: `23_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:41
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                                         ^^ help: consider adding suffix: `24_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:46
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                                              ^^ help: consider adding suffix: `25_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:51
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                                                   ^^ help: consider adding suffix: `26_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:56
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                                                        ^^ help: consider adding suffix: `27_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:61
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                                                             ^^ help: consider adding suffix: `28_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:66
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                                                                  ^^ help: consider adding suffix: `29_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:71
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                                                                       ^^ help: consider adding suffix: `30_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:76
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                                                                            ^^ help: consider adding suffix: `31_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:63:81
   |
63 |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
   |                                                                                 ^^^ help: consider adding suffix: `127_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: match expression looks like `matches!` macro
  --> src/c_ctype.rs:61:5
   |
61 | /     match c {
62 | |         7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
63 | |         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127 => true,
64 | |         _ => false,
65 | |     }
   | |_____^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro
help: try this
   |
61 ~     matches!(c, 7 | 8 | 12 | 10 | 13 | 9 | 11 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 14 | 15 | 16 | 17
62 +         | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 127)
   |

warning: missing `return` statement
  --> src/c_ctype.rs:72:5
   |
72 |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:71:1
   |
71 | / pub fn c_isdigit(c: i32) -> bool {
72 | |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
73 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
  --> src/c_ctype.rs:72:17
   |
72 |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
   |                 ^^ help: consider adding suffix: `48_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:72:22
   |
72 |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
   |                      ^^ help: consider adding suffix: `49_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:72:27
   |
72 |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
   |                           ^^ help: consider adding suffix: `50_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:72:32
   |
72 |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
   |                                ^^ help: consider adding suffix: `51_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/c_ctype.rs:71:1
   |
71 | / pub fn c_isdigit(c: i32) -> bool {
72 | |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
73 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/c_ctype.rs:72:37
   |
72 |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
   |                                     ^^ help: consider adding suffix: `52_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:72:42
   |
72 |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
   |                                          ^^ help: consider adding suffix: `53_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:72:47
   |
72 |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
   |                                               ^^ help: consider adding suffix: `54_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:72:52
   |
72 |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
   |                                                    ^^ help: consider adding suffix: `55_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:72:57
   |
72 |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
   |                                                         ^^ help: consider adding suffix: `56_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:72:62
   |
72 |     matches!(c, 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57)
   |                                                              ^^ help: consider adding suffix: `57_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing `return` statement
  --> src/c_ctype.rs:80:73
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |                                                                         ^^^^ help: add `return` as shown: `return true`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
  --> src/c_ctype.rs:81:14
   |
81 |         _ => false,
   |              ^^^^^ help: add `return` as shown: `return false`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:78:1
   |
78 | / pub fn c_isgraph(c: i32) -> bool {
79 | |     match c {
80 | |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
81 | |         _ => false,
82 | |     }
83 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
  --> src/c_ctype.rs:80:9
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |         ^^ help: consider adding suffix: `48_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:80:14
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |              ^^ help: consider adding suffix: `57_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:80:19
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |                   ^^ help: consider adding suffix: `97_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:80:24
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |                        ^^^ help: consider adding suffix: `122_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/c_ctype.rs:78:1
   |
78 | / pub fn c_isgraph(c: i32) -> bool {
79 | |     match c {
80 | |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
81 | |         _ => false,
82 | |     }
83 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/c_ctype.rs:80:30
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |                              ^^ help: consider adding suffix: `33_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:80:35
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |                                   ^^ help: consider adding suffix: `47_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:80:40
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |                                        ^^ help: consider adding suffix: `58_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:80:45
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |                                             ^^ help: consider adding suffix: `64_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:80:50
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |                                                  ^^ help: consider adding suffix: `91_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:80:55
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |                                                       ^^ help: consider adding suffix: `96_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:80:60
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |                                                            ^^^ help: consider adding suffix: `123_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:80:66
   |
80 |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
   |                                                                  ^^^ help: consider adding suffix: `126_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: match expression looks like `matches!` macro
  --> src/c_ctype.rs:79:5
   |
79 | /     match c {
80 | |         48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126 => true,
81 | |         _ => false,
82 | |     }
   | |_____^ help: try this: `matches!(c, 48..=57 | 97..=122 | 33..=47 | 58..=64 | 91..=96 | 123..=126)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro

warning: missing `return` statement
  --> src/c_ctype.rs:90:21
   |
90 |         97..=122 => true,
   |                     ^^^^ help: add `return` as shown: `return true`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
  --> src/c_ctype.rs:91:14
   |
91 |         _ => false,
   |              ^^^^^ help: add `return` as shown: `return false`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
  --> src/c_ctype.rs:88:1
   |
88 | / pub fn c_islower(c: i32) -> bool {
89 | |     match c {
90 | |         97..=122 => true,
91 | |         _ => false,
92 | |     }
93 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
  --> src/c_ctype.rs:90:9
   |
90 |         97..=122 => true,
   |         ^^ help: consider adding suffix: `97_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_ctype.rs:90:14
   |
90 |         97..=122 => true,
   |              ^^^ help: consider adding suffix: `122_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: match expression looks like `matches!` macro
  --> src/c_ctype.rs:89:5
   |
89 | /     match c {
90 | |         97..=122 => true,
91 | |         _ => false,
92 | |     }
   | |_____^ help: try this: `matches!(c, 97..=122)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro

warning: missing `return` statement
   --> src/c_ctype.rs:106:37
    |
106 |         | 86 | 87 | 88 | 89 | 90 => true,
    |                                     ^^^^ help: add `return` as shown: `return true`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a function
  --> src/c_ctype.rs:88:1
   |
88 | / pub fn c_islower(c: i32) -> bool {
89 | |     match c {
90 | |         97..=122 => true,
91 | |         _ => false,
92 | |     }
93 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/c_ctype.rs:107:14
    |
107 |         _ => false,
    |              ^^^^^ help: add `return` as shown: `return false`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
   --> src/c_ctype.rs:98:1
    |
98  | / pub fn c_isprint(c: i32) -> bool {
99  | |     match c {
100 | |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
101 | |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
...   |
108 | |     }
109 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:9
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |         ^^ help: consider adding suffix: `32_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:14
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |              ^^ help: consider adding suffix: `48_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:19
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                   ^^ help: consider adding suffix: `49_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:24
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                        ^^ help: consider adding suffix: `50_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:29
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                             ^^ help: consider adding suffix: `51_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/c_ctype.rs:98:1
    |
98  | / pub fn c_isprint(c: i32) -> bool {
99  | |     match c {
100 | |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
101 | |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
...   |
108 | |     }
109 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:34
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                                  ^^ help: consider adding suffix: `52_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:39
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                                       ^^ help: consider adding suffix: `53_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:44
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                                            ^^ help: consider adding suffix: `54_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:49
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                                                 ^^ help: consider adding suffix: `55_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:54
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                                                      ^^ help: consider adding suffix: `56_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:59
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                                                           ^^ help: consider adding suffix: `57_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:64
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                                                                ^^ help: consider adding suffix: `97_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:69
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                                                                     ^^ help: consider adding suffix: `98_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:74
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                                                                          ^^ help: consider adding suffix: `99_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:79
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                                                                               ^^^ help: consider adding suffix: `100_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:100:85
    |
100 |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
    |                                                                                     ^^^ help: consider adding suffix: `101_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:11
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |           ^^^ help: consider adding suffix: `102_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:17
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |                 ^^^ help: consider adding suffix: `103_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:23
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |                       ^^^ help: consider adding suffix: `104_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:29
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |                             ^^^ help: consider adding suffix: `105_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:35
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |                                   ^^^ help: consider adding suffix: `106_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:41
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |                                         ^^^ help: consider adding suffix: `107_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:47
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |                                               ^^^ help: consider adding suffix: `108_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:53
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |                                                     ^^^ help: consider adding suffix: `109_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:59
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |                                                           ^^^ help: consider adding suffix: `110_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:65
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |                                                                 ^^^ help: consider adding suffix: `111_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:71
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |                                                                       ^^^ help: consider adding suffix: `112_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:77
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |                                                                             ^^^ help: consider adding suffix: `113_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:101:83
    |
101 |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
    |                                                                                   ^^^ help: consider adding suffix: `114_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:11
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |           ^^^ help: consider adding suffix: `115_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:17
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                 ^^^ help: consider adding suffix: `116_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:23
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                       ^^^ help: consider adding suffix: `117_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:29
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                             ^^^ help: consider adding suffix: `118_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:35
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                                   ^^^ help: consider adding suffix: `119_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:41
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                                         ^^^ help: consider adding suffix: `120_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:47
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                                               ^^^ help: consider adding suffix: `121_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:53
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                                                     ^^^ help: consider adding suffix: `122_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:59
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                                                           ^^ help: consider adding suffix: `33_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:64
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                                                                ^^ help: consider adding suffix: `34_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:69
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                                                                     ^^ help: consider adding suffix: `35_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:74
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                                                                          ^^ help: consider adding suffix: `36_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:79
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                                                                               ^^ help: consider adding suffix: `37_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:102:84
    |
102 |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
    |                                                                                    ^^ help: consider adding suffix: `38_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:11
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |           ^^ help: consider adding suffix: `39_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:16
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                ^^ help: consider adding suffix: `40_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:21
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                     ^^ help: consider adding suffix: `41_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:26
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                          ^^ help: consider adding suffix: `42_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:31
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                               ^^ help: consider adding suffix: `43_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:36
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                                    ^^ help: consider adding suffix: `44_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:41
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                                         ^^ help: consider adding suffix: `45_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:46
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                                              ^^ help: consider adding suffix: `46_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:51
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                                                   ^^ help: consider adding suffix: `47_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:56
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                                                        ^^ help: consider adding suffix: `58_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:61
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                                                             ^^ help: consider adding suffix: `59_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:66
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                                                                  ^^ help: consider adding suffix: `60_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:71
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                                                                       ^^ help: consider adding suffix: `61_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:76
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                                                                            ^^ help: consider adding suffix: `62_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:81
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                                                                                 ^^ help: consider adding suffix: `63_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:103:86
    |
103 |         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
    |                                                                                      ^^ help: consider adding suffix: `64_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:11
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |           ^^ help: consider adding suffix: `91_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:16
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                ^^ help: consider adding suffix: `92_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:21
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                     ^^ help: consider adding suffix: `93_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:26
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                          ^^ help: consider adding suffix: `94_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:31
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                               ^^ help: consider adding suffix: `95_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:36
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                                    ^^ help: consider adding suffix: `96_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:41
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                                         ^^^ help: consider adding suffix: `123_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:47
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                                               ^^^ help: consider adding suffix: `124_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:53
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                                                     ^^^ help: consider adding suffix: `125_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:59
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                                                           ^^^ help: consider adding suffix: `126_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:65
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                                                                 ^^ help: consider adding suffix: `65_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:70
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                                                                      ^^ help: consider adding suffix: `66_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:75
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                                                                           ^^ help: consider adding suffix: `67_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:80
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                                                                                ^^ help: consider adding suffix: `68_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:104:85
    |
104 |         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
    |                                                                                     ^^ help: consider adding suffix: `69_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:11
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |           ^^ help: consider adding suffix: `70_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:16
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                ^^ help: consider adding suffix: `71_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:21
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                     ^^ help: consider adding suffix: `72_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:26
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                          ^^ help: consider adding suffix: `73_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:31
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                               ^^ help: consider adding suffix: `74_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:36
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                                    ^^ help: consider adding suffix: `75_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:41
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                                         ^^ help: consider adding suffix: `76_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:46
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                                              ^^ help: consider adding suffix: `77_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:51
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                                                   ^^ help: consider adding suffix: `78_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:56
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                                                        ^^ help: consider adding suffix: `79_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:61
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                                                             ^^ help: consider adding suffix: `80_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:66
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                                                                  ^^ help: consider adding suffix: `81_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:71
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                                                                       ^^ help: consider adding suffix: `82_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:76
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                                                                            ^^ help: consider adding suffix: `83_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:81
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                                                                                 ^^ help: consider adding suffix: `84_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:105:86
    |
105 |         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
    |                                                                                      ^^ help: consider adding suffix: `85_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:106:11
    |
106 |         | 86 | 87 | 88 | 89 | 90 => true,
    |           ^^ help: consider adding suffix: `86_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:106:16
    |
106 |         | 86 | 87 | 88 | 89 | 90 => true,
    |                ^^ help: consider adding suffix: `87_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:106:21
    |
106 |         | 86 | 87 | 88 | 89 | 90 => true,
    |                     ^^ help: consider adding suffix: `88_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:106:26
    |
106 |         | 86 | 87 | 88 | 89 | 90 => true,
    |                          ^^ help: consider adding suffix: `89_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:106:31
    |
106 |         | 86 | 87 | 88 | 89 | 90 => true,
    |                               ^^ help: consider adding suffix: `90_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: match expression looks like `matches!` macro
   --> src/c_ctype.rs:99:5
    |
99  | /     match c {
100 | |         32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
101 | |         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
102 | |         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
...   |
107 | |         _ => false,
108 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro
help: try this
    |
99  ~     matches!(c, 32 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55 | 56 | 57 | 97 | 98 | 99 | 100 | 101
100 +         | 102 | 103 | 104 | 105 | 106 | 107 | 108 | 109 | 110 | 111 | 112 | 113 | 114
101 +         | 115 | 116 | 117 | 118 | 119 | 120 | 121 | 122 | 33 | 34 | 35 | 36 | 37 | 38
102 +         | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58 | 59 | 60 | 61 | 62 | 63 | 64
103 +         | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125 | 126 | 65 | 66 | 67 | 68 | 69
104 +         | 70 | 71 | 72 | 73 | 74 | 75 | 76 | 77 | 78 | 79 | 80 | 81 | 82 | 83 | 84 | 85
105 +         | 86 | 87 | 88 | 89 | 90)
    |

warning: missing `return` statement
   --> src/c_ctype.rs:118:18
    |
118 |         | 126 => true,
    |                  ^^^^ help: add `return` as shown: `return true`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/c_ctype.rs:119:14
    |
119 |         _ => false,
    |              ^^^^^ help: add `return` as shown: `return false`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
   --> src/c_ctype.rs:114:1
    |
114 | / pub fn c_ispunct(c: i32) -> bool {
115 | |     match c {
116 | |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
117 | |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
...   |
120 | |     }
121 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:9
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |         ^^ help: consider adding suffix: `33_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:14
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |              ^^ help: consider adding suffix: `34_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:19
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                   ^^ help: consider adding suffix: `35_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/c_ctype.rs:114:1
    |
114 | / pub fn c_ispunct(c: i32) -> bool {
115 | |     match c {
116 | |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
117 | |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
...   |
120 | |     }
121 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:24
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                        ^^ help: consider adding suffix: `36_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:29
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                             ^^ help: consider adding suffix: `37_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:34
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                                  ^^ help: consider adding suffix: `38_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:39
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                                       ^^ help: consider adding suffix: `39_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:44
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                                            ^^ help: consider adding suffix: `40_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:49
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                                                 ^^ help: consider adding suffix: `41_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:54
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                                                      ^^ help: consider adding suffix: `42_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:59
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                                                           ^^ help: consider adding suffix: `43_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:64
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                                                                ^^ help: consider adding suffix: `44_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:69
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                                                                     ^^ help: consider adding suffix: `45_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:74
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                                                                          ^^ help: consider adding suffix: `46_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:79
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                                                                               ^^ help: consider adding suffix: `47_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:116:84
    |
116 |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
    |                                                                                    ^^ help: consider adding suffix: `58_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:11
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |           ^^ help: consider adding suffix: `59_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:16
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                ^^ help: consider adding suffix: `60_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:21
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                     ^^ help: consider adding suffix: `61_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:26
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                          ^^ help: consider adding suffix: `62_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:31
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                               ^^ help: consider adding suffix: `63_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:36
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                                    ^^ help: consider adding suffix: `64_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:41
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                                         ^^ help: consider adding suffix: `91_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:46
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                                              ^^ help: consider adding suffix: `92_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:51
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                                                   ^^ help: consider adding suffix: `93_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:56
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                                                        ^^ help: consider adding suffix: `94_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:61
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                                                             ^^ help: consider adding suffix: `95_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:66
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                                                                  ^^ help: consider adding suffix: `96_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:71
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                                                                       ^^^ help: consider adding suffix: `123_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:77
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                                                                             ^^^ help: consider adding suffix: `124_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:117:83
    |
117 |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
    |                                                                                   ^^^ help: consider adding suffix: `125_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:118:11
    |
118 |         | 126 => true,
    |           ^^^ help: consider adding suffix: `126_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: match expression looks like `matches!` macro
   --> src/c_ctype.rs:115:5
    |
115 | /     match c {
116 | |         33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
117 | |         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
118 | |         | 126 => true,
119 | |         _ => false,
120 | |     }
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro
help: try this
    |
115 ~     matches!(c, 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 58
116 +         | 59 | 60 | 61 | 62 | 63 | 64 | 91 | 92 | 93 | 94 | 95 | 96 | 123 | 124 | 125
117 +         | 126)
    |

warning: missing `return` statement
   --> src/c_ctype.rs:128:39
    |
128 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |                                       ^^^^ help: add `return` as shown: `return true`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/c_ctype.rs:129:14
    |
129 |         _ => false,
    |              ^^^^^ help: add `return` as shown: `return false`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
   --> src/c_ctype.rs:126:1
    |
126 | / pub fn c_isspace(c: i32) -> bool {
127 | |     match c {
128 | |         32 | 9 | 10 | 11 | 12 | 13 => true,
129 | |         _ => false,
130 | |     }
131 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
   --> src/c_ctype.rs:128:9
    |
128 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |         ^^ help: consider adding suffix: `32_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:128:14
    |
128 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |              ^ help: consider adding suffix: `9_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:128:18
    |
128 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |                  ^^ help: consider adding suffix: `10_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/c_ctype.rs:126:1
    |
126 | / pub fn c_isspace(c: i32) -> bool {
127 | |     match c {
128 | |         32 | 9 | 10 | 11 | 12 | 13 => true,
129 | |         _ => false,
130 | |     }
131 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/c_ctype.rs:128:23
    |
128 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |                       ^^ help: consider adding suffix: `11_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:128:28
    |
128 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |                            ^^ help: consider adding suffix: `12_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:128:33
    |
128 |         32 | 9 | 10 | 11 | 12 | 13 => true,
    |                                 ^^ help: consider adding suffix: `13_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: match expression looks like `matches!` macro
   --> src/c_ctype.rs:127:5
    |
127 | /     match c {
128 | |         32 | 9 | 10 | 11 | 12 | 13 => true,
129 | |         _ => false,
130 | |     }
    | |_____^ help: try this: `matches!(c, 32 | 9 | 10 | 11 | 12 | 13)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_like_matches_macro

warning: missing `return` statement
   --> src/c_ctype.rs:137:5
    |
137 |     (65..=90).contains(&c)
    |     ^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return (65..=90).contains(&c)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: default numeric fallback might occur
   --> src/c_ctype.rs:137:6
    |
137 |     (65..=90).contains(&c)
    |      ^^ help: consider adding suffix: `65_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:137:11
    |
137 |     (65..=90).contains(&c)
    |           ^^ help: consider adding suffix: `90_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing `return` statement
   --> src/c_ctype.rs:144:5
    |
144 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return matches!(c, 48..=57 | 97..=102 | 65..=70)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
   --> src/c_ctype.rs:143:1
    |
143 | / pub fn c_isxdigit(c: i32) -> bool {
144 | |     matches!(c, 48..=57 | 97..=102 | 65..=70)
145 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
   --> src/c_ctype.rs:144:17
    |
144 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |                 ^^ help: consider adding suffix: `48_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:144:22
    |
144 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |                      ^^ help: consider adding suffix: `57_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/c_ctype.rs:136:1
    |
136 | / pub fn c_isupper(c: i32) -> bool {
137 | |     (65..=90).contains(&c)
138 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/c_ctype.rs:144:27
    |
144 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |                           ^^ help: consider adding suffix: `97_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:144:32
    |
144 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |                                ^^^ help: consider adding suffix: `102_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:144:38
    |
144 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |                                      ^^ help: consider adding suffix: `65_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:144:43
    |
144 |     matches!(c, 48..=57 | 97..=102 | 65..=70)
    |                                           ^^ help: consider adding suffix: `70_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/c_ctype.rs:143:1
    |
143 | / pub fn c_isxdigit(c: i32) -> bool {
144 | |     matches!(c, 48..=57 | 97..=102 | 65..=70)
145 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/c_ctype.rs:152:20
    |
152 |         65..=90 => c + ('a' as i32 - 'A' as i32),
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return c + ('a' as i32 - 'A' as i32)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/c_ctype.rs:153:14
    |
153 |         _ => c,
    |              ^ help: add `return` as shown: `return c`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
   --> src/c_ctype.rs:150:1
    |
150 | / pub fn c_tolower(c: i32) -> i32 {
151 | |     match c {
152 | |         65..=90 => c + ('a' as i32 - 'A' as i32),
153 | |         _ => c,
154 | |     }
155 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
   --> src/c_ctype.rs:152:9
    |
152 |         65..=90 => c + ('a' as i32 - 'A' as i32),
    |         ^^ help: consider adding suffix: `65_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:152:14
    |
152 |         65..=90 => c + ('a' as i32 - 'A' as i32),
    |              ^^ help: consider adding suffix: `90_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: arithmetic detected
   --> src/c_ctype.rs:152:20
    |
152 |         65..=90 => c + ('a' as i32 - 'A' as i32),
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::arithmetic` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/c_ctype.rs:152:20
    |
152 |         65..=90 => c + ('a' as i32 - 'A' as i32),
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::integer-arithmetic` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `return` statement
   --> src/c_ctype.rs:162:21
    |
162 |         97..=122 => c - ('a' as i32) + ('A' as i32),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return c - ('a' as i32) + ('A' as i32)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/c_ctype.rs:163:14
    |
163 |         _ => c,
    |              ^ help: add `return` as shown: `return c`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a function
   --> src/c_ctype.rs:150:1
    |
150 | / pub fn c_tolower(c: i32) -> i32 {
151 | |     match c {
152 | |         65..=90 => c + ('a' as i32 - 'A' as i32),
153 | |         _ => c,
154 | |     }
155 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this could be a `const fn`
   --> src/c_ctype.rs:160:1
    |
160 | / pub fn c_toupper(c: i32) -> i32 {
161 | |     match c {
162 | |         97..=122 => c - ('a' as i32) + ('A' as i32),
163 | |         _ => c,
164 | |     }
165 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: default numeric fallback might occur
   --> src/c_ctype.rs:162:9
    |
162 |         97..=122 => c - ('a' as i32) + ('A' as i32),
    |         ^^ help: consider adding suffix: `97_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/c_ctype.rs:162:14
    |
162 |         97..=122 => c - ('a' as i32) + ('A' as i32),
    |              ^^^ help: consider adding suffix: `122_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: arithmetic detected
   --> src/c_ctype.rs:162:21
    |
162 |         97..=122 => c - ('a' as i32) + ('A' as i32),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/c_ctype.rs:162:21
    |
162 |         97..=122 => c - ('a' as i32) + ('A' as i32),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `return` statement
 --> src/c_strcasecmp.rs:6:20
  |
6 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return c - 'A' as i32 + 'a' as i32`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
 --> src/c_strcasecmp.rs:7:14
  |
7 |         _ => c,
  |              ^ help: add `return` as shown: `return c`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
 --> src/c_strcasecmp.rs:4:1
  |
4 | / fn c_tolower(c: i32) -> i32 {
5 | |     match c {
6 | |         65..=90 => c - 'A' as i32 + 'a' as i32,
7 | |         _ => c,
8 | |     }
9 | | }
  | |_^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: missing documentation for a function
   --> src/c_ctype.rs:160:1
    |
160 | / pub fn c_toupper(c: i32) -> i32 {
161 | |     match c {
162 | |         97..=122 => c - ('a' as i32) + ('A' as i32),
163 | |         _ => c,
164 | |     }
165 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
 --> src/c_strcasecmp.rs:6:9
  |
6 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |         ^^ help: consider adding suffix: `65_i32`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
 --> src/c_strcasecmp.rs:6:14
  |
6 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |              ^^ help: consider adding suffix: `90_i32`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: arithmetic detected
 --> src/c_strcasecmp.rs:6:20
  |
6 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
 --> src/c_strcasecmp.rs:6:20
  |
6 |         65..=90 => c - 'A' as i32 + 'a' as i32,
  |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unsafe function's docs miss `# Safety` section
  --> src/c_strcasecmp.rs:12:1
   |
12 | / pub unsafe extern "C" fn c_strcasecmp(
13 | |     mut s1: *const libc::c_char,
14 | |     mut s2: *const libc::c_char,
15 | | ) -> libc::c_int {
...  |
44 | |     };
45 | | }
   | |_^
   |
   = note: `-W clippy::missing-safety-doc` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this boolean expression can be simplified
  --> src/c_strcasecmp.rs:33:12
   |
33 |         if !(c1 as libc::c_int == c2 as libc::c_int) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `c1 as libc::c_int != c2 as libc::c_int`
   |
   = note: `-W clippy::nonminimal-bool` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: unneeded `return` statement
  --> src/c_strcasecmp.rs:40:9
   |
40 |         return c1 as libc::c_int - c2 as libc::c_int
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `c1 as libc::c_int - c2 as libc::c_int`
   |
   = note: `-W clippy::needless-return` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
  --> src/c_strcasecmp.rs:42:9
   |
42 | /         return (c1 as libc::c_int > c2 as libc::c_int) as libc::c_int
43 | |             - ((c1 as libc::c_int) < c2 as libc::c_int) as libc::c_int
   | |______________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
42 ~         (c1 as libc::c_int > c2 as libc::c_int) as libc::c_int
43 +             - ((c1 as libc::c_int) < c2 as libc::c_int) as libc::c_int
   |

warning: missing documentation for a module
  --> lib.rs:18:1
   |
18 | pub mod c_strcasecmp;
   | ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/c_strcasecmp.rs:21:16
   |
21 |         return 0 as libc::c_int;
   |                ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
 --> src/c_strcasecmp.rs:4:1
  |
4 | / fn c_tolower(c: i32) -> i32 {
5 | |     match c {
6 | |         65..=90 => c - 'A' as i32 + 'a' as i32,
7 | |         _ => c,
8 | |     }
9 | | }
  | |_^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/c_strcasecmp.rs:37:8
   |
37 |     if 127 as libc::c_int * 2 as libc::c_int + 1 as libc::c_int
   |        ^^^ help: consider adding suffix: `127_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_strcasecmp.rs:37:29
   |
37 |     if 127 as libc::c_int * 2 as libc::c_int + 1 as libc::c_int
   |                             ^ help: consider adding suffix: `2_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_strcasecmp.rs:37:48
   |
37 |     if 127 as libc::c_int * 2 as libc::c_int + 1 as libc::c_int
   |                                                ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/c_strcasecmp.rs:38:12
   |
38 |         <= 2147483647 as libc::c_int
   |            ^^^^^^^^^^ help: consider adding suffix: `2_147_483_647_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `as` casting between raw pointers without changing its mutability
  --> src/c_strcasecmp.rs:16:40
   |
16 |     let mut p1: *const libc::c_uchar = s1 as *const libc::c_uchar;
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `s1.cast::<u8>()`
   |
   = note: `-W clippy::ptr-as-ptr` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
  --> src/c_strcasecmp.rs:17:40
   |
17 |     let mut p2: *const libc::c_uchar = s2 as *const libc::c_uchar;
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `s2.cast::<u8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i32` to `u8` may truncate the value
  --> src/c_strcasecmp.rs:24:18
   |
24 |         let c1 = c_tolower(*p1 as i32) as u8;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/c_strcasecmp.rs:24:18
   |
24 |         let c1 = c_tolower(*p1 as i32) as u8;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:24:28
   |
24 |         let c1 = c_tolower(*p1 as i32) as u8;
   |                            ^^^^^^^^^^ help: try: `i32::from(*p1)`
   |
   = note: `-W clippy::cast-lossless` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/c_strcasecmp.rs:12:1
   |
12 | / pub unsafe extern "C" fn c_strcasecmp(
13 | |     mut s1: *const libc::c_char,
14 | |     mut s2: *const libc::c_char,
15 | | ) -> libc::c_int {
...  |
44 | |     };
45 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
  --> src/c_strcasecmp.rs:12:1
   |
12 | / pub unsafe extern "C" fn c_strcasecmp(
13 | |     mut s1: *const libc::c_char,
14 | |     mut s2: *const libc::c_char,
15 | | ) -> libc::c_int {
...  |
44 | |     };
45 | | }
   | |_^
   |
   = note: `-W clippy::missing-inline-in-public-items` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: `c1` shadows a previous, unrelated binding
  --> src/c_strcasecmp.rs:24:13
   |
24 |         let c1 = c_tolower(*p1 as i32) as u8;
   |             ^^
   |
   = note: `-W clippy::shadow-unrelated` implied by `-W clippy::restriction`
note: previous binding is here
  --> src/c_strcasecmp.rs:18:9
   |
18 |     let mut c1: libc::c_uchar = 0;
   |         ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: casting `i32` to `u8` may truncate the value
  --> src/c_strcasecmp.rs:25:18
   |
25 |         let c2 = c_tolower(*p2 as i32) as u8;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i32` to `u8` may lose the sign of the value
  --> src/c_strcasecmp.rs:25:18
   |
25 |         let c2 = c_tolower(*p2 as i32) as u8;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:25:28
   |
25 |         let c2 = c_tolower(*p2 as i32) as u8;
   |                            ^^^^^^^^^^ help: try: `i32::from(*p2)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: `c2` shadows a previous, unrelated binding
  --> src/c_strcasecmp.rs:25:13
   |
25 |         let c2 = c_tolower(*p2 as i32) as u8;
   |             ^^
   |
note: previous binding is here
  --> src/c_strcasecmp.rs:19:9
   |
19 |     let mut c2: libc::c_uchar = 0;
   |         ^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:26:12
   |
26 |         if c1 as libc::c_int == '\0' as i32 {
   |            ^^^^^^^^^^^^^^^^^ help: try: `i32::from(c1)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: statement with no effect
  --> src/c_strcasecmp.rs:30:9
   |
30 |         p1;
   |         ^^^
   |
   = note: `-W clippy::no-effect` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
  --> src/c_strcasecmp.rs:32:9
   |
32 |         p2;
   |         ^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:33:14
   |
33 |         if !(c1 as libc::c_int == c2 as libc::c_int) {
   |              ^^^^^^^^^^^^^^^^^ help: try: `i32::from(c1)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:33:35
   |
33 |         if !(c1 as libc::c_int == c2 as libc::c_int) {
   |                                   ^^^^^^^^^^^^^^^^^ help: try: `i32::from(c2)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
  --> src/c_strcasecmp.rs:37:8
   |
37 |     if 127 as libc::c_int * 2 as libc::c_int + 1 as libc::c_int
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/c_strcasecmp.rs:37:8
   |
37 |     if 127 as libc::c_int * 2 as libc::c_int + 1 as libc::c_int
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
  --> src/c_strcasecmp.rs:40:16
   |
40 |         return c1 as libc::c_int - c2 as libc::c_int
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/c_strcasecmp.rs:40:16
   |
40 |         return c1 as libc::c_int - c2 as libc::c_int
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:40:16
   |
40 |         return c1 as libc::c_int - c2 as libc::c_int
   |                ^^^^^^^^^^^^^^^^^ help: try: `i32::from(c1)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:40:36
   |
40 |         return c1 as libc::c_int - c2 as libc::c_int
   |                                    ^^^^^^^^^^^^^^^^^ help: try: `i32::from(c2)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
  --> src/c_strcasecmp.rs:42:16
   |
42 |           return (c1 as libc::c_int > c2 as libc::c_int) as libc::c_int
   |  ________________^
43 | |             - ((c1 as libc::c_int) < c2 as libc::c_int) as libc::c_int
   | |______________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/c_strcasecmp.rs:42:16
   |
42 |           return (c1 as libc::c_int > c2 as libc::c_int) as libc::c_int
   |  ________________^
43 | |             - ((c1 as libc::c_int) < c2 as libc::c_int) as libc::c_int
   | |______________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
  --> src/c_strcasecmp.rs:42:16
   |
42 |         return (c1 as libc::c_int > c2 as libc::c_int) as libc::c_int
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(c1 as libc::c_int > c2 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:42:17
   |
42 |         return (c1 as libc::c_int > c2 as libc::c_int) as libc::c_int
   |                 ^^^^^^^^^^^^^^^^^ help: try: `i32::from(c1)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:42:37
   |
42 |         return (c1 as libc::c_int > c2 as libc::c_int) as libc::c_int
   |                                     ^^^^^^^^^^^^^^^^^ help: try: `i32::from(c2)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
  --> src/c_strcasecmp.rs:43:15
   |
43 |             - ((c1 as libc::c_int) < c2 as libc::c_int) as libc::c_int
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from((c1 as libc::c_int) < c2 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:43:16
   |
43 |             - ((c1 as libc::c_int) < c2 as libc::c_int) as libc::c_int
   |                ^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(c1)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u8` to `i32` may become silently lossy if you later change the type
  --> src/c_strcasecmp.rs:43:38
   |
43 |             - ((c1 as libc::c_int) < c2 as libc::c_int) as libc::c_int
   |                                      ^^^^^^^^^^^^^^^^^ help: try: `i32::from(c2)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: exported structs should not be exhaustive
  --> src/close_stream.rs:17:1
   |
17 | / pub struct _IO_FILE {
18 | |     pub _flags: libc::c_int,
19 | |     pub _IO_read_ptr: *mut libc::c_char,
20 | |     pub _IO_read_end: *mut libc::c_char,
...  |
46 | |     pub _unused2: [libc::c_char; 20],
47 | | }
   | |_^
   |
   = note: `-W clippy::exhaustive-structs` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
17 | #[non_exhaustive]
   |

warning: unnecessary structure name repetition
  --> src/close_stream.rs:31:22
   |
31 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = note: `-W clippy::use-self` implied by `-W clippy::nursery`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/close_stream.rs:42:29
   |
42 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/close_stream.rs:52:50
   |
52 |     let some_pending: bool = unsafe { __fpending(stream) != 0 };
   |                                                  ^^^^^^
   |
   = note: `-W clippy::not-unsafe-ptr-arg-deref` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/close_stream.rs:53:52
   |
53 |     let prev_fail: bool = unsafe { ferror_unlocked(stream) != 0 };
   |                                                    ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/close_stream.rs:54:49
   |
54 |     let fclose_fail: bool = unsafe { rpl_fclose(stream) != 0 };
   |                                                 ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: unneeded `return` statement
  --> src/close_stream.rs:64:5
   |
64 |     return 0;
   |     ^^^^^^^^^ help: remove `return`: `0`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
  --> src/close_stream.rs:57:77
   |
57 |         || (fclose_fail && (some_pending || unsafe { *__errno_location() != 9 }))
   |                                                                             ^ help: consider adding suffix: `9_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/close_stream.rs:60:44
   |
60 |             unsafe { *__errno_location() = 0 };
   |                                            ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/close_stream.rs:62:17
   |
62 |         return -1;
   |                 ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/close_stream.rs:64:12
   |
64 |     return 0;
   |            ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: unsafe block missing a safety comment
  --> src/close_stream.rs:52:30
   |
52 |     let some_pending: bool = unsafe { __fpending(stream) != 0 };
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::undocumented-unsafe-blocks` implied by `-W clippy::restriction`
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/close_stream.rs:53:27
   |
53 |     let prev_fail: bool = unsafe { ferror_unlocked(stream) != 0 };
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/close_stream.rs:54:29
   |
54 |     let fclose_fail: bool = unsafe { rpl_fclose(stream) != 0 };
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a module
  --> lib.rs:19:1
   |
19 | pub mod close_stream;
   | ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/close_stream.rs:57:45
   |
57 |         || (fclose_fail && (some_pending || unsafe { *__errno_location() != 9 }))
   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
  --> src/close_stream.rs:12:1
   |
12 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/close_stream.rs:60:13
   |
60 |             unsafe { *__errno_location() = 0 };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
  --> src/close_stream.rs:13:1
   |
13 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `alloc`
 --> src/closeout.rs:2:5
  |
2 | use std::ffi::CString;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: `-W clippy::std-instead-of-alloc` implied by `-W clippy::restriction`
  = help: consider importing the item from `alloc`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: missing documentation for a type alias
  --> src/close_stream.rs:14:1
   |
14 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
  --> src/closeout.rs:27:1
   |
27 | / pub struct _IO_FILE {
28 | |     pub _flags: libc::c_int,
29 | |     pub _IO_read_ptr: *mut libc::c_char,
30 | |     pub _IO_read_end: *mut libc::c_char,
...  |
56 | |     pub _unused2: [libc::c_char; 20],
57 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
27 | #[non_exhaustive]
   |

warning: missing documentation for a struct
  --> src/close_stream.rs:17:1
   |
17 | / pub struct _IO_FILE {
18 | |     pub _flags: libc::c_int,
19 | |     pub _IO_read_ptr: *mut libc::c_char,
20 | |     pub _IO_read_end: *mut libc::c_char,
...  |
46 | |     pub _unused2: [libc::c_char; 20],
47 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
  --> src/closeout.rs:41:22
   |
41 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/closeout.rs:52:29
   |
52 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a struct field
  --> src/close_stream.rs:18:5
   |
18 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `expect()` on `a Result` value
  --> src/closeout.rs:67:20
   |
67 |     let c_string = CString::new(file).expect("CString::new failed");
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::expect-used` implied by `-W clippy::restriction`
   = help: if this value is an `Err`, it will panic
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: missing documentation for a struct field
  --> src/close_stream.rs:19:5
   |
19 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/closeout.rs:68:5
   |
68 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/close_stream.rs:20:5
   |
20 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/closeout.rs:76:5
   |
76 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/close_stream.rs:21:5
   |
21 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
   --> src/closeout.rs:82:1
    |
82  | / pub unsafe extern "C" fn close_stdout() {
83  | |     if close_stream(stdout) != 0 as libc::c_int
84  | |         && !(ignore_EPIPE as libc::c_int != 0
85  | |             && *__errno_location() == 32 as libc::c_int)
...   |
176 | |     }
177 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a struct field
  --> src/close_stream.rs:22:5
   |
22 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/closeout.rs:83:32
   |
83 |     if close_stream(stdout) != 0 as libc::c_int
   |                                ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:23:5
   |
23 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/closeout.rs:84:45
   |
84 |         && !(ignore_EPIPE as libc::c_int != 0
   |                                             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:24:5
   |
24 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/closeout.rs:85:39
   |
85 |             && *__errno_location() == 32 as libc::c_int)
   |                                       ^^ help: consider adding suffix: `32_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:25:5
   |
25 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/closeout.rs:91:16
   |
91 |             if 0 != 0 {
   |                ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:26:5
   |
26 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/closeout.rs:91:21
   |
91 |             if 0 != 0 {
   |                     ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:27:5
   |
27 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:28:5
   |
28 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/closeout.rs:99:20
   |
99 |                 if 0 as libc::c_int != 0 as libc::c_int {
   |                    ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:29:5
   |
29 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/closeout.rs:99:40
   |
99 |                 if 0 as libc::c_int != 0 as libc::c_int {
   |                                        ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:30:5
   |
30 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:112:39
    |
112 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:31:5
   |
31 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:126:39
    |
126 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/closeout.rs:133:16
    |
133 |             if 0 != 0 {
    |                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:32:5
   |
32 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/close_stream.rs:33:5
   |
33 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:133:21
    |
133 |             if 0 != 0 {
    |                     ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:34:5
   |
34 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:140:20
    |
140 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:35:5
   |
35 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:140:40
    |
140 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:36:5
   |
36 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:152:39
    |
152 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:37:5
   |
37 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:165:39
    |
165 |                     if __errstatus != 0 as libc::c_int {
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:38:5
   |
38 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:174:43
    |
174 |     if SANITIZE_ADDRESS as libc::c_int == 0 && close_stream(stderr) != 0 as libc::c_int {
    |                                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:39:5
   |
39 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/closeout.rs:174:72
    |
174 |     if SANITIZE_ADDRESS as libc::c_int == 0 && close_stream(stderr) != 0 as libc::c_int {
    |                                                                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/close_stream.rs:40:5
   |
40 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
  --> src/closeout.rs:84:14
   |
84 |         && !(ignore_EPIPE as libc::c_int != 0
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(ignore_EPIPE)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/close_stream.rs:41:5
   |
41 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/closeout.rs:88:13
   |
88 |             b"write error\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"write error\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/close_stream.rs:42:5
   |
42 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary boolean `not` operation
   --> src/closeout.rs:90:9
    |
90  | /         if !file_name.is_null() {
91  | |             if 0 != 0 {
92  | |                 error(
93  | |                     0 as libc::c_int,
...   |
170 | |             };
171 | |         }
    | |_________^
    |
    = note: `-W clippy::if-not-else` implied by `-W clippy::pedantic`
    = help: remove the `!` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/close_stream.rs:43:5
   |
43 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/closeout.rs:91:13
    |
91  | /             if 0 != 0 {
92  | |                 error(
93  | |                     0 as libc::c_int,
94  | |                     *__errno_location(),
...   |
130 | |                 });
131 | |             };
    | |_____________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/close_stream.rs:44:5
   |
44 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: equal expressions as operands to `!=`
  --> src/closeout.rs:91:16
   |
91 |             if 0 != 0 {
   |                ^^^^^^
   |
   = note: `-W clippy::eq-op` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: missing documentation for a struct field
  --> src/close_stream.rs:45:5
   |
45 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/closeout.rs:95:21
   |
95 |                     b"%s: %s\0" as *const u8 as *const libc::c_char,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s: %s\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/close_stream.rs:46:5
   |
46 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/closeout.rs:99:17
    |
99  | /                 if 0 as libc::c_int != 0 as libc::c_int {
100 | |                     unreachable!();
101 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
  --> src/closeout.rs:99:20
   |
99 |                 if 0 as libc::c_int != 0 as libc::c_int {
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: usage of the `unreachable!` macro
   --> src/closeout.rs:100:21
    |
100 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = note: `-W clippy::unreachable` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: missing documentation for a type alias
  --> src/close_stream.rs:48:1
   |
48 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: binding to `_` prefixed variable with no side-effect
   --> src/closeout.rs:104:21
    |
104 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::no-effect-underscore-binding` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/closeout.rs:108:25
    |
108 |                         b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s: %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a type alias
  --> src/close_stream.rs:49:1
   |
49 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/closeout.rs:112:21
    |
112 | /                     if __errstatus != 0 as libc::c_int {
113 | |                         unreachable!();
114 | |                     } else {};
    | |_____________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a function
  --> src/close_stream.rs:51:1
   |
51 | / pub fn close_stream(stream: *mut _IO_FILE) -> libc::c_int {
52 | |     let some_pending: bool = unsafe { __fpending(stream) != 0 };
53 | |     let prev_fail: bool = unsafe { ferror_unlocked(stream) != 0 };
54 | |     let fclose_fail: bool = unsafe { rpl_fclose(stream) != 0 };
...  |
64 | |     return 0;
65 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
  --> src/close_stream.rs:51:1
   |
51 | / pub fn close_stream(stream: *mut _IO_FILE) -> libc::c_int {
52 | |     let some_pending: bool = unsafe { __fpending(stream) != 0 };
53 | |     let prev_fail: bool = unsafe { ferror_unlocked(stream) != 0 };
54 | |     let fclose_fail: bool = unsafe { rpl_fclose(stream) != 0 };
...  |
64 | |     return 0;
65 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: usage of the `unreachable!` macro
   --> src/closeout.rs:113:25
    |
113 |                         unreachable!();
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/closeout.rs:118:21
    |
118 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/closeout.rs:122:25
    |
122 |                         b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s: %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/closeout.rs:126:21
    |
126 | /                     if __errstatus != 0 as libc::c_int {
127 | |                         unreachable!();
128 | |                     } else {};
    | |_____________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/closeout.rs:127:25
    |
127 |                         unreachable!();
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: unnecessary `!=` operation
   --> src/closeout.rs:133:13
    |
133 | /             if 0 != 0 {
134 | |                 error(
135 | |                     0 as libc::c_int,
136 | |                     *__errno_location(),
...   |
169 | |                 });
170 | |             };
    | |_____________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/closeout.rs:133:16
    |
133 |             if 0 != 0 {
    |                ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: `as` casting between raw pointers without changing its mutability
   --> src/closeout.rs:137:21
    |
137 |                     b"%s\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/closeout.rs:140:17
    |
140 | /                 if 0 as libc::c_int != 0 as libc::c_int {
141 | |                     unreachable!();
142 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/closeout.rs:140:20
    |
140 |                 if 0 as libc::c_int != 0 as libc::c_int {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: usage of the `unreachable!` macro
   --> src/closeout.rs:141:21
    |
141 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/closeout.rs:145:21
    |
145 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/closeout.rs:149:25
    |
149 |                         b"%s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/closeout.rs:152:21
    |
152 | /                     if __errstatus != 0 as libc::c_int {
153 | |                         unreachable!();
154 | |                     } else {};
    | |_____________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/closeout.rs:153:25
    |
153 |                         unreachable!();
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: missing documentation for a module
  --> lib.rs:20:1
   |
20 | pub mod closeout;
   | ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: binding to `_` prefixed variable with no side-effect
   --> src/closeout.rs:158:21
    |
158 |                     let __errstatus: libc::c_int = 0 as libc::c_int;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/closeout.rs:162:25
    |
162 |                         b"%s\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a type alias
  --> src/closeout.rs:24:1
   |
24 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/closeout.rs:165:21
    |
165 | /                     if __errstatus != 0 as libc::c_int {
166 | |                         unreachable!();
167 | |                     } else {};
    | |_____________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct
  --> src/closeout.rs:27:1
   |
27 | / pub struct _IO_FILE {
28 | |     pub _flags: libc::c_int,
29 | |     pub _IO_read_ptr: *mut libc::c_char,
30 | |     pub _IO_read_end: *mut libc::c_char,
...  |
56 | |     pub _unused2: [libc::c_char; 20],
57 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: usage of the `unreachable!` macro
   --> src/closeout.rs:166:25
    |
166 |                         unreachable!();
    |                         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: missing documentation for a struct field
  --> src/closeout.rs:28:5
   |
28 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/closeout.rs:174:8
    |
174 |     if SANITIZE_ADDRESS as libc::c_int == 0 && close_stream(stderr) != 0 as libc::c_int {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::cast-possible-wrap` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: default numeric fallback might occur
 --> src/exitfail.rs:3:44
  |
3 | pub static mut exit_failure: libc::c_int = 1 as libc::c_int;
  |                                            ^ help: consider adding suffix: `1_i32`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:29:5
   |
29 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/closeout.rs:30:5
   |
30 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
  --> src/fclose.rs:19:1
   |
19 | / pub struct _IO_FILE {
20 | |     pub _flags: libc::c_int,
21 | |     pub _IO_read_ptr: *mut libc::c_char,
22 | |     pub _IO_read_end: *mut libc::c_char,
...  |
48 | |     pub _unused2: [libc::c_char; 20],
49 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
19 | #[non_exhaustive]
   |

warning: missing documentation for a struct field
  --> src/closeout.rs:31:5
   |
31 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
  --> src/fclose.rs:33:22
   |
33 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a struct field
  --> src/closeout.rs:32:5
   |
32 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
  --> src/fclose.rs:44:29
   |
44 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a struct field
  --> src/closeout.rs:33:5
   |
33 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name ends with its containing module's name
  --> src/fclose.rs:53:1
   |
53 | / pub fn rpl_fclose(fp: &mut FILE) -> libc::c_int {
54 | |     let mut saved_errno: libc::c_int = 0;
55 | |     
56 | |     unsafe {
...  |
78 | |     }
79 | | }
   | |_^
   |
   = note: `-W clippy::module-name-repetitions` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
  --> src/fclose.rs:77:9
   |
77 |         result
   |         ^^^^^^ help: add `return` as shown: `return result`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/closeout.rs:34:5
   |
34 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/fclose.rs:59:17
   |
59 |         if fd < 0 {
   |                 ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:35:5
   |
35 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/fclose.rs:63:44
   |
63 |         let is_reading = __freading(fp) != 0;
   |                                            ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:36:5
   |
36 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/fclose.rs:66:68
   |
66 |         if (!is_reading || seek_result == -1) && rpl_fflush(fp) != 0 {
   |                                                                    ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:37:5
   |
37 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/fclose.rs:72:27
   |
72 |         if saved_errno != 0 {
   |                           ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:38:5
   |
38 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/fclose.rs:74:21
   |
74 |             return -1;
   |                     ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:39:5
   |
39 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/fclose.rs:56:5
   |
56 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/closeout.rs:40:5
   |
40 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
 --> src/fflush.rs:2:5
  |
2 | use std::ptr;
  |     ^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/closeout.rs:41:5
   |
41 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
 --> src/fflush.rs:3:5
  |
3 | use std::option::Option;
  |     ^^^^^^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/closeout.rs:42:5
   |
42 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
  --> src/fflush.rs:19:1
   |
19 | / pub struct _IO_FILE {
20 | |     pub _flags: libc::c_int,
21 | |     pub _IO_read_ptr: *mut libc::c_char,
22 | |     pub _IO_read_end: *mut libc::c_char,
...  |
48 | |     pub _unused2: [libc::c_char; 20],
49 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
19 | #[non_exhaustive]
   |

warning: missing documentation for a struct field
  --> src/closeout.rs:43:5
   |
43 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
  --> src/fflush.rs:33:22
   |
33 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a struct field
  --> src/closeout.rs:44:5
   |
44 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
  --> src/fflush.rs:44:29
   |
44 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a struct field
  --> src/closeout.rs:45:5
   |
45 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/fflush.rs:54:21
   |
54 |     if (fp._flags & 0x100) != 0 {
   |                     ^^^^^ help: consider adding suffix: `0x0100_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:46:5
   |
46 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/fflush.rs:54:31
   |
54 |     if (fp._flags & 0x100) != 0 {
   |                               ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/closeout.rs:47:5
   |
47 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used binding `_flags` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fflush.rs:54:9
   |
54 |     if (fp._flags & 0x100) != 0 {
   |         ^^^^^^^^^
   |
   = note: `-W clippy::used-underscore-binding` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: missing documentation for a struct field
  --> src/closeout.rs:48:5
   |
48 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/fflush.rs:55:9
   |
55 |         unsafe {
   |         ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/closeout.rs:49:5
   |
49 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name ends with its containing module's name
  --> src/fflush.rs:62:1
   |
62 | / pub fn rpl_fflush(stream: Option<&mut FILE>) -> libc::c_int {
63 | |     if let Some(s) = stream {
64 | |         if unsafe { __freading(s) != 0 } {
65 | |             unsafe { clear_ungetc_buffer_preserving_position(s) };
...  |
69 | |     unsafe { fflush(std::ptr::null_mut()) }
70 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a struct field
  --> src/closeout.rs:50:5
   |
50 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/closeout.rs:51:5
   |
51 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/fflush.rs:69:14
   |
69 |     unsafe { fflush(std::ptr::null_mut()) }
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return fflush(std::ptr::null_mut())`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/closeout.rs:52:5
   |
52 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/fflush.rs:64:38
   |
64 |         if unsafe { __freading(s) != 0 } {
   |                                      ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: unsafe block missing a safety comment
  --> src/fflush.rs:64:12
   |
64 |         if unsafe { __freading(s) != 0 } {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/closeout.rs:53:5
   |
53 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/fflush.rs:65:13
   |
65 |             unsafe { clear_ungetc_buffer_preserving_position(s) };
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/closeout.rs:54:5
   |
54 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/closeout.rs:55:5
   |
55 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/fflush.rs:67:16
   |
67 |         return unsafe { fflush(s) };
   |                ^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/fflush.rs:69:5
   |
69 |     unsafe { fflush(std::ptr::null_mut()) }
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/closeout.rs:56:5
   |
56 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/fflush.rs:69:21
   |
69 |     unsafe { fflush(std::ptr::null_mut()) }
   |                     ^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: exported structs should not be exhaustive
  --> src/fseeko.rs:17:1
   |
17 | / pub struct _IO_FILE {
18 | |     pub _flags: libc::c_int,
19 | |     pub _IO_read_ptr: *mut libc::c_char,
20 | |     pub _IO_read_end: *mut libc::c_char,
...  |
46 | |     pub _unused2: [libc::c_char; 20],
47 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
17 | #[non_exhaustive]
   |

warning: unnecessary structure name repetition
  --> src/fseeko.rs:31:22
   |
31 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a type alias
  --> src/closeout.rs:58:1
   |
58 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
  --> src/fseeko.rs:42:29
   |
42 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a type alias
  --> src/closeout.rs:59:1
   |
59 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name ends with its containing module's name
  --> src/fseeko.rs:52:1
   |
52 | / pub fn rpl_fseeko(
53 | |     fp: &mut FILE,
54 | |     offset: off_t,
55 | |     whence: libc::c_int,
...  |
73 | |     }
74 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a type alias
  --> src/closeout.rs:60:1
   |
60 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
  --> src/fseeko.rs:72:9
   |
72 |         return fseeko(fp, offset, whence);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `fseeko(fp, offset, whence)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a type alias
  --> src/closeout.rs:61:1
   |
61 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/fseeko.rs:64:21
   |
64 |         if pos == -(1 as libc::c_int) as libc::c_long {
   |                     ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/closeout.rs:62:1
   |
62 | pub const SANITIZE_ADDRESS: C2RustUnnamed = 0;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/closeout.rs:63:1
   |
63 | pub type C2RustUnnamed = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/fseeko.rs:65:22
   |
65 |             return -(1 as libc::c_int);
   |                      ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a static
  --> src/closeout.rs:64:1
   |
64 | static mut file_name: *const libc::c_char = 0 as *const libc::c_char;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/fseeko.rs:67:24
   |
67 |         fp._flags &= !(0x10 as libc::c_int);
   |                        ^^^^ help: consider adding suffix: `0x0010_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/closeout.rs:66:1
   |
66 | / pub fn close_stdout_set_file_name(file: &str) {
67 | |     let c_string = CString::new(file).expect("CString::new failed");
68 | |     unsafe {
69 | |         file_name = c_string.into_raw();
70 | |     }
71 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/fseeko.rs:69:16
   |
69 |         return 0 as libc::c_int;
   |                ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing `#[inline]` for a function
  --> src/closeout.rs:66:1
   |
66 | / pub fn close_stdout_set_file_name(file: &str) {
67 | |     let c_string = CString::new(file).expect("CString::new failed");
68 | |     unsafe {
69 | |         file_name = c_string.into_raw();
70 | |     }
71 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: used binding `_IO_read_end` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:57:8
   |
57 |     if fp._IO_read_end == fp._IO_read_ptr
   |        ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: used binding `_IO_read_ptr` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:57:27
   |
57 |     if fp._IO_read_end == fp._IO_read_ptr
   |                           ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: used binding `_IO_write_ptr` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:58:12
   |
58 |         && fp._IO_write_ptr == fp._IO_write_base && fp._IO_save_base.is_null()
   |            ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: missing documentation for a static
  --> src/closeout.rs:73:1
   |
73 | static mut ignore_EPIPE: bool = false;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used binding `_IO_write_base` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:58:32
   |
58 |         && fp._IO_write_ptr == fp._IO_write_base && fp._IO_save_base.is_null()
   |                                ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: missing documentation for a function
  --> src/closeout.rs:75:1
   |
75 | / pub fn close_stdout_set_ignore_EPIPE(ignore: bool) {
76 | |     unsafe {
77 | |         ignore_EPIPE = ignore;
78 | |     }
79 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used binding `_IO_save_base` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:58:53
   |
58 |         && fp._IO_write_ptr == fp._IO_write_base && fp._IO_save_base.is_null()
   |                                                     ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: missing `#[inline]` for a function
  --> src/closeout.rs:75:1
   |
75 | / pub fn close_stdout_set_ignore_EPIPE(ignore: bool) {
76 | |     unsafe {
77 | |         ignore_EPIPE = ignore;
78 | |     }
79 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unsafe block missing a safety comment
  --> src/fseeko.rs:61:9
   |
61 |         unsafe {
   |         ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/fseeko.rs:64:19
   |
64 |         if pos == -(1 as libc::c_int) as libc::c_long {
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
  --> src/fseeko.rs:64:19
   |
64 |         if pos == -(1 as libc::c_int) as libc::c_long {
   |                   ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
   --> src/closeout.rs:82:1
    |
82  | / pub unsafe extern "C" fn close_stdout() {
83  | |     if close_stream(stdout) != 0 as libc::c_int
84  | |         && !(ignore_EPIPE as libc::c_int != 0
85  | |             && *__errno_location() == 32 as libc::c_int)
...   |
176 | |     }
177 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
  --> src/fseeko.rs:64:19
   |
64 |         if pos == -(1 as libc::c_int) as libc::c_long {
   |                   ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `#[inline]` for a function
   --> src/closeout.rs:82:1
    |
82  | / pub unsafe extern "C" fn close_stdout() {
83  | |     if close_stream(stdout) != 0 as libc::c_int
84  | |         && !(ignore_EPIPE as libc::c_int != 0
85  | |             && *__errno_location() == 32 as libc::c_int)
...   |
176 | |     }
177 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: arithmetic detected
  --> src/fseeko.rs:65:20
   |
65 |             return -(1 as libc::c_int);
   |                    ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/fseeko.rs:65:20
   |
65 |             return -(1 as libc::c_int);
   |                    ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: used binding `_flags` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:67:9
   |
67 |         fp._flags &= !(0x10 as libc::c_int);
   |         ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: used binding `_offset` which is prefixed with an underscore. A leading underscore signals that a binding will not be used
  --> src/fseeko.rs:68:9
   |
68 |         fp._offset = pos;
   |         ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#used_underscore_binding

warning: unsafe block missing a safety comment
  --> src/fseeko.rs:71:5
   |
71 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
 --> src/hard_locale.rs:1:5
  |
1 | use std::ffi::CStr;
  |     ^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unneeded `return` statement
  --> src/hard_locale.rs:29:5
   |
29 |     return true;
   |     ^^^^^^^^^^^^ help: remove `return`: `true`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
  --> src/hard_locale.rs:21:14
   |
21 |         ) != 0 {
   |              ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: unsafe block missing a safety comment
  --> src/hard_locale.rs:16:5
   |
16 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/hard_locale.rs:25:22
   |
25 |     let locale_str = unsafe { CStr::from_ptr(locale.as_ptr()).to_string_lossy() };
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
 --> src/ialloc.rs:2:5
  |
2 | use std::usize;
  |     ^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
 --> src/ialloc.rs:4:5
  |
4 | use std::option::Option;
  |     ^^^^^^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `alloc`
 --> src/ialloc.rs:6:5
  |
6 | use std::vec::Vec;
  |     ^^^^^^^^^^^^^
  |
  = help: consider importing the item from `alloc`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `core`
 --> src/ialloc.rs:9:5
  |
9 | use std::ptr;
  |     ^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `alloc`
  --> src/ialloc.rs:10:5
   |
10 | use std::slice;
   |     ^^^^^^^^^^
   |
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: missing `return` statement
  --> src/ialloc.rs:46:9
   |
46 |         Some(vec)
   |         ^^^^^^^^^ help: add `return` as shown: `return Some(vec)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unneeded `return` statement
  --> src/ialloc.rs:48:9
   |
48 |         return None; // Assuming _gl_alloc_nomem() returns None in this context
   |         ^^^^^^^^^^^^ help: remove `return`: `None`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/ialloc.rs:35:8
   |
35 |     if n as usize <= usize::MAX && s as usize <= usize::MAX {
   |        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
  --> src/ialloc.rs:35:8
   |
35 |     if n as usize <= usize::MAX && s as usize <= usize::MAX {
   |        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/ialloc.rs:35:36
   |
35 |     if n as usize <= usize::MAX && s as usize <= usize::MAX {
   |                                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
  --> src/ialloc.rs:35:36
   |
35 |     if n as usize <= usize::MAX && s as usize <= usize::MAX {
   |                                    ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/ialloc.rs:36:29
   |
36 |         let mut nx: usize = n as usize;
   |                             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
  --> src/ialloc.rs:36:29
   |
36 |         let mut nx: usize = n as usize;
   |                             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/ialloc.rs:37:29
   |
37 |         let mut sx: usize = s as usize;
   |                             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
  --> src/ialloc.rs:37:29
   |
37 |         let mut sx: usize = s as usize;
   |                             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `return` statement
  --> src/ialloc.rs:42:40
   |
42 |         let mut vec = p.map_or_else(|| Vec::with_capacity(nx * sx), |v| {
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Vec::with_capacity(nx * sx)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: arithmetic detected
  --> src/ialloc.rs:42:59
   |
42 |         let mut vec = p.map_or_else(|| Vec::with_capacity(nx * sx), |v| {
   |                                                           ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/ialloc.rs:42:59
   |
42 |         let mut vec = p.map_or_else(|| Vec::with_capacity(nx * sx), |v| {
   |                                                           ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `return` statement
  --> src/ialloc.rs:44:13
   |
44 |             v.clone()
   |             ^^^^^^^^^ help: add `return` as shown: `return v.clone()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: arithmetic detected
  --> src/ialloc.rs:43:22
   |
43 |             v.resize(nx * sx, 0);
   |                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/ialloc.rs:43:22
   |
43 |             v.resize(nx * sx, 0);
   |                      ^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `return` statement
  --> src/ialloc.rs:70:5
   |
70 |     Some(vec)
   |     ^^^^^^^^^ help: add `return` as shown: `return Some(vec)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: arithmetic detected
  --> src/ialloc.rs:56:12
   |
56 |     if n > usize::MAX / s {
   |            ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/ialloc.rs:56:12
   |
56 |     if n > usize::MAX / s {
   |            ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
  --> src/ialloc.rs:56:12
   |
56 |     if n > usize::MAX / s {
   |            ^^^^^^^^^^^^^^
   |
   = note: `-W clippy::integer-division` implied by `-W clippy::restriction`
   = help: division of integers may cause loss of precision. consider using floats
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: arithmetic detected
  --> src/ialloc.rs:62:12
   |
62 |     if s > usize::MAX / n {
   |            ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/ialloc.rs:62:12
   |
62 |     if s > usize::MAX / n {
   |            ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
  --> src/ialloc.rs:62:12
   |
62 |     if s > usize::MAX / n {
   |            ^^^^^^^^^^^^^^
   |
   = help: division of integers may cause loss of precision. consider using floats
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: arithmetic detected
  --> src/ialloc.rs:68:22
   |
68 |     let total_size = n * s;
   |                      ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/ialloc.rs:68:22
   |
68 |     let total_size = n * s;
   |                      ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `return` statement
  --> src/ialloc.rs:83:9
   |
83 |         Some(vec)
   |         ^^^^^^^^^ help: add `return` as shown: `return Some(vec)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
  --> src/ialloc.rs:85:9
   |
85 |         None
   |         ^^^^ help: add `return` as shown: `return None`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be simplified with `bool::then`
  --> src/ialloc.rs:77:5
   |
77 | /     if s <= usize::MAX {
78 | |         let new_size = if s == 0 { 1 } else { s };
79 | |         let mut vec = Vec::with_capacity(new_size);
80 | |         if let Some(old) = p {
...  |
85 | |         None
86 | |     }
   | |_____^
   |
   = note: `-W clippy::if-then-some-else-none` implied by `-W clippy::restriction`
   = help: consider using `bool::then` like: `(s <= usize::MAX).then(|| { /* snippet */ vec })`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_then_some_else_none

warning: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
  --> src/ialloc.rs:77:8
   |
77 |     if s <= usize::MAX {
   |        ^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::absurd-extreme-comparisons` implied by `-W clippy::all`
   = help: because `usize::MAX` is the maximum value for this type, this comparison is always true
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons

warning: missing `return` statement
  --> src/ialloc.rs:97:13
   |
97 |             None
   |             ^^^^ help: add `return` as shown: `return None`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
  --> src/ialloc.rs:99:13
   |
99 |             Some(unsafe { Box::from_raw(std::slice::from_raw_parts_mut(ptr, s as usize)) })
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Some(unsafe { Box::from_raw(std::slice::from_raw_parts_mut(ptr, s as usize)) })`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/ialloc.rs:102:9
    |
102 |         None // Return None instead of calling _gl_alloc_nomem()
    |         ^^^^ help: add `return` as shown: `return None`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/ialloc.rs:93:8
   |
93 |     if s as usize <= usize::MAX {
   |        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
  --> src/ialloc.rs:93:8
   |
93 |     if s as usize <= usize::MAX {
   |        ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: used import from `std` instead of `core`
  --> src/ialloc.rs:94:22
   |
94 |         let layout = std::alloc::Layout::from_size_align(s as usize, 1).ok()?;
   |                      ^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/ialloc.rs:94:58
   |
94 |         let layout = std::alloc::Layout::from_size_align(s as usize, 1).ok()?;
   |                                                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
  --> src/ialloc.rs:94:58
   |
94 |         let layout = std::alloc::Layout::from_size_align(s as usize, 1).ok()?;
   |                                                          ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unsafe block missing a safety comment
  --> src/ialloc.rs:95:19
   |
95 |         let ptr = unsafe { std::alloc::alloc(layout) };
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `alloc`
  --> src/ialloc.rs:95:28
   |
95 |         let ptr = unsafe { std::alloc::alloc(layout) };
   |                            ^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: missing documentation for a module
  --> lib.rs:21:1
   |
21 | pub mod exitfail;
   | ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/ialloc.rs:99:18
   |
99 |             Some(unsafe { Box::from_raw(std::slice::from_raw_parts_mut(ptr, s as usize)) })
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a static
 --> src/exitfail.rs:3:1
  |
3 | pub static mut exit_failure: libc::c_int = 1 as libc::c_int;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/ialloc.rs:99:41
   |
99 |             Some(unsafe { Box::from_raw(std::slice::from_raw_parts_mut(ptr, s as usize)) })
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/ialloc.rs:99:77
   |
99 |             Some(unsafe { Box::from_raw(std::slice::from_raw_parts_mut(ptr, s as usize)) })
   |                                                                             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a module
  --> lib.rs:22:1
   |
22 | pub mod fclose;
   | ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i64` to `usize` may lose the sign of the value
  --> src/ialloc.rs:99:77
   |
99 |             Some(unsafe { Box::from_raw(std::slice::from_raw_parts_mut(ptr, s as usize)) })
   |                                                                             ^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a type alias
  --> src/fclose.rs:14:1
   |
14 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/ialloc.rs:115:5
    |
115 |     std::ptr::null_mut() // Return a null pointer
    |     ^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return std::ptr::null_mut()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a type alias
  --> src/fclose.rs:15:1
   |
15 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/ialloc.rs:113:31
    |
113 |         *__errno_location() = 12; // Set errno to ENOMEM
    |                               ^^ help: consider adding suffix: `12_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
  --> src/fclose.rs:16:1
   |
16 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/ialloc.rs:112:5
    |
112 |     unsafe {
    |     ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct
  --> src/fclose.rs:19:1
   |
19 | / pub struct _IO_FILE {
20 | |     pub _flags: libc::c_int,
21 | |     pub _IO_read_ptr: *mut libc::c_char,
22 | |     pub _IO_read_end: *mut libc::c_char,
...  |
48 | |     pub _unused2: [libc::c_char; 20],
49 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/ialloc.rs:115:5
    |
115 |     std::ptr::null_mut() // Return a null pointer
    |     ^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
 --> src/localcharset.rs:1:5
  |
1 | use std::ffi::CStr;
  |     ^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing `return` statement
   --> src/localcharset.rs:401:5
    |
401 |     codeset.to_string_lossy().into_owned()
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return codeset.to_string_lossy().into_owned()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fclose.rs:20:5
   |
20 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/localcharset.rs:394:44
    |
394 |     let codeset_ptr: *const libc::c_char = unsafe { nl_langinfo(CODESET as libc::c_int) };
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fclose.rs:21:5
   |
21 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/localcharset.rs:394:65
    |
394 |     let codeset_ptr: *const libc::c_char = unsafe { nl_langinfo(CODESET as libc::c_int) };
    |                                                                 ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a struct field
  --> src/fclose.rs:22:5
   |
22 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/localcharset.rs:395:19
    |
395 |     let codeset = unsafe { CStr::from_ptr(codeset_ptr) };
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fclose.rs:23:5
   |
23 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fclose.rs:24:5
   |
24 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `to_string()` called on a `&str`
   --> src/localcharset.rs:398:16
    |
398 |         return "ASCII".to_string();
    |                ^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::str-to-string` implied by `-W clippy::restriction`
    = help: consider using `.to_owned()`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#str_to_string

warning: missing documentation for a struct field
  --> src/fclose.rs:25:5
   |
25 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fclose.rs:26:5
   |
26 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
 --> src/mbrtoc32.rs:2:5
  |
2 | use std::option::Option;
  |     ^^^^^^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fclose.rs:27:5
   |
27 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `alloc`
 --> src/mbrtoc32.rs:3:5
  |
3 | use std::slice;
  |     ^^^^^^^^^^
  |
  = help: consider importing the item from `alloc`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: missing documentation for a struct field
  --> src/fclose.rs:28:5
   |
28 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
  --> src/mbrtoc32.rs:28:1
   |
28 | / pub struct __mbstate_t {
29 | |     pub __count: libc::c_int,
30 | |     pub __value: C2RustUnnamed,
31 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
28 | #[non_exhaustive]
   |

warning: missing documentation for a struct field
  --> src/fclose.rs:29:5
   |
29 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/mbrtoc32.rs:42:16
   |
42 |     let size = std::mem::size_of::<mbstate_t>();
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fclose.rs:30:5
   |
30 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/mbrtoc32.rs:43:28
   |
43 |     let bytes: &mut [u8] = unsafe { std::slice::from_raw_parts_mut(ps as *mut _ as *mut u8, size) };
   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
  --> src/mbrtoc32.rs:43:37
   |
43 |     let bytes: &mut [u8] = unsafe { std::slice::from_raw_parts_mut(ps as *mut _ as *mut u8, size) };
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fclose.rs:31:5
   |
31 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fclose.rs:32:5
   |
32 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/mbrtoc32.rs:43:68
   |
43 |     let bytes: &mut [u8] = unsafe { std::slice::from_raw_parts_mut(ps as *mut _ as *mut u8, size) };
   |                                                                    ^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(ps as *mut _).cast::<u8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fclose.rs:33:5
   |
33 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name ends with its containing module's name
  --> src/mbrtoc32.rs:52:1
   |
52 | / pub fn rpl_mbrtoc32(
53 | |     pwc: &mut Option<char32_t>,
54 | |     s: Option<&[u8]>,
55 | |     n: usize,
...  |
92 | |     ret
93 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
  --> src/mbrtoc32.rs:92:5
   |
92 |     ret
   |     ^^^ help: add `return` as shown: `return ret`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fclose.rs:34:5
   |
34 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/mbrtoc32.rs:80:16
   |
80 |     if ret < !(3 as libc::c_int) as usize && unsafe { mbsinit(local_ps) } == 0 {
   |                ^ help: consider adding suffix: `3_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fclose.rs:35:5
   |
35 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/mbrtoc32.rs:80:78
   |
80 |     if ret < !(3 as libc::c_int) as usize && unsafe { mbsinit(local_ps) } == 0 {
   |                                                                              ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fclose.rs:36:5
   |
36 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/mbrtoc32.rs:83:17
   |
83 |     if ret == !(3 as libc::c_int) as usize {
   |                 ^ help: consider adding suffix: `3_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fclose.rs:37:5
   |
37 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/mbrtoc32.rs:86:10
   |
86 |     if !(2 as libc::c_int) as usize <= ret && n != 0 && !unsafe { hard_locale(0 as libc::c_int) } {
   |          ^ help: consider adding suffix: `2_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fclose.rs:38:5
   |
38 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary closure used to substitute value for `Option::None`
  --> src/mbrtoc32.rs:58:23
   |
58 |     let mut local_s = s.unwrap_or_else(|| &[0]);
   |                       ^^-----------------------
   |                         |
   |                         help: use `unwrap_or(..)` instead: `unwrap_or(&[0])`
   |
   = note: `-W clippy::unnecessary-lazy-evaluations` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations

warning: missing documentation for a struct field
  --> src/fclose.rs:39:5
   |
39 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/mbrtoc32.rs:58:43
   |
58 |     let mut local_s = s.unwrap_or_else(|| &[0]);
   |                                           ^^^^ help: add `return` as shown: `return &[0]`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fclose.rs:40:5
   |
40 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/mbrtoc32.rs:62:18
   |
62 |         unsafe { internal_state }
   |                  ^^^^^^^^^^^^^^ help: add `return` as shown: `return internal_state`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fclose.rs:41:5
   |
41 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/mbrtoc32.rs:62:9
   |
62 |         unsafe { internal_state }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fclose.rs:42:5
   |
42 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/mbrtoc32.rs:71:5
   |
71 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/mbrtoc32.rs:72:15
   |
72 |           ret = mbrtoc32(
   |  _______________^
73 | |             pwc.as_mut().map(|p| p as *mut char32_t).unwrap_or(std::ptr::null_mut()),
74 | |             local_s.as_ptr() as *const libc::c_char,
75 | |             n as libc::c_ulong,
76 | |             local_ps,
77 | |         ) as usize;
   | |__________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a struct field
  --> src/fclose.rs:43:5
   |
43 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: called `map(<f>).unwrap_or(<a>)` on an `Option` value. This can be done more directly by calling `map_or(<a>, <f>)` instead
  --> src/mbrtoc32.rs:73:13
   |
73 |             pwc.as_mut().map(|p| p as *mut char32_t).unwrap_or(std::ptr::null_mut()),
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::map-unwrap-or` implied by `-W clippy::pedantic`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
help: use `map_or(<a>, <f>)` instead
   |
73 -             pwc.as_mut().map(|p| p as *mut char32_t).unwrap_or(std::ptr::null_mut()),
73 +             pwc.as_mut().map_or(std::ptr::null_mut(), |p| p as *mut char32_t),
   |

warning: missing documentation for a struct field
  --> src/fclose.rs:44:5
   |
44 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/mbrtoc32.rs:73:34
   |
73 |             pwc.as_mut().map(|p| p as *mut char32_t).unwrap_or(std::ptr::null_mut()),
   |                                  ^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return p as *mut char32_t`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fclose.rs:45:5
   |
45 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/mbrtoc32.rs:73:64
   |
73 |             pwc.as_mut().map(|p| p as *mut char32_t).unwrap_or(std::ptr::null_mut()),
   |                                                                ^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fclose.rs:46:5
   |
46 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/mbrtoc32.rs:74:13
   |
74 |             local_s.as_ptr() as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `local_s.as_ptr().cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fclose.rs:47:5
   |
47 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/mbrtoc32.rs:80:14
   |
80 |     if ret < !(3 as libc::c_int) as usize && unsafe { mbsinit(local_ps) } == 0 {
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fclose.rs:48:5
   |
48 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/mbrtoc32.rs:80:46
   |
80 |     if ret < !(3 as libc::c_int) as usize && unsafe { mbsinit(local_ps) } == 0 {
   |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
  --> src/mbrtoc32.rs:81:9
   |
81 |         unsafe { mbszero(local_ps) };
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/mbrtoc32.rs:83:15
   |
83 |     if ret == !(3 as libc::c_int) as usize {
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a type alias
  --> src/fclose.rs:50:1
   |
50 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `usize` may lose the sign of the value
  --> src/mbrtoc32.rs:86:8
   |
86 |     if !(2 as libc::c_int) as usize <= ret && n != 0 && !unsafe { hard_locale(0 as libc::c_int) } {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a type alias
  --> src/fclose.rs:51:1
   |
51 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/mbrtoc32.rs:86:58
   |
86 |     if !(2 as libc::c_int) as usize <= ret && n != 0 && !unsafe { hard_locale(0 as libc::c_int) } {
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a function
  --> src/fclose.rs:53:1
   |
53 | / pub fn rpl_fclose(fp: &mut FILE) -> libc::c_int {
54 | |     let mut saved_errno: libc::c_int = 0;
55 | |     
56 | |     unsafe {
...  |
78 | |     }
79 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: type of pattern does not match the expression type
  --> src/mbrtoc32.rs:87:16
   |
87 |         if let Some(p) = pwc {
   |                ^^^^^^^
   |
   = note: `-W clippy::pattern-type-mismatch` implied by `-W clippy::restriction`
   = help: use `*` to dereference the match expression or explicitly match against a `&mut _` pattern and adjust the enclosed variable bindings
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#pattern_type_mismatch

warning: missing `#[inline]` for a function
  --> src/fclose.rs:53:1
   |
53 | / pub fn rpl_fclose(fp: &mut FILE) -> libc::c_int {
54 | |     let mut saved_errno: libc::c_int = 0;
55 | |     
56 | |     unsafe {
...  |
78 | |     }
79 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `u8` to `u32` may become silently lossy if you later change the type
  --> src/mbrtoc32.rs:88:18
   |
88 |             *p = *local_s.get(0).unwrap_or(&0) as libc::c_uchar as char32_t;
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `u32::from(*local_s.get(0).unwrap_or(&0) as libc::c_uchar)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: accessing first element with `local_s.get(0)`
  --> src/mbrtoc32.rs:88:19
   |
88 |             *p = *local_s.get(0).unwrap_or(&0) as libc::c_uchar as char32_t;
   |                   ^^^^^^^^^^^^^^ help: try: `local_s.first()`
   |
   = note: `-W clippy::get-first` implied by `-W clippy::all`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#get_first

warning: used import from `std` instead of `core`
 --> src/mbszero.rs:1:5
  |
1 | use std::mem;
  |     ^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: exported structs should not be exhaustive
  --> src/mbszero.rs:13:1
   |
13 | / pub struct __mbstate_t {
14 | |     pub __count: libc::c_int,
15 | |     pub __value: C2RustUnnamed,
16 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
13 | #[non_exhaustive]
   |

warning: unsafe block missing a safety comment
  --> src/mbszero.rs:29:29
   |
29 |     let zeroed: mbstate_t = unsafe { std::mem::zeroed() };
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
  --> src/mbszero.rs:29:38
   |
29 |     let zeroed: mbstate_t = unsafe { std::mem::zeroed() };
   |                                      ^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
 --> src/progname.rs:1:5
  |
1 | use std::ffi::CStr;
  |     ^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: exported structs should not be exhaustive
  --> src/progname.rs:24:1
   |
24 | / pub struct _IO_FILE {
25 | |     pub _flags: libc::c_int,
26 | |     pub _IO_read_ptr: *mut libc::c_char,
27 | |     pub _IO_read_end: *mut libc::c_char,
...  |
53 | |     pub _unused2: [libc::c_char; 20],
54 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
24 | #[non_exhaustive]
   |

warning: unnecessary structure name repetition
  --> src/progname.rs:38:22
   |
38 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: missing documentation for a module
  --> lib.rs:23:1
   |
23 | pub mod fflush;
   | ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary structure name repetition
  --> src/progname.rs:49:29
   |
49 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: this public function might dereference a raw pointer but is not marked `unsafe`
  --> src/progname.rs:68:51
   |
68 |     let c_str = unsafe { std::ffi::CStr::from_ptr(argv0) };
   |                                                   ^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: unsafe block missing a safety comment
  --> src/progname.rs:68:17
   |
68 |     let c_str = unsafe { std::ffi::CStr::from_ptr(argv0) };
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
  --> src/fflush.rs:14:1
   |
14 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/fflush.rs:15:1
   |
15 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/progname.rs:68:26
   |
68 |     let c_str = unsafe { std::ffi::CStr::from_ptr(argv0) };
   |                          ^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: called `map(<f>).unwrap_or(<a>)` on an `Option` value. This can be done more directly by calling `map_or(<a>, <f>)` instead
  --> src/progname.rs:70:17
   |
70 |     let slash = argv0_str.rfind('/').map(|index| &argv0_str[index + 1..]).unwrap_or(&argv0_str);
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_unwrap_or
help: use `map_or(<a>, <f>)` instead
   |
70 -     let slash = argv0_str.rfind('/').map(|index| &argv0_str[index + 1..]).unwrap_or(&argv0_str);
70 +     let slash = argv0_str.rfind('/').map_or(&argv0_str, |index| &argv0_str[index + 1..]);
   |

warning: missing documentation for a type alias
  --> src/fflush.rs:16:1
   |
16 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/progname.rs:70:50
   |
70 |     let slash = argv0_str.rfind('/').map(|index| &argv0_str[index + 1..]).unwrap_or(&argv0_str);
   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return &argv0_str[index + 1..]`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct
  --> src/fflush.rs:19:1
   |
19 | / pub struct _IO_FILE {
20 | |     pub _flags: libc::c_int,
21 | |     pub _IO_read_ptr: *mut libc::c_char,
22 | |     pub _IO_read_end: *mut libc::c_char,
...  |
48 | |     pub _unused2: [libc::c_char; 20],
49 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: slicing may panic
  --> src/progname.rs:70:51
   |
70 |     let slash = argv0_str.rfind('/').map(|index| &argv0_str[index + 1..]).unwrap_or(&argv0_str);
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::indexing-slicing` implied by `-W clippy::restriction`
   = help: consider using `.get(n..)` or .get_mut(n..)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic detected
  --> src/progname.rs:70:61
   |
70 |     let slash = argv0_str.rfind('/').map(|index| &argv0_str[index + 1..]).unwrap_or(&argv0_str);
   |                                                             ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/progname.rs:70:61
   |
70 |     let slash = argv0_str.rfind('/').map(|index| &argv0_str[index + 1..]).unwrap_or(&argv0_str);
   |                                                             ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/fflush.rs:20:5
   |
20 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing into a string may panic if the index is within a UTF-8 character
  --> src/progname.rs:73:21
   |
73 |         let base = &slash[7..];
   |                     ^^^^^^^^^^
   |
   = note: `-W clippy::string-slice` implied by `-W clippy::restriction`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: missing documentation for a struct field
  --> src/fflush.rs:21:5
   |
21 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: slicing may panic
  --> src/progname.rs:73:21
   |
73 |         let base = &slash[7..];
   |                     ^^^^^^^^^^
   |
   = help: consider using `.get(n..)` or .get_mut(n..)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a struct field
  --> src/fflush.rs:22:5
   |
22 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fflush.rs:23:5
   |
23 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: stripping a prefix manually
  --> src/progname.rs:76:49
   |
76 |                 program_invocation_short_name = base[3..].as_ptr() as *mut libc::c_char;
   |                                                 ^^^^^^^^^
   |
   = note: `-W clippy::manual-strip` implied by `-W clippy::all`
note: the prefix was tested here
  --> src/progname.rs:74:9
   |
74 |         if base.starts_with("lt-") {
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_strip
help: try using the `strip_prefix` method
   |
74 ~         if let Some(<stripped>) = base.strip_prefix("lt-") {
75 |             unsafe {
76 ~                 program_invocation_short_name = <stripped>.as_ptr() as *mut libc::c_char;
   |

warning: unsafe block missing a safety comment
  --> src/progname.rs:75:13
   |
75 |             unsafe {
   |             ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fflush.rs:24:5
   |
24 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fflush.rs:25:5
   |
25 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing into a string may panic if the index is within a UTF-8 character
  --> src/progname.rs:76:49
   |
76 |                 program_invocation_short_name = base[3..].as_ptr() as *mut libc::c_char;
   |                                                 ^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#string_slice

warning: slicing may panic
  --> src/progname.rs:76:49
   |
76 |                 program_invocation_short_name = base[3..].as_ptr() as *mut libc::c_char;
   |                                                 ^^^^^^^^^
   |
   = help: consider using `.get(n..)` or .get_mut(n..)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a struct field
  --> src/fflush.rs:26:5
   |
26 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fflush.rs:27:5
   |
27 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/progname.rs:79:9
   |
79 |         unsafe {
   |         ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fflush.rs:28:5
   |
28 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/progname.rs:84:9
   |
84 |         unsafe {
   |         ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fflush.rs:29:5
   |
29 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
  --> src/propername_lite.rs:8:1
   |
8  | / pub unsafe extern "C" fn proper_name_lite(
9  | |     mut name_ascii: *const libc::c_char,
10 | |     mut name_utf8: *const libc::c_char,
11 | | ) -> *const libc::c_char {
...  |
23 | |     };
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a struct field
  --> src/fflush.rs:30:5
   |
30 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
  --> src/propername_lite.rs:13:5
   |
13 | /     return if translation != name_ascii {
14 | |         translation
15 | |     } else if c_strcasecmp(
16 | |         locale_charset(),
...  |
22 | |         name_ascii
23 | |     };
   | |______^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
   |
13 ~     if translation != name_ascii {
14 +         translation
15 +     } else if c_strcasecmp(
16 +         locale_charset(),
17 +         b"UTF-8\0" as *const u8 as *const libc::c_char,
18 +     ) == 0 as libc::c_int
19 +     {
20 +         name_utf8
21 +     } else {
22 +         name_ascii
23 +     }
   |

warning: missing documentation for a struct field
  --> src/fflush.rs:31:5
   |
31 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/propername_lite.rs:18:10
   |
18 |     ) == 0 as libc::c_int
   |          ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fflush.rs:32:5
   |
32 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/propername_lite.rs:17:9
   |
17 |         b"UTF-8\0" as *const u8 as *const libc::c_char,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"UTF-8\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
  --> src/fflush.rs:33:5
   |
33 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/quotearg.rs:26:5
   |
26 | use std::clone::Clone;
   |     ^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fflush.rs:34:5
   |
34 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fflush.rs:35:5
   |
35 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/quotearg.rs:28:5
   |
28 | use std::char;
   |     ^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fflush.rs:36:5
   |
36 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/quotearg.rs:30:5
   |
30 | use std::option::Option;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
  --> src/quotearg.rs:32:5
   |
32 | use std::ffi::CStr;
   |     ^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fflush.rs:37:5
   |
37 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `alloc`
  --> src/quotearg.rs:36:5
   |
36 | use std::ffi::CString;
   |     ^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: missing documentation for a struct field
  --> src/fflush.rs:38:5
   |
38 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fflush.rs:39:5
   |
39 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
   --> src/quotearg.rs:98:1
    |
98  | / pub struct quoting_options {
99  | |     pub style: quoting_style,
100 | |     pub flags: libc::c_int,
101 | |     pub quote_these_too: [libc::c_uint; 8],
102 | |     pub left_quote: *const libc::c_char,
103 | |     pub right_quote: *const libc::c_char,
104 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
98  | #[non_exhaustive]
    |

warning: missing documentation for a struct field
  --> src/fflush.rs:40:5
   |
40 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
   --> src/quotearg.rs:108:1
    |
108 | / pub struct mbstate_t {
109 | |     pub __count: libc::c_int,
110 | |     pub __value: C2RustUnnamed,
111 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
108 | #[non_exhaustive]
    |

warning: missing documentation for a struct field
  --> src/fflush.rs:41:5
   |
41 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: exported structs should not be exhaustive
   --> src/quotearg.rs:123:1
    |
123 | / pub struct slotvec {
124 | |     pub size: size_t,
125 | |     pub val: *mut libc::c_char,
126 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
123 | #[non_exhaustive]
    |

warning: missing documentation for a struct field
  --> src/fflush.rs:42:5
   |
42 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/quotearg.rs:143:9
    |
143 |         1
    |         ^ help: add `return` as shown: `return 1`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fflush.rs:43:5
   |
43 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/quotearg.rs:145:9
    |
145 |         0
    |         ^ help: add `return` as shown: `return 0`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fflush.rs:44:5
   |
44 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:143:9
    |
143 |         1
    |         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fflush.rs:45:5
   |
45 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:145:9
    |
145 |         0
    |         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/fflush.rs:46:5
   |
46 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fflush.rs:47:5
   |
47 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/quotearg.rs:142:45
    |
142 |     if char::from_u32(wc).map_or(false, |c| c.is_ascii()) {
    |                                             ^^^^^^^^^^^^ help: add `return` as shown: `return c.is_ascii()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fflush.rs:48:5
   |
48 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:152:9
    |
152 |         ps as *mut libc::c_void,
    |         ^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `ps.cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:159:5
    |
159 |     b"literal\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"literal\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:160:5
    |
160 |     b"shell\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"shell\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a type alias
  --> src/fflush.rs:50:1
   |
50 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:161:5
    |
161 |     b"shell-always\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"shell-always\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a type alias
  --> src/fflush.rs:51:1
   |
51 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:162:5
    |
162 |     b"shell-escape\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"shell-escape\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a type alias
  --> src/fflush.rs:52:1
   |
52 | pub type off_t = __off_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:163:5
    |
163 |     b"shell-escape-always\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"shell-escape-always\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a function
  --> src/fflush.rs:53:1
   |
53 | / fn clear_ungetc_buffer_preserving_position(fp: &mut FILE) {
54 | |     if (fp._flags & 0x100) != 0 {
55 | |         unsafe {
56 | |             rpl_fseeko(fp, 0, 1); // 1 corresponds to SEEK_CUR
57 | |         }
58 | |     }
59 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:164:5
    |
164 |     b"c\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"c\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:165:5
    |
165 |     b"c-maybe\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"c-maybe\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:166:5
    |
166 |     b"escape\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"escape\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:167:5
    |
167 |     b"locale\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"locale\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:168:5
    |
168 |     b"clocale\0" as *const u8 as *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"clocale\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a function
  --> src/fflush.rs:62:1
   |
62 | / pub fn rpl_fflush(stream: Option<&mut FILE>) -> libc::c_int {
63 | |     if let Some(s) = stream {
64 | |         if unsafe { __freading(s) != 0 } {
65 | |             unsafe { clear_ungetc_buffer_preserving_position(s) };
...  |
69 | |     unsafe { fflush(std::ptr::null_mut()) }
70 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/quotearg.rs:197:5
    |
197 |     Box::new(options.clone())
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Box::new(options.clone())`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `#[inline]` for a function
  --> src/fflush.rs:62:1
   |
62 | / pub fn rpl_fflush(stream: Option<&mut FILE>) -> libc::c_int {
63 | |     if let Some(s) = stream {
64 | |         if unsafe { __freading(s) != 0 } {
65 | |             unsafe { clear_ungetc_buffer_preserving_position(s) };
...  |
69 | |     unsafe { fflush(std::ptr::null_mut()) }
70 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:195:17
    |
195 |         None => unsafe { &default_quoting_options },
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: using `clone` on type `src::quotearg::quoting_options` which implements the `Copy` trait
   --> src/quotearg.rs:197:14
    |
197 |     Box::new(options.clone())
    |              ^^^^^^^^^^^^^^^ help: try dereferencing it: `*options`
    |
    = note: `-W clippy::clone-on-copy` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy

warning: missing `return` statement
   --> src/quotearg.rs:206:5
    |
206 |     options.style
    |     ^^^^^^^^^^^^^ help: add `return` as shown: `return options.style`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:204:17
    |
204 |         None => unsafe { &default_quoting_options },
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:218:9
    |
218 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe function's docs miss `# Safety` section
   --> src/quotearg.rs:225:1
    |
225 | / pub unsafe extern "C" fn set_char_quoting(
226 | |     mut o: *mut quoting_options,
227 | |     mut c: libc::c_char,
228 | |     mut i: libc::c_int,
...   |
253 | |     return r;
254 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/quotearg.rs:253:5
    |
253 |     return r;
    |     ^^^^^^^^^ help: remove `return`: `r`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
   --> src/quotearg.rs:252:17
    |
252 |     *p ^= ((i & 1 as libc::c_int ^ r) << shift) as libc::c_uint;
    |                 ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/quotearg.rs:230:33
    |
230 |     let mut uc: libc::c_uchar = c as libc::c_uchar;
    |                                 ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unnecessary boolean `not` operation
   --> src/quotearg.rs:231:39
    |
231 |       let mut p: *mut libc::c_uint = ((*(if !o.is_null() {
    |  _______________________________________^
232 | |         o
233 | |     } else {
234 | |         &mut default_quoting_options as *mut quoting_options
235 | |     }))
    | |______^
    |
    = help: remove the `!` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a module
  --> lib.rs:24:1
   |
24 | pub mod fseeko;
   | ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
   --> src/quotearg.rs:234:9
    |
234 |         &mut default_quoting_options as *mut quoting_options
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(default_quoting_options)`
    |
    = note: `-W clippy::borrow-as-ptr` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a type alias
  --> src/fseeko.rs:12:1
   |
12 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:239:13
    |
239 | /             (uc as libc::c_ulong)
240 | |                 .wrapping_div(
241 | |                     (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
242 | |                         .wrapping_mul(8 as libc::c_int as libc::c_ulong),
243 | |                 ) as isize,
    | |__________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a type alias
  --> src/fseeko.rs:13:1
   |
13 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:239:13
    |
239 | /             (uc as libc::c_ulong)
240 | |                 .wrapping_div(
241 | |                     (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
242 | |                         .wrapping_mul(8 as libc::c_int as libc::c_ulong),
243 | |                 ) as isize,
    | |__________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a type alias
  --> src/fseeko.rs:14:1
   |
14 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `u64` may become silently lossy if you later change the type
   --> src/quotearg.rs:239:13
    |
239 |             (uc as libc::c_ulong)
    |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `u64::from(uc)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct
  --> src/fseeko.rs:17:1
   |
17 | / pub struct _IO_FILE {
18 | |     pub _flags: libc::c_int,
19 | |     pub _IO_read_ptr: *mut libc::c_char,
20 | |     pub _IO_read_end: *mut libc::c_char,
...  |
46 | |     pub _unused2: [libc::c_char; 20],
47 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:242:39
    |
242 |                         .wrapping_mul(8 as libc::c_int as libc::c_ulong),
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fseeko.rs:18:5
   |
18 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `i32` may truncate the value
   --> src/quotearg.rs:245:34
    |
245 |       let mut shift: libc::c_int = (uc as libc::c_ulong)
    |  __________________________________^
246 | |         .wrapping_rem(
247 | |             (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
248 | |                 .wrapping_mul(8 as libc::c_int as libc::c_ulong),
249 | |         ) as libc::c_int;
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a struct field
  --> src/fseeko.rs:19:5
   |
19 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `u64` may become silently lossy if you later change the type
   --> src/quotearg.rs:245:34
    |
245 |     let mut shift: libc::c_int = (uc as libc::c_ulong)
    |                                  ^^^^^^^^^^^^^^^^^^^^^ help: try: `u64::from(uc)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/fseeko.rs:20:5
   |
20 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:248:31
    |
248 |                 .wrapping_mul(8 as libc::c_int as libc::c_ulong),
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fseeko.rs:21:5
   |
21 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:250:30
    |
250 |       let mut r: libc::c_int = (*p >> shift & 1 as libc::c_int as libc::c_uint)
    |  ______________________________^
251 | |         as libc::c_int;
    | |______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a struct field
  --> src/fseeko.rs:22:5
   |
22 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:250:31
    |
250 |     let mut r: libc::c_int = (*p >> shift & 1 as libc::c_int as libc::c_uint)
    |                               ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/fseeko.rs:23:5
   |
23 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:250:31
    |
250 |     let mut r: libc::c_int = (*p >> shift & 1 as libc::c_int as libc::c_uint)
    |                               ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/fseeko.rs:24:5
   |
24 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:250:45
    |
250 |     let mut r: libc::c_int = (*p >> shift & 1 as libc::c_int as libc::c_uint)
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fseeko.rs:25:5
   |
25 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:252:11
    |
252 |     *p ^= ((i & 1 as libc::c_int ^ r) << shift) as libc::c_uint;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fseeko.rs:26:5
   |
26 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:252:11
    |
252 |     *p ^= ((i & 1 as libc::c_int ^ r) << shift) as libc::c_uint;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/fseeko.rs:27:5
   |
27 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:252:11
    |
252 |     *p ^= ((i & 1 as libc::c_int ^ r) << shift) as libc::c_uint;
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/fseeko.rs:28:5
   |
28 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
   --> src/quotearg.rs:264:5
    |
264 |     return r;
    |     ^^^^^^^^^ help: remove `return`: `r`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a struct field
  --> src/fseeko.rs:29:5
   |
29 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary closure used to substitute value for `Option::None`
   --> src/quotearg.rs:261:19
    |
261 |     let options = o.get_or_insert_with(|| unsafe { &mut default_quoting_options });
    |                   ^^--------------------------------------------------------------
    |                     |
    |                     help: use `get_or_insert(..)` instead: `get_or_insert(unsafe { &mut default_quoting_options })`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations

warning: missing documentation for a struct field
  --> src/fseeko.rs:30:5
   |
30 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/quotearg.rs:261:52
    |
261 |     let options = o.get_or_insert_with(|| unsafe { &mut default_quoting_options });
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return &mut default_quoting_options`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fseeko.rs:31:5
   |
31 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:261:43
    |
261 |     let options = o.get_or_insert_with(|| unsafe { &mut default_quoting_options });
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fseeko.rs:32:5
   |
32 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: docs for function which may panic missing `# Panics` section
   --> src/quotearg.rs:268:1
    |
268 | / pub fn set_custom_quoting(
269 | |     o: *mut quoting_options,
270 | |     left_quote: *const libc::c_char,
271 | |     right_quote: *const libc::c_char,
...   |
286 | |     options.right_quote = right_quote;
287 | | }
    | |_^
    |
    = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
note: first possible panic found here
   --> src/quotearg.rs:282:9
    |
282 |         panic!("Quotes cannot be null");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing documentation for a struct field
  --> src/fseeko.rs:33:5
   |
33 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fseeko.rs:34:5
   |
34 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this public function might dereference a raw pointer but is not marked `unsafe`
   --> src/quotearg.rs:276:24
    |
276 |         unsafe { &mut *o }
    |                        ^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:274:9
    |
274 |         unsafe { &mut *(&mut default_quoting_options as *mut _) }
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fseeko.rs:35:5
   |
35 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/fseeko.rs:36:5
   |
36 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
   --> src/quotearg.rs:274:24
    |
274 |         unsafe { &mut *(&mut default_quoting_options as *mut _) }
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(default_quoting_options)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:276:9
    |
276 |         unsafe { &mut *o }
    |         ^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/fseeko.rs:37:5
   |
37 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: only a `panic!` in `if`-then statement
   --> src/quotearg.rs:281:5
    |
281 | /     if left_quote.is_null() || right_quote.is_null() {
282 | |         panic!("Quotes cannot be null");
283 | |     }
    | |_____^ help: try: `assert!(!(left_quote.is_null() || right_quote.is_null()), "Quotes cannot be null");`
    |
    = note: `-W clippy::manual-assert` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_assert

warning: missing documentation for a struct field
  --> src/fseeko.rs:38:5
   |
38 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `panic` should not be present in production code
   --> src/quotearg.rs:282:9
    |
282 |         panic!("Quotes cannot be null");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::panic` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#panic

warning: missing documentation for a struct field
  --> src/fseeko.rs:39:5
   |
39 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/quotearg.rs:303:5
    |
303 |     o
    |     ^ help: add `return` as shown: `return o`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/fseeko.rs:40:5
   |
40 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:294:21
    |
294 |         left_quote: std::ptr::null(),
    |                     ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fseeko.rs:41:5
   |
41 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:295:22
    |
295 |         right_quote: std::ptr::null(),
    |                      ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/fseeko.rs:42:5
   |
42 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: only a `panic!` in `if`-then statement
   --> src/quotearg.rs:298:5
    |
298 | /     if style as u32 == custom_quoting_style as i32 as u32 {
299 | |         panic!("Custom quoting style is not allowed");
300 | |     }
    | |_____^ help: try: `assert!(!(style as u32 == custom_quoting_style as i32 as u32), "Custom quoting style is not allowed");`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_assert

warning: missing documentation for a struct field
  --> src/fseeko.rs:43:5
   |
43 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:298:24
    |
298 |     if style as u32 == custom_quoting_style as i32 as u32 {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/fseeko.rs:44:5
   |
44 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:298:24
    |
298 |     if style as u32 == custom_quoting_style as i32 as u32 {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a struct field
  --> src/fseeko.rs:45:5
   |
45 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `panic` should not be present in production code
   --> src/quotearg.rs:299:9
    |
299 |         panic!("Custom quoting style is not allowed");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#panic

warning: missing documentation for a struct field
  --> src/fseeko.rs:46:5
   |
46 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
   --> src/quotearg.rs:334:5
    |
334 | /     return if s as libc::c_uint == clocale_quoting_style as libc::c_int as libc::c_uint {
335 | |         b"\"\0" as *const u8 as *const libc::c_char
336 | |     } else {
337 | |         b"'\0" as *const u8 as *const libc::c_char
338 | |     };
    | |______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
334 ~     if s as libc::c_uint == clocale_quoting_style as libc::c_int as libc::c_uint {
335 +         b"\"\0" as *const u8 as *const libc::c_char
336 +     } else {
337 +         b"'\0" as *const u8 as *const libc::c_char
338 +     }
    |

warning: default numeric fallback might occur
   --> src/quotearg.rs:317:12
    |
317 |         == 0 as libc::c_int
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:326:12
    |
326 |         == 0 as libc::c_int
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
  --> src/fseeko.rs:48:1
   |
48 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `0 as *const _` detected
   --> src/quotearg.rs:311:48
    |
311 |     let mut locale_code: *const libc::c_char = 0 as *const libc::c_char;
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = note: `-W clippy::zero-ptr` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a type alias
  --> src/fseeko.rs:49:1
   |
49 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:316:34
    |
316 |     if c_strcasecmp(locale_code, b"UTF-8\0" as *const u8 as *const libc::c_char)
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"UTF-8\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a type alias
  --> src/fseeko.rs:50:1
   |
50 | pub type off_t = __off_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:319:19
    |
319 |         return if *msgid.offset(0 as libc::c_int as isize) as libc::c_int == '`' as i32 {
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*msgid.offset(0 as libc::c_int as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/fseeko.rs:52:1
   |
52 | / pub fn rpl_fseeko(
53 | |     fp: &mut FILE,
54 | |     offset: off_t,
55 | |     whence: libc::c_int,
...  |
73 | |     }
74 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:320:13
    |
320 |             b"\xE2\x80\x98\0" as *const u8 as *const libc::c_char
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\xE2\x80\x98\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing `#[inline]` for a function
  --> src/fseeko.rs:52:1
   |
52 | / pub fn rpl_fseeko(
53 | |     fp: &mut FILE,
54 | |     offset: off_t,
55 | |     whence: libc::c_int,
...  |
73 | |     }
74 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:322:13
    |
322 |             b"\xE2\x80\x99\0" as *const u8 as *const libc::c_char
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\xE2\x80\x99\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:325:34
    |
325 |     if c_strcasecmp(locale_code, b"GB18030\0" as *const u8 as *const libc::c_char)
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"GB18030\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:328:19
    |
328 |         return if *msgid.offset(0 as libc::c_int as isize) as libc::c_int == '`' as i32 {
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*msgid.offset(0 as libc::c_int as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:329:13
    |
329 |             b"\xA1\x07e\0" as *const u8 as *const libc::c_char
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\xA1\x07e\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:331:13
    |
331 |             b"\xA1\xAF\0" as *const u8 as *const libc::c_char
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\xA1\xAF\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:334:36
    |
334 |     return if s as libc::c_uint == clocale_quoting_style as libc::c_int as libc::c_uint {
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:334:36
    |
334 |     return if s as libc::c_uint == clocale_quoting_style as libc::c_int as libc::c_uint {
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:335:9
    |
335 |         b"\"\0" as *const u8 as *const libc::c_char
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\"\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:337:9
    |
337 |         b"'\0" as *const u8 as *const libc::c_char
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"'\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: this boolean expression can be simplified
   --> src/quotearg.rs:849:28
    |
849 |                         if !(bytes == 0 as libc::c_int as libc::c_ulong) {
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `bytes != 0 as libc::c_int as libc::c_ulong`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/quotearg.rs:1040:12
     |
1040 |           if !((backslash_escapes && quoting_style != shell_always_quoting_style) || elide_outer_quotes) 
     |  ____________^
1041 | |             && !quote_these_too.is_null() 
1042 | |             && (unsafe { *quote_these_too.add(c as usize / (std::mem::size_of::<u32>() * 8)) } >> (c as usize % (std::mem::size_of::<u32>...
1043 | |             && !is_right_quote {
     | |______________________________^ help: try: `!(elide_outer_quotes || quote_these_too.is_null() || (unsafe { *quote_these_too.add(c as usize / (std::mem::size_of::<u32>() * 8)) } >> (c as usize % (std::mem::size_of::<u32>() * 8)) & 1) == 0 || is_right_quote || backslash_escapes && quoting_style != shell_always_quoting_style)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: this boolean expression can be simplified
    --> src/quotearg.rs:1040:12
     |
1040 |           if !((backslash_escapes && quoting_style != shell_always_quoting_style) || elide_outer_quotes) 
     |  ____________^
1041 | |             && !quote_these_too.is_null() 
     | |_________________________________________^ help: try: `!(elide_outer_quotes || quote_these_too.is_null() || backslash_escapes && quoting_style != shell_always_quoting_style)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: the function has a cognitive complexity of (122/25)
   --> src/quotearg.rs:340:22
    |
340 | unsafe extern "C" fn quotearg_buffer_restyled(
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::cognitive-complexity` implied by `-W clippy::nursery`
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: this function has too many lines (800/100)
    --> src/quotearg.rs:340:1
     |
340  | / unsafe extern "C" fn quotearg_buffer_restyled(
341  | |     mut buffer: *mut libc::c_char,
342  | |     mut buffersize: size_t,
343  | |     mut arg: *const libc::c_char,
...    |
1184 | |     };
1185 | | }
     | |_^
     |
     = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: unneeded `return` statement
    --> src/quotearg.rs:1155:13
     |
1155 | /             return quotearg_buffer_restyled(
1156 | |                 buffer,
1157 | |                 buffersize,
1158 | |                 arg,
...    |
1164 | |                 right_quote,
1165 | |             );
     | |______________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1155 ~             quotearg_buffer_restyled(
1156 +                 buffer,
1157 +                 buffersize,
1158 +                 arg,
1159 +                 argsize,
1160 +                 quoting_style,
1161 +                 flags & !(QA_ELIDE_OUTER_QUOTES as libc::c_int),
1162 +                 0 as *const libc::c_uint,
1163 +                 left_quote,
1164 +                 right_quote,
1165 +             )
     |

warning: unneeded `return` statement
    --> src/quotearg.rs:1182:13
     |
1182 |             return len;
     |             ^^^^^^^^^^^ help: remove `return`: `len`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
   --> src/quotearg.rs:366:36
    |
366 |         pending_shell_escape_end = 0 as libc::c_int != 0;
    |                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:366:56
    |
366 |         pending_shell_escape_end = 0 as libc::c_int != 0;
    |                                                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a module
  --> lib.rs:25:1
   |
25 | pub mod hard_locale;
   | ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:371:38
    |
371 |                 elide_outer_quotes = 1 as libc::c_int != 0;
    |                                      ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:371:58
    |
371 |                 elide_outer_quotes = 1 as libc::c_int != 0;
    |                                                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
  --> src/hard_locale.rs:12:1
   |
12 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:378:37
    |
378 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/hard_locale.rs:14:1
   |
14 | / pub fn hard_locale(category: libc::c_int) -> bool {
15 | |     let mut locale: [libc::c_char; 257] = [0; 257];
16 | |     unsafe {
17 | |         if setlocale_null_r(
...  |
29 | |     return true;
30 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:378:57
    |
378 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing `#[inline]` for a function
  --> src/hard_locale.rs:14:1
   |
14 | / pub fn hard_locale(category: libc::c_int) -> bool {
15 | |     let mut locale: [libc::c_char; 257] = [0; 257];
16 | |     unsafe {
17 | |         if setlocale_null_r(
...  |
29 | |     return true;
30 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:379:38
    |
379 |                 elide_outer_quotes = 0 as libc::c_int != 0;
    |                                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:379:58
    |
379 |                 elide_outer_quotes = 0 as libc::c_int != 0;
    |                                                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:407:37
    |
407 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:407:57
    |
407 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:413:37
    |
413 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a module
  --> lib.rs:26:1
   |
26 | pub mod ialloc;
   | ^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:413:57
    |
413 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:426:38
    |
426 |                 elide_outer_quotes = 0 as libc::c_int != 0;
    |                                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:426:58
    |
426 |                 elide_outer_quotes = 0 as libc::c_int != 0;
    |                                                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:442:37
    |
442 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:442:57
    |
442 |                 backslash_escapes = 1 as libc::c_int != 0;
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:444:36
    |
444 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:448:38
    |
448 |                 elide_outer_quotes = 1 as libc::c_int != 0;
    |                                      ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
  --> src/ialloc.rs:24:1
   |
24 | pub type ptrdiff_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:448:58
    |
448 |                 elide_outer_quotes = 1 as libc::c_int != 0;
    |                                                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
  --> src/ialloc.rs:25:1
   |
25 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:456:41
    |
456 |                     backslash_escapes = 1 as libc::c_int != 0;
    |                                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
  --> src/ialloc.rs:26:1
   |
26 | pub type idx_t = ptrdiff_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a function
  --> src/ialloc.rs:30:1
   |
30 | / pub fn ireallocarray(
31 | |     p: Option<&mut Vec<u8>>,
32 | |     n: idx_t,
33 | |     s: idx_t,
...  |
49 | |     }
50 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:456:61
    |
456 |                     backslash_escapes = 1 as libc::c_int != 0;
    |                                                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:473:36
    |
473 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:477:13
    |
477 |         i = 0 as libc::c_int as size_t;
    |             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:482:14
    |
482 |         } == 0
    |              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:553:51
    |
553 | } else if (flags & QA_ELIDE_NULL_BYTES as i32) != 0 {
    |                                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:573:85
    |
573 | ...                   if flags & QA_SPLIT_TRIGRAPHS as libc::c_int != 0
    |                                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:586:45
    |
586 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                       ^^ help: consider adding suffix: `33_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:586:50
    |
586 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                            ^^ help: consider adding suffix: `39_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:586:55
    |
586 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                 ^^ help: consider adding suffix: `40_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:586:60
    |
586 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                      ^^ help: consider adding suffix: `41_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:586:65
    |
586 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                           ^^ help: consider adding suffix: `45_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:586:70
    |
586 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                ^^ help: consider adding suffix: `47_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:586:75
    |
586 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                     ^^ help: consider adding suffix: `60_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:586:80
    |
586 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                          ^^ help: consider adding suffix: `61_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:586:85
    |
586 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                               ^^ help: consider adding suffix: `62_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:636:85
    |
636 | ...                   if flags & QA_SPLIT_TRIGRAPHS as libc::c_int != 0
    |                                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:649:45
    |
649 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                       ^^ help: consider adding suffix: `33_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/ialloc.rs:55:1
   |
55 | / pub fn icalloc(n: usize, s: usize) -> Option<Vec<u8>> {
56 | |     if n > usize::MAX / s {
57 | |         if s != 0 {
58 | |             return None; // Equivalent to _gl_alloc_nomem()
...  |
70 | |     Some(vec)
71 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:649:50
    |
649 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                            ^^ help: consider adding suffix: `39_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:649:55
    |
649 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                 ^^ help: consider adding suffix: `40_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:649:60
    |
649 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                      ^^ help: consider adding suffix: `41_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:649:65
    |
649 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                           ^^ help: consider adding suffix: `45_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:649:70
    |
649 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                ^^ help: consider adding suffix: `47_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:649:75
    |
649 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                     ^^ help: consider adding suffix: `60_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:649:80
    |
649 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                          ^^ help: consider adding suffix: `61_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:649:85
    |
649 | ...                   33 | 39 | 40 | 41 | 45 | 47 | 60 | 61 | 62 => {
    |                                                               ^^ help: consider adding suffix: `62_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:744:37
    |
744 |                         (argsize == 1 as libc::c_int as libc::c_ulong) as libc::c_int
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:745:26
    |
745 |                     } == 0
    |                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
  --> src/ialloc.rs:76:1
   |
76 | / pub fn irealloc(p: Option<&mut [u8]>, s: usize) -> Option<Vec<u8>> {
77 | |     if s <= usize::MAX {
78 | |         let new_size = if s == 0 { 1 } else { s };
79 | |         let mut vec = Vec::with_capacity(new_size);
...  |
86 | |     }
87 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:826:29
    |
826 |                         m = 1 as libc::c_int as size_t;
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:830:32
    |
830 | ...                   != 0 as libc::c_int;
    |                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:837:29
    |
837 |                         m = 0 as libc::c_int as size_t;
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:838:37
    |
838 |                         printable = 1 as libc::c_int != 0;
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:838:57
    |
838 |                         printable = 1 as libc::c_int != 0;
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/ialloc.rs:92:1
    |
92  | / pub fn imalloc(s: idx_t) -> Option<Box<[u8]>> {
93  | |     if s as usize <= usize::MAX {
94  | |         let layout = std::alloc::Layout::from_size_align(s as usize, 1).ok()?;
95  | |         let ptr = unsafe { std::alloc::alloc(layout) };
...   |
103 | |     }
104 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:849:39
    |
849 |                         if !(bytes == 0 as libc::c_int as libc::c_ulong) {
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:850:43
    |
850 | ...                   if bytes == -(1 as libc::c_int) as size_t {
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:851:45
    |
851 | ...                   printable = 0 as libc::c_int != 0;
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:851:65
    |
851 | ...                   printable = 0 as libc::c_int != 0;
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:852:50
    |
852 | ...                   } else if bytes == -(2 as libc::c_int) as size_t {
    |                                            ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:853:45
    |
853 | ...                   printable = 0 as libc::c_int != 0;
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:853:65
    |
853 | ...                   printable = 0 as libc::c_int != 0;
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:856:44
    |
856 | ...                   != 0
    |                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:862:50
    |
862 | ...                   if '[' as i32 == 0x5b as libc::c_int
    |                                        ^^^^ help: consider adding suffix: `0x005b_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:863:77
    |
863 | ...                   && elide_outer_quotes as libc::c_int != 0
    |                                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:868:41
    |
868 | ...                   j = 1 as libc::c_int as size_t;
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:874:45
    |
874 | ...                   91 | 92 | 94 | 96 | 124 => {
    |                       ^^ help: consider adding suffix: `91_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:874:50
    |
874 | ...                   91 | 92 | 94 | 96 | 124 => {
    |                            ^^ help: consider adding suffix: `92_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:874:55
    |
874 | ...                   91 | 92 | 94 | 96 | 124 => {
    |                                 ^^ help: consider adding suffix: `94_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:874:60
    |
874 | ...                   91 | 92 | 94 | 96 | 124 => {
    |                                      ^^ help: consider adding suffix: `96_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/ialloc.rs:110:1
    |
110 | / pub fn _gl_alloc_nomem() -> *mut libc::c_void {
111 | |     // Simulating allocation failure by setting errno and returning a null pointer
112 | |     unsafe {
113 | |         *__errno_location() = 12; // Set errno to ENOMEM
114 | |     }
115 | |     std::ptr::null_mut() // Return a null pointer
116 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:874:65
    |
874 | ...                   91 | 92 | 94 | 96 | 124 => {
    |                                           ^^^ help: consider adding suffix: `124_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:884:53
    |
884 | ...                   if c32isprint(w) == 0 {
    |                                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:885:49
    |
885 | ...                   printable = 0 as libc::c_int != 0;
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:885:69
    |
885 | ...                   printable = 0 as libc::c_int != 0;
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:924:73
    |
924 |                 buffer_slice[len as usize] = ('0' as i32 + (c as i32 >> 6)) as i8;
    |                                                                         ^ help: consider adding suffix: `6_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a module
  --> lib.rs:27:1
   |
27 | pub mod localcharset;
   | ^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:928:74
    |
928 |                 buffer_slice[len as usize] = ('0' as i32 + ((c as i32 >> 3) & 7)) as i8;
    |                                                                          ^ help: consider adding suffix: `3_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/quotearg.rs:928:79
    |
928 |                 buffer_slice[len as usize] = ('0' as i32 + ((c as i32 >> 3) & 7)) as i8;
    |                                                                               ^ help: consider adding suffix: `7_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
 --> src/localcharset.rs:7:1
  |
7 | pub const CODESET: C2RustUnnamed = 14;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/quotearg.rs:931:43
    |
931 |             c = ('0' as i32 + (c as i32 & 7)) as u8;
    |                                           ^ help: consider adding suffix: `7_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
 --> src/localcharset.rs:8:1
  |
8 | pub type nl_item = libc::c_int;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1110:19
     |
1110 |         if len == 0 as libc::c_int as libc::c_ulong
     |                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
 --> src/localcharset.rs:9:1
  |
9 | pub type C2RustUnnamed = libc::c_uint;
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1113:53
     |
1113 |             && elide_outer_quotes as libc::c_int != 0
     |                                                     ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:10:1
   |
10 | pub const _NL_NUM: C2RustUnnamed = 786449;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1120:82
     |
1120 |             && !elide_outer_quotes && encountered_single_quote as libc::c_int != 0)
     |                                                                                  ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:11:1
   |
11 | pub const _NL_NUM_LC_IDENTIFICATION: C2RustUnnamed = 786448;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1151:56
     |
1151 |                 && backslash_escapes as libc::c_int != 0
     |                                                        ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
  --> src/localcharset.rs:12:1
   |
12 | pub const _NL_IDENTIFICATION_CODESET: C2RustUnnamed = 786447;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:13:1
   |
13 | pub const _NL_IDENTIFICATION_CATEGORY: C2RustUnnamed = 786446;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:354:27
    |
354 |     let mut len: size_t = 0 as libc::c_int as size_t;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
  --> src/localcharset.rs:14:1
   |
14 | pub const _NL_IDENTIFICATION_DATE: C2RustUnnamed = 786445;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:355:39
    |
355 |     let mut orig_buffersize: size_t = 0 as libc::c_int as size_t;
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: `0 as *const _` detected
   --> src/quotearg.rs:356:49
    |
356 |     let mut quote_string: *const libc::c_char = 0 as *const libc::c_char;
    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a constant
  --> src/localcharset.rs:15:1
   |
15 | pub const _NL_IDENTIFICATION_REVISION: C2RustUnnamed = 786444;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:357:40
    |
357 |     let mut quote_string_len: size_t = 0 as libc::c_int as size_t;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
  --> src/localcharset.rs:16:1
   |
16 | pub const _NL_IDENTIFICATION_ABBREVIATION: C2RustUnnamed = 786443;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:360:12
    |
360 |         == 1 as libc::c_int as libc::c_ulong;
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
  --> src/localcharset.rs:17:1
   |
17 | pub const _NL_IDENTIFICATION_APPLICATION: C2RustUnnamed = 786442;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:361:48
    |
361 |     let mut elide_outer_quotes: bool = flags & QA_ELIDE_OUTER_QUOTES as libc::c_int
    |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/localcharset.rs:18:1
   |
18 | pub const _NL_IDENTIFICATION_AUDIENCE: C2RustUnnamed = 786441;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:384:24
    |
384 |                     != custom_quoting_style as libc::c_int as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
  --> src/localcharset.rs:19:1
   |
19 | pub const _NL_IDENTIFICATION_TERRITORY: C2RustUnnamed = 786440;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:384:24
    |
384 |                     != custom_quoting_style as libc::c_int as libc::c_uint
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/localcharset.rs:20:1
   |
20 | pub const _NL_IDENTIFICATION_LANGUAGE: C2RustUnnamed = 786439;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:387:25
    |
387 |                         b"`\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"`\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/localcharset.rs:21:1
   |
21 | pub const _NL_IDENTIFICATION_FAX: C2RustUnnamed = 786438;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:391:25
    |
391 |                         b"'\0" as *const u8 as *const libc::c_char,
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"'\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/localcharset.rs:22:1
   |
22 | pub const _NL_IDENTIFICATION_TEL: C2RustUnnamed = 786437;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:399:44
    |
399 | ...                   *buffer.offset(len as isize) = *quote_string;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:23:1
   |
23 | pub const _NL_IDENTIFICATION_EMAIL: C2RustUnnamed = 786436;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:399:44
    |
399 | ...                   *buffer.offset(len as isize) = *quote_string;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/localcharset.rs:24:1
   |
24 | pub const _NL_IDENTIFICATION_CONTACT: C2RustUnnamed = 786435;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:402:25
    |
402 |                         len;
    |                         ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
  --> src/localcharset.rs:25:1
   |
25 | pub const _NL_IDENTIFICATION_ADDRESS: C2RustUnnamed = 786434;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:404:25
    |
404 |                         quote_string;
    |                         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
  --> src/localcharset.rs:26:1
   |
26 | pub const _NL_IDENTIFICATION_SOURCE: C2RustUnnamed = 786433;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:437:56
    |
437 |                         *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:27:1
   |
27 | pub const _NL_IDENTIFICATION_TITLE: C2RustUnnamed = 786432;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:437:40
    |
437 |                         *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                        ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:28:1
   |
28 | pub const _NL_NUM_LC_MEASUREMENT: C2RustUnnamed = 720898;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:437:40
    |
437 |                         *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                        ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/localcharset.rs:29:1
   |
29 | pub const _NL_MEASUREMENT_CODESET: C2RustUnnamed = 720897;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:440:21
    |
440 |                     len;
    |                     ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
  --> src/localcharset.rs:30:1
   |
30 | pub const _NL_MEASUREMENT_MEASUREMENT: C2RustUnnamed = 720896;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:31:1
   |
31 | pub const _NL_NUM_LC_TELEPHONE: C2RustUnnamed = 655365;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:443:32
    |
443 |                 quote_string = b"\"\0" as *const u8 as *const libc::c_char;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\"\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:444:36
    |
444 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
  --> src/localcharset.rs:32:1
   |
32 | pub const _NL_TELEPHONE_CODESET: C2RustUnnamed = 655364;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
   --> src/quotearg.rs:453:9
    |
453 | /         match current_block_48 {
454 | |             2266290538919981374 => {
455 | |                 if !elide_outer_quotes {
456 | |                     backslash_escapes = 1 as libc::c_int != 0;
...   |
460 | |             _ => {}
461 | |         }
    | |_________^
    |
    = note: `-W clippy::single-match` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
453 ~         if current_block_48 == 2266290538919981374 {
454 +             if !elide_outer_quotes {
455 +                 backslash_escapes = 1 as libc::c_int != 0;
456 +             }
457 +             current_block_48 = 14141891332124833771;
458 +         }
    |

warning: missing documentation for a constant
  --> src/localcharset.rs:33:1
   |
33 | pub const _NL_TELEPHONE_INT_PREFIX: C2RustUnnamed = 655363;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:34:1
   |
34 | pub const _NL_TELEPHONE_INT_SELECT: C2RustUnnamed = 655362;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
   --> src/quotearg.rs:462:9
    |
462 | /         match current_block_48 {
463 | |             14141891332124833771 => {
464 | |                 quoting_style = shell_always_quoting_style;
465 | |                 if !elide_outer_quotes {
...   |
475 | |             _ => {}
476 | |         }
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
    |
462 ~         if current_block_48 == 14141891332124833771 {
463 +             quoting_style = shell_always_quoting_style;
464 +             if !elide_outer_quotes {
465 +                 if len < buffersize {
466 +                     *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
467 +                 }
468 +                 len = len.wrapping_add(1);
469 +                 len;
470 +             }
471 +             quote_string = b"'\0" as *const u8 as *const libc::c_char;
472 +             quote_string_len = 1 as libc::c_int as size_t;
473 +         }
    |

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:467:56
    |
467 |                         *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
    |                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:35:1
   |
35 | pub const _NL_TELEPHONE_TEL_DOM_FMT: C2RustUnnamed = 655361;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:36:1
   |
36 | pub const _NL_TELEPHONE_TEL_INT_FMT: C2RustUnnamed = 655360;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:467:40
    |
467 |                         *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
    |                                        ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:467:40
    |
467 |                         *buffer.offset(len as isize) = '\'' as i32 as libc::c_char;
    |                                        ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/localcharset.rs:37:1
   |
37 | pub const _NL_NUM_LC_ADDRESS: C2RustUnnamed = 589837;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:38:1
   |
38 | pub const _NL_ADDRESS_CODESET: C2RustUnnamed = 589836;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:470:21
    |
470 |                     len;
    |                     ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
  --> src/localcharset.rs:39:1
   |
39 | pub const _NL_ADDRESS_LANG_LIB: C2RustUnnamed = 589835;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:472:32
    |
472 |                 quote_string = b"'\0" as *const u8 as *const libc::c_char;
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"'\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/localcharset.rs:40:1
   |
40 | pub const _NL_ADDRESS_LANG_TERM: C2RustUnnamed = 589834;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:473:36
    |
473 |                 quote_string_len = 1 as libc::c_int as size_t;
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
  --> src/localcharset.rs:41:1
   |
41 | pub const _NL_ADDRESS_LANG_AB: C2RustUnnamed = 589833;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:477:13
    |
477 |         i = 0 as libc::c_int as size_t;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/quotearg.rs:479:13
    |
479 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*arg.offset(i as isize) as libc::c_int == '\0' as i32)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
  --> src/localcharset.rs:42:1
   |
42 | pub const _NL_ADDRESS_LANG_NAME: C2RustUnnamed = 589832;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:43:1
   |
43 | pub const _NL_ADDRESS_COUNTRY_ISBN: C2RustUnnamed = 589831;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:479:14
    |
479 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*arg.offset(i as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
  --> src/localcharset.rs:44:1
   |
44 | pub const _NL_ADDRESS_COUNTRY_NUM: C2RustUnnamed = 589830;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:479:26
    |
479 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |                          ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:45:1
   |
45 | pub const _NL_ADDRESS_COUNTRY_CAR: C2RustUnnamed = 589829;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:479:26
    |
479 |             (*arg.offset(i as isize) as libc::c_int == '\0' as i32) as libc::c_int
    |                          ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/localcharset.rs:46:1
   |
46 | pub const _NL_ADDRESS_COUNTRY_AB3: C2RustUnnamed = 589828;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/quotearg.rs:481:13
    |
481 |             (i == argsize) as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(i == argsize)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
  --> src/localcharset.rs:47:1
   |
47 | pub const _NL_ADDRESS_COUNTRY_AB2: C2RustUnnamed = 589827;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:490:17
    |
490 | let arg_slice = unsafe { std::slice::from_raw_parts(arg as *const u8, argsize as usize) };
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/localcharset.rs:48:1
   |
48 | pub const _NL_ADDRESS_COUNTRY_POST: C2RustUnnamed = 589826;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:490:26
    |
490 | let arg_slice = unsafe { std::slice::from_raw_parts(arg as *const u8, argsize as usize) };
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a constant
  --> src/localcharset.rs:49:1
   |
49 | pub const _NL_ADDRESS_COUNTRY_NAME: C2RustUnnamed = 589825;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:490:53
    |
490 | let arg_slice = unsafe { std::slice::from_raw_parts(arg as *const u8, argsize as usize) };
    |                                                     ^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `arg.cast::<u8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/localcharset.rs:50:1
   |
50 | pub const _NL_ADDRESS_POSTAL_FMT: C2RustUnnamed = 589824;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:490:71
    |
490 | let arg_slice = unsafe { std::slice::from_raw_parts(arg as *const u8, argsize as usize) };
    |                                                                       ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:51:1
   |
51 | pub const _NL_NUM_LC_NAME: C2RustUnnamed = 524295;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:52:1
   |
52 | pub const _NL_NAME_CODESET: C2RustUnnamed = 524294;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:495:8
    |
495 |     && i + quote_string_len <= if argsize == u64::MAX && 1 < quote_string_len {
    |        ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:53:1
   |
53 | pub const _NL_NAME_NAME_MS: C2RustUnnamed = 524293;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:495:8
    |
495 |     && i + quote_string_len <= if argsize == u64::MAX && 1 < quote_string_len {
    |        ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:54:1
   |
54 | pub const _NL_NAME_NAME_MISS: C2RustUnnamed = 524292;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: all if blocks contain the same code at the end
   --> src/quotearg.rs:499:5
    |
499 | /         argsize
500 | |     }
    | |_____^
    |
    = note: `-W clippy::branches-sharing-code` implied by `-W clippy::nursery`
    = note: the end suggestion probably needs some adjustments to use the expression result correctly
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#branches_sharing_code
help: consider moving these statements after the if
    |
499 ~     }
500 +     argsize
    |

warning: missing documentation for a constant
  --> src/localcharset.rs:55:1
   |
55 | pub const _NL_NAME_NAME_MRS: C2RustUnnamed = 524291;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: slicing may panic
   --> src/quotearg.rs:501:9
    |
501 |     && &arg_slice[i as usize..(i + quote_string_len) as usize] == unsafe { std::slice::from_raw_parts(quote_string as *const u8, quote_st...
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n..m)` or `.get_mut(n..m)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
  --> src/localcharset.rs:56:1
   |
56 | pub const _NL_NAME_NAME_MR: C2RustUnnamed = 524290;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:501:19
    |
501 |     && &arg_slice[i as usize..(i + quote_string_len) as usize] == unsafe { std::slice::from_raw_parts(quote_string as *const u8, quote_st...
    |                   ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:57:1
   |
57 | pub const _NL_NAME_NAME_GEN: C2RustUnnamed = 524289;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:501:31
    |
501 |     && &arg_slice[i as usize..(i + quote_string_len) as usize] == unsafe { std::slice::from_raw_parts(quote_string as *const u8, quote_st...
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:58:1
   |
58 | pub const _NL_NAME_NAME_FMT: C2RustUnnamed = 524288;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:501:31
    |
501 |     && &arg_slice[i as usize..(i + quote_string_len) as usize] == unsafe { std::slice::from_raw_parts(quote_string as *const u8, quote_st...
    |                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:59:1
   |
59 | pub const _NL_NUM_LC_PAPER: C2RustUnnamed = 458755;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:60:1
   |
60 | pub const _NL_PAPER_CODESET: C2RustUnnamed = 458754;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:501:31
    |
501 |     && &arg_slice[i as usize..(i + quote_string_len) as usize] == unsafe { std::slice::from_raw_parts(quote_string as *const u8, quote_st...
    |                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:61:1
   |
61 | pub const _NL_PAPER_WIDTH: C2RustUnnamed = 458753;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:501:67
    |
501 | ...ng_len) as usize] == unsafe { std::slice::from_raw_parts(quote_string as *const u8, quote_string_len as usize) }
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/localcharset.rs:62:1
   |
62 | pub const _NL_PAPER_HEIGHT: C2RustUnnamed = 458752;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:501:76
    |
501 |     && &arg_slice[i as usize..(i + quote_string_len) as usize] == unsafe { std::slice::from_raw_parts(quote_string as *const u8, quote_st...
    |                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a constant
  --> src/localcharset.rs:63:1
   |
63 | pub const _NL_NUM_LC_MESSAGES: C2RustUnnamed = 327685;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/quotearg.rs:501:103
    |
501 | ...:from_raw_parts(quote_string as *const u8, quote_string_len as usize) }
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `quote_string.cast::<u8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/localcharset.rs:64:1
   |
64 | pub const _NL_MESSAGES_CODESET: C2RustUnnamed = 327684;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:501:130
    |
501 | ...std::slice::from_raw_parts(quote_string as *const u8, quote_string_len as usize) }
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:65:1
   |
65 | pub const __NOSTR: C2RustUnnamed = 327683;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:510:5
    |
510 | c = arg_slice[i as usize];
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
  --> src/localcharset.rs:66:1
   |
66 | pub const __YESSTR: C2RustUnnamed = 327682;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:510:15
    |
510 | c = arg_slice[i as usize];
    |               ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:67:1
   |
67 | pub const __NOEXPR: C2RustUnnamed = 327681;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/localcharset.rs:68:1
   |
68 | pub const __YESEXPR: C2RustUnnamed = 327680;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:521:13
    |
521 |             unsafe { *buffer.offset(len as isize) = '\'' as i8 };
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/localcharset.rs:69:1
   |
69 | pub const _NL_NUM_LC_NUMERIC: C2RustUnnamed = 65542;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:521:37
    |
521 |             unsafe { *buffer.offset(len as isize) = '\'' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:70:1
   |
70 | pub const _NL_NUMERIC_CODESET: C2RustUnnamed = 65541;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:521:37
    |
521 |             unsafe { *buffer.offset(len as isize) = '\'' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/localcharset.rs:71:1
   |
71 | pub const _NL_NUMERIC_THOUSANDS_SEP_WC: C2RustUnnamed = 65540;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:523:9
    |
523 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:72:1
   |
72 | pub const _NL_NUMERIC_DECIMAL_POINT_WC: C2RustUnnamed = 65539;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:523:9
    |
523 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:73:1
   |
73 | pub const __GROUPING: C2RustUnnamed = 65538;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:525:13
    |
525 |             unsafe { *buffer.offset(len as isize) = '$' as i8 };
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/localcharset.rs:74:1
   |
74 | pub const THOUSEP: C2RustUnnamed = 65537;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:525:37
    |
525 |             unsafe { *buffer.offset(len as isize) = '$' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:75:1
   |
75 | pub const __THOUSANDS_SEP: C2RustUnnamed = 65537;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:525:37
    |
525 |             unsafe { *buffer.offset(len as isize) = '$' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/localcharset.rs:76:1
   |
76 | pub const RADIXCHAR: C2RustUnnamed = 65536;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:527:9
    |
527 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:77:1
   |
77 | pub const __DECIMAL_POINT: C2RustUnnamed = 65536;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:527:9
    |
527 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:78:1
   |
78 | pub const _NL_NUM_LC_MONETARY: C2RustUnnamed = 262190;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:529:13
    |
529 |             unsafe { *buffer.offset(len as isize) = '\'' as i8 };
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/localcharset.rs:79:1
   |
79 | pub const _NL_MONETARY_CODESET: C2RustUnnamed = 262189;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:529:37
    |
529 |             unsafe { *buffer.offset(len as isize) = '\'' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:80:1
   |
80 | pub const _NL_MONETARY_THOUSANDS_SEP_WC: C2RustUnnamed = 262188;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:529:37
    |
529 |             unsafe { *buffer.offset(len as isize) = '\'' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/localcharset.rs:81:1
   |
81 | pub const _NL_MONETARY_DECIMAL_POINT_WC: C2RustUnnamed = 262187;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:531:9
    |
531 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:82:1
   |
82 | pub const _NL_MONETARY_CONVERSION_RATE: C2RustUnnamed = 262186;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:531:9
    |
531 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:83:1
   |
83 | pub const _NL_MONETARY_DUO_VALID_TO: C2RustUnnamed = 262185;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:535:9
    |
535 |         unsafe { *buffer.offset(len as isize) = '\\' as i8 };
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/localcharset.rs:84:1
   |
84 | pub const _NL_MONETARY_DUO_VALID_FROM: C2RustUnnamed = 262184;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:535:33
    |
535 |         unsafe { *buffer.offset(len as isize) = '\\' as i8 };
    |                                 ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:85:1
   |
85 | pub const _NL_MONETARY_UNO_VALID_TO: C2RustUnnamed = 262183;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:535:33
    |
535 |         unsafe { *buffer.offset(len as isize) = '\\' as i8 };
    |                                 ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/localcharset.rs:86:1
   |
86 | pub const _NL_MONETARY_UNO_VALID_FROM: C2RustUnnamed = 262182;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:537:5
    |
537 |     len += 1;
    |     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:87:1
   |
87 | pub const _NL_MONETARY_DUO_INT_N_SIGN_POSN: C2RustUnnamed = 262181;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:537:5
    |
537 |     len += 1;
    |     ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:88:1
   |
88 | pub const _NL_MONETARY_DUO_INT_P_SIGN_POSN: C2RustUnnamed = 262180;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:539:12
    |
539 |         && i + 1 < argsize
    |            ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:89:1
   |
89 | pub const _NL_MONETARY_DUO_N_SIGN_POSN: C2RustUnnamed = 262179;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:539:12
    |
539 |         && i + 1 < argsize
    |            ^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:90:1
   |
90 | pub const _NL_MONETARY_DUO_P_SIGN_POSN: C2RustUnnamed = 262178;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:540:26
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/localcharset.rs:91:1
   |
91 | pub const _NL_MONETARY_DUO_INT_N_SEP_BY_SPACE: C2RustUnnamed = 262177;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:540:47
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                               ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:540:47
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                               ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/localcharset.rs:92:1
   |
92 | pub const _NL_MONETARY_DUO_INT_N_CS_PRECEDES: C2RustUnnamed = 262176;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:540:47
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                               ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:93:1
   |
93 | pub const _NL_MONETARY_DUO_INT_P_SEP_BY_SPACE: C2RustUnnamed = 262175;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:540:47
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                               ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:94:1
   |
94 | pub const _NL_MONETARY_DUO_INT_P_CS_PRECEDES: C2RustUnnamed = 262174;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:540:70
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/localcharset.rs:95:1
   |
95 | pub const _NL_MONETARY_DUO_N_SEP_BY_SPACE: C2RustUnnamed = 262173;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:540:91
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                                                                           ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
  --> src/localcharset.rs:96:1
   |
96 | pub const _NL_MONETARY_DUO_N_CS_PRECEDES: C2RustUnnamed = 262172;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:540:91
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                                                                           ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/localcharset.rs:97:1
   |
97 | pub const _NL_MONETARY_DUO_P_SEP_BY_SPACE: C2RustUnnamed = 262171;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:540:91
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                                                                           ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:98:1
   |
98 | pub const _NL_MONETARY_DUO_P_CS_PRECEDES: C2RustUnnamed = 262170;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:540:91
    |
540 |         && ('0' as i8 <= unsafe { *arg.offset((i + 1) as isize) } && unsafe { *arg.offset((i + 1) as isize) } <= '9' as i8)
    |                                                                                           ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
  --> src/localcharset.rs:99:1
   |
99 | pub const _NL_MONETARY_DUO_FRAC_DIGITS: C2RustUnnamed = 262169;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:543:13
    |
543 |             unsafe { *buffer.offset(len as isize) = '0' as i8 };
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:100:1
    |
100 | pub const _NL_MONETARY_DUO_INT_FRAC_DIGITS: C2RustUnnamed = 262168;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:543:37
    |
543 |             unsafe { *buffer.offset(len as isize) = '0' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:101:1
    |
101 | pub const _NL_MONETARY_DUO_CURRENCY_SYMBOL: C2RustUnnamed = 262167;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:543:37
    |
543 |             unsafe { *buffer.offset(len as isize) = '0' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:102:1
    |
102 | pub const _NL_MONETARY_DUO_INT_CURR_SYMBOL: C2RustUnnamed = 262166;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:545:9
    |
545 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:103:1
    |
103 | pub const __INT_N_SIGN_POSN: C2RustUnnamed = 262165;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:545:9
    |
545 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:104:1
    |
104 | pub const __INT_P_SIGN_POSN: C2RustUnnamed = 262164;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:105:1
    |
105 | pub const __INT_N_SEP_BY_SPACE: C2RustUnnamed = 262163;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:547:13
    |
547 |             unsafe { *buffer.offset(len as isize) = '0' as i8 };
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:106:1
    |
106 | pub const __INT_N_CS_PRECEDES: C2RustUnnamed = 262162;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:547:37
    |
547 |             unsafe { *buffer.offset(len as isize) = '0' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:107:1
    |
107 | pub const __INT_P_SEP_BY_SPACE: C2RustUnnamed = 262161;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:547:37
    |
547 |             unsafe { *buffer.offset(len as isize) = '0' as i8 };
    |                                     ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:108:1
    |
108 | pub const __INT_P_CS_PRECEDES: C2RustUnnamed = 262160;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:549:9
    |
549 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:109:1
    |
109 | pub const _NL_MONETARY_CRNCYSTR: C2RustUnnamed = 262159;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:549:9
    |
549 |         len += 1;
    |         ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:110:1
    |
110 | pub const __N_SIGN_POSN: C2RustUnnamed = 262158;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting a character literal to `u8` truncates
   --> src/quotearg.rs:551:9
    |
551 |     c = '0' as u8;
    |         ^^^^^^^^^ help: use a byte literal instead: `b'0'`
    |
    = note: `-W clippy::char-lit-as-u8` implied by `-W clippy::all`
    = note: `char` is four bytes wide, but `u8` is a single byte
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8

warning: missing documentation for a constant
   --> src/localcharset.rs:111:1
    |
111 | pub const __P_SIGN_POSN: C2RustUnnamed = 262157;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:553:20
    |
553 | } else if (flags & QA_ELIDE_NULL_BYTES as i32) != 0 {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:112:1
    |
112 | pub const __N_SEP_BY_SPACE: C2RustUnnamed = 262156;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:573:48
    |
573 | ...                   if flags & QA_SPLIT_TRIGRAPHS as libc::c_int != 0
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:113:1
    |
113 | pub const __N_CS_PRECEDES: C2RustUnnamed = 262155;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:574:59
    |
574 | ...                   && i.wrapping_add(2 as libc::c_int as libc::c_ulong)
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:114:1
    |
114 | pub const __P_SEP_BY_SPACE: C2RustUnnamed = 262154;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:576:44
    |
576 |   ...                   && *arg
    |  __________________________^
577 | | ...                       .offset(
578 | | ...                           i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
579 | | ...                       ) as libc::c_int == '?' as i32
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
576 ~                                         && i32::from(*arg
577 +                                             .offset(
578 +                                                 i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
579 ~                                             )) == '?' as i32
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:115:1
    |
115 | pub const __P_CS_PRECEDES: C2RustUnnamed = 262153;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:578:49
    |
578 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:116:1
    |
116 | pub const __FRAC_DIGITS: C2RustUnnamed = 262152;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:578:49
    |
578 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:117:1
    |
117 | pub const __INT_FRAC_DIGITS: C2RustUnnamed = 262151;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:578:64
    |
578 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:118:1
    |
118 | pub const __NEGATIVE_SIGN: C2RustUnnamed = 262150;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:581:47
    |
581 |   ...                   match *arg
    |  _____________________________^
582 | | ...                       .offset(
583 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
584 | | ...                       ) as libc::c_int
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
581 ~                                         match i32::from(*arg
582 +                                             .offset(
583 +                                                 i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
584 +                                             ))
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:119:1
    |
119 | pub const __POSITIVE_SIGN: C2RustUnnamed = 262149;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:583:49
    |
583 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:120:1
    |
120 | pub const __MON_GROUPING: C2RustUnnamed = 262148;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:583:49
    |
583 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:121:1
    |
121 | pub const __MON_THOUSANDS_SEP: C2RustUnnamed = 262147;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:583:64
    |
583 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:122:1
    |
122 | pub const __MON_DECIMAL_POINT: C2RustUnnamed = 262146;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/quotearg.rs:591:53
    |
591 |   ...                   c = *arg
    |  ___________________________^
592 | | ...                       .offset(
593 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
594 | | ...                       ) as libc::c_uchar;
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:593:57
    |
593 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:123:1
    |
123 | pub const __CURRENCY_SYMBOL: C2RustUnnamed = 262145;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:124:1
    |
124 | pub const __INT_CURR_SYMBOL: C2RustUnnamed = 262144;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:593:57
    |
593 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:125:1
    |
125 | pub const _NL_NUM_LC_CTYPE: C2RustUnnamed = 86;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:593:72
    |
593 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:126:1
    |
126 | pub const _NL_CTYPE_EXTRA_MAP_14: C2RustUnnamed = 85;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:596:67
    |
596 | ...                   .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:127:1
    |
127 | pub const _NL_CTYPE_EXTRA_MAP_13: C2RustUnnamed = 84;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:599:84
    |
599 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:128:1
    |
128 | pub const _NL_CTYPE_EXTRA_MAP_12: C2RustUnnamed = 83;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:599:68
    |
599 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:129:1
    |
129 | pub const _NL_CTYPE_EXTRA_MAP_11: C2RustUnnamed = 82;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:599:68
    |
599 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:130:1
    |
130 | pub const _NL_CTYPE_EXTRA_MAP_10: C2RustUnnamed = 81;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:602:49
    |
602 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:131:1
    |
131 | pub const _NL_CTYPE_EXTRA_MAP_9: C2RustUnnamed = 80;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:132:1
    |
132 | pub const _NL_CTYPE_EXTRA_MAP_8: C2RustUnnamed = 79;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:604:84
    |
604 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:604:68
    |
604 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:133:1
    |
133 | pub const _NL_CTYPE_EXTRA_MAP_7: C2RustUnnamed = 78;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:134:1
    |
134 | pub const _NL_CTYPE_EXTRA_MAP_6: C2RustUnnamed = 77;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:604:68
    |
604 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: statement with no effect
   --> src/quotearg.rs:607:49
    |
607 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:135:1
    |
135 | pub const _NL_CTYPE_EXTRA_MAP_5: C2RustUnnamed = 76;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:609:84
    |
609 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:136:1
    |
136 | pub const _NL_CTYPE_EXTRA_MAP_4: C2RustUnnamed = 75;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:137:1
    |
137 | pub const _NL_CTYPE_EXTRA_MAP_3: C2RustUnnamed = 74;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:609:68
    |
609 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:138:1
    |
138 | pub const _NL_CTYPE_EXTRA_MAP_2: C2RustUnnamed = 73;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:609:68
    |
609 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:139:1
    |
139 | pub const _NL_CTYPE_EXTRA_MAP_1: C2RustUnnamed = 72;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:612:49
    |
612 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:614:84
    |
614 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:140:1
    |
140 | pub const _NL_CTYPE_NONASCII_CASE: C2RustUnnamed = 71;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:614:68
    |
614 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:141:1
    |
141 | pub const _NL_CTYPE_MAP_TO_NONASCII: C2RustUnnamed = 70;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:614:68
    |
614 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:142:1
    |
142 | pub const _NL_CTYPE_TRANSLIT_IGNORE: C2RustUnnamed = 69;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:617:49
    |
617 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:143:1
    |
143 | pub const _NL_CTYPE_TRANSLIT_IGNORE_LEN: C2RustUnnamed = 68;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:144:1
    |
144 | pub const _NL_CTYPE_TRANSLIT_DEFAULT_MISSING: C2RustUnnamed = 67;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:636:48
    |
636 | ...                   if flags & QA_SPLIT_TRIGRAPHS as libc::c_int != 0
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:145:1
    |
145 | pub const _NL_CTYPE_TRANSLIT_DEFAULT_MISSING_LEN: C2RustUnnamed = 66;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:637:59
    |
637 | ...                   && i.wrapping_add(2 as libc::c_int as libc::c_ulong)
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:146:1
    |
146 | pub const _NL_CTYPE_TRANSLIT_TO_TBL: C2RustUnnamed = 65;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:639:44
    |
639 |   ...                   && *arg
    |  __________________________^
640 | | ...                       .offset(
641 | | ...                           i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
642 | | ...                       ) as libc::c_int == '?' as i32
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
639 ~                                         && i32::from(*arg
640 +                                             .offset(
641 +                                                 i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
642 ~                                             )) == '?' as i32
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:147:1
    |
147 | pub const _NL_CTYPE_TRANSLIT_TO_IDX: C2RustUnnamed = 64;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:641:49
    |
641 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:641:49
    |
641 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:148:1
    |
148 | pub const _NL_CTYPE_TRANSLIT_FROM_TBL: C2RustUnnamed = 63;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:641:64
    |
641 | ...                   i.wrapping_add(1 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:149:1
    |
149 | pub const _NL_CTYPE_TRANSLIT_FROM_IDX: C2RustUnnamed = 62;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:150:1
    |
150 | pub const _NL_CTYPE_TRANSLIT_TAB_SIZE: C2RustUnnamed = 61;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:644:47
    |
644 |   ...                   match *arg
    |  _____________________________^
645 | | ...                       .offset(
646 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
647 | | ...                       ) as libc::c_int
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
644 ~                                         match i32::from(*arg
645 +                                             .offset(
646 +                                                 i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
647 +                                             ))
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:151:1
    |
151 | pub const _NL_CTYPE_OUTDIGIT9_WC: C2RustUnnamed = 60;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:646:49
    |
646 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:646:49
    |
646 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:152:1
    |
152 | pub const _NL_CTYPE_OUTDIGIT8_WC: C2RustUnnamed = 59;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:153:1
    |
153 | pub const _NL_CTYPE_OUTDIGIT7_WC: C2RustUnnamed = 58;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:646:64
    |
646 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/quotearg.rs:654:53
    |
654 |   ...                   c = *arg
    |  ___________________________^
655 | | ...                       .offset(
656 | | ...                           i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
657 | | ...                       ) as libc::c_uchar;
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:154:1
    |
154 | pub const _NL_CTYPE_OUTDIGIT6_WC: C2RustUnnamed = 57;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:656:57
    |
656 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:155:1
    |
155 | pub const _NL_CTYPE_OUTDIGIT5_WC: C2RustUnnamed = 56;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:656:57
    |
656 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:156:1
    |
156 | pub const _NL_CTYPE_OUTDIGIT4_WC: C2RustUnnamed = 55;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:656:72
    |
656 | ...                   i.wrapping_add(2 as libc::c_int as libc::c_ulong) as isize,
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:157:1
    |
157 | pub const _NL_CTYPE_OUTDIGIT3_WC: C2RustUnnamed = 54;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:659:67
    |
659 | ...                   .wrapping_add(2 as libc::c_int as libc::c_ulong) as size_t
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:158:1
    |
158 | pub const _NL_CTYPE_OUTDIGIT2_WC: C2RustUnnamed = 53;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:662:84
    |
662 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:159:1
    |
159 | pub const _NL_CTYPE_OUTDIGIT1_WC: C2RustUnnamed = 52;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:662:68
    |
662 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:160:1
    |
160 | pub const _NL_CTYPE_OUTDIGIT0_WC: C2RustUnnamed = 51;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:662:68
    |
662 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:161:1
    |
161 | pub const _NL_CTYPE_OUTDIGIT9_MB: C2RustUnnamed = 50;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:665:49
    |
665 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:162:1
    |
162 | pub const _NL_CTYPE_OUTDIGIT8_MB: C2RustUnnamed = 49;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:667:84
    |
667 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:163:1
    |
163 | pub const _NL_CTYPE_OUTDIGIT7_MB: C2RustUnnamed = 48;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:667:68
    |
667 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:164:1
    |
164 | pub const _NL_CTYPE_OUTDIGIT6_MB: C2RustUnnamed = 47;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:667:68
    |
667 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:165:1
    |
165 | pub const _NL_CTYPE_OUTDIGIT5_MB: C2RustUnnamed = 46;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:670:49
    |
670 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:166:1
    |
166 | pub const _NL_CTYPE_OUTDIGIT4_MB: C2RustUnnamed = 45;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:672:84
    |
672 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:167:1
    |
167 | pub const _NL_CTYPE_OUTDIGIT3_MB: C2RustUnnamed = 44;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:672:68
    |
672 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:168:1
    |
168 | pub const _NL_CTYPE_OUTDIGIT2_MB: C2RustUnnamed = 43;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:672:68
    |
672 | ...                   *buffer.offset(len as isize) = '"' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:169:1
    |
169 | pub const _NL_CTYPE_OUTDIGIT1_MB: C2RustUnnamed = 42;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:675:49
    |
675 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:170:1
    |
170 | pub const _NL_CTYPE_OUTDIGIT0_MB: C2RustUnnamed = 41;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:677:84
    |
677 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:171:1
    |
171 | pub const _NL_CTYPE_INDIGITS9_WC: C2RustUnnamed = 40;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:677:68
    |
677 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:172:1
    |
172 | pub const _NL_CTYPE_INDIGITS8_WC: C2RustUnnamed = 39;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:677:68
    |
677 | ...                   *buffer.offset(len as isize) = '?' as i32 as libc::c_char;
    |                                      ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:173:1
    |
173 | pub const _NL_CTYPE_INDIGITS7_WC: C2RustUnnamed = 38;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:680:49
    |
680 | ...                   len;
    |                       ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:174:1
    |
174 | pub const _NL_CTYPE_INDIGITS6_WC: C2RustUnnamed = 37;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting a character literal to `u8` truncates
   --> src/quotearg.rs:696:15
    |
696 |         esc = 'a' as u8;
    |               ^^^^^^^^^ help: use a byte literal instead: `b'a'`
    |
    = note: `char` is four bytes wide, but `u8` is a single byte
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8

warning: missing documentation for a constant
   --> src/localcharset.rs:175:1
    |
175 | pub const _NL_CTYPE_INDIGITS5_WC: C2RustUnnamed = 36;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting a character literal to `u8` truncates
   --> src/quotearg.rs:700:15
    |
700 |         esc = 'b' as u8;
    |               ^^^^^^^^^ help: use a byte literal instead: `b'b'`
    |
    = note: `char` is four bytes wide, but `u8` is a single byte
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8

warning: missing documentation for a constant
   --> src/localcharset.rs:176:1
    |
176 | pub const _NL_CTYPE_INDIGITS4_WC: C2RustUnnamed = 35;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting a character literal to `u8` truncates
   --> src/quotearg.rs:704:15
    |
704 |         esc = 'f' as u8;
    |               ^^^^^^^^^ help: use a byte literal instead: `b'f'`
    |
    = note: `char` is four bytes wide, but `u8` is a single byte
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8

warning: missing documentation for a constant
   --> src/localcharset.rs:177:1
    |
177 | pub const _NL_CTYPE_INDIGITS3_WC: C2RustUnnamed = 34;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting a character literal to `u8` truncates
   --> src/quotearg.rs:708:15
    |
708 |         esc = 'n' as u8;
    |               ^^^^^^^^^ help: use a byte literal instead: `b'n'`
    |
    = note: `char` is four bytes wide, but `u8` is a single byte
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8

warning: missing documentation for a constant
   --> src/localcharset.rs:178:1
    |
178 | pub const _NL_CTYPE_INDIGITS2_WC: C2RustUnnamed = 33;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting a character literal to `u8` truncates
   --> src/quotearg.rs:712:15
    |
712 |         esc = 'r' as u8;
    |               ^^^^^^^^^ help: use a byte literal instead: `b'r'`
    |
    = note: `char` is four bytes wide, but `u8` is a single byte
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8

warning: missing documentation for a constant
   --> src/localcharset.rs:179:1
    |
179 | pub const _NL_CTYPE_INDIGITS1_WC: C2RustUnnamed = 32;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting a character literal to `u8` truncates
   --> src/quotearg.rs:716:15
    |
716 |         esc = 't' as u8;
    |               ^^^^^^^^^ help: use a byte literal instead: `b't'`
    |
    = note: `char` is four bytes wide, but `u8` is a single byte
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8

warning: missing documentation for a constant
   --> src/localcharset.rs:180:1
    |
180 | pub const _NL_CTYPE_INDIGITS0_WC: C2RustUnnamed = 31;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting a character literal to `u8` truncates
   --> src/quotearg.rs:720:15
    |
720 |         esc = 'v' as u8;
    |               ^^^^^^^^^ help: use a byte literal instead: `b'v'`
    |
    = note: `char` is four bytes wide, but `u8` is a single byte
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#char_lit_as_u8

warning: missing documentation for a constant
   --> src/localcharset.rs:181:1
    |
181 | pub const _NL_CTYPE_INDIGITS_WC_LEN: C2RustUnnamed = 30;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/quotearg.rs:741:25
    |
741 | /                         (*arg.offset(1 as libc::c_int as isize) as libc::c_int
742 | |                             == '\0' as i32) as libc::c_int
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
741 ~                         i32::from(*arg.offset(1 as libc::c_int as isize) as libc::c_int
742 +                             == '\0' as i32)
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:182:1
    |
182 | pub const _NL_CTYPE_INDIGITS9_MB: C2RustUnnamed = 29;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:183:1
    |
183 | pub const _NL_CTYPE_INDIGITS8_MB: C2RustUnnamed = 28;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:741:26
    |
741 |                         (*arg.offset(1 as libc::c_int as isize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*arg.offset(1 as libc::c_int as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:184:1
    |
184 | pub const _NL_CTYPE_INDIGITS7_MB: C2RustUnnamed = 27;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/quotearg.rs:744:25
    |
744 |                         (argsize == 1 as libc::c_int as libc::c_ulong) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(argsize == 1 as libc::c_int as libc::c_ulong)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:744:37
    |
744 |                         (argsize == 1 as libc::c_int as libc::c_ulong) as libc::c_int
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:185:1
    |
185 | pub const _NL_CTYPE_INDIGITS6_MB: C2RustUnnamed = 26;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: all if blocks contain the same code at the end
   --> src/quotearg.rs:808:1
    |
808 | /     current_block = 253337042034819032;
809 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#branches_sharing_code
help: consider moving these statements after the if
    |
808 + }
809 + current_block = 253337042034819032;
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:186:1
    |
186 | pub const _NL_CTYPE_INDIGITS5_MB: C2RustUnnamed = 25;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:785:9
    |
785 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:187:1
    |
187 | pub const _NL_CTYPE_INDIGITS4_MB: C2RustUnnamed = 24;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:786:28
    |
786 |             *buffer.offset(len as isize) = '\'' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:188:1
    |
188 | pub const _NL_CTYPE_INDIGITS3_MB: C2RustUnnamed = 23;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:786:28
    |
786 |             *buffer.offset(len as isize) = '\'' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:189:1
    |
189 | pub const _NL_CTYPE_INDIGITS2_MB: C2RustUnnamed = 22;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:190:1
    |
190 | pub const _NL_CTYPE_INDIGITS1_MB: C2RustUnnamed = 21;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:792:9
    |
792 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:793:28
    |
793 |             *buffer.offset(len as isize) = '\\' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:191:1
    |
191 | pub const _NL_CTYPE_INDIGITS0_MB: C2RustUnnamed = 20;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:793:28
    |
793 |             *buffer.offset(len as isize) = '\\' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:192:1
    |
192 | pub const _NL_CTYPE_INDIGITS_MB_LEN: C2RustUnnamed = 19;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:799:9
    |
799 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:193:1
    |
193 | pub const _NL_CTYPE_MAP_OFFSET: C2RustUnnamed = 18;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:800:28
    |
800 |             *buffer.offset(len as isize) = '\'' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:194:1
    |
194 | pub const _NL_CTYPE_CLASS_OFFSET: C2RustUnnamed = 17;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:800:28
    |
800 |             *buffer.offset(len as isize) = '\'' as i8;
    |                            ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:195:1
    |
195 | pub const _NL_CTYPE_TOLOWER32: C2RustUnnamed = 16;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `if _ { .. } else { .. }` is an expression
   --> src/quotearg.rs:824:21
    |
824 | /                     let mut printable: bool = false;
825 | |                     if unibyte_locale {
826 | |                         m = 1 as libc::c_int as size_t;
827 | |                         printable = *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
...   |
890 | |                         }
891 | |                     }
    | |_____________________^
    |
    = note: `-W clippy::useless-let-if-seq` implied by `-W clippy::nursery`
    = note: you might not need `mut` at all
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_let_if_seq
help: it is more idiomatic to write
    |
824 ~                     let <mut> printable = if unibyte_locale { ..; *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
825 +                             as libc::c_int
826 +                             & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
827 +                             != 0 as libc::c_int } else { ..; false };
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:196:1
    |
196 | pub const _NL_CTYPE_TOUPPER32: C2RustUnnamed = 15;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:826:29
    |
826 |                         m = 1 as libc::c_int as size_t;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:197:1
    |
197 | pub const _NL_CTYPE_CODESET_NAME: C2RustUnnamed = 14;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u16` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:827:37
    |
827 |                           printable = *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
    |  _____________________________________^
828 | |                             as libc::c_int
    | |__________________________________________^ help: try: `i32::from(*(*__ctype_b_loc()).offset(c as libc::c_int as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:198:1
    |
198 | pub const _NL_CTYPE_MB_CUR_MAX: C2RustUnnamed = 13;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:827:64
    |
827 |                         printable = *(*__ctype_b_loc()).offset(c as libc::c_int as isize)
    |                                                                ^^^^^^^^^^^^^^^^ help: try: `i32::from(c)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:199:1
    |
199 | pub const _NL_CTYPE_WIDTH: C2RustUnnamed = 12;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:200:1
    |
200 | pub const _NL_CTYPE_MAP_NAMES: C2RustUnnamed = 11;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u16` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:829:31
    |
829 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(_ISprint as libc::c_int as libc::c_ushort)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:201:1
    |
201 | pub const _NL_CTYPE_CLASS_NAMES: C2RustUnnamed = 10;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u16` may truncate the value
   --> src/quotearg.rs:829:31
    |
829 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:202:1
    |
202 | pub const _NL_CTYPE_GAP6: C2RustUnnamed = 9;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u16` may lose the sign of the value
   --> src/quotearg.rs:829:31
    |
829 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:203:1
    |
203 | pub const _NL_CTYPE_GAP5: C2RustUnnamed = 8;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:829:31
    |
829 | ...                   & _ISprint as libc::c_int as libc::c_ushort as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:204:1
    |
204 | pub const _NL_CTYPE_GAP4: C2RustUnnamed = 7;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:837:29
    |
837 |                         m = 0 as libc::c_int as size_t;
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:205:1
    |
205 | pub const _NL_CTYPE_GAP3: C2RustUnnamed = 6;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:845:42
    |
845 | ...                   &*arg.offset(i.wrapping_add(m) as isize),
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:206:1
    |
206 | pub const _NL_CTYPE_CLASS32: C2RustUnnamed = 5;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:207:1
    |
207 | pub const _NL_CTYPE_GAP2: C2RustUnnamed = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:845:42
    |
845 | ...                   &*arg.offset(i.wrapping_add(m) as isize),
    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:849:39
    |
849 |                         if !(bytes == 0 as libc::c_int as libc::c_ulong) {
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:208:1
    |
208 | pub const _NL_CTYPE_TOLOWER: C2RustUnnamed = 3;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:209:1
    |
209 | pub const _NL_CTYPE_GAP1: C2RustUnnamed = 2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:850:41
    |
850 | ...                   if bytes == -(1 as libc::c_int) as size_t {
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:210:1
    |
210 | pub const _NL_CTYPE_TOUPPER: C2RustUnnamed = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:850:41
    |
850 | ...                   if bytes == -(1 as libc::c_int) as size_t {
    |                                   ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:211:1
    |
211 | pub const _NL_CTYPE_CLASS: C2RustUnnamed = 0;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:850:41
    |
850 | ...                   if bytes == -(1 as libc::c_int) as size_t {
    |                                   ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:852:48
    |
852 | ...                   } else if bytes == -(2 as libc::c_int) as size_t {
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:212:1
    |
212 | pub const _NL_NUM_LC_COLLATE: C2RustUnnamed = 196627;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:852:48
    |
852 | ...                   } else if bytes == -(2 as libc::c_int) as size_t {
    |                                          ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:213:1
    |
213 | pub const _NL_COLLATE_CODESET: C2RustUnnamed = 196626;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:852:48
    |
852 | ...                   } else if bytes == -(2 as libc::c_int) as size_t {
    |                                          ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:214:1
    |
214 | pub const _NL_COLLATE_COLLSEQWC: C2RustUnnamed = 196625;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:855:40
    |
855 | ...                   && *arg.offset(i.wrapping_add(m) as isize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*arg.offset(i.wrapping_add(m) as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:215:1
    |
215 | pub const _NL_COLLATE_COLLSEQMB: C2RustUnnamed = 196624;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:855:52
    |
855 | ...                   && *arg.offset(i.wrapping_add(m) as isize) as libc::c_int
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:216:1
    |
216 | pub const _NL_COLLATE_SYMB_EXTRAMB: C2RustUnnamed = 196623;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:855:52
    |
855 | ...                   && *arg.offset(i.wrapping_add(m) as isize) as libc::c_int
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:217:1
    |
217 | pub const _NL_COLLATE_SYMB_TABLEMB: C2RustUnnamed = 196622;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:859:37
    |
859 | ...                   m;
    |                       ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:218:1
    |
218 | pub const _NL_COLLATE_SYMB_HASH_SIZEMB: C2RustUnnamed = 196621;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/quotearg.rs:863:40
    |
863 | ...                   && elide_outer_quotes as libc::c_int != 0
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(elide_outer_quotes)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:219:1
    |
219 | pub const _NL_COLLATE_INDIRECTWC: C2RustUnnamed = 196620;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/quotearg.rs:865:44
    |
865 | ...                   == shell_always_quoting_style as libc::c_int as libc::c_uint
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:220:1
    |
220 | pub const _NL_COLLATE_EXTRAWC: C2RustUnnamed = 196619;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/quotearg.rs:865:44
    |
865 | ...                   == shell_always_quoting_style as libc::c_int as libc::c_uint
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:221:1
    |
221 | pub const _NL_COLLATE_WEIGHTWC: C2RustUnnamed = 196618;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:222:1
    |
222 | pub const _NL_COLLATE_TABLEWC: C2RustUnnamed = 196617;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/quotearg.rs:868:41
    |
868 | ...                   j = 1 as libc::c_int as size_t;
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:223:1
    |
223 | pub const _NL_COLLATE_GAP3: C2RustUnnamed = 196616;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:870:47
    |
870 |   ...                   match *arg
    |  _____________________________^
871 | | ...                       .offset(i.wrapping_add(m).wrapping_add(j) as isize)
872 | | ...                       as libc::c_int
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
870 ~                                         match i32::from(*arg
871 +                                             .offset(i.wrapping_add(m).wrapping_add(j) as isize))
    |

warning: missing documentation for a constant
   --> src/localcharset.rs:224:1
    |
224 | pub const _NL_COLLATE_GAP2: C2RustUnnamed = 196615;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:871:53
    |
871 | ...                   .offset(i.wrapping_add(m).wrapping_add(j) as isize)
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:225:1
    |
225 | pub const _NL_COLLATE_GAP1: C2RustUnnamed = 196614;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:871:53
    |
871 | ...                   .offset(i.wrapping_add(m).wrapping_add(j) as isize)
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:226:1
    |
226 | pub const _NL_COLLATE_INDIRECTMB: C2RustUnnamed = 196613;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/quotearg.rs:881:41
    |
881 | ...                   j;
    |                       ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:896:24
    |
896 |     let buffer_slice = unsafe { std::slice::from_raw_parts_mut(buffer, buffersize as usize) };
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:227:1
    |
227 | pub const _NL_COLLATE_EXTRAMB: C2RustUnnamed = 196612;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/quotearg.rs:896:33
    |
896 |     let buffer_slice = unsafe { std::slice::from_raw_parts_mut(buffer, buffersize as usize) };
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:896:72
    |
896 |     let buffer_slice = unsafe { std::slice::from_raw_parts_mut(buffer, buffersize as usize) };
    |                                                                        ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:228:1
    |
228 | pub const _NL_COLLATE_WEIGHTMB: C2RustUnnamed = 196611;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:906:21
    |
906 |                     buffer_slice[len as usize] = '\'' as i8;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:906:34
    |
906 |                     buffer_slice[len as usize] = '\'' as i8;
    |                                  ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:229:1
    |
229 | pub const _NL_COLLATE_TABLEMB: C2RustUnnamed = 196610;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:910:21
    |
910 |                     buffer_slice[len as usize] = '$' as i8;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
   --> src/localcharset.rs:230:1
    |
230 | pub const _NL_COLLATE_RULESETS: C2RustUnnamed = 196609;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:910:34
    |
910 |                     buffer_slice[len as usize] = '$' as i8;
    |                                  ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:231:1
    |
231 | pub const _NL_COLLATE_NRULES: C2RustUnnamed = 196608;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:914:21
    |
914 |                     buffer_slice[len as usize] = '\'' as i8;
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
   --> src/localcharset.rs:232:1
    |
232 | pub const _NL_NUM_LC_TIME: C2RustUnnamed = 131231;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:914:34
    |
914 |                     buffer_slice[len as usize] = '\'' as i8;
    |                                  ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:233:1
    |
233 | pub const _NL_WABALTMON_12: C2RustUnnamed = 131230;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:920:17
    |
920 |                 buffer_slice[len as usize] = '\\' as i8;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
   --> src/localcharset.rs:234:1
    |
234 | pub const _NL_WABALTMON_11: C2RustUnnamed = 131229;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:920:30
    |
920 |                 buffer_slice[len as usize] = '\\' as i8;
    |                              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:235:1
    |
235 | pub const _NL_WABALTMON_10: C2RustUnnamed = 131228;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:924:46
    |
924 |                 buffer_slice[len as usize] = ('0' as i32 + (c as i32 >> 6)) as i8;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:236:1
    |
236 | pub const _NL_WABALTMON_9: C2RustUnnamed = 131227;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:924:46
    |
924 |                 buffer_slice[len as usize] = ('0' as i32 + (c as i32 >> 6)) as i8;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:237:1
    |
237 | pub const _NL_WABALTMON_8: C2RustUnnamed = 131226;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:924:46
    |
924 |                 buffer_slice[len as usize] = ('0' as i32 + (c as i32 >> 6)) as i8;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:238:1
    |
238 | pub const _NL_WABALTMON_7: C2RustUnnamed = 131225;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:924:61
    |
924 |                 buffer_slice[len as usize] = ('0' as i32 + (c as i32 >> 6)) as i8;
    |                                                             ^^^^^^^^ help: try: `i32::from(c)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:239:1
    |
239 | pub const _NL_WABALTMON_6: C2RustUnnamed = 131224;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:924:17
    |
924 |                 buffer_slice[len as usize] = ('0' as i32 + (c as i32 >> 6)) as i8;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
   --> src/localcharset.rs:240:1
    |
240 | pub const _NL_WABALTMON_5: C2RustUnnamed = 131223;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:924:30
    |
924 |                 buffer_slice[len as usize] = ('0' as i32 + (c as i32 >> 6)) as i8;
    |                              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:241:1
    |
241 | pub const _NL_WABALTMON_4: C2RustUnnamed = 131222;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
   --> src/quotearg.rs:928:46
    |
928 |                 buffer_slice[len as usize] = ('0' as i32 + ((c as i32 >> 3) & 7)) as i8;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:242:1
    |
242 | pub const _NL_WABALTMON_3: C2RustUnnamed = 131221;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:928:46
    |
928 |                 buffer_slice[len as usize] = ('0' as i32 + ((c as i32 >> 3) & 7)) as i8;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:243:1
    |
243 | pub const _NL_WABALTMON_2: C2RustUnnamed = 131220;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:928:46
    |
928 |                 buffer_slice[len as usize] = ('0' as i32 + ((c as i32 >> 3) & 7)) as i8;
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:244:1
    |
244 | pub const _NL_WABALTMON_1: C2RustUnnamed = 131219;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:928:62
    |
928 |                 buffer_slice[len as usize] = ('0' as i32 + ((c as i32 >> 3) & 7)) as i8;
    |                                                              ^^^^^^^^ help: try: `i32::from(c)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:245:1
    |
245 | pub const _NL_ABALTMON_12: C2RustUnnamed = 131218;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:246:1
    |
246 | pub const _NL_ABALTMON_11: C2RustUnnamed = 131217;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:928:17
    |
928 |                 buffer_slice[len as usize] = ('0' as i32 + ((c as i32 >> 3) & 7)) as i8;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
   --> src/localcharset.rs:247:1
    |
247 | pub const _NL_ABALTMON_10: C2RustUnnamed = 131216;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:928:30
    |
928 |                 buffer_slice[len as usize] = ('0' as i32 + ((c as i32 >> 3) & 7)) as i8;
    |                              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i32` to `u8` may truncate the value
   --> src/quotearg.rs:931:17
    |
931 |             c = ('0' as i32 + (c as i32 & 7)) as u8;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:248:1
    |
248 | pub const _NL_ABALTMON_9: C2RustUnnamed = 131215;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u8` may lose the sign of the value
   --> src/quotearg.rs:931:17
    |
931 |             c = ('0' as i32 + (c as i32 & 7)) as u8;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:249:1
    |
249 | pub const _NL_ABALTMON_8: C2RustUnnamed = 131214;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/quotearg.rs:931:17
    |
931 |             c = ('0' as i32 + (c as i32 & 7)) as u8;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:250:1
    |
250 | pub const _NL_ABALTMON_7: C2RustUnnamed = 131213;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/quotearg.rs:931:17
    |
931 |             c = ('0' as i32 + (c as i32 & 7)) as u8;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:251:1
    |
251 | pub const _NL_ABALTMON_6: C2RustUnnamed = 131212;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:252:1
    |
252 | pub const _NL_ABALTMON_5: C2RustUnnamed = 131211;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i32` may become silently lossy if you later change the type
   --> src/quotearg.rs:931:32
    |
931 |             c = ('0' as i32 + (c as i32 & 7)) as u8;
    |                                ^^^^^^^^ help: try: `i32::from(c)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:253:1
    |
253 | pub const _NL_ABALTMON_4: C2RustUnnamed = 131210;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:934:17
    |
934 |                 buffer_slice[len as usize] = '\\' as i8;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
   --> src/localcharset.rs:254:1
    |
254 | pub const _NL_ABALTMON_3: C2RustUnnamed = 131209;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:934:30
    |
934 |                 buffer_slice[len as usize] = '\\' as i8;
    |                              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:255:1
    |
255 | pub const _NL_ABALTMON_2: C2RustUnnamed = 131208;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:944:17
    |
944 |                 buffer_slice[len as usize] = '\'' as i8;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
   --> src/localcharset.rs:256:1
    |
256 | pub const _NL_ABALTMON_1: C2RustUnnamed = 131207;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:944:30
    |
944 |                 buffer_slice[len as usize] = '\'' as i8;
    |                              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: indexing may panic
   --> src/quotearg.rs:948:17
    |
948 |                 buffer_slice[len as usize] = '\'' as i8;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
   --> src/localcharset.rs:257:1
    |
257 | pub const _NL_WALTMON_12: C2RustUnnamed = 131206;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:258:1
    |
258 | pub const _NL_WALTMON_11: C2RustUnnamed = 131205;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:948:30
    |
948 |                 buffer_slice[len as usize] = '\'' as i8;
    |                              ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u8` to `i8` may wrap around the value
   --> src/quotearg.rs:954:42
    |
954 |             buffer_slice[len as usize] = c as i8;
    |                                          ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:259:1
    |
259 | pub const _NL_WALTMON_10: C2RustUnnamed = 131204;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/quotearg.rs:954:13
    |
954 |             buffer_slice[len as usize] = c as i8;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
   --> src/localcharset.rs:260:1
    |
260 | pub const _NL_WALTMON_9: C2RustUnnamed = 131203;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:954:26
    |
954 |             buffer_slice[len as usize] = c as i8;
    |                          ^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:261:1
    |
261 | pub const _NL_WALTMON_8: C2RustUnnamed = 131202;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/quotearg.rs:958:13
    |
958 |         c = unsafe { *arg.offset(i as isize) } as u8;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:262:1
    |
262 | pub const _NL_WALTMON_7: C2RustUnnamed = 131201;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/quotearg.rs:958:13
    |
958 |         c = unsafe { *arg.offset(i as isize) } as u8;
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:263:1
    |
263 | pub const _NL_WALTMON_6: C2RustUnnamed = 131200;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/quotearg.rs:958:34
    |
958 |         c = unsafe { *arg.offset(i as isize) } as u8;
    |                                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:264:1
    |
264 | pub const _NL_WALTMON_5: C2RustUnnamed = 131199;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:265:1
    |
265 | pub const _NL_WALTMON_4: C2RustUnnamed = 131198;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/quotearg.rs:958:34
    |
958 |         c = unsafe { *arg.offset(i as isize) } as u8;
    |                                  ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:266:1
    |
266 | pub const _NL_WALTMON_3: C2RustUnnamed = 131197;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/quotearg.rs:971:9
    |
971 | /         if i != 0 {
972 | |             current_block = 253337042034819032;
973 | |         } else {
974 | |             current_block = 4634307283396172174;
975 | |         }
    | |_________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a constant
   --> src/localcharset.rs:267:1
    |
267 | pub const _NL_WALTMON_2: C2RustUnnamed = 131196;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/quotearg.rs:1003:1
     |
1003 | / match current_block {
1004 | |     7549413860336125482 => {
1005 | |         current_block = 13059411171234995867;
1006 | |     }
1007 | |     _ => {}
1008 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1003 + if current_block == 7549413860336125482 {
1004 +     current_block = 13059411171234995867;
1005 + }
     |

warning: missing documentation for a constant
   --> src/localcharset.rs:268:1
    |
268 | pub const _NL_WALTMON_1: C2RustUnnamed = 131195;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/quotearg.rs:1010:1
     |
1010 | / match current_block {
1011 | |     13059411171234995867 => {
1012 | |         current_block = 16620298045565028098;
1013 | |     }
1014 | |     _ => {}
1015 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match
help: try this
     |
1010 + if current_block == 13059411171234995867 {
1011 +     current_block = 16620298045565028098;
1012 + }
     |

warning: missing documentation for a constant
   --> src/localcharset.rs:269:1
    |
269 | pub const __ALTMON_12: C2RustUnnamed = 131194;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `mut current_block` is shadowed
    --> src/quotearg.rs:1021:21
     |
1021 |             let mut current_block = match current_block {
     |                     ^^^^^^^^^^^^^
     |
     = note: `-W clippy::shadow-reuse` implied by `-W clippy::restriction`
note: previous binding is here
    --> src/quotearg.rs:352:9
     |
352  |     let mut current_block: u64;
     |         ^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_reuse

warning: missing documentation for a constant
   --> src/localcharset.rs:270:1
    |
270 | pub const __ALTMON_11: C2RustUnnamed = 131193;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1042:17
     |
1042 | ...& (unsafe { *quote_these_too.add(c as usize / (std::mem::size_of::<u32>() * 8)) } >> (c as usize % (std::mem::size_of::<u32>() * 8)) & ...
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:271:1
    |
271 | pub const __ALTMON_10: C2RustUnnamed = 131192;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1042:17
     |
1042 | ...& (unsafe { *quote_these_too.add(c as usize / (std::mem::size_of::<u32>() * 8)) } >> (c as usize % (std::mem::size_of::<u32>() * 8)) & ...
     |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:272:1
    |
272 | pub const __ALTMON_9: C2RustUnnamed = 131191;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1042:17
     |
1042 | ...   && (unsafe { *quote_these_too.add(c as usize / (std::mem::size_of::<u32>() * 8)) } >> (c as usize % (std::mem::size_of::<u32>() * 8...
     |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:273:1
    |
273 | pub const __ALTMON_8: C2RustUnnamed = 131190;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer division
    --> src/quotearg.rs:1042:47
     |
1042 | ...   && (unsafe { *quote_these_too.add(c as usize / (std::mem::size_of::<u32>() * 8)) } >> (c as usize % (std::mem::size_of::<u32>() * 8...
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: division of integers may cause loss of precision. consider using floats
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a constant
   --> src/localcharset.rs:274:1
    |
274 | pub const __ALTMON_7: C2RustUnnamed = 131189;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
    --> src/quotearg.rs:1042:61
     |
1042 | ...   && (unsafe { *quote_these_too.add(c as usize / (std::mem::size_of::<u32>() * 8)) } >> (c as usize % (std::mem::size_of::<u32>() * 8...
     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a constant
   --> src/localcharset.rs:275:1
    |
275 | pub const __ALTMON_6: C2RustUnnamed = 131188;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
    --> src/quotearg.rs:1042:114
     |
1042 | ...   && (unsafe { *quote_these_too.add(c as usize / (std::mem::size_of::<u32>() * 8)) } >> (c as usize % (std::mem::size_of::<u32>() * 8...
     |                                                                                                            ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a constant
   --> src/localcharset.rs:276:1
    |
276 | pub const __ALTMON_5: C2RustUnnamed = 131187;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1060:17
     |
1060 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:277:1
    |
277 | pub const __ALTMON_4: C2RustUnnamed = 131186;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1060:38
     |
1060 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                                      ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:278:1
    |
278 | pub const __ALTMON_3: C2RustUnnamed = 131185;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1062:13
     |
1062 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:279:1
    |
279 | pub const __ALTMON_2: C2RustUnnamed = 131184;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1062:13
     |
1062 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:280:1
    |
280 | pub const __ALTMON_1: C2RustUnnamed = 131183;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:281:1
    |
281 | pub const _NL_TIME_CODESET: C2RustUnnamed = 131182;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1064:17
     |
1064 |                 unsafe { *buffer.add(len as usize) = '$' as i8; }
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:282:1
    |
282 | pub const _NL_W_DATE_FMT: C2RustUnnamed = 131181;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1064:38
     |
1064 |                 unsafe { *buffer.add(len as usize) = '$' as i8; }
     |                                      ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:283:1
    |
283 | pub const _DATE_FMT: C2RustUnnamed = 131180;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1066:13
     |
1066 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/quotearg.rs:1066:13
     |
1066 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:284:1
    |
284 | pub const _NL_TIME_TIMEZONE: C2RustUnnamed = 131179;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1068:17
     |
1068 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:285:1
    |
285 | pub const _NL_TIME_CAL_DIRECTION: C2RustUnnamed = 131178;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:286:1
    |
286 | pub const _NL_TIME_FIRST_WORKDAY: C2RustUnnamed = 131177;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1068:38
     |
1068 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                                      ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:287:1
    |
287 | pub const _NL_TIME_FIRST_WEEKDAY: C2RustUnnamed = 131176;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1070:13
     |
1070 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:288:1
    |
288 | pub const _NL_TIME_WEEK_1STWEEK: C2RustUnnamed = 131175;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1070:13
     |
1070 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:289:1
    |
289 | pub const _NL_TIME_WEEK_1STDAY: C2RustUnnamed = 131174;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1074:13
     |
1074 |             unsafe { *buffer.add(len as usize) = '\\' as i8; }
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1074:34
     |
1074 |             unsafe { *buffer.add(len as usize) = '\\' as i8; }
     |                                  ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:290:1
    |
290 | pub const _NL_TIME_WEEK_NDAYS: C2RustUnnamed = 131173;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1076:9
     |
1076 |         len += 1;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:291:1
    |
291 | pub const _NL_WERA_T_FMT: C2RustUnnamed = 131172;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1076:9
     |
1076 |         len += 1;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:292:1
    |
292 | pub const _NL_WERA_D_T_FMT: C2RustUnnamed = 131171;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1086:17
     |
1086 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:293:1
    |
293 | pub const _NL_WALT_DIGITS: C2RustUnnamed = 131170;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1086:38
     |
1086 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                                      ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:294:1
    |
294 | pub const _NL_WERA_D_FMT: C2RustUnnamed = 131169;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1088:13
     |
1088 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:295:1
    |
295 | pub const _NL_WERA_YEAR: C2RustUnnamed = 131168;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1088:13
     |
1088 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:296:1
    |
296 | pub const _NL_WT_FMT_AMPM: C2RustUnnamed = 131167;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1090:17
     |
1090 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:297:1
    |
297 | pub const _NL_WT_FMT: C2RustUnnamed = 131166;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1090:38
     |
1090 |                 unsafe { *buffer.add(len as usize) = '\'' as i8; }
     |                                      ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:298:1
    |
298 | pub const _NL_WD_FMT: C2RustUnnamed = 131165;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1092:13
     |
1092 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:299:1
    |
299 | pub const _NL_WD_T_FMT: C2RustUnnamed = 131164;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1092:13
     |
1092 |             len += 1;
     |             ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:300:1
    |
300 | pub const _NL_WPM_STR: C2RustUnnamed = 131163;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1096:13
     |
1096 |             unsafe { *buffer.add(len as usize) = c as i8; }
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:301:1
    |
301 | pub const _NL_WAM_STR: C2RustUnnamed = 131162;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u8` to `i8` may wrap around the value
    --> src/quotearg.rs:1096:50
     |
1096 |             unsafe { *buffer.add(len as usize) = c as i8; }
     |                                                  ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:302:1
    |
302 | pub const _NL_WMON_12: C2RustUnnamed = 131161;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1096:34
     |
1096 |             unsafe { *buffer.add(len as usize) = c as i8; }
     |                                  ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:303:1
    |
303 | pub const _NL_WMON_11: C2RustUnnamed = 131160;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1098:9
     |
1098 |         len += 1;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:304:1
    |
304 | pub const _NL_WMON_10: C2RustUnnamed = 131159;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1098:9
     |
1098 |         len += 1;
     |         ^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:305:1
    |
305 | pub const _NL_WMON_9: C2RustUnnamed = 131158;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1107:1
     |
1107 | i += 1;
     | ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/quotearg.rs:1107:1
     |
1107 | i += 1;
     | ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:306:1
    |
306 | pub const _NL_WMON_8: C2RustUnnamed = 131157;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/quotearg.rs:1110:19
     |
1110 |         if len == 0 as libc::c_int as libc::c_ulong
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:307:1
    |
307 | pub const _NL_WMON_7: C2RustUnnamed = 131156;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:308:1
    |
308 | pub const _NL_WMON_6: C2RustUnnamed = 131155;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
    --> src/quotearg.rs:1112:20
     |
1112 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:309:1
    |
309 | pub const _NL_WMON_5: C2RustUnnamed = 131154;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
    --> src/quotearg.rs:1112:20
     |
1112 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
    --> src/quotearg.rs:1113:16
     |
1113 |             && elide_outer_quotes as libc::c_int != 0
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(elide_outer_quotes)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:310:1
    |
310 | pub const _NL_WMON_4: C2RustUnnamed = 131153;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
    --> src/quotearg.rs:1119:16
     |
1119 |             == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:311:1
    |
311 | pub const _NL_WMON_3: C2RustUnnamed = 131152;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:312:1
    |
312 | pub const _NL_WMON_2: C2RustUnnamed = 131151;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
    --> src/quotearg.rs:1119:16
     |
1119 |             == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:313:1
    |
313 | pub const _NL_WMON_1: C2RustUnnamed = 131150;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
    --> src/quotearg.rs:1120:39
     |
1120 |             && !elide_outer_quotes && encountered_single_quote as libc::c_int != 0)
     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(encountered_single_quote)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:314:1
    |
314 | pub const _NL_WABMON_12: C2RustUnnamed = 131149;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: you seem to be trying to use `match` for an equality check. Consider using `if`
    --> src/quotearg.rs:1147:5
     |
1147 | /     match current_block {
1148 | |         7928555609993211441 => {
1149 | |             if quoting_style as libc::c_uint
1150 | |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
...    |
1183 | |         }
1184 | |     };
     | |_____^
     |
     = note: `-W clippy::single-match-else` implied by `-W clippy::pedantic`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match_else
help: try this
     |
1147 ~     if current_block == 7928555609993211441 {
1148 +         if quoting_style as libc::c_uint
1149 +             == shell_always_quoting_style as libc::c_int as libc::c_uint
1150 +             && backslash_escapes as libc::c_int != 0
1151 +         {
1152 +             quoting_style = shell_escape_always_quoting_style;
1153 +         }
1154 +         return quotearg_buffer_restyled(
1155 +             buffer,
1156 +             buffersize,
1157 +             arg,
1158 +             argsize,
1159 +             quoting_style,
1160 +             flags & !(QA_ELIDE_OUTER_QUOTES as libc::c_int),
1161 +             0 as *const libc::c_uint,
1162 +             left_quote,
1163 +             right_quote,
1164 +         );
1165 +     } else {
1166 +         if !quote_string.is_null() && !elide_outer_quotes {
1167 +             while *quote_string != 0 {
1168 +                 if len < buffersize {
1169 +                     *buffer.offset(len as isize) = *quote_string;
1170 +                 }
1171 +                 len = len.wrapping_add(1);
1172 +                 len;
1173 +                 quote_string = quote_string.offset(1);
1174 +                 quote_string;
1175 +             }
1176 +         }
1177 +         if len < buffersize {
1178 +             *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
1179 +         }
1180 +         return len;
1181 ~     };
     |

warning: missing documentation for a constant
   --> src/localcharset.rs:315:1
    |
315 | pub const _NL_WABMON_11: C2RustUnnamed = 131148;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
    --> src/quotearg.rs:1150:20
     |
1150 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:316:1
    |
316 | pub const _NL_WABMON_10: C2RustUnnamed = 131147;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
    --> src/quotearg.rs:1150:20
     |
1150 |                 == shell_always_quoting_style as libc::c_int as libc::c_uint
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:317:1
    |
317 | pub const _NL_WABMON_9: C2RustUnnamed = 131146;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
    --> src/quotearg.rs:1151:20
     |
1151 |                 && backslash_escapes as libc::c_int != 0
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(backslash_escapes)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:318:1
    |
318 | pub const _NL_WABMON_8: C2RustUnnamed = 131145;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
    --> src/quotearg.rs:1161:26
     |
1161 |                 flags & !(QA_ELIDE_OUTER_QUOTES as libc::c_int),
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:319:1
    |
319 | pub const _NL_WABMON_7: C2RustUnnamed = 131144;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `0 as *const _` detected
    --> src/quotearg.rs:1162:17
     |
1162 |                 0 as *const libc::c_uint,
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_uint>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:320:1
    |
320 | pub const _NL_WABMON_6: C2RustUnnamed = 131143;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1171:40
     |
1171 |                         *buffer.offset(len as isize) = *quote_string;
     |                                        ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:321:1
    |
321 | pub const _NL_WABMON_5: C2RustUnnamed = 131142;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
    --> src/quotearg.rs:1171:40
     |
1171 |                         *buffer.offset(len as isize) = *quote_string;
     |                                        ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:322:1
    |
322 | pub const _NL_WABMON_4: C2RustUnnamed = 131141;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
    --> src/quotearg.rs:1174:21
     |
1174 |                     len;
     |                     ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:323:1
    |
323 | pub const _NL_WABMON_3: C2RustUnnamed = 131140;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
    --> src/quotearg.rs:1176:21
     |
1176 |                     quote_string;
     |                     ^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/localcharset.rs:324:1
    |
324 | pub const _NL_WABMON_2: C2RustUnnamed = 131139;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i8` may truncate the value
    --> src/quotearg.rs:1180:48
     |
1180 |                 *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:325:1
    |
325 | pub const _NL_WABMON_1: C2RustUnnamed = 131138;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1180:32
     |
1180 |                 *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
     |                                ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:326:1
    |
326 | pub const _NL_WDAY_7: C2RustUnnamed = 131137;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
    --> src/quotearg.rs:1180:32
     |
1180 |                 *buffer.offset(len as isize) = '\0' as i32 as libc::c_char;
     |                                ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:327:1
    |
327 | pub const _NL_WDAY_6: C2RustUnnamed = 131136;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1187:1
     |
1187 | / pub fn quotearg_buffer(
1188 | |     buffer: &mut [libc::c_char],
1189 | |     arg: &[libc::c_char],
1190 | |     o: Option<&quoting_options>,
...    |
1211 | |     r as usize
1212 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1211:5
     |
1211 |     r as usize
     |     ^^^^^^^^^^ help: add `return` as shown: `return r as usize`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a constant
   --> src/localcharset.rs:328:1
    |
328 | pub const _NL_WDAY_5: C2RustUnnamed = 131135;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1194:17
     |
1194 |         None => unsafe { &default_quoting_options },
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:329:1
    |
329 | pub const _NL_WDAY_4: C2RustUnnamed = 131134;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1197:13
     |
1197 |     let r = unsafe {
     |             ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:330:1
    |
330 | pub const _NL_WDAY_3: C2RustUnnamed = 131133;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
    --> src/quotearg.rs:1211:5
     |
1211 |     r as usize
     |     ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1215:1
     |
1215 | / pub fn quotearg_alloc(
1216 | |     arg: &str,
1217 | |     o: &quoting_options,
1218 | | ) -> *mut libc::c_char {
...    |
1222 | |     unsafe { quotearg_alloc_mem(c_string.as_ptr(), argsize, size_ptr, o) } // Call the unsafe function
1223 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a constant
   --> src/localcharset.rs:331:1
    |
331 | pub const _NL_WDAY_2: C2RustUnnamed = 131132;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:332:1
    |
332 | pub const _NL_WDAY_1: C2RustUnnamed = 131131;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
    --> src/quotearg.rs:1222:14
     |
1222 |     unsafe { quotearg_alloc_mem(c_string.as_ptr(), argsize, size_ptr, o) } // Call the unsafe function
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return quotearg_alloc_mem(c_string.as_ptr(), argsize, size_ptr, o)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a constant
   --> src/localcharset.rs:333:1
    |
333 | pub const _NL_WABDAY_7: C2RustUnnamed = 131130;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `expect()` on `a Result` value
    --> src/quotearg.rs:1220:20
     |
1220 |     let c_string = CString::new(arg).expect("CString::new failed");
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if this value is an `Err`, it will panic
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: missing documentation for a constant
   --> src/localcharset.rs:334:1
    |
334 | pub const _NL_WABDAY_6: C2RustUnnamed = 131129;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
    --> src/quotearg.rs:1221:30
     |
1221 |     let size_ptr: *mut u64 = std::ptr::null_mut(); // Create a null pointer for size
     |                              ^^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a constant
   --> src/localcharset.rs:335:1
    |
335 | pub const _NL_WABDAY_5: C2RustUnnamed = 131128;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1222:5
     |
1222 |     unsafe { quotearg_alloc_mem(c_string.as_ptr(), argsize, size_ptr, o) } // Call the unsafe function
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:336:1
    |
336 | pub const _NL_WABDAY_4: C2RustUnnamed = 131127;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1226:1
     |
1226 | / pub unsafe extern "C" fn quotearg_alloc_mem(
1227 | |     mut arg: *const libc::c_char,
1228 | |     mut argsize: size_t,
1229 | |     mut size: *mut size_t,
...    |
1272 | |     return buf;
1273 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a constant
   --> src/localcharset.rs:337:1
    |
337 | pub const _NL_WABDAY_3: C2RustUnnamed = 131126;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1226:1
     |
1226 | / pub unsafe extern "C" fn quotearg_alloc_mem(
1227 | |     mut arg: *const libc::c_char,
1228 | |     mut argsize: size_t,
1229 | |     mut size: *mut size_t,
...    |
1272 | |     return buf;
1273 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a constant
   --> src/localcharset.rs:338:1
    |
338 | pub const _NL_WABDAY_2: C2RustUnnamed = 131125;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
    --> src/quotearg.rs:1272:5
     |
1272 |     return buf;
     |     ^^^^^^^^^^^ help: remove `return`: `buf`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a constant
   --> src/localcharset.rs:339:1
    |
339 | pub const _NL_WABDAY_1: C2RustUnnamed = 131124;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary boolean `not` operation
    --> src/quotearg.rs:1232:41
     |
1232 |       let mut p: *const quoting_options = if !o.is_null() {
     |  _________________________________________^
1233 | |         o
1234 | |     } else {
1235 | |         &mut default_quoting_options as *mut quoting_options as *const quoting_options
1236 | |     };
     | |_____^
     |
     = help: remove the `!` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a constant
   --> src/localcharset.rs:340:1
    |
340 | pub const _NL_TIME_ERA_ENTRIES: C2RustUnnamed = 131123;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
    --> src/quotearg.rs:1235:9
     |
1235 |         &mut default_quoting_options as *mut quoting_options as *const quoting_options
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(default_quoting_options)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:341:1
    |
341 | pub const _NL_TIME_ERA_NUM_ENTRIES: C2RustUnnamed = 131122;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary boolean `not` operation
    --> src/quotearg.rs:1239:11
     |
1239 |           | (if !size.is_null() {
     |  ___________^
1240 | |             0 as libc::c_int
1241 | |         } else {
1242 | |             QA_ELIDE_NULL_BYTES as libc::c_int
1243 | |         });
     | |__________^
     |
     = help: remove the `!` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a constant
   --> src/localcharset.rs:342:1
    |
342 | pub const ERA_T_FMT: C2RustUnnamed = 131121;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
    --> src/quotearg.rs:1242:13
     |
1242 |             QA_ELIDE_NULL_BYTES as libc::c_int
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:343:1
    |
343 | pub const ERA_D_T_FMT: C2RustUnnamed = 131120;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `0 as *mut _` detected
    --> src/quotearg.rs:1245:9
     |
1245 |         0 as *mut libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:344:1
    |
344 | pub const ALT_DIGITS: C2RustUnnamed = 131119;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:345:1
    |
345 | pub const ERA_D_FMT: C2RustUnnamed = 131118;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/quotearg.rs:1246:9
     |
1246 |         0 as libc::c_int as size_t,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:346:1
    |
346 | pub const __ERA_YEAR: C2RustUnnamed = 131117;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/quotearg.rs:1255:23
     |
1255 |         .wrapping_add(1 as libc::c_int as libc::c_ulong);
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:347:1
    |
347 | pub const ERA: C2RustUnnamed = 131116;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/quotearg.rs:1270:38
     |
1270 |         *size = bufsize.wrapping_sub(1 as libc::c_int as libc::c_ulong);
     |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:348:1
    |
348 | pub const T_FMT_AMPM: C2RustUnnamed = 131115;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1275:34
     |
1275 | static mut nslots: libc::c_int = 1 as libc::c_int;
     |                                  ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:349:1
    |
349 | pub const T_FMT: C2RustUnnamed = 131114;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1276:32
     |
1276 | static mut slotvec0: slotvec = unsafe {
     |                                ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:350:1
    |
350 | pub const D_FMT: C2RustUnnamed = 131113;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
    --> src/quotearg.rs:1282:9
     |
1278 | /         let mut init = slotvec {
1279 | |             size: ::core::mem::size_of::<[libc::c_char; 256]>() as libc::c_ulong,
1280 | |             val: slot0.as_ptr() as *mut _,
1281 | |         };
     | |__________- unnecessary `let` binding
1282 |           init
     |           ^^^^
     |
     = note: `-W clippy::let-and-return` implied by `-W clippy::all`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1278 ~         
1279 ~         slotvec {
1280 +             size: ::core::mem::size_of::<[libc::c_char; 256]>() as libc::c_ulong,
1281 +             val: slot0.as_ptr() as *mut _,
1282 +         }
     |

warning: missing documentation for a constant
   --> src/localcharset.rs:351:1
    |
351 | pub const D_T_FMT: C2RustUnnamed = 131112;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1285:36
     |
1285 | static mut slotvec: *mut slotvec = unsafe {
     |                                    ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:352:1
    |
352 | pub const PM_STR: C2RustUnnamed = 131111;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
    --> src/quotearg.rs:1286:5
     |
1286 |     &slotvec0 as *const slotvec as *mut slotvec
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of!(slotvec0)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:353:1
    |
353 | pub const AM_STR: C2RustUnnamed = 131110;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1289:1
     |
1289 | / pub fn quotearg_free() {
1290 | |     unsafe {
1291 | |         let sv = &mut *slotvec;
1292 | |         for i in 1..nslots {
...    |
1311 | |     }
1312 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a constant
   --> src/localcharset.rs:354:1
    |
354 | pub const MON_12: C2RustUnnamed = 131109;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1292:18
     |
1292 |         for i in 1..nslots {
     |                  ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:355:1
    |
355 | pub const MON_11: C2RustUnnamed = 131108;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1310:18
     |
1310 |         nslots = 1;
     |                  ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:356:1
    |
356 | pub const MON_10: C2RustUnnamed = 131107;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1290:5
     |
1290 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/localcharset.rs:357:1
    |
357 | pub const MON_9: C2RustUnnamed = 131106;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: deref which would be done by auto-deref
    --> src/quotearg.rs:1293:23
     |
1293 |             let val = (*sv).val.offset(i as isize);
     |                       ^^^^^ help: try this: `sv`
     |
     = note: `-W clippy::explicit-auto-deref` implied by `-W clippy::all`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref

warning: missing documentation for a constant
   --> src/localcharset.rs:358:1
    |
358 | pub const MON_8: C2RustUnnamed = 131105;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: deref which would be done by auto-deref
    --> src/quotearg.rs:1298:12
     |
1298 |         if (*sv).val != slot0.as_mut_ptr() {
     |            ^^^^^ help: try this: `sv`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref

warning: missing documentation for a constant
   --> src/localcharset.rs:359:1
    |
359 | pub const MON_7: C2RustUnnamed = 131104;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: deref which would be done by auto-deref
    --> src/quotearg.rs:1299:23
     |
1299 |             let val = (*sv).val;
     |                       ^^^^^ help: try this: `sv`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref

warning: missing documentation for a constant
   --> src/localcharset.rs:360:1
    |
360 | pub const MON_6: C2RustUnnamed = 131103;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
    --> src/quotearg.rs:1303:29
     |
1303 |             slotvec0.size = std::mem::size_of::<[libc::c_char; 256]>() as libc::c_ulong;
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a constant
   --> src/localcharset.rs:361:1
    |
361 | pub const MON_5: C2RustUnnamed = 131102;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
    --> src/quotearg.rs:1306:28
     |
1306 |         if sv as *mut _ != &mut slotvec0 as *mut _ {
     |                            ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(slotvec0)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: unneeded `return` statement
    --> src/quotearg.rs:1391:5
     |
1391 |     return val;
     |     ^^^^^^^^^^^ help: remove `return`: `val`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a constant
   --> src/localcharset.rs:362:1
    |
362 | pub const MON_4: C2RustUnnamed = 131101;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1329:10
     |
1329 |     if !(0 as libc::c_int <= n && n < nslots_max) {
     |          ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:363:1
    |
363 | pub const MON_3: C2RustUnnamed = 131100;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1336:48
     |
1336 |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
     |                                                ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/localcharset.rs:364:1
    |
364 | pub const MON_2: C2RustUnnamed = 131099;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:365:1
    |
365 | pub const MON_1: C2RustUnnamed = 131098;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i64` to `i32` may truncate the value
    --> src/quotearg.rs:1322:39
     |
1322 |       let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |  _______________________________________^
1323 | |         < 9223372036854775807 as libc::c_long
1324 | |     {
1325 | |         2147483647 as libc::c_int as libc::c_long
1326 | |     } else {
1327 | |         9223372036854775807 as libc::c_long
1328 | |     }) as libc::c_int;
     | |_____________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/localcharset.rs:366:1
    |
366 | pub const ABMON_12: C2RustUnnamed = 131097;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/quotearg.rs:1322:43
     |
1322 |     let mut nslots_max: libc::c_int = (if (2147483647 as libc::c_int as libc::c_long)
     |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2147483647 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:367:1
    |
367 | pub const ABMON_11: C2RustUnnamed = 131096;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/quotearg.rs:1325:9
     |
1325 |         2147483647 as libc::c_int as libc::c_long
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2147483647 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:368:1
    |
368 | pub const ABMON_10: C2RustUnnamed = 131095;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
    --> src/quotearg.rs:1333:44
     |
1333 |         let mut preallocated: bool = sv == &mut slotvec0 as *mut slotvec;
     |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(slotvec0)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:369:1
    |
369 | pub const ABMON_9: C2RustUnnamed = 131094;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/quotearg.rs:1334:37
     |
1334 |         let mut new_nslots: idx_t = nslots as idx_t;
     |                                     ^^^^^^^^^^^^^^^ help: try: `i64::from(nslots)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:370:1
    |
370 | pub const ABMON_8: C2RustUnnamed = 131093;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1335:14
     |
1335 |           sv = xpalloc(
     |  ______________^
1336 | |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
1337 | |                 as *mut libc::c_void,
1338 | |             &mut new_nslots,
...    |
1341 | |             ::core::mem::size_of::<slotvec>() as libc::c_ulong as idx_t,
1342 | |         ) as *mut slotvec;
     | |_________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr
help: try `pointer::cast`, a safer alternative
     |
1335 ~         sv = xpalloc(
1336 +             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
1337 +                 as *mut libc::c_void,
1338 +             &mut new_nslots,
1339 +             (n - nslots + 1 as libc::c_int) as idx_t,
1340 +             nslots_max as ptrdiff_t,
1341 +             ::core::mem::size_of::<slotvec>() as libc::c_ulong as idx_t,
1342 ~         ).cast::<src::quotearg::slotvec>();
     |

warning: missing documentation for a constant
   --> src/localcharset.rs:371:1
    |
371 | pub const ABMON_7: C2RustUnnamed = 131092;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1336:13
     |
1336 | /             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
1337 | |                 as *mut libc::c_void,
     | |____________________________________^ help: try `pointer::cast`, a safer alternative: `(if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv }).cast::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:372:1
    |
372 | pub const ABMON_6: C2RustUnnamed = 131091;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
    --> src/quotearg.rs:1336:13
     |
1336 |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a constant
   --> src/localcharset.rs:373:1
    |
373 | pub const ABMON_5: C2RustUnnamed = 131090;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
    --> src/quotearg.rs:1336:17
     |
1336 |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(preallocated)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:374:1
    |
374 | pub const ABMON_4: C2RustUnnamed = 131089;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `0 as *mut _` detected
    --> src/quotearg.rs:1336:52
     |
1336 |             (if preallocated as libc::c_int != 0 { 0 as *mut slotvec } else { sv })
     |                                                    ^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<slotvec>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:375:1
    |
375 | pub const ABMON_3: C2RustUnnamed = 131088;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:376:1
    |
376 | pub const ABMON_2: C2RustUnnamed = 131087;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/quotearg.rs:1339:13
     |
1339 |             (n - nslots + 1 as libc::c_int) as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(n - nslots + 1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
    --> src/quotearg.rs:1339:13
     |
1339 |             (n - nslots + 1 as libc::c_int) as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:377:1
    |
377 | pub const ABMON_1: C2RustUnnamed = 131086;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:378:1
    |
378 | pub const DAY_7: C2RustUnnamed = 131085;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1339:13
     |
1339 |             (n - nslots + 1 as libc::c_int) as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:379:1
    |
379 | pub const DAY_6: C2RustUnnamed = 131084;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/quotearg.rs:1340:13
     |
1340 |             nslots_max as ptrdiff_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(nslots_max)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:380:1
    |
380 | pub const DAY_5: C2RustUnnamed = 131083;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `i64` may wrap around the value
    --> src/quotearg.rs:1341:13
     |
1341 |             ::core::mem::size_of::<slotvec>() as libc::c_ulong as idx_t,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1348:13
     |
1348 |             sv.offset(nslots as isize) as *mut libc::c_void,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `sv.offset(nslots as isize).cast::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:381:1
    |
381 | pub const DAY_4: C2RustUnnamed = 131082;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i64` to `u64` may lose the sign of the value
    --> src/quotearg.rs:1350:13
     |
1350 |             ((new_nslots - nslots as libc::c_long) as libc::c_ulong)
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:382:1
    |
382 | pub const DAY_3: C2RustUnnamed = 131081;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
    --> src/quotearg.rs:1350:14
     |
1350 |             ((new_nslots - nslots as libc::c_long) as libc::c_ulong)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a constant
   --> src/localcharset.rs:383:1
    |
383 | pub const DAY_2: C2RustUnnamed = 131080;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:384:1
    |
384 | pub const DAY_1: C2RustUnnamed = 131079;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
    --> src/quotearg.rs:1350:14
     |
1350 |             ((new_nslots - nslots as libc::c_long) as libc::c_ulong)
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/quotearg.rs:1350:28
     |
1350 |             ((new_nslots - nslots as libc::c_long) as libc::c_ulong)
     |                            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(nslots)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
   --> src/localcharset.rs:385:1
    |
385 | pub const ABDAY_7: C2RustUnnamed = 131078;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:386:1
    |
386 | pub const ABDAY_6: C2RustUnnamed = 131077;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i64` to `i32` may truncate the value
    --> src/quotearg.rs:1353:18
     |
1353 |         nslots = new_nslots as libc::c_int;
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `u32` to `i32` may wrap around the value
    --> src/quotearg.rs:1357:53
     |
1357 |     let mut flags: libc::c_int = (*options).flags | QA_ELIDE_NULL_BYTES as libc::c_int;
     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
   --> src/localcharset.rs:387:1
    |
387 | pub const ABDAY_5: C2RustUnnamed = 131076;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/quotearg.rs:1370:35
     |
1370 |         size = qsize.wrapping_add(1 as libc::c_int as libc::c_ulong);
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/localcharset.rs:388:1
    |
388 | pub const ABDAY_4: C2RustUnnamed = 131075;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1373:18
     |
1373 |             free(val as *mut libc::c_void);
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `val.cast::<libc::c_void>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/localcharset.rs:389:1
    |
389 | pub const ABDAY_3: C2RustUnnamed = 131074;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `ref` on an entire `let` pattern is discouraged, take a reference with `&` instead
    --> src/quotearg.rs:1376:13
     |
1376 |         let ref mut fresh0 = (*sv.offset(n as isize)).val;
     |         ----^^^^^^^^^^^^^^-------------------------------- help: try: `let fresh0 = &mut (*sv.offset(n as isize)).val;`
     |
     = note: `-W clippy::toplevel-ref-arg` implied by `-W clippy::all`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#toplevel_ref_arg

warning: missing documentation for a constant
   --> src/localcharset.rs:390:1
    |
390 | pub const ABDAY_2: C2RustUnnamed = 131073;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/localcharset.rs:391:1
    |
391 | pub const ABDAY_1: C2RustUnnamed = 131072;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1394:1
     |
1394 | / pub unsafe extern "C" fn quotearg_n(
1395 | |     mut n: libc::c_int,
1396 | |     mut arg: *const libc::c_char,
1397 | | ) -> *mut libc::c_char {
...    |
1403 | |     );
1404 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1394:1
     |
1394 | / pub unsafe extern "C" fn quotearg_n(
1395 | |     mut n: libc::c_int,
1396 | |     mut arg: *const libc::c_char,
1397 | | ) -> *mut libc::c_char {
...    |
1403 | |     );
1404 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a function
   --> src/localcharset.rs:393:1
    |
393 | / pub fn locale_charset() -> String {
394 | |     let codeset_ptr: *const libc::c_char = unsafe { nl_langinfo(CODESET as libc::c_int) };
395 | |     let codeset = unsafe { CStr::from_ptr(codeset_ptr) };
396 | |     
...   |
401 | |     codeset.to_string_lossy().into_owned()
402 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
    --> src/quotearg.rs:1398:5
     |
1398 | /     return quotearg_n_options(
1399 | |         n,
1400 | |         arg,
1401 | |         18446744073709551615 as libc::c_ulong,
1402 | |         &mut default_quoting_options,
1403 | |     );
     | |______^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1398 ~     quotearg_n_options(
1399 +         n,
1400 +         arg,
1401 +         18446744073709551615 as libc::c_ulong,
1402 +         &mut default_quoting_options,
1403 +     )
     |

warning: missing `#[inline]` for a function
   --> src/localcharset.rs:393:1
    |
393 | / pub fn locale_charset() -> String {
394 | |     let codeset_ptr: *const libc::c_char = unsafe { nl_langinfo(CODESET as libc::c_int) };
395 | |     let codeset = unsafe { CStr::from_ptr(codeset_ptr) };
396 | |     
...   |
401 | |     codeset.to_string_lossy().into_owned()
402 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: the function `quotearg_n_options` doesn't need a mutable reference
    --> src/quotearg.rs:1402:9
     |
1402 |         &mut default_quoting_options,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: `-W clippy::unnecessary-mut-passed` implied by `-W clippy::all`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1406:1
     |
1406 | / pub unsafe extern "C" fn quotearg_n_mem(
1407 | |     mut n: libc::c_int,
1408 | |     mut arg: *const libc::c_char,
1409 | |     mut argsize: size_t,
1410 | | ) -> *mut libc::c_char {
1411 | |     return quotearg_n_options(n, arg, argsize, &mut default_quoting_options);
1412 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1406:1
     |
1406 | / pub unsafe extern "C" fn quotearg_n_mem(
1407 | |     mut n: libc::c_int,
1408 | |     mut arg: *const libc::c_char,
1409 | |     mut argsize: size_t,
1410 | | ) -> *mut libc::c_char {
1411 | |     return quotearg_n_options(n, arg, argsize, &mut default_quoting_options);
1412 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: unneeded `return` statement
    --> src/quotearg.rs:1411:5
     |
1411 |     return quotearg_n_options(n, arg, argsize, &mut default_quoting_options);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `quotearg_n_options(n, arg, argsize, &mut default_quoting_options)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: the function `quotearg_n_options` doesn't need a mutable reference
    --> src/quotearg.rs:1411:48
     |
1411 |     return quotearg_n_options(n, arg, argsize, &mut default_quoting_options);
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: missing documentation for a module
  --> lib.rs:28:1
   |
28 | pub mod mbrtoc32;
   | ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
    --> src/quotearg.rs:1417:9
     |
1417 |         CString::from_raw(quoted_arg).into_string().expect("Failed to convert CString to String")
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_raw(quoted_arg).into_string().expect("Failed to convert CString to String")`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1415:5
     |
1415 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used `expect()` on `a Result` value
    --> src/quotearg.rs:1416:40
     |
1416 |         let quoted_arg = quotearg_n(0, CString::new(arg).expect("CString::new failed").as_ptr());
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if this value is an `Err`, it will panic
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: missing documentation for a type alias
  --> src/mbrtoc32.rs:23:1
   |
23 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `expect()` on `a Result` value
    --> src/quotearg.rs:1417:9
     |
1417 |         CString::from_raw(quoted_arg).into_string().expect("Failed to convert CString to String")
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if this value is an `Err`, it will panic
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: missing documentation for a type alias
  --> src/mbrtoc32.rs:24:1
   |
24 | pub type __uint32_t = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1422:1
     |
1422 | / pub fn quotearg_mem(arg: &str) -> String {
1423 | |     let argsize = arg.len() as u64;
1424 | |     let c_string = CString::new(arg).expect("CString::new failed");
1425 | |     let result_ptr;
...    |
1429 | |     unsafe { CString::from_raw(result_ptr).into_string().expect("Failed to convert to String") }
1430 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a type alias
  --> src/mbrtoc32.rs:25:1
   |
25 | pub type __uint_least32_t = __uint32_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
    --> src/quotearg.rs:1429:14
     |
1429 |     unsafe { CString::from_raw(result_ptr).into_string().expect("Failed to convert to String") }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_raw(result_ptr).into_string().expect("Failed to convert to String")`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used `expect()` on `a Result` value
    --> src/quotearg.rs:1424:20
     |
1424 |     let c_string = CString::new(arg).expect("CString::new failed");
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if this value is an `Err`, it will panic
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: missing documentation for a struct
  --> src/mbrtoc32.rs:28:1
   |
28 | / pub struct __mbstate_t {
29 | |     pub __count: libc::c_int,
30 | |     pub __value: C2RustUnnamed,
31 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1426:5
     |
1426 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/mbrtoc32.rs:29:5
   |
29 |     pub __count: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1429:5
     |
1429 |     unsafe { CString::from_raw(result_ptr).into_string().expect("Failed to convert to String") }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/mbrtoc32.rs:30:5
   |
30 |     pub __value: C2RustUnnamed,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `expect()` on `a Result` value
    --> src/quotearg.rs:1429:14
     |
1429 |     unsafe { CString::from_raw(result_ptr).into_string().expect("Failed to convert to String") }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if this value is an `Err`, it will panic
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: missing documentation for a union
  --> src/mbrtoc32.rs:34:1
   |
34 | / pub union C2RustUnnamed {
35 | |     pub __wch: libc::c_uint,
36 | |     pub __wchb: [libc::c_char; 4],
37 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1433:1
     |
1433 | / pub fn quotearg_n_style(
1434 | |     n: i32,
1435 | |     s: quoting_style,
1436 | |     arg: &CStr,
...    |
1441 | |     }
1442 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1440:9
     |
1440 |         quotearg_n_options(n, arg.as_ptr(), u64::MAX, &o)
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return quotearg_n_options(n, arg.as_ptr(), u64::MAX, &o)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/mbrtoc32.rs:35:5
   |
35 |     pub __wch: libc::c_uint,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/mbrtoc32.rs:36:5
   |
36 |     pub __wchb: [libc::c_char; 4],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1439:5
     |
1439 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
  --> src/mbrtoc32.rs:38:1
   |
38 | pub type mbstate_t = __mbstate_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1445:1
     |
1445 | / pub fn quotearg_n_style_mem(
1446 | |     n: i32,
1447 | |     s: quoting_style,
1448 | |     arg: &CStr,
...    |
1452 | |     unsafe { quotearg_n_options(n, arg.as_ptr(), argsize, &o) }
1453 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a type alias
  --> src/mbrtoc32.rs:39:1
   |
39 | pub type char32_t = __uint_least32_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
    --> src/quotearg.rs:1452:14
     |
1452 |     unsafe { quotearg_n_options(n, arg.as_ptr(), argsize, &o) }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return quotearg_n_options(n, arg.as_ptr(), argsize, &o)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a function
  --> src/mbrtoc32.rs:41:1
   |
41 | / fn mbszero(ps: &mut mbstate_t) {
42 | |     let size = std::mem::size_of::<mbstate_t>();
43 | |     let bytes: &mut [u8] = unsafe { std::slice::from_raw_parts_mut(ps as *mut _ as *mut u8, size) };
44 | |     bytes.fill(0);
45 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1452:5
     |
1452 |     unsafe { quotearg_n_options(n, arg.as_ptr(), argsize, &o) }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1456:1
     |
1456 | / pub fn quotearg_style(
1457 | |     s: quoting_style,
1458 | |     arg: &CStr,
1459 | | ) -> CString {
1460 | |     let result_ptr = quotearg_n_style(0, s, arg);
1461 | |     unsafe { CString::from_raw(result_ptr) }
1462 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1461:14
     |
1461 |     unsafe { CString::from_raw(result_ptr) }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_raw(result_ptr)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1461:5
     |
1461 |     unsafe { CString::from_raw(result_ptr) }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1465:1
     |
1465 | / pub fn quotearg_style_mem(
1466 | |     s: quoting_style,
1467 | |     arg: &CStr,
1468 | | ) -> CString {
1469 | |     let result_ptr = quotearg_n_style_mem(0, s, arg);
1470 | |     unsafe { CString::from_raw(result_ptr) }
1471 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1470:14
     |
1470 |     unsafe { CString::from_raw(result_ptr) }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_raw(result_ptr)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a static
  --> src/mbrtoc32.rs:47:1
   |
47 | / static mut internal_state: mbstate_t = mbstate_t {
48 | |     __count: 0,
49 | |     __value: C2RustUnnamed { __wch: 0 },
50 | | };
   | |__^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a function
  --> src/mbrtoc32.rs:52:1
   |
52 | / pub fn rpl_mbrtoc32(
53 | |     pwc: &mut Option<char32_t>,
54 | |     s: Option<&[u8]>,
55 | |     n: usize,
...  |
92 | |     ret
93 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1470:5
     |
1470 |     unsafe { CString::from_raw(result_ptr) }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing `#[inline]` for a function
  --> src/mbrtoc32.rs:52:1
   |
52 | / pub fn rpl_mbrtoc32(
53 | |     pwc: &mut Option<char32_t>,
54 | |     s: Option<&[u8]>,
55 | |     n: usize,
...  |
92 | |     ret
93 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1474:1
     |
1474 | / pub unsafe extern "C" fn quotearg_char_mem(
1475 | |     mut arg: *const libc::c_char,
1476 | |     mut argsize: size_t,
1477 | |     mut ch: libc::c_char,
...    |
1488 | |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
1489 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1474:1
     |
1474 | / pub unsafe extern "C" fn quotearg_char_mem(
1475 | |     mut arg: *const libc::c_char,
1476 | |     mut argsize: size_t,
1477 | |     mut ch: libc::c_char,
...    |
1488 | |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
1489 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: unneeded `return` statement
    --> src/quotearg.rs:1488:5
     |
1488 |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
    --> src/quotearg.rs:1483:21
     |
1483 |         left_quote: 0 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *const _` detected
    --> src/quotearg.rs:1484:22
     |
1484 |         right_quote: 0 as *const libc::c_char,
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: the function `quotearg_n_options` doesn't need a mutable reference
    --> src/quotearg.rs:1488:63
     |
1488 |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
     |                                                               ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1491:1
     |
1491 | / pub fn quotearg_char(arg: &CStr, ch: char) -> CString {
1492 | |     let ch_as_c_char = ch as libc::c_char;
1493 | |     let result_ptr = unsafe {
1494 | |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
1495 | |     };
1496 | |     unsafe { CStr::from_ptr(result_ptr).to_owned() }
1497 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1496:14
     |
1496 |     unsafe { CStr::from_ptr(result_ptr).to_owned() }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CStr::from_ptr(result_ptr).to_owned()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1493:22
     |
1493 |     let result_ptr = unsafe {
     |                      ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1496:5
     |
1496 |     unsafe { CStr::from_ptr(result_ptr).to_owned() }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1500:1
     |
1500 | / pub fn quotearg_colon(arg: &CStr) -> CString {
1501 | |     quotearg_char(arg, ':' as char)
1502 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1501:5
     |
1501 |     quotearg_char(arg, ':' as char)
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return quotearg_char(arg, ':' as char)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: casting to the same type is unnecessary (`char` -> `char`)
    --> src/quotearg.rs:1501:24
     |
1501 |     quotearg_char(arg, ':' as char)
     |                        ^^^^^^^^^^^ help: try: `':'`
     |
     = note: `-W clippy::unnecessary-cast` implied by `-W clippy::all`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1505:1
     |
1505 | / pub fn quotearg_colon_mem(arg: &str) -> CString {
1506 | |     let argsize = arg.len() as size_t;
1507 | |     let result_ptr = unsafe {
1508 | |         quotearg_char_mem(arg.as_ptr() as *const libc::c_char, argsize, ':' as i32 as libc::c_char)
1509 | |     };
1510 | |     unsafe { CString::from_raw(result_ptr) }
1511 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1510:14
     |
1510 |     unsafe { CString::from_raw(result_ptr) }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_raw(result_ptr)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1507:22
     |
1507 |     let result_ptr = unsafe {
     |                      ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
    --> src/quotearg.rs:1508:27
     |
1508 |         quotearg_char_mem(arg.as_ptr() as *const libc::c_char, argsize, ':' as i32 as libc::c_char)
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `arg.as_ptr().cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i32` to `i8` may truncate the value
    --> src/quotearg.rs:1508:73
     |
1508 |         quotearg_char_mem(arg.as_ptr() as *const libc::c_char, argsize, ':' as i32 as libc::c_char)
     |                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1510:5
     |
1510 |     unsafe { CString::from_raw(result_ptr) }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1514:1
     |
1514 | / pub fn quotearg_n_style_colon(
1515 | |     n: i32,
1516 | |     s: quoting_style,
1517 | |     arg: &CStr,
...    |
1537 | |     }
1538 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1536:9
     |
1536 |         CString::from_raw(result)
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_raw(result)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used import from `std` instead of `core`
    --> src/quotearg.rs:1523:21
     |
1523 |         left_quote: std::ptr::null(),
     |                     ^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
    --> src/quotearg.rs:1524:22
     |
1524 |         right_quote: std::ptr::null(),
     |                      ^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1528:5
     |
1528 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: casting `i32` to `i8` may truncate the value
    --> src/quotearg.rs:1529:40
     |
1529 |         set_char_quoting(&mut options, ':' as i32 as i8, 1);
     |                                        ^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: the function `quotearg_n_options` doesn't need a mutable reference
    --> src/quotearg.rs:1534:13
     |
1534 |             &mut options,
     |             ^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: missing documentation for a module
  --> lib.rs:29:1
   |
29 | pub mod mbszero;
   | ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1541:1
     |
1541 | / pub unsafe extern "C" fn quotearg_n_custom(
1542 | |     mut n: libc::c_int,
1543 | |     mut left_quote: *const libc::c_char,
1544 | |     mut right_quote: *const libc::c_char,
...    |
1553 | |     );
1554 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1541:1
     |
1541 | / pub unsafe extern "C" fn quotearg_n_custom(
1542 | |     mut n: libc::c_int,
1543 | |     mut left_quote: *const libc::c_char,
1544 | |     mut right_quote: *const libc::c_char,
...    |
1553 | |     );
1554 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: unneeded `return` statement
    --> src/quotearg.rs:1547:5
     |
1547 | /     return quotearg_n_custom_mem(
1548 | |         n,
1549 | |         left_quote,
1550 | |         right_quote,
1551 | |         arg,
1552 | |         18446744073709551615 as libc::c_ulong,
1553 | |     );
     | |______^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
     |
1547 ~     quotearg_n_custom_mem(
1548 +         n,
1549 +         left_quote,
1550 +         right_quote,
1551 +         arg,
1552 +         18446744073709551615 as libc::c_ulong,
1553 +     )
     |

warning: missing documentation for a struct
  --> src/mbszero.rs:13:1
   |
13 | / pub struct __mbstate_t {
14 | |     pub __count: libc::c_int,
15 | |     pub __value: C2RustUnnamed,
16 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1556:1
     |
1556 | / pub unsafe extern "C" fn quotearg_n_custom_mem(
1557 | |     mut n: libc::c_int,
1558 | |     mut left_quote: *const libc::c_char,
1559 | |     mut right_quote: *const libc::c_char,
...    |
1565 | |     return quotearg_n_options(n, arg, argsize, &mut o);
1566 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a struct field
  --> src/mbszero.rs:14:5
   |
14 |     pub __count: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1556:1
     |
1556 | / pub unsafe extern "C" fn quotearg_n_custom_mem(
1557 | |     mut n: libc::c_int,
1558 | |     mut left_quote: *const libc::c_char,
1559 | |     mut right_quote: *const libc::c_char,
...    |
1565 | |     return quotearg_n_options(n, arg, argsize, &mut o);
1566 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a struct field
  --> src/mbszero.rs:15:5
   |
15 |     pub __value: C2RustUnnamed,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
    --> src/quotearg.rs:1565:5
     |
1565 |     return quotearg_n_options(n, arg, argsize, &mut o);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `quotearg_n_options(n, arg, argsize, &mut o)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a union
  --> src/mbszero.rs:19:1
   |
19 | / pub union C2RustUnnamed {
20 | |     pub __wch: libc::c_uint,
21 | |     pub __wchb: [libc::c_char; 4],
22 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
    --> src/quotearg.rs:1564:24
     |
1564 |     set_custom_quoting(&mut o as *mut quoting_options, left_quote, right_quote);
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(o)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing documentation for a struct field
  --> src/mbszero.rs:20:5
   |
20 |     pub __wch: libc::c_uint,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: the function `quotearg_n_options` doesn't need a mutable reference
    --> src/quotearg.rs:1565:48
     |
1565 |     return quotearg_n_options(n, arg, argsize, &mut o);
     |                                                ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: missing documentation for a struct field
  --> src/mbszero.rs:21:5
   |
21 |     pub __wchb: [libc::c_char; 4],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: docs for function which may panic missing `# Panics` section
    --> src/quotearg.rs:1568:1
     |
1568 | / pub fn quotearg_custom(
1569 | |     left_quote: &str,
1570 | |     right_quote: &str,
1571 | |     arg: &str,
...    |
1584 | |     }
1585 | | }
     | |_^
     |
note: first possible panic found here
    --> src/quotearg.rs:1573:24
     |
1573 |     let left_quote_c = CString::new(left_quote).unwrap();
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing documentation for a type alias
  --> src/mbszero.rs:23:1
   |
23 | pub type mbstate_t = __mbstate_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1568:1
     |
1568 | / pub fn quotearg_custom(
1569 | |     left_quote: &str,
1570 | |     right_quote: &str,
1571 | |     arg: &str,
...    |
1584 | |     }
1585 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a function
  --> src/mbszero.rs:27:1
   |
27 | / pub fn mbszero(ps: &mut mbstate_t) {
28 | |     // Zero out the mbstate_t structure
29 | |     let zeroed: mbstate_t = unsafe { std::mem::zeroed() };
30 | |     *ps = zeroed;
31 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
    --> src/quotearg.rs:1583:9
     |
1583 |         CStr::from_ptr(quoted_arg_ptr).to_string_lossy().into_owned()
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CStr::from_ptr(quoted_arg_ptr).to_string_lossy().into_owned()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1573:24
     |
1573 |     let left_quote_c = CString::new(left_quote).unwrap();
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: `-W clippy::unwrap-used` implied by `-W clippy::restriction`
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1574:25
     |
1574 |     let right_quote_c = CString::new(right_quote).unwrap();
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a module
  --> lib.rs:30:1
   |
30 | pub mod progname;
   | ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1575:17
     |
1575 |     let arg_c = CString::new(arg).unwrap();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1578:5
     |
1578 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
  --> src/progname.rs:21:1
   |
21 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1582:5
     |
1582 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: docs for function which may panic missing `# Panics` section
    --> src/quotearg.rs:1588:1
     |
1588 | / pub fn quotearg_custom_mem(
1589 | |     left_quote: &str,
1590 | |     right_quote: &str,
1591 | |     arg: &str,
...    |
1609 | |     unsafe { std::ffi::CString::from_raw(result_ptr).into_string().unwrap() }
1610 | | }
     | |_^
     |
note: first possible panic found here
    --> src/quotearg.rs:1594:24
     |
1594 |     let left_quote_c = std::ffi::CString::new(left_quote).unwrap();
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing documentation for a struct
  --> src/progname.rs:24:1
   |
24 | / pub struct _IO_FILE {
25 | |     pub _flags: libc::c_int,
26 | |     pub _IO_read_ptr: *mut libc::c_char,
27 | |     pub _IO_read_end: *mut libc::c_char,
...  |
53 | |     pub _unused2: [libc::c_char; 20],
54 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
    --> src/quotearg.rs:1588:1
     |
1588 | / pub fn quotearg_custom_mem(
1589 | |     left_quote: &str,
1590 | |     right_quote: &str,
1591 | |     arg: &str,
...    |
1609 | |     unsafe { std::ffi::CString::from_raw(result_ptr).into_string().unwrap() }
1610 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing `return` statement
    --> src/quotearg.rs:1609:14
     |
1609 |     unsafe { std::ffi::CString::from_raw(result_ptr).into_string().unwrap() }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return std::ffi::CString::from_raw(result_ptr).into_string().unwrap()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/progname.rs:25:5
   |
25 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1594:24
     |
1594 |     let left_quote_c = std::ffi::CString::new(left_quote).unwrap();
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
  --> src/progname.rs:26:5
   |
26 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/progname.rs:27:5
   |
27 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `alloc`
    --> src/quotearg.rs:1594:24
     |
1594 |     let left_quote_c = std::ffi::CString::new(left_quote).unwrap();
     |                        ^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `alloc`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: missing documentation for a struct field
  --> src/progname.rs:28:5
   |
28 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1595:25
     |
1595 |     let right_quote_c = std::ffi::CString::new(right_quote).unwrap();
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
  --> src/progname.rs:29:5
   |
29 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `alloc`
    --> src/quotearg.rs:1595:25
     |
1595 |     let right_quote_c = std::ffi::CString::new(right_quote).unwrap();
     |                         ^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `alloc`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: missing documentation for a struct field
  --> src/progname.rs:30:5
   |
30 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1596:17
     |
1596 |     let arg_c = std::ffi::CString::new(arg).unwrap();
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
  --> src/progname.rs:31:5
   |
31 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `alloc`
    --> src/quotearg.rs:1596:17
     |
1596 |     let arg_c = std::ffi::CString::new(arg).unwrap();
     |                 ^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `alloc`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1599:5
     |
1599 |     unsafe {
     |     ^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/progname.rs:32:5
   |
32 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1609:5
     |
1609 |     unsafe { std::ffi::CString::from_raw(result_ptr).into_string().unwrap() }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/progname.rs:33:5
   |
33 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/progname.rs:34:5
   |
34 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1609:14
     |
1609 |     unsafe { std::ffi::CString::from_raw(result_ptr).into_string().unwrap() }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
  --> src/progname.rs:35:5
   |
35 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `alloc`
    --> src/quotearg.rs:1609:14
     |
1609 |     unsafe { std::ffi::CString::from_raw(result_ptr).into_string().unwrap() }
     |              ^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `alloc`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: missing documentation for a struct field
  --> src/progname.rs:36:5
   |
36 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
    --> src/quotearg.rs:1617:27
     |
1617 |         quote_these_too: [0 as libc::c_int as libc::c_uint, 0, 0, 0, 0, 0, 0, 0],
     |                           ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
  --> src/progname.rs:37:5
   |
37 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
    --> src/quotearg.rs:1621:5
     |
1614 | /     let mut init = quoting_options {
1615 | |         style: locale_quoting_style,
1616 | |         flags: 0 as libc::c_int,
1617 | |         quote_these_too: [0 as libc::c_int as libc::c_uint, 0, 0, 0, 0, 0, 0, 0],
1618 | |         left_quote: 0 as *const libc::c_char,
1619 | |         right_quote: 0 as *const libc::c_char,
1620 | |     };
     | |______- unnecessary `let` binding
1621 |       init
     |       ^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
     |
1614 ~     
1615 ~     quoting_options {
1616 +         style: locale_quoting_style,
1617 +         flags: 0 as libc::c_int,
1618 +         quote_these_too: [0 as libc::c_int as libc::c_uint, 0, 0, 0, 0, 0, 0, 0],
1619 +         left_quote: 0 as *const libc::c_char,
1620 +         right_quote: 0 as *const libc::c_char,
1621 +     }
     |

warning: missing documentation for a struct field
  --> src/progname.rs:38:5
   |
38 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
    --> src/quotearg.rs:1617:27
     |
1617 |         quote_these_too: [0 as libc::c_int as libc::c_uint, 0, 0, 0, 0, 0, 0, 0],
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/progname.rs:39:5
   |
39 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1624:1
     |
1624 | / pub unsafe extern "C" fn quote_n_mem(
1625 | |     mut n: libc::c_int,
1626 | |     mut arg: *const libc::c_char,
1627 | |     mut argsize: size_t,
1628 | | ) -> *const libc::c_char {
1629 | |     return quotearg_n_options(n, arg, argsize, &mut quote_quoting_options);
1630 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a struct field
  --> src/progname.rs:40:5
   |
40 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
    --> src/quotearg.rs:1629:5
     |
1629 |     return quotearg_n_options(n, arg, argsize, &mut quote_quoting_options);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `quotearg_n_options(n, arg, argsize, &mut quote_quoting_options)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a struct field
  --> src/progname.rs:41:5
   |
41 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: the function `quotearg_n_options` doesn't need a mutable reference
    --> src/quotearg.rs:1629:48
     |
1629 |     return quotearg_n_options(n, arg, argsize, &mut quote_quoting_options);
     |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed

warning: missing `return` statement
    --> src/quotearg.rs:1635:14
     |
1635 |     unsafe { CString::from_raw(quoted_ptr as *mut c_char) }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::from_raw(quoted_ptr as *mut c_char)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/progname.rs:42:5
   |
42 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/progname.rs:43:5
   |
43 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1634:37
     |
1634 |     let quoted_ptr: *const c_char = unsafe { quote_n_mem(0, arg.as_ptr(), argsize) };
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/progname.rs:44:5
   |
44 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1635:5
     |
1635 |     unsafe { CString::from_raw(quoted_ptr as *mut c_char) }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/progname.rs:45:5
   |
45 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: docs for function which may panic missing `# Panics` section
    --> src/quotearg.rs:1639:1
     |
1639 | / pub fn quote_n(n: i32, arg: &str) -> *const libc::c_char {
1640 | |     let c_string = CString::new(arg).unwrap();
1641 | |     unsafe { quote_n_mem(n, c_string.as_ptr(), u64::MAX) }
1642 | | }
     | |_^
     |
note: first possible panic found here
    --> src/quotearg.rs:1640:20
     |
1640 |     let c_string = CString::new(arg).unwrap();
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing documentation for a struct field
  --> src/progname.rs:46:5
   |
46 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
    --> src/quotearg.rs:1641:14
     |
1641 |     unsafe { quote_n_mem(n, c_string.as_ptr(), u64::MAX) }
     |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return quote_n_mem(n, c_string.as_ptr(), u64::MAX)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a struct field
  --> src/progname.rs:47:5
   |
47 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
    --> src/quotearg.rs:1640:20
     |
1640 |     let c_string = CString::new(arg).unwrap();
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
  --> src/progname.rs:48:5
   |
48 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1641:5
     |
1641 |     unsafe { quote_n_mem(n, c_string.as_ptr(), u64::MAX) }
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/progname.rs:49:5
   |
49 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
    --> src/quotearg.rs:1645:1
     |
1645 | / pub unsafe extern "C" fn quote(mut arg: *const libc::c_char) -> *const libc::c_char {
1646 | |     let arg_str = unsafe { CStr::from_ptr(arg).to_string_lossy().into_owned() };
1647 | | return quote_n(0, &arg_str);
1648 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a struct field
  --> src/progname.rs:50:5
   |
50 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
    --> src/quotearg.rs:1647:1
     |
1647 | return quote_n(0, &arg_str);
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `quote_n(0, &arg_str)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a struct field
  --> src/progname.rs:51:5
   |
51 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
    --> src/quotearg.rs:1646:19
     |
1646 |     let arg_str = unsafe { CStr::from_ptr(arg).to_string_lossy().into_owned() };
     |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/progname.rs:52:5
   |
52 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
 --> src/setlocale_null.rs:2:5
  |
2 | use std::ffi::CStr;
  |     ^^^^^^^^^^^^^^
  |
  = help: consider importing the item from `core`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
  --> src/progname.rs:53:5
   |
53 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
  --> src/setlocale_null.rs:15:1
   |
15 | / pub fn setlocale_null_r(
16 | |     category: libc::c_int,
17 | |     buf: &mut Vec<u8>,
18 | | ) -> libc::c_int {
...  |
24 | |     }
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: unneeded `return` statement
  --> src/setlocale_null.rs:23:9
   |
23 |         return setlocale_null_r_unlocked(category, buf_ptr, bufsize);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `setlocale_null_r_unlocked(category, buf_ptr, bufsize)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `as` casting between raw pointers without changing its mutability
  --> src/setlocale_null.rs:20:19
   |
20 |     let buf_ptr = buf.as_mut_ptr() as *mut libc::c_char;
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `buf.as_mut_ptr().cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a type alias
  --> src/progname.rs:55:1
   |
55 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/setlocale_null.rs:22:5
   |
22 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
  --> src/progname.rs:56:1
   |
56 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/setlocale_null.rs:31:9
   |
31 |         None
   |         ^^^^ help: add `return` as shown: `return None`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a type alias
  --> src/progname.rs:57:1
   |
57 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
  --> src/setlocale_null.rs:33:18
   |
33 |         unsafe { Some(CStr::from_ptr(result).to_string_lossy().into_owned()) }
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Some(CStr::from_ptr(result).to_string_lossy().into_owned())`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a type alias
  --> src/progname.rs:58:1
   |
58 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/setlocale_null.rs:29:18
   |
29 |     let result = unsafe { setlocale_null_unlocked(category) };
   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a static
  --> src/progname.rs:60:1
   |
60 | pub static mut program_name: *const libc::c_char = 0 as *const libc::c_char;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
  --> src/setlocale_null.rs:33:9
   |
33 |         unsafe { Some(CStr::from_ptr(result).to_string_lossy().into_owned()) }
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a function
  --> src/progname.rs:62:1
   |
62 | / pub fn set_program_name(argv0: *const libc::c_char) {
63 | |     if argv0.is_null() {
64 | |         eprintln!("A NULL argv[0] was passed through an exec system call.");
65 | |         std::process::abort();
...  |
88 | |     }
89 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `alloc`
 --> src/setlocale_null_unlocked.rs:1:5
  |
1 | use std::slice;
  |     ^^^^^^^^^^
  |
  = help: consider importing the item from `alloc`
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: missing `#[inline]` for a function
  --> src/progname.rs:62:1
   |
62 | / pub fn set_program_name(argv0: *const libc::c_char) {
63 | |     if argv0.is_null() {
64 | |         eprintln!("A NULL argv[0] was passed through an exec system call.");
65 | |         std::process::abort();
...  |
88 | |     }
89 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unsafe function's docs miss `# Safety` section
  --> src/setlocale_null_unlocked.rs:18:1
   |
18 | / pub unsafe extern "C" fn setlocale_null_unlocked(
19 | |     mut category: libc::c_int,
20 | | ) -> *const libc::c_char {
21 | |     let mut result: *const libc::c_char = setlocale(category, 0 as *const libc::c_char);
22 | |     return result;
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
  --> src/setlocale_null_unlocked.rs:22:5
   |
22 |     return result;
   |     ^^^^^^^^^^^^^^ help: remove `return`: `result`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *const _` detected
  --> src/setlocale_null_unlocked.rs:21:63
   |
21 |     let mut result: *const libc::c_char = setlocale(category, 0 as *const libc::c_char);
   |                                                               ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: unneeded `return` statement
  --> src/setlocale_null_unlocked.rs:39:9
   |
39 |         return 22;
   |         ^^^^^^^^^^ help: remove `return`: `22`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
  --> src/setlocale_null_unlocked.rs:45:13
   |
45 |             return 0;
   |             ^^^^^^^^^ help: remove `return`: `0`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
  --> src/setlocale_null_unlocked.rs:53:13
   |
53 |             return 34;
   |             ^^^^^^^^^^ help: remove `return`: `34`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
  --> src/setlocale_null_unlocked.rs:39:16
   |
39 |         return 22;
   |                ^^ help: consider adding suffix: `22_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/setlocale_null_unlocked.rs:45:20
   |
45 |             return 0;
   |                    ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/setlocale_null_unlocked.rs:53:20
   |
53 |             return 34;
   |                    ^^ help: consider adding suffix: `34_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: unsafe block missing a safety comment
  --> src/setlocale_null_unlocked.rs:31:5
   |
31 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: indexing may panic
  --> src/setlocale_null_unlocked.rs:37:13
   |
37 |             buf[0] = 0; // Set the first byte to null terminator
   |             ^^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
  --> src/setlocale_null_unlocked.rs:41:29
   |
41 |         let length: usize = unsafe { strlen(result) } as usize; // Cast to usize
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: unsafe block missing a safety comment
  --> src/setlocale_null_unlocked.rs:41:29
   |
41 |         let length: usize = unsafe { strlen(result) } as usize; // Cast to usize
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: slicing may panic
  --> src/setlocale_null_unlocked.rs:43:13
   |
43 |             buf[..length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, length) });
   |             ^^^^^^^^^^^^^
   |
   = help: consider using `.get(..n)`or `.get_mut(..n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: unsafe block missing a safety comment
  --> src/setlocale_null_unlocked.rs:43:43
   |
43 |             buf[..length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, length) });
   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
  --> src/setlocale_null_unlocked.rs:43:52
   |
43 |             buf[..length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, length) });
   |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
  --> src/setlocale_null_unlocked.rs:43:79
   |
43 |             buf[..length].copy_from_slice(unsafe { std::slice::from_raw_parts(result as *const u8, length) });
   |                                                                               ^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `result.cast::<u8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: indexing may panic
  --> src/setlocale_null_unlocked.rs:44:13
   |
44 |             buf[length] = 0; // Null terminate
   |             ^^^^^^^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: arithmetic detected
  --> src/setlocale_null_unlocked.rs:47:31
   |
47 |             let copy_length = buf.len() - 1;
   |                               ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a module
  --> lib.rs:31:1
   |
31 | pub mod propername_lite;
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
  --> src/setlocale_null_unlocked.rs:47:31
   |
47 |             let copy_length = buf.len() - 1;
   |                               ^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unsafe block missing a safety comment
  --> src/setlocale_null_unlocked.rs:49:30
   |
49 |                 let source = unsafe { std::slice::from_raw_parts(result as *const u8, copy_length) };
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a function
  --> src/propername_lite.rs:8:1
   |
8  | / pub unsafe extern "C" fn proper_name_lite(
9  | |     mut name_ascii: *const libc::c_char,
10 | |     mut name_utf8: *const libc::c_char,
11 | | ) -> *const libc::c_char {
...  |
23 | |     };
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
  --> src/setlocale_null_unlocked.rs:49:39
   |
49 |                 let source = unsafe { std::slice::from_raw_parts(result as *const u8, copy_length) };
   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing `#[inline]` for a function
  --> src/propername_lite.rs:8:1
   |
8  | / pub unsafe extern "C" fn proper_name_lite(
9  | |     mut name_ascii: *const libc::c_char,
10 | |     mut name_utf8: *const libc::c_char,
11 | | ) -> *const libc::c_char {
...  |
23 | |     };
24 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/setlocale_null_unlocked.rs:49:66
   |
49 |                 let source = unsafe { std::slice::from_raw_parts(result as *const u8, copy_length) };
   |                                                                  ^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `result.cast::<u8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: slicing may panic
  --> src/setlocale_null_unlocked.rs:50:17
   |
50 |                 buf[..copy_length].copy_from_slice(source);
   |                 ^^^^^^^^^^^^^^^^^^
   |
   = help: consider using `.get(..n)`or `.get_mut(..n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: indexing may panic
  --> src/setlocale_null_unlocked.rs:51:17
   |
51 |                 buf[copy_length] = 0; // Null terminate
   |                 ^^^^^^^^^^^^^^^^
   |
   = help: consider using `.get(n)` or `.get_mut(n)` instead
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a module
  --> lib.rs:32:1
   |
32 | pub mod quotearg;
   | ^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
 --> src/version.rs:3:47
  |
3 |   pub static mut Version: *const libc::c_char = b"9.5.42-bbc97\0" as *const u8
  |  _______________________________________________^
4 | |     as *const libc::c_char;
  | |__________________________^ help: try `pointer::cast`, a safer alternative: `(b"9.5.42-bbc97\0" as *const u8).cast::<i8>()`
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: exported structs should not be exhaustive
  --> src/version_etc.rs:19:1
   |
19 | / pub struct __va_list {
20 | |     pub __stack: *mut libc::c_void,
21 | |     pub __gr_top: *mut libc::c_void,
22 | |     pub __vr_top: *mut libc::c_void,
23 | |     pub __gr_offs: libc::c_int,
24 | |     pub __vr_offs: libc::c_int,
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
19 | #[non_exhaustive]
   |

warning: exported structs should not be exhaustive
  --> src/version_etc.rs:32:1
   |
32 | / pub struct _IO_FILE {
33 | |     pub _flags: libc::c_int,
34 | |     pub _IO_read_ptr: *mut libc::c_char,
35 | |     pub _IO_read_end: *mut libc::c_char,
...  |
61 | |     pub _unused2: [libc::c_char; 20],
62 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
   |
32 | #[non_exhaustive]
   |

warning: unnecessary structure name repetition
  --> src/version_etc.rs:46:22
   |
46 |     pub _chain: *mut _IO_FILE,
   |                      ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
  --> src/version_etc.rs:57:29
   |
57 |     pub _freeres_list: *mut _IO_FILE,
   |                             ^^^^^^^^ help: use the applicable keyword: `Self`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unsafe function's docs miss `# Safety` section
   --> src/version_etc.rs:68:1
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
245 | |
246 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a type alias
  --> src/quotearg.rs:76:1
   |
76 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/quotearg.rs:77:1
   |
77 | pub type __uint32_t = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
   --> src/version_etc.rs:68:1
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
245 | |
246 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a type alias
  --> src/quotearg.rs:78:1
   |
78 | pub type __uint_least32_t = __uint32_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this function has too many lines (169/100)
   --> src/version_etc.rs:68:1
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
245 | |
246 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: missing documentation for a type alias
  --> src/quotearg.rs:79:1
   |
79 | pub type ptrdiff_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary boolean `not` operation
  --> src/version_etc.rs:76:5
   |
76 | /     if !command_name.is_null() {
77 | |         fprintf(
78 | |             stream,
79 | |             b"%s (%s) %s\n\0" as *const u8 as *const libc::c_char,
...  |
90 | |         );
91 | |     }
   | |_____^
   |
   = help: remove the `!` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a type alias
  --> src/quotearg.rs:80:1
   |
80 | pub type quoting_style = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/version_etc.rs:79:13
   |
79 |             b"%s (%s) %s\n\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s (%s) %s\n\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/quotearg.rs:81:1
   |
81 | pub const custom_quoting_style: quoting_style = 10;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/version_etc.rs:87:13
   |
87 |             b"%s %s\n\0" as *const u8 as *const libc::c_char,
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s %s\n\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/quotearg.rs:82:1
   |
82 | pub const clocale_quoting_style: quoting_style = 9;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/quotearg.rs:83:1
   |
83 | pub const locale_quoting_style: quoting_style = 8;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/version_etc.rs:95:17
   |
95 |         gettext(b"(C)\0" as *const u8 as *const libc::c_char),
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"(C)\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/quotearg.rs:84:1
   |
84 | pub const escape_quoting_style: quoting_style = 7;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `i32` may wrap around the value
  --> src/version_etc.rs:96:9
   |
96 |         COPYRIGHT_YEAR as libc::c_int,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing documentation for a constant
  --> src/quotearg.rs:85:1
   |
85 | pub const c_maybe_quoting_style: quoting_style = 6;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/version_etc.rs:98:20
   |
98 |     fputs_unlocked(b"\n\0" as *const u8 as *const libc::c_char, stream);
   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\n\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/quotearg.rs:86:1
   |
86 | pub const c_quoting_style: quoting_style = 5;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:102:13
    |
102 | /             b"License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere...
103 | |                 as *const u8 as *const libc::c_char,
    | |___________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"License GPLv3+: GNU GPL version 3 or later <%s>.\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:105:9
    |
105 |         b"https://gnu.org/licenses/gpl.html\0" as *const u8 as *const libc::c_char,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"https://gnu.org/licenses/gpl.html\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/quotearg.rs:87:1
   |
87 | pub const shell_escape_always_quoting_style: quoting_style = 4;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/quotearg.rs:88:1
   |
88 | pub const shell_escape_quoting_style: quoting_style = 3;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:107:20
    |
107 |     fputs_unlocked(b"\n\0" as *const u8 as *const libc::c_char, stream);
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:111:9
    |
111 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/quotearg.rs:89:1
   |
89 | pub const shell_always_quoting_style: quoting_style = 2;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/quotearg.rs:90:1
   |
90 | pub const shell_quoting_style: quoting_style = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:114:25
    |
114 |                 gettext(b"Written by %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Written by %s.\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/quotearg.rs:91:1
   |
91 | pub const literal_quoting_style: quoting_style = 0;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:120:9
    |
120 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
  --> src/quotearg.rs:92:1
   |
92 | pub type quoting_flags = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:123:25
    |
123 |                 gettext(b"Written by %s and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Written by %s and %s.\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:130:9
    |
130 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/quotearg.rs:93:1
   |
93 | pub const QA_SPLIT_TRIGRAPHS: quoting_flags = 4;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:133:25
    |
133 |                 gettext(b"Written by %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Written by %s, %s, and %s.\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
  --> src/quotearg.rs:94:1
   |
94 | pub const QA_ELIDE_OUTER_QUOTES: quoting_flags = 2;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:141:9
    |
141 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
  --> src/quotearg.rs:95:1
   |
95 | pub const QA_ELIDE_NULL_BYTES: quoting_flags = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:144:25
    |
144 |                 gettext(b"Written by %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Written by %s, %s, %s, and %s.\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct
   --> src/quotearg.rs:98:1
    |
98  | / pub struct quoting_options {
99  | |     pub style: quoting_style,
100 | |     pub flags: libc::c_int,
101 | |     pub quote_these_too: [libc::c_uint; 8],
102 | |     pub left_quote: *const libc::c_char,
103 | |     pub right_quote: *const libc::c_char,
104 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:153:9
    |
153 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
  --> src/quotearg.rs:99:5
   |
99 |     pub style: quoting_style,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:156:25
    |
156 |                 gettext(b"Written by %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Written by %s, %s, %s, %s, and %s.\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/quotearg.rs:100:5
    |
100 |     pub flags: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:166:9
    |
166 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
   --> src/quotearg.rs:101:5
    |
101 |     pub quote_these_too: [libc::c_uint; 8],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:169:25
    |
169 |                 gettext(b"Written by %s, %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Written by %s, %s, %s, %s, %s, and %s.\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/quotearg.rs:102:5
    |
102 |     pub left_quote: *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:180:9
    |
180 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
   --> src/quotearg.rs:103:5
    |
103 |     pub right_quote: *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:183:25
    |
183 |                 gettext(b"Written by %s, %s, %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Written by %s, %s, %s, %s, %s, %s, and %s.\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:195:9
    |
195 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
   --> src/quotearg.rs:105:1
    |
105 | pub type __mbstate_t = mbstate_t;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:198:25
    |
198 |                 gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Written by %s, %s, %s, %s, %s, %s, %s, and %s.\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct
   --> src/quotearg.rs:108:1
    |
108 | / pub struct mbstate_t {
109 | |     pub __count: libc::c_int,
110 | |     pub __value: C2RustUnnamed,
111 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:211:9
    |
211 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
   --> src/quotearg.rs:109:5
    |
109 |     pub __count: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:214:25
    |
214 |                 gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and %s.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and %s.\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:228:9
    |
228 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
   --> src/quotearg.rs:110:5
    |
110 |     pub __value: C2RustUnnamed,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a union
   --> src/quotearg.rs:114:1
    |
114 | / pub union C2RustUnnamed {
115 | |     pub __wch: libc::c_uint,
116 | |     pub __wchb: [libc::c_char; 4],
117 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:231:25
    |
231 |                 gettext(b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and others.\n\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Written by %s, %s, %s, %s, %s, %s, %s, %s, and others.\n\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/quotearg.rs:115:5
    |
115 |     pub __wch: libc::c_uint,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
   --> src/version_etc.rs:248:1
    |
248 | / pub unsafe extern "C" fn version_etc_ar(
249 | |     mut stream: *mut FILE,
250 | |     mut command_name: *const libc::c_char,
251 | |     mut package: *const libc::c_char,
...   |
261 | |     version_etc_arn(stream, command_name, package, version, authors, n_authors);
262 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a struct field
   --> src/quotearg.rs:116:5
    |
116 |     pub __wchb: [libc::c_char; 4],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
   --> src/version_etc.rs:248:1
    |
248 | / pub unsafe extern "C" fn version_etc_ar(
249 | |     mut stream: *mut FILE,
250 | |     mut command_name: *const libc::c_char,
251 | |     mut package: *const libc::c_char,
...   |
261 | |     version_etc_arn(stream, command_name, package, version, authors, n_authors);
262 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a type alias
   --> src/quotearg.rs:118:1
    |
118 | pub type char32_t = __uint_least32_t;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/version_etc.rs:256:17
    |
256 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
   --> src/quotearg.rs:119:1
    |
119 | pub type wint_t = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/version_etc.rs:256:17
    |
256 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/quotearg.rs:120:1
    |
120 | pub const _ISprint: C2RustUnnamed_0 = 16384;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may truncate the value on targets with 32-bit wide pointers
   --> src/version_etc.rs:257:29
    |
257 |     while !(*authors.offset(n_authors as isize)).is_null() {
    |                             ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a struct
   --> src/quotearg.rs:123:1
    |
123 | / pub struct slotvec {
124 | |     pub size: size_t,
125 | |     pub val: *mut libc::c_char,
126 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `isize` may wrap around the value on targets with 64-bit wide pointers
   --> src/version_etc.rs:257:29
    |
257 |     while !(*authors.offset(n_authors as isize)).is_null() {
    |                             ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: statement with no effect
   --> src/version_etc.rs:259:9
    |
259 |         n_authors;
    |         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a struct field
   --> src/quotearg.rs:124:5
    |
124 |     pub size: size_t,
    |     ^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
   --> src/version_etc.rs:264:1
    |
264 | / pub unsafe extern "C" fn version_etc_va(
265 | |     mut stream: *mut FILE,
266 | |     mut command_name: *const libc::c_char,
267 | |     mut package: *const libc::c_char,
...   |
290 | |     );
291 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a struct field
   --> src/quotearg.rs:125:5
    |
125 |     pub val: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: item name starts with its containing module's name
   --> src/version_etc.rs:264:1
    |
264 | / pub unsafe extern "C" fn version_etc_va(
265 | |     mut stream: *mut FILE,
266 | |     mut command_name: *const libc::c_char,
267 | |     mut package: *const libc::c_char,
...   |
290 | |     );
291 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#module_name_repetitions

warning: missing documentation for a type alias
   --> src/quotearg.rs:127:1
    |
127 | pub type idx_t = ptrdiff_t;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/version_etc.rs:273:17
    |
273 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
   --> src/quotearg.rs:128:1
    |
128 | pub type C2RustUnnamed_0 = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/version_etc.rs:274:23
    |
274 |     while n_authors < 10 as libc::c_int as libc::c_ulong
    |                       ^^ help: consider adding suffix: `10_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/quotearg.rs:129:1
    |
129 | pub const _ISalnum: C2RustUnnamed_0 = 8;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `0 as *const _` detected
   --> src/version_etc.rs:272:51
    |
272 |     let mut authtab: [*const libc::c_char; 10] = [0 as *const libc::c_char; 10];
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing documentation for a constant
   --> src/quotearg.rs:130:1
    |
130 | pub const _ISpunct: C2RustUnnamed_0 = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/version_etc.rs:273:17
    |
273 |     n_authors = 0 as libc::c_int as size_t;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/quotearg.rs:131:1
    |
131 | pub const _IScntrl: C2RustUnnamed_0 = 2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/version_etc.rs:274:23
    |
274 |     while n_authors < 10 as libc::c_int as libc::c_ulong
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a constant
   --> src/quotearg.rs:132:1
    |
132 | pub const _ISblank: C2RustUnnamed_0 = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/version_etc.rs:276:13
    |
276 |             authtab[n_authors as usize] = authors.arg::<*const libc::c_char>();
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
   --> src/quotearg.rs:133:1
    |
133 | pub const _ISgraph: C2RustUnnamed_0 = 32768;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/version_etc.rs:276:21
    |
276 |             authtab[n_authors as usize] = authors.arg::<*const libc::c_char>();
    |                     ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/quotearg.rs:134:1
    |
134 | pub const _ISspace: C2RustUnnamed_0 = 8192;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: indexing may panic
   --> src/version_etc.rs:277:14
    |
277 |             !(authtab[n_authors as usize]).is_null()
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a constant
   --> src/quotearg.rs:135:1
    |
135 | pub const _ISxdigit: C2RustUnnamed_0 = 4096;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/quotearg.rs:136:1
    |
136 | pub const _ISdigit: C2RustUnnamed_0 = 2048;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/version_etc.rs:277:23
    |
277 |             !(authtab[n_authors as usize]).is_null()
    |                       ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a constant
   --> src/quotearg.rs:137:1
    |
137 | pub const _ISalpha: C2RustUnnamed_0 = 1024;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: statement with no effect
   --> src/version_etc.rs:281:9
    |
281 |         n_authors;
    |         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: missing documentation for a constant
   --> src/quotearg.rs:138:1
    |
138 | pub const _ISlower: C2RustUnnamed_0 = 512;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe function's docs miss `# Safety` section
   --> src/version_etc.rs:293:1
    |
293 | / pub unsafe extern "C" fn version_etc(
294 | |     mut stream: *mut FILE,
295 | |     mut command_name: *const libc::c_char,
296 | |     mut package: *const libc::c_char,
...   |
302 | |     version_etc_va(stream, command_name, package, version, authors.as_va_list());
303 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: missing documentation for a constant
   --> src/quotearg.rs:139:1
    |
139 | pub const _ISupper: C2RustUnnamed_0 = 256;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:307:23
    |
307 |     let report_bugs = unsafe {
    |                       ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a function
   --> src/quotearg.rs:141:1
    |
141 | / fn c32isprint(wc: u32) -> i32 {
142 | |     if char::from_u32(wc).map_or(false, |c| c.is_ascii()) {
143 | |         1
144 | |     } else {
145 | |         0
146 | |     }
147 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:308:17
    |
308 |         gettext(b"Report bugs to: bug-coreutils@gnu.org\0".as_ptr() as *const libc::c_char)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"Report bugs to: bug-coreutils@gnu.org\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:310:21
    |
310 |     let home_page = unsafe {
    |                     ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:311:17
    |
311 |         gettext(b"GNU coreutils home page: <https://www.gnu.org/software/coreutils/>\0".as_ptr() as *const libc::c_char)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"GNU coreutils home page: <https://www.gnu.org/software/coreutils/>\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:313:21
    |
313 |     let help_page = unsafe {
    |                     ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/version_etc.rs:314:17
    |
314 |         gettext(b"General help using GNU software: <https://www.gnu.org/gethelp/>\0".as_ptr() as *const libc::c_char)
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"General help using GNU software: <https://www.gnu.org/gethelp/>\0".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:317:20
    |
317 |     println!("{}", unsafe { std::ffi::CStr::from_ptr(report_bugs).to_string_lossy() });
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a function
   --> src/quotearg.rs:150:1
    |
150 | / unsafe extern "C" fn mbszero(mut ps: *mut mbstate_t) {
151 | |     memset(
152 | |         ps as *mut libc::c_void,
153 | |         0 as libc::c_int,
154 | |         ::core::mem::size_of::<mbstate_t>() as libc::c_ulong,
155 | |     );
156 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/version_etc.rs:317:29
    |
317 |     println!("{}", unsafe { std::ffi::CStr::from_ptr(report_bugs).to_string_lossy() });
    |                             ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a static
   --> src/quotearg.rs:158:1
    |
158 | / pub static mut quoting_style_args: [*const libc::c_char; 11] = [
159 | |     b"literal\0" as *const u8 as *const libc::c_char,
160 | |     b"shell\0" as *const u8 as *const libc::c_char,
161 | |     b"shell-always\0" as *const u8 as *const libc::c_char,
...   |
169 | |     0 as *const libc::c_char,
170 | | ];
    | |__^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:318:20
    |
318 |     println!("{}", unsafe { std::ffi::CStr::from_ptr(home_page).to_string_lossy() });
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/version_etc.rs:318:29
    |
318 |     println!("{}", unsafe { std::ffi::CStr::from_ptr(home_page).to_string_lossy() });
    |                             ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
   --> src/version_etc.rs:319:20
    |
319 |     println!("{}", unsafe { std::ffi::CStr::from_ptr(help_page).to_string_lossy() });
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/version_etc.rs:319:29
    |
319 |     println!("{}", unsafe { std::ffi::CStr::from_ptr(help_page).to_string_lossy() });
    |                             ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
 --> src/version_etc_fsf.rs:3:60
  |
3 | pub static mut version_etc_copyright: [libc::c_char; 47] = unsafe {
  |                                                            ^^^^^^^^
  |
  = help: consider adding a safety comment on the preceding line
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: default numeric fallback might occur
  --> src/xalloc_die.rs:18:12
   |
18 |         if 0 != 0 {
   |            ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xalloc_die.rs:18:17
   |
18 |         if 0 != 0 {
   |                 ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xalloc_die.rs:25:32
   |
25 |             if exit_failure != 0 {
   |                                ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xalloc_die.rs:36:29
   |
36 |             if errstatus != 0 {
   |                             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xalloc_die.rs:47:29
   |
47 |             if errstatus != 0 {
   |                             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: unsafe block missing a safety comment
  --> src/xalloc_die.rs:17:5
   |
17 |     unsafe {
   |     ^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a static
   --> src/quotearg.rs:172:1
    |
172 | / pub static mut quoting_style_vals: [quoting_style; 10] = [
173 | |     literal_quoting_style,
174 | |     shell_quoting_style,
175 | |     shell_always_quoting_style,
...   |
182 | |     clocale_quoting_style,
183 | | ];
    | |__^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
  --> src/xalloc_die.rs:18:9
   |
18 | /         if 0 != 0 {
19 | |             error(
20 | |                 exit_failure,
21 | |                 0,
...  |
49 | |             }
50 | |         }
   | |_________^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a static
   --> src/quotearg.rs:184:1
    |
184 | / static mut default_quoting_options: quoting_options = quoting_options {
185 | |     style: literal_quoting_style,
186 | |     flags: 0,
187 | |     quote_these_too: [0; 8],
188 | |     left_quote: 0 as *const libc::c_char,
189 | |     right_quote: 0 as *const libc::c_char,
190 | | };
    | |__^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: equal expressions as operands to `!=`
  --> src/xalloc_die.rs:18:12
   |
18 |         if 0 != 0 {
   |            ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: missing documentation for a function
   --> src/quotearg.rs:192:1
    |
192 | / pub fn clone_quoting_options(o: Option<&quoting_options>) -> Box<quoting_options> {
193 | |     let options = match o {
194 | |         Some(opt) => opt,
195 | |         None => unsafe { &default_quoting_options },
196 | |     };
197 | |     Box::new(options.clone())
198 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/xalloc_die.rs:22:17
   |
22 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing `#[inline]` for a function
   --> src/quotearg.rs:192:1
    |
192 | / pub fn clone_quoting_options(o: Option<&quoting_options>) -> Box<quoting_options> {
193 | |     let options = match o {
194 | |         Some(opt) => opt,
195 | |         None => unsafe { &default_quoting_options },
196 | |     };
197 | |     Box::new(options.clone())
198 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/xalloc_die.rs:23:25
   |
23 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"memory exhausted\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of the `unreachable!` macro
  --> src/xalloc_die.rs:26:17
   |
26 |                 unreachable!();
   |                 ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: `as` casting between raw pointers without changing its mutability
  --> src/xalloc_die.rs:33:17
   |
33 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a function
   --> src/quotearg.rs:201:1
    |
201 | / pub fn get_quoting_style(o: Option<&quoting_options>) -> quoting_style {
202 | |     let options = match o {
203 | |         Some(opts) => opts,
204 | |         None => unsafe { &default_quoting_options },
205 | |     };
206 | |     options.style
207 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/xalloc_die.rs:34:25
   |
34 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"memory exhausted\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing `#[inline]` for a function
   --> src/quotearg.rs:201:1
    |
201 | / pub fn get_quoting_style(o: Option<&quoting_options>) -> quoting_style {
202 | |     let options = match o {
203 | |         Some(opts) => opts,
204 | |         None => unsafe { &default_quoting_options },
205 | |     };
206 | |     options.style
207 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: usage of the `unreachable!` macro
  --> src/xalloc_die.rs:37:17
   |
37 |                 unreachable!();
   |                 ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: `errstatus` shadows a previous, unrelated binding
  --> src/xalloc_die.rs:40:17
   |
40 |             let errstatus = exit_failure;
   |                 ^^^^^^^^^
   |
note: previous binding is here
  --> src/xalloc_die.rs:29:17
   |
29 |             let errstatus = exit_failure;
   |                 ^^^^^^^^^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: `as` casting between raw pointers without changing its mutability
  --> src/xalloc_die.rs:44:17
   |
44 |                 b"%s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a function
   --> src/quotearg.rs:210:1
    |
210 | / pub fn set_quoting_style(
211 | |     o: Option<&mut quoting_options>,
212 | |     s: quoting_style,
213 | | ) {
...   |
221 | |     }
222 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
  --> src/xalloc_die.rs:45:25
   |
45 |                 gettext(b"memory exhausted\0" as *const u8 as *const libc::c_char),
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"memory exhausted\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing `#[inline]` for a function
   --> src/quotearg.rs:210:1
    |
210 | / pub fn set_quoting_style(
211 | |     o: Option<&mut quoting_options>,
212 | |     s: quoting_style,
213 | | ) {
...   |
221 | |     }
222 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: usage of the `unreachable!` macro
  --> src/xalloc_die.rs:48:17
   |
48 |                 unreachable!();
   |                 ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: unsafe function's docs miss `# Safety` section
   --> src/xdectoimax.rs:28:1
    |
28  | / pub unsafe extern "C" fn xnumtoimax(
29  | |     mut n_str: *const libc::c_char,
30  | |     mut base: libc::c_int,
31  | |     mut min: intmax_t,
...   |
127 | |     return tnum;
128 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xdectoimax.rs:127:5
    |
127 |     return tnum;
    |     ^^^^^^^^^^^^ help: remove `return`: `tnum`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a function
   --> src/quotearg.rs:225:1
    |
225 | / pub unsafe extern "C" fn set_char_quoting(
226 | |     mut o: *mut quoting_options,
227 | |     mut c: libc::c_char,
228 | |     mut i: libc::c_int,
...   |
253 | |     return r;
254 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:43:24
   |
43 |             if tnum > (2147483647 as libc::c_int / 2 as libc::c_int) as libc::c_long {
   |                        ^^^^^^^^^^ help: consider adding suffix: `2_147_483_647_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing `#[inline]` for a function
   --> src/quotearg.rs:225:1
    |
225 | / pub unsafe extern "C" fn set_char_quoting(
226 | |     mut o: *mut quoting_options,
227 | |     mut c: libc::c_char,
228 | |     mut i: libc::c_int,
...   |
253 | |     return r;
254 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:43:52
   |
43 |             if tnum > (2147483647 as libc::c_int / 2 as libc::c_int) as libc::c_long {
   |                                                    ^ help: consider adding suffix: `2_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:44:39
   |
44 |                 *__errno_location() = 75 as libc::c_int;
   |                                       ^^ help: consider adding suffix: `75_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:46:23
   |
46 |                 < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |                       ^^^^^^^^^^ help: consider adding suffix: `2_147_483_647_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:46:52
   |
46 |                 < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |                                                    ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:46:72
   |
46 |                 < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |                                                                        ^ help: consider adding suffix: `2_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:49:39
   |
49 |                 *__errno_location() = 75 as libc::c_int;
   |                                       ^^ help: consider adding suffix: `75_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:51:39
   |
51 |                 *__errno_location() = 34 as libc::c_int;
   |                                       ^^ help: consider adding suffix: `34_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:55:31
   |
55 |         *__errno_location() = 75 as libc::c_int;
   |                               ^^ help: consider adding suffix: `75_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:59:31
   |
59 |         *__errno_location() = 0 as libc::c_int;
   |                               ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:62:12
   |
62 |         if 0 != 0 {
   |            ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:62:17
   |
62 |         if 0 != 0 {
   |                 ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:74:32
   |
74 |             if (if err_exit != 0 { err_exit } else { 1 as libc::c_int })
   |                                ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:74:54
   |
74 |             if (if err_exit != 0 { err_exit } else { 1 as libc::c_int })
   |                                                      ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:75:20
   |
75 |                 != 0 as libc::c_int
   |                    ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xdectoimax.rs:97:35
   |
97 |                 if __errstatus != 0 as libc::c_int {
   |                                   ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xdectoimax.rs:119:35
    |
119 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `0 as *mut _` detected
  --> src/xdectoimax.rs:39:31
   |
39 |     s_err = xstrtoimax(n_str, 0 as *mut *mut libc::c_char, base, &mut tnum, suffixes);
   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: casting `i32` to `u32` may lose the sign of the value
  --> src/xdectoimax.rs:40:33
   |
40 |     if s_err as libc::c_uint == LONGINT_OK as libc::c_int as libc::c_uint {
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
  --> src/xdectoimax.rs:40:33
   |
40 |     if s_err as libc::c_uint == LONGINT_OK as libc::c_int as libc::c_uint {
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: this `if` has identical blocks
  --> src/xdectoimax.rs:43:86
   |
43 |               if tnum > (2147483647 as libc::c_int / 2 as libc::c_int) as libc::c_long {
   |  ______________________________________________________________________________________^
44 | |                 *__errno_location() = 75 as libc::c_int;
45 | |             } else if tnum
   | |_____________^
   |
   = note: `-W clippy::if-same-then-else` implied by `-W clippy::all`
note: same as this
  --> src/xdectoimax.rs:48:13
   |
48 | /             {
49 | |                 *__errno_location() = 75 as libc::c_int;
50 | |             } else {
   | |_____________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_same_then_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xdectoimax.rs:43:23
   |
43 |             if tnum > (2147483647 as libc::c_int / 2 as libc::c_int) as libc::c_long {
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2147483647 as libc::c_int / 2 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
   --> src/quotearg.rs:256:1
    |
256 | / pub fn set_quoting_flags(
257 | |     mut o: Option<&mut quoting_options>,
258 | |     mut i: libc::c_int,
259 | | ) -> libc::c_int {
...   |
264 | |     return r;
265 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
  --> src/xdectoimax.rs:43:23
   |
43 |             if tnum > (2147483647 as libc::c_int / 2 as libc::c_int) as libc::c_long {
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing `#[inline]` for a function
   --> src/quotearg.rs:256:1
    |
256 | / pub fn set_quoting_flags(
257 | |     mut o: Option<&mut quoting_options>,
258 | |     mut i: libc::c_int,
259 | | ) -> libc::c_int {
...   |
264 | |     return r;
265 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: integer arithmetic detected
  --> src/xdectoimax.rs:43:23
   |
43 |             if tnum > (2147483647 as libc::c_int / 2 as libc::c_int) as libc::c_long {
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
  --> src/xdectoimax.rs:43:23
   |
43 |             if tnum > (2147483647 as libc::c_int / 2 as libc::c_int) as libc::c_long {
   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: division of integers may cause loss of precision. consider using floats
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xdectoimax.rs:46:19
   |
46 |                   < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |  ___________________^
47 | |                     as libc::c_long
   | |___________________________________^ help: try: `i64::from((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
  --> src/xdectoimax.rs:46:19
   |
46 |                 < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/xdectoimax.rs:46:19
   |
46 |                 < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
  --> src/xdectoimax.rs:46:19
   |
46 |                 < ((-(2147483647 as libc::c_int) - 1 as libc::c_int) / 2 as libc::c_int)
   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: division of integers may cause loss of precision. consider using floats
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a function
   --> src/quotearg.rs:268:1
    |
268 | / pub fn set_custom_quoting(
269 | |     o: *mut quoting_options,
270 | |     left_quote: *const libc::c_char,
271 | |     right_quote: *const libc::c_char,
...   |
286 | |     options.right_quote = right_quote;
287 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u32` may lose the sign of the value
  --> src/xdectoimax.rs:54:40
   |
54 |     } else if s_err as libc::c_uint == LONGINT_OVERFLOW as libc::c_int as libc::c_uint {
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `#[inline]` for a function
   --> src/quotearg.rs:268:1
    |
268 | / pub fn set_custom_quoting(
269 | |     o: *mut quoting_options,
270 | |     left_quote: *const libc::c_char,
271 | |     right_quote: *const libc::c_char,
...   |
286 | |     options.right_quote = right_quote;
287 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `u32` to `i32` may wrap around the value
  --> src/xdectoimax.rs:54:40
   |
54 |     } else if s_err as libc::c_uint == LONGINT_OVERFLOW as libc::c_int as libc::c_uint {
   |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `i32` to `u32` may lose the sign of the value
  --> src/xdectoimax.rs:57:12
   |
57 |         == LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW as libc::c_int as libc::c_uint
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
  --> src/xdectoimax.rs:57:12
   |
57 |         == LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW as libc::c_int as libc::c_uint
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `i32` to `u32` may lose the sign of the value
  --> src/xdectoimax.rs:61:33
   |
61 |     if s_err as libc::c_uint != LONGINT_OK as libc::c_int as libc::c_uint {
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
  --> src/xdectoimax.rs:61:33
   |
61 |     if s_err as libc::c_uint != LONGINT_OK as libc::c_int as libc::c_uint {
   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: unnecessary `!=` operation
   --> src/xdectoimax.rs:62:9
    |
62  | /         if 0 != 0 {
63  | |             error(
64  | |                 if err_exit != 0 { err_exit } else { 1 as libc::c_int },
65  | |                 if *__errno_location() == 22 as libc::c_int {
...   |
123 | |             });
124 | |         };
    | |_________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
  --> src/xdectoimax.rs:62:12
   |
62 |         if 0 != 0 {
   |            ^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: missing documentation for a function
   --> src/quotearg.rs:289:1
    |
289 | / fn quoting_options_from_style(style: quoting_style) -> quoting_options {
290 | |     let mut o = quoting_options {
291 | |         style: literal_quoting_style,
292 | |         flags: 0,
...   |
303 | |     o
304 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
  --> src/xdectoimax.rs:64:17
   |
64 |                 if err_exit != 0 { err_exit } else { 1 as libc::c_int },
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: `as` casting between raw pointers without changing its mutability
  --> src/xdectoimax.rs:70:17
   |
70 |                 b"%s: %s\0" as *const u8 as *const libc::c_char,
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s: %s\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
  --> src/xdectoimax.rs:74:13
   |
74 | /             if (if err_exit != 0 { err_exit } else { 1 as libc::c_int })
75 | |                 != 0 as libc::c_int
76 | |             {
77 | |                 unreachable!();
78 | |             } else {};
   | |_____________________^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: unnecessary `!=` operation
  --> src/xdectoimax.rs:74:16
   |
74 |             if (if err_exit != 0 { err_exit } else { 1 as libc::c_int })
   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
  --> src/xdectoimax.rs:77:17
   |
77 |                 unreachable!();
   |                 ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: unnecessary `!=` operation
  --> src/xdectoimax.rs:81:48
   |
81 |                   let __errstatus: libc::c_int = if err_exit != 0 {
   |  ________________________________________________^
82 | |                     err_exit
83 | |                 } else {
84 | |                     1 as libc::c_int
85 | |                 };
   | |_________________^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: `as` casting between raw pointers without changing its mutability
  --> src/xdectoimax.rs:93:21
   |
93 |                     b"%s: %s\0" as *const u8 as *const libc::c_char,
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s: %s\0" as *const u8).cast::<i8>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
  --> src/xdectoimax.rs:97:17
   |
97 | /                 if __errstatus != 0 as libc::c_int {
98 | |                     unreachable!();
99 | |                 } else {};
   | |_________________________^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a function
   --> src/quotearg.rs:306:1
    |
306 | / unsafe extern "C" fn gettext_quote(
307 | |     mut msgid: *const libc::c_char,
308 | |     mut s: quoting_style,
309 | | ) -> *const libc::c_char {
...   |
338 | |     };
339 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: usage of the `unreachable!` macro
  --> src/xdectoimax.rs:98:21
   |
98 |                     unreachable!();
   |                     ^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: unnecessary `!=` operation
   --> src/xdectoimax.rs:103:48
    |
103 |                   let __errstatus: libc::c_int = if err_exit != 0 {
    |  ________________________________________________^
104 | |                     err_exit
105 | |                 } else {
106 | |                     1 as libc::c_int
107 | |                 };
    | |_________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: `as` casting between raw pointers without changing its mutability
   --> src/xdectoimax.rs:115:21
    |
115 |                     b"%s: %s\0" as *const u8 as *const libc::c_char,
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s: %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/xdectoimax.rs:119:17
    |
119 | /                 if __errstatus != 0 as libc::c_int {
120 | |                     unreachable!();
121 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/xdectoimax.rs:120:21
    |
120 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: usage of the `unreachable!` macro
   --> src/xdectoimax.rs:125:9
    |
125 |         unreachable!();
    |         ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: unsafe function's docs miss `# Safety` section
   --> src/xdectoimax.rs:130:1
    |
130 | / pub unsafe extern "C" fn xdectoimax(
131 | |     mut n_str: *const libc::c_char,
132 | |     mut min: intmax_t,
133 | |     mut max: intmax_t,
...   |
138 | |     return xnumtoimax(n_str, 10 as libc::c_int, min, max, suffixes, err, err_exit);
139 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xdectoimax.rs:138:5
    |
138 |     return xnumtoimax(n_str, 10 as libc::c_int, min, max, suffixes, err, err_exit);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `xnumtoimax(n_str, 10 as libc::c_int, min, max, suffixes, err, err_exit)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: used import from `std` instead of `core`
  --> src/xmalloc.rs:11:5
   |
11 | use std::option::Option;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `alloc`
  --> src/xmalloc.rs:13:5
   |
13 | use std::string::String;
   |     ^^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `alloc`
  --> src/xmalloc.rs:15:5
   |
15 | use std::slice;
   |     ^^^^^^^^^^
   |
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `core`
  --> src/xmalloc.rs:17:24
   |
17 | use std::alloc::{self, Layout};
   |                        ^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
  --> src/xmalloc.rs:19:5
   |
19 | use std::mem;
   |     ^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `alloc`
  --> src/xmalloc.rs:21:5
   |
21 | use std::vec::Vec;
   |     ^^^^^^^^^^^^^
   |
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: unneeded `return` statement
  --> src/xmalloc.rs:56:9
   |
56 |         return p;
   |         ^^^^^^^^^ help: remove `return`: `p`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
  --> src/xmalloc.rs:58:9
   |
58 |         return _gl_alloc_nomem()
   |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `_gl_alloc_nomem()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/xmalloc.rs:54:8
   |
54 |     if s as libc::c_ulong <= 18446744073709551615 as libc::c_ulong {
   |        ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a function
    --> src/quotearg.rs:340:1
     |
340  | / unsafe extern "C" fn quotearg_buffer_restyled(
341  | |     mut buffer: *mut libc::c_char,
342  | |     mut buffersize: size_t,
343  | |     mut arg: *const libc::c_char,
...    |
1184 | |     };
1185 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/xmalloc.rs:55:24
   |
55 |         p = realloc(p, (s | (s == 0) as libc::c_int as libc::c_long) as libc::c_ulong);
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xmalloc.rs:55:29
   |
55 |         p = realloc(p, (s | (s == 0) as libc::c_int as libc::c_long) as libc::c_ulong);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from((s == 0) as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
  --> src/xmalloc.rs:55:29
   |
55 |         p = realloc(p, (s | (s == 0) as libc::c_int as libc::c_long) as libc::c_ulong);
   |                             ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(s == 0)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unneeded `return` statement
  --> src/xmalloc.rs:75:5
   |
75 |     return calloc(n as libc::c_ulong, s as libc::c_ulong);
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `calloc(n as libc::c_ulong, s as libc::c_ulong)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
  --> src/xmalloc.rs:64:17
   |
64 |         if s != 0 as libc::c_int as libc::c_long {
   |                 ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xmalloc.rs:67:13
   |
67 |         n = 0 as libc::c_int as idx_t;
   |             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xmalloc.rs:70:17
   |
70 |         if n != 0 as libc::c_int as libc::c_long {
   |                 ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xmalloc.rs:73:13
   |
73 |         s = 0 as libc::c_int as idx_t;
   |             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/xmalloc.rs:63:50
   |
63 |     if (18446744073709551615 as libc::c_ulong) < n as libc::c_ulong {
   |                                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xmalloc.rs:64:17
   |
64 |         if s != 0 as libc::c_int as libc::c_long {
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xmalloc.rs:67:13
   |
67 |         n = 0 as libc::c_int as idx_t;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/xmalloc.rs:69:50
   |
69 |     if (18446744073709551615 as libc::c_ulong) < s as libc::c_ulong {
   |                                                  ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xmalloc.rs:70:17
   |
70 |         if n != 0 as libc::c_int as libc::c_long {
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xmalloc.rs:73:13
   |
73 |         s = 0 as libc::c_int as idx_t;
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/xmalloc.rs:75:19
   |
75 |     return calloc(n as libc::c_ulong, s as libc::c_ulong);
   |                   ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i64` to `u64` may lose the sign of the value
  --> src/xmalloc.rs:75:39
   |
75 |     return calloc(n as libc::c_ulong, s as libc::c_ulong);
   |                                       ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unneeded `return` statement
  --> src/xmalloc.rs:87:9
   |
87 |         return p;
   |         ^^^^^^^^^ help: remove `return`: `p`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unneeded `return` statement
  --> src/xmalloc.rs:89:9
   |
89 |         return std::ptr::null_mut(); // Handle out of memory or invalid allocation
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `std::ptr::null_mut()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
  --> src/xmalloc.rs:79:8
   |
79 |     if n <= usize::MAX && s <= usize::MAX {
   |        ^^^^^^^^^^^^^^^
   |
   = help: because `usize::MAX` is the maximum value for this type, this comparison is always true
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons

warning: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
  --> src/xmalloc.rs:79:27
   |
79 |     if n <= usize::MAX && s <= usize::MAX {
   |                           ^^^^^^^^^^^^^^^
   |
   = help: because `usize::MAX` is the maximum value for this type, this comparison is always true
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons

warning: unsafe block missing a safety comment
  --> src/xmalloc.rs:86:17
   |
86 |         let p = unsafe { reallocarray(std::ptr::null_mut(), nx.try_into().unwrap(), sx.try_into().unwrap()) };
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: consider adding a safety comment on the preceding line
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
  --> src/xmalloc.rs:86:39
   |
86 |         let p = unsafe { reallocarray(std::ptr::null_mut(), nx.try_into().unwrap(), sx.try_into().unwrap()) };
   |                                       ^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used `unwrap()` on `a Result` value
  --> src/xmalloc.rs:86:61
   |
86 |         let p = unsafe { reallocarray(std::ptr::null_mut(), nx.try_into().unwrap(), sx.try_into().unwrap()) };
   |                                                             ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on `a Result` value
  --> src/xmalloc.rs:86:85
   |
86 |         let p = unsafe { reallocarray(std::ptr::null_mut(), nx.try_into().unwrap(), sx.try_into().unwrap()) };
   |                                                                                     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used import from `std` instead of `core`
  --> src/xmalloc.rs:89:16
   |
89 |         return std::ptr::null_mut(); // Handle out of memory or invalid allocation
   |                ^^^^^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unneeded `return` statement
  --> src/xmalloc.rs:97:5
   |
97 |     return 0 as *mut libc::c_void;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `0 as *mut libc::c_void`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
  --> src/xmalloc.rs:96:27
   |
96 |     *__errno_location() = 12 as libc::c_int;
   |                           ^^ help: consider adding suffix: `12_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `0 as *mut _` detected
  --> src/xmalloc.rs:97:12
   |
97 |     return 0 as *mut libc::c_void;
   |            ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing `return` statement
   --> src/xmalloc.rs:105:13
    |
105 |             std::ptr::null_mut()
    |             ^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return std::ptr::null_mut()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/xmalloc.rs:107:13
    |
107 |             ptr as *mut libc::c_void
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return ptr as *mut libc::c_void`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/xmalloc.rs:110:9
    |
110 |         std::ptr::null_mut()
    |         ^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return std::ptr::null_mut()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this comparison involving the minimum or maximum element for this type contains a case that is always true or always false
   --> src/xmalloc.rs:101:8
    |
101 |     if s <= usize::MAX {
    |        ^^^^^^^^^^^^^^^
    |
    = help: because `usize::MAX` is the maximum value for this type, this comparison is always true
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons

warning: used `unwrap()` on `a Result` value
   --> src/xmalloc.rs:102:22
    |
102 |         let layout = std::alloc::Layout::from_size_align(s, 1).unwrap();
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used import from `std` instead of `core`
   --> src/xmalloc.rs:102:22
    |
102 |         let layout = std::alloc::Layout::from_size_align(s, 1).unwrap();
    |                      ^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
   --> src/xmalloc.rs:103:19
    |
103 |         let ptr = unsafe { std::alloc::alloc(layout) };
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `alloc`
   --> src/xmalloc.rs:103:28
    |
103 |         let ptr = unsafe { std::alloc::alloc(layout) };
    |                            ^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `alloc`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `core`
   --> src/xmalloc.rs:105:13
    |
105 |             std::ptr::null_mut()
    |             ^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/xmalloc.rs:107:13
    |
107 |             ptr as *mut libc::c_void
    |             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `ptr.cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: used import from `std` instead of `core`
   --> src/xmalloc.rs:110:9
    |
110 |         std::ptr::null_mut()
    |         ^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing `return` statement
   --> src/xmalloc.rs:118:5
    |
118 |     p
    |     ^ help: add `return` as shown: `return p`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe block missing a safety comment
   --> src/xmalloc.rs:116:9
    |
116 |         unsafe { xalloc_die() };
    |         ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:122:1
    |
122 | / pub unsafe extern "C" fn xmalloc(mut s: size_t) -> *mut libc::c_void {
123 | |     return check_nonnull(malloc(s));
124 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:123:5
    |
123 |     return check_nonnull(malloc(s));
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `check_nonnull(malloc(s))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:126:1
    |
126 | / pub unsafe extern "C" fn ximalloc(mut s: idx_t) -> *mut libc::c_void {
127 | |     let allocated_memory = imalloc(s.try_into().unwrap());
128 | | return check_nonnull(allocated_memory);
129 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: docs for function which may panic missing `# Panics` section
   --> src/xmalloc.rs:126:1
    |
126 | / pub unsafe extern "C" fn ximalloc(mut s: idx_t) -> *mut libc::c_void {
127 | |     let allocated_memory = imalloc(s.try_into().unwrap());
128 | | return check_nonnull(allocated_memory);
129 | | }
    | |_^
    |
note: first possible panic found here
   --> src/xmalloc.rs:127:36
    |
127 |     let allocated_memory = imalloc(s.try_into().unwrap());
    |                                    ^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:128:1
    |
128 | return check_nonnull(allocated_memory);
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `check_nonnull(allocated_memory)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: used `unwrap()` on `a Result` value
   --> src/xmalloc.rs:127:36
    |
127 |     let allocated_memory = imalloc(s.try_into().unwrap());
    |                                    ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:131:1
    |
131 | / pub unsafe extern "C" fn xcharalloc(mut n: size_t) -> *mut libc::c_char {
132 | |     return (if ::core::mem::size_of::<libc::c_char>() as libc::c_ulong
133 | |         == 1 as libc::c_int as libc::c_ulong
134 | |     {
...   |
138 | |     }) as *mut libc::c_char;
139 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:132:5
    |
132 | /     return (if ::core::mem::size_of::<libc::c_char>() as libc::c_ulong
133 | |         == 1 as libc::c_int as libc::c_ulong
134 | |     {
135 | |         xmalloc(n)
136 | |     } else {
137 | |         xnmalloc(n, ::core::mem::size_of::<libc::c_char>() as libc::c_ulong)
138 | |     }) as *mut libc::c_char;
    | |____________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return
help: remove `return`
    |
132 ~     (if ::core::mem::size_of::<libc::c_char>() as libc::c_ulong
133 +         == 1 as libc::c_int as libc::c_ulong
134 +     {
135 +         xmalloc(n)
136 +     } else {
137 +         xnmalloc(n, ::core::mem::size_of::<libc::c_char>() as libc::c_ulong)
138 +     }) as *mut libc::c_char
    |

warning: default numeric fallback might occur
   --> src/xmalloc.rs:133:12
    |
133 |         == 1 as libc::c_int as libc::c_ulong
    |            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `as` casting between raw pointers without changing its mutability
   --> src/xmalloc.rs:132:12
    |
132 |       return (if ::core::mem::size_of::<libc::c_char>() as libc::c_ulong
    |  ____________^
133 | |         == 1 as libc::c_int as libc::c_ulong
134 | |     {
135 | |         xmalloc(n)
136 | |     } else {
137 | |         xnmalloc(n, ::core::mem::size_of::<libc::c_char>() as libc::c_ulong)
138 | |     }) as *mut libc::c_char;
    | |___________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr
help: try `pointer::cast`, a safer alternative
    |
132 ~     return (if ::core::mem::size_of::<libc::c_char>() as libc::c_ulong
133 +         == 1 as libc::c_int as libc::c_ulong
134 +     {
135 +         xmalloc(n)
136 +     } else {
137 +         xnmalloc(n, ::core::mem::size_of::<libc::c_char>() as libc::c_ulong)
138 ~     }).cast::<i8>();
    |

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:133:12
    |
133 |         == 1 as libc::c_int as libc::c_ulong
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `return` statement
   --> src/xmalloc.rs:157:5
    |
157 |     ptr as *mut libc::c_void
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return ptr as *mut libc::c_void`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used import from `std` instead of `core`
   --> src/xmalloc.rs:143:16
    |
143 |         return std::ptr::null_mut();
    |                ^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
   --> src/xmalloc.rs:149:21
    |
149 |         let slice = unsafe { std::slice::from_raw_parts_mut(p as *mut u8, s) };
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/xmalloc.rs:149:30
    |
149 |         let slice = unsafe { std::slice::from_raw_parts_mut(p as *mut u8, s) };
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/xmalloc.rs:149:61
    |
149 |         let slice = unsafe { std::slice::from_raw_parts_mut(p as *mut u8, s) };
    |                                                             ^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `p.cast::<u8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of `mem::forget` on `Drop` type
   --> src/xmalloc.rs:156:5
    |
156 |     std::mem::forget(vec); // Prevent Vec from deallocating the memory
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::mem-forget` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mem_forget

warning: used import from `std` instead of `core`
   --> src/xmalloc.rs:156:5
    |
156 |     std::mem::forget(vec); // Prevent Vec from deallocating the memory
    |     ^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: `as` casting between raw pointers without changing its mutability
   --> src/xmalloc.rs:157:5
    |
157 |     ptr as *mut libc::c_void
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `ptr.cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing `return` statement
   --> src/xmalloc.rs:166:5
    |
166 |     Some(new_vec)
    |     ^^^^^^^^^^^^^ help: add `return` as shown: `return Some(new_vec)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:170:1
    |
170 | / pub unsafe extern "C" fn xreallocarray(
171 | |     mut p: *mut libc::c_void,
172 | |     mut n: size_t,
173 | |     mut s: size_t,
...   |
179 | |     return r;
180 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:179:5
    |
179 |     return r;
    |     ^^^^^^^^^ help: remove `return`: `r`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing `return` statement
   --> src/xmalloc.rs:187:5
    |
187 |     Some(vec)
    |     ^^^^^^^^^ help: add `return` as shown: `return Some(vec)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:191:1
    |
191 | / pub unsafe extern "C" fn xnmalloc(mut n: size_t, mut s: size_t) -> *mut libc::c_void {
192 | |     return xreallocarray(0 as *mut libc::c_void, n, s);
193 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:192:5
    |
192 |     return xreallocarray(0 as *mut libc::c_void, n, s);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `xreallocarray(0 as *mut libc::c_void, n, s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: `0 as *mut _` detected
   --> src/xmalloc.rs:192:26
    |
192 |     return xreallocarray(0 as *mut libc::c_void, n, s);
    |                          ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: missing `return` statement
   --> src/xmalloc.rs:197:5
    |
197 |     Vec::with_capacity(size as usize)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Vec::with_capacity(size as usize)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used `expect()` on `an Option` value
   --> src/xmalloc.rs:196:16
    |
196 |     let size = n.checked_mul(s).expect("Overflow in allocation size");
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this value is an `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/xmalloc.rs:197:24
    |
197 |     Vec::with_capacity(size as usize)
    |                        ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
   --> src/xmalloc.rs:197:24
    |
197 |     Vec::with_capacity(size as usize)
    |                        ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `return` statement
   --> src/xmalloc.rs:209:5
    |
209 |     new_vec
    |     ^^^^^^^ help: add `return` as shown: `return new_vec`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: arithmetic detected
   --> src/xmalloc.rs:205:20
    |
205 |     let new_size = *ps + 1; // Assuming we want to allocate one more byte
    |                    ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:205:20
    |
205 |     let new_size = *ps + 1; // Assuming we want to allocate one more byte
    |                    ^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:213:1
    |
213 | / pub unsafe extern "C" fn x2nrealloc(
214 | |     mut p: *mut libc::c_void,
215 | |     mut pn: *mut size_t,
216 | |     mut s: size_t,
...   |
238 | |     return p;
239 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: unneeded `return` statement
   --> src/xmalloc.rs:238:5
    |
238 |     return p;
    |     ^^^^^^^^^ help: remove `return`: `p`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:221:17
    |
221 |             n = (DEFAULT_MXFAST as libc::c_int as libc::c_ulong).wrapping_div(s);
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
   --> src/xmalloc.rs:221:18
    |
221 |             n = (DEFAULT_MXFAST as libc::c_int as libc::c_ulong).wrapping_div(s);
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:223:31
    |
223 |                 .wrapping_add((n == 0) as libc::c_int as libc::c_ulong) as size_t
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:223:31
    |
223 |                 .wrapping_add((n == 0) as libc::c_int as libc::c_ulong) as size_t
    |                               ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(n == 0)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:229:17
    |
229 |                 (n >> 1 as libc::c_int).wrapping_add(1 as libc::c_int as libc::c_ulong),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:229:17
    |
229 |                 (n >> 1 as libc::c_int).wrapping_add(1 as libc::c_int as libc::c_ulong),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:229:54
    |
229 |                 (n >> 1 as libc::c_int).wrapping_add(1 as libc::c_int as libc::c_ulong),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: borrow as raw pointer
   --> src/xmalloc.rs:231:10
    |
231 |         *(&mut n as *mut size_t) = fresh0;
    |          ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: unsafe function's docs miss `# Safety` section
   --> src/xmalloc.rs:241:1
    |
241 | / pub unsafe extern "C" fn xpalloc(
242 | |     mut pa: *mut libc::c_void,
243 | |     mut pn: *mut idx_t,
244 | |     mut n_incr_min: idx_t,
...   |
945 | |     return pa;
946 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: the function has a cognitive complexity of (131/25)
   --> src/xmalloc.rs:241:26
    |
241 | pub unsafe extern "C" fn xpalloc(
    |                          ^^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: this function has too many lines (698/100)
   --> src/xmalloc.rs:241:1
    |
241 | / pub unsafe extern "C" fn xpalloc(
242 | |     mut pa: *mut libc::c_void,
243 | |     mut pn: *mut idx_t,
244 | |     mut n_incr_min: idx_t,
...   |
945 | |     return pa;
946 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: unneeded `return` statement
   --> src/xmalloc.rs:945:5
    |
945 |     return pa;
    |     ^^^^^^^^^^ help: remove `return`: `pa`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
   --> src/xmalloc.rs:255:8
    |
255 |     if 0 as libc::c_int as libc::c_long <= n_max && n_max < n {
    |        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:600:15
    |
600 |         *pn = 0 as libc::c_int as idx_t;
    |               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:606:39
    |
606 |             fresh13 as libc::c_int != 0
    |                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:607:20
    |
607 |                 || 0 as libc::c_int as libc::c_long <= n_max && n_max < n
    |                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:608:25
    |
608 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:608:56
    |
608 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                                                        ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:609:29
    |
609 |                     && ((if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:609:49
    |
609 |                     && ((if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:610:25
    |
610 |                         0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:613:26
    |
613 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:614:27
    |
614 |                         < 0 as libc::c_int as libc::c_long
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:615:29
    |
615 |                     && ((if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:615:49
    |
615 |                     && ((if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:616:25
    |
616 |                         0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:619:26
    |
619 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:620:27
    |
620 |                         < 0 as libc::c_int as libc::c_long
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:621:32
    |
621 |                     && (if s < 0 as libc::c_int as libc::c_long {
    |                                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:622:32
    |
622 |                         if n < 0 as libc::c_int as libc::c_long {
    |                                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:623:37
    |
623 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:623:57
    |
623 | ...                   if ((if 1 as libc::c_int != 0 {
    |                                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:624:33
    |
624 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:626:37
    |
626 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:626:57
    |
626 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:627:37
    |
627 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:629:39
    |
629 | ...                   -(1 as libc::c_int) as idx_t
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:631:34
    |
631 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:632:35
    |
632 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:634:40
    |
634 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:636:51
    |
636 | ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |                                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:636:71
    |
636 | ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |                                                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:637:37
    |
637 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:640:38
    |
640 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:641:39
    |
641 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:643:46
    |
643 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:643:66
    |
643 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:644:41
    |
644 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:647:42
    |
647 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:651:43
    |
651 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:652:43
    |
652 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:653:43
    |
653 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:655:41
    |
655 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:655:61
    |
655 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:656:41
    |
656 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:659:42
    |
659 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:660:38
    |
660 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:663:53
    |
663 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:663:73
    |
663 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:664:45
    |
664 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:667:46
    |
667 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:668:47
    |
668 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:670:52
    |
670 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:670:72
    |
670 | ...                   ((((if 1 as libc::c_int != 0 {
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:671:49
    |
671 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:674:50
    |
674 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:678:51
    |
678 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:679:51
    |
679 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:680:51
    |
680 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:682:49
    |
682 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:682:69
    |
682 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:683:49
    |
683 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:686:50
    |
686 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:689:39
    |
689 | ...                   ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:690:39
    |
690 | ...                   }) != 0
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:692:41
    |
692 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:692:61
    |
692 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:693:41
    |
693 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:696:44
    |
696 | ...                   }) + -(1 as libc::c_int) as idx_t
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:701:39
    |
701 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:702:41
    |
702 | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    |                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:706:45
    |
706 | ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |                                       ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:706:65
    |
706 | ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |                                                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:707:33
    |
707 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:709:37
    |
709 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:709:57
    |
709 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:710:37
    |
710 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:713:38
    |
713 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:714:34
    |
714 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:715:35
    |
715 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:717:42
    |
717 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:717:62
    |
717 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:718:37
    |
718 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:720:41
    |
720 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:720:61
    |
720 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:721:41
    |
721 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:724:42
    |
724 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:725:38
    |
725 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:729:39
    |
729 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:730:39
    |
730 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:731:39
    |
731 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:733:37
    |
733 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:733:57
    |
733 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:734:37
    |
734 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:736:41
    |
736 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:736:61
    |
736 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:737:41
    |
737 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:740:42
    |
740 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:741:38
    |
741 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:742:34
    |
742 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:744:39
    |
744 | ...                   (((if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:744:59
    |
744 | ...                   (((if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:745:37
    |
745 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:748:38
    |
748 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:749:49
    |
749 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:749:69
    |
749 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:750:41
    |
750 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:752:45
    |
752 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:752:65
    |
752 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:753:45
    |
753 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:756:46
    |
756 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:757:42
    |
757 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:758:43
    |
758 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:760:48
    |
760 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:760:68
    |
760 | ...                   ((((if 1 as libc::c_int != 0 {
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:761:45
    |
761 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:763:49
    |
763 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:763:69
    |
763 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:764:49
    |
764 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:767:50
    |
767 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:768:46
    |
768 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:772:47
    |
772 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:773:47
    |
773 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:774:47
    |
774 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:776:45
    |
776 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:776:65
    |
776 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:777:45
    |
777 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:779:49
    |
779 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:779:69
    |
779 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:780:49
    |
780 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:783:50
    |
783 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:784:46
    |
784 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:787:35
    |
787 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:788:43
    |
788 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:788:63
    |
788 | ...                   < (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:789:41
    |
789 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:792:42
    |
792 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:793:35
    |
793 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:793:47
    |
793 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:795:41
    |
795 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:795:61
    |
795 | ...                   if ((if 1 as libc::c_int != 0 {
    |                                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:796:37
    |
796 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:799:38
    |
799 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:800:39
    |
800 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:802:39
    |
802 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:803:47
    |
803 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:805:39
    |
805 | ...                   ((0 as libc::c_int as libc::c_long) < n
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:806:47
    |
806 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:807:47
    |
807 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:808:51
    |
808 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:811:34
    |
811 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:815:33
    |
815 |                         if s == 0 as libc::c_int as libc::c_long {
    |                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:816:29
    |
816 | ...                   0 as libc::c_int
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:818:36
    |
818 | ...                   if n < 0 as libc::c_int as libc::c_long {
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:819:49
    |
819 | ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |                                       ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:819:69
    |
819 | ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |                                                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:820:37
    |
820 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:822:41
    |
822 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:822:61
    |
822 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:823:41
    |
823 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:826:42
    |
826 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:827:38
    |
827 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:828:39
    |
828 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:830:46
    |
830 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:830:66
    |
830 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:831:41
    |
831 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:833:45
    |
833 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:833:65
    |
833 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:834:45
    |
834 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:837:46
    |
837 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:838:42
    |
838 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:842:43
    |
842 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:843:43
    |
843 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:844:43
    |
844 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:846:41
    |
846 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:846:61
    |
846 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:847:41
    |
847 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:849:45
    |
849 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:849:65
    |
849 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:850:45
    |
850 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:853:46
    |
853 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:854:42
    |
854 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:855:38
    |
855 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:857:43
    |
857 | ...                   (((if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:857:63
    |
857 | ...                   (((if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:858:41
    |
858 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:861:42
    |
861 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:862:53
    |
862 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:862:73
    |
862 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:863:45
    |
863 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:865:49
    |
865 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:865:69
    |
865 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:866:49
    |
866 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:869:50
    |
869 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:870:46
    |
870 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:871:47
    |
871 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:873:52
    |
873 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:873:72
    |
873 | ...                   ((((if 1 as libc::c_int != 0 {
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:874:49
    |
874 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:876:53
    |
876 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:876:73
    |
876 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:877:53
    |
877 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:880:54
    |
880 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:881:50
    |
881 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:885:51
    |
885 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:886:51
    |
886 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:887:51
    |
887 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:889:49
    |
889 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:889:69
    |
889 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:890:49
    |
890 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:892:53
    |
892 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:892:73
    |
892 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:893:53
    |
893 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:896:54
    |
896 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:897:50
    |
897 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:900:39
    |
900 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:901:47
    |
901 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:901:67
    |
901 | ...                   < (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:902:45
    |
902 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:905:46
    |
905 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:906:39
    |
906 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:906:51
    |
906 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:908:45
    |
908 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:908:65
    |
908 | ...                   if ((if 1 as libc::c_int != 0 {
    |                                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:909:41
    |
909 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:912:42
    |
912 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:913:43
    |
913 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:915:43
    |
915 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:916:51
    |
916 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:918:45
    |
918 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:919:47
    |
919 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:920:51
    |
920 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:923:38
    |
923 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:926:36
    |
926 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                          ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:929:27
    |
929 |                     }) != 0
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:933:21
    |
933 |                     1 as libc::c_int
    |                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xmalloc.rs:938:23
    |
938 |                 }) != 0
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: arithmetic detected
   --> src/xmalloc.rs:250:47
    |
250 |     let (fresh2, fresh3) = n0.overflowing_add(n0 >> 1 as libc::c_int);
    |                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:250:47
    |
250 |     let (fresh2, fresh3) = n0.overflowing_add(n0 >> 1 as libc::c_int);
    |                                               ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: borrow as raw pointer
   --> src/xmalloc.rs:251:6
    |
251 |     *(&mut n as *mut idx_t) = fresh2;
    |      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:255:8
    |
255 |     if 0 as libc::c_int as libc::c_long <= n_max && n_max < n {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u64` to `i64` may wrap around the value
   --> src/xmalloc.rs:259:38
    |
259 |       let mut adjusted_nbytes: idx_t = (if if (0 as libc::c_int as idx_t)
    |  ______________________________________^
260 | |         < -(1 as libc::c_int) as idx_t
261 | |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
262 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
...   |
593 | |         }) as libc::c_ulong
594 | |     }) as idx_t;
    | |_______________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:259:38
    |
259 |       let mut adjusted_nbytes: idx_t = (if if (0 as libc::c_int as idx_t)
    |  ______________________________________^
260 | |         < -(1 as libc::c_int) as idx_t
261 | |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
262 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
...   |
593 | |         }) as libc::c_ulong
594 | |     }) as idx_t;
    | |______^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:259:45
    |
259 |     let mut adjusted_nbytes: idx_t = (if if (0 as libc::c_int as idx_t)
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:260:11
    |
260 |         < -(1 as libc::c_int) as idx_t
    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:260:11
    |
260 |         < -(1 as libc::c_int) as idx_t
    |           ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:260:11
    |
260 |         < -(1 as libc::c_int) as idx_t
    |           ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:261:12
    |
261 |           && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |  ____________^
262 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |_______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:261:12
    |
261 |           && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |  ____________^
262 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |_______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:261:13
    |
261 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:261:41
    |
261 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { n })
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:262:15
    |
262 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:262:51
    |
262 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:263:12
    |
263 |           && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |  ____________^
264 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |_______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:263:12
    |
263 |           && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |  ____________^
264 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |_______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:263:13
    |
263 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:263:41
    |
263 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { s })
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:264:15
    |
264 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:264:51
    |
264 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:265:20
    |
265 |         && (if s < 0 as libc::c_int as libc::c_long {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:266:20
    |
266 |             if n < 0 as libc::c_int as libc::c_long {
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:267:20
    |
267 |                   if ((if 1 as libc::c_int != 0 {
    |  ____________________^
268 | |                     0 as libc::c_int as libc::c_long
269 | |                 } else {
270 | |                     (if 1 as libc::c_int != 0 {
...   |
274 | |                     }) + s
275 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:267:20
    |
267 |                   if ((if 1 as libc::c_int != 0 {
    |  ____________________^
268 | |                     0 as libc::c_int as libc::c_long
269 | |                 } else {
270 | |                     (if 1 as libc::c_int != 0 {
...   |
274 | |                     }) + s
275 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:267:21
    |
267 |                   if ((if 1 as libc::c_int != 0 {
    |  _____________________^
268 | |                     0 as libc::c_int as libc::c_long
269 | |                 } else {
270 | |                     (if 1 as libc::c_int != 0 {
...   |
274 | |                     }) + s
275 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |__________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:268:21
    |
268 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:270:21
    |
270 | /                     (if 1 as libc::c_int != 0 {
271 | |                         0 as libc::c_int as libc::c_long
272 | |                     } else {
273 | |                         -(1 as libc::c_int) as idx_t
274 | |                     }) + s
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:271:25
    |
271 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:273:25
    |
273 |                         -(1 as libc::c_int) as idx_t
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:275:22
    |
275 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:275:58
    |
275 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:277:21
    |
277 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(n < -(1 as libc::c_int) as idx_t / s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:277:26
    |
277 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:277:26
    |
277 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xmalloc.rs:277:26
    |
277 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:277:26
    |
277 |                     (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:279:21
    |
279 | /                     ((if (if (if ((if 1 as libc::c_int != 0 {
280 | |                         0 as libc::c_int as libc::c_long
281 | |                     } else {
282 | |                         s
...   |
344 | |                         -(1 as libc::c_int) as idx_t / -s
345 | |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    | |_________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
279 ~                     i32::from((if (if (if ((if 1 as libc::c_int != 0 {
280 +                         0 as libc::c_int as libc::c_long
281 +                     } else {
282 +                         s
283 +                     }) - 1 as libc::c_int as libc::c_long)
284 +                         < 0 as libc::c_int as libc::c_long
285 +                     {
286 +                         !(((((if 1 as libc::c_int != 0 {
287 +                             0 as libc::c_int as libc::c_long
288 +                         } else {
289 +                             s
290 +                         }) + 1 as libc::c_int as libc::c_long)
291 +                             << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
292 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
293 +                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
294 +                             - 1 as libc::c_int as libc::c_long)
295 +                             * 2 as libc::c_int as libc::c_long
296 +                             + 1 as libc::c_int as libc::c_long)
297 +                     } else {
298 +                         (if 1 as libc::c_int != 0 {
299 +                             0 as libc::c_int as libc::c_long
300 +                         } else {
301 +                             s
302 +                         }) + 0 as libc::c_int as libc::c_long
303 +                     }) < 0 as libc::c_int as libc::c_long
304 +                     {
305 +                         (s
306 +                             < -(if ((if 1 as libc::c_int != 0 {
307 +                                 0 as libc::c_int as libc::c_long
308 +                             } else {
309 +                                 s
310 +                             }) - 1 as libc::c_int as libc::c_long)
311 +                                 < 0 as libc::c_int as libc::c_long
312 +                             {
313 +                                 ((((if 1 as libc::c_int != 0 {
314 +                                     0 as libc::c_int as libc::c_long
315 +                                 } else {
316 +                                     s
317 +                                 }) + 1 as libc::c_int as libc::c_long)
318 +                                     << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
319 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
320 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
321 +                                     - 1 as libc::c_int as libc::c_long)
322 +                                     * 2 as libc::c_int as libc::c_long
323 +                                     + 1 as libc::c_int as libc::c_long
324 +                             } else {
325 +                                 (if 1 as libc::c_int != 0 {
326 +                                     0 as libc::c_int as libc::c_long
327 +                                 } else {
328 +                                     s
329 +                                 }) - 1 as libc::c_int as libc::c_long
330 +                             })) as libc::c_int
331 +                     } else {
332 +                         ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
333 +                     }) != 0
334 +                     {
335 +                         (if 1 as libc::c_int != 0 {
336 +                             0 as libc::c_int as libc::c_long
337 +                         } else {
338 +                             s
339 +                         }) + -(1 as libc::c_int) as idx_t
340 +                             >> (::core::mem::size_of::<idx_t>() as libc::c_ulong)
341 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
342 +                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
343 +                     } else {
344 +                         -(1 as libc::c_int) as idx_t / -s
345 +                     }) <= -(1 as libc::c_int) as libc::c_long - n)
    |

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:279:22
    |
279 |                       ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ______________________^
280 | |                         0 as libc::c_int as libc::c_long
281 | |                     } else {
282 | |                         s
...   |
344 | |                         -(1 as libc::c_int) as idx_t / -s
345 | |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: arithmetic detected
   --> src/xmalloc.rs:279:34
    |
279 |                       ((if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________________^
280 | |                         0 as libc::c_int as libc::c_long
281 | |                     } else {
282 | |                         s
283 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:279:34
    |
279 |                       ((if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________________^
280 | |                         0 as libc::c_int as libc::c_long
281 | |                     } else {
282 | |                         s
283 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:279:35
    |
279 |                       ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ___________________________________^
280 | |                         0 as libc::c_int as libc::c_long
281 | |                     } else {
282 | |                         s
283 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:280:25
    |
280 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:283:26
    |
283 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:284:27
    |
284 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:286:26
    |
286 |                           !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
287 | |                             0 as libc::c_int as libc::c_long
288 | |                         } else {
289 | |                             s
...   |
295 | |                             * 2 as libc::c_int as libc::c_long
296 | |                             + 1 as libc::c_int as libc::c_long)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:286:26
    |
286 |                           !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
287 | |                             0 as libc::c_int as libc::c_long
288 | |                         } else {
289 | |                             s
...   |
295 | |                             * 2 as libc::c_int as libc::c_long
296 | |                             + 1 as libc::c_int as libc::c_long)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:286:30
    |
286 |                           !(((((if 1 as libc::c_int != 0 {
    |  ______________________________^
287 | |                             0 as libc::c_int as libc::c_long
288 | |                         } else {
289 | |                             s
290 | |                         }) + 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:287:29
    |
287 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:290:30
    |
290 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:292:47
    |
292 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:293:47
    |
293 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:294:31
    |
294 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:295:31
    |
295 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:296:31
    |
296 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:298:25
    |
298 | /                         (if 1 as libc::c_int != 0 {
299 | |                             0 as libc::c_int as libc::c_long
300 | |                         } else {
301 | |                             s
302 | |                         }) + 0 as libc::c_int as libc::c_long
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:298:25
    |
298 | /                         (if 1 as libc::c_int != 0 {
299 | |                             0 as libc::c_int as libc::c_long
300 | |                         } else {
301 | |                             s
302 | |                         }) + 0 as libc::c_int as libc::c_long
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:298:25
    |
298 | /                         (if 1 as libc::c_int != 0 {
299 | |                             0 as libc::c_int as libc::c_long
300 | |                         } else {
301 | |                             s
302 | |                         }) + 0 as libc::c_int as libc::c_long
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:299:29
    |
299 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:302:30
    |
302 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:303:26
    |
303 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:305:25
    |
305 | /                         (s
306 | |                             < -(if ((if 1 as libc::c_int != 0 {
307 | |                                 0 as libc::c_int as libc::c_long
308 | |                             } else {
...   |
329 | |                                 }) - 1 as libc::c_int as libc::c_long
330 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
305 ~                         i32::from(s
306 +                             < -(if ((if 1 as libc::c_int != 0 {
307 +                                 0 as libc::c_int as libc::c_long
308 +                             } else {
309 +                                 s
310 +                             }) - 1 as libc::c_int as libc::c_long)
311 +                                 < 0 as libc::c_int as libc::c_long
312 +                             {
313 +                                 ((((if 1 as libc::c_int != 0 {
314 +                                     0 as libc::c_int as libc::c_long
315 +                                 } else {
316 +                                     s
317 +                                 }) + 1 as libc::c_int as libc::c_long)
318 +                                     << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
319 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
320 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
321 +                                     - 1 as libc::c_int as libc::c_long)
322 +                                     * 2 as libc::c_int as libc::c_long
323 +                                     + 1 as libc::c_int as libc::c_long
324 +                             } else {
325 +                                 (if 1 as libc::c_int != 0 {
326 +                                     0 as libc::c_int as libc::c_long
327 +                                 } else {
328 +                                     s
329 +                                 }) - 1 as libc::c_int as libc::c_long
330 +                             }))
    |

warning: arithmetic detected
   --> src/xmalloc.rs:306:31
    |
306 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
307 | | ...                       0 as libc::c_int as libc::c_long
308 | | ...                   } else {
309 | | ...                       s
...   |
329 | | ...                       }) - 1 as libc::c_int as libc::c_long
330 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:306:31
    |
306 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
307 | | ...                       0 as libc::c_int as libc::c_long
308 | | ...                   } else {
309 | | ...                       s
...   |
329 | | ...                       }) - 1 as libc::c_int as libc::c_long
330 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:306:37
    |
306 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
307 | | ...                       0 as libc::c_int as libc::c_long
308 | | ...                   } else {
309 | | ...                       s
310 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:307:33
    |
307 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:310:34
    |
310 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:311:35
    |
311 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:313:36
    |
313 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
314 | | ...                       0 as libc::c_int as libc::c_long
315 | | ...                   } else {
316 | | ...                       s
317 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:314:37
    |
314 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:317:38
    |
317 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:319:55
    |
319 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:320:55
    |
320 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:321:39
    |
321 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:322:39
    |
322 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1187:1
     |
1187 | / pub fn quotearg_buffer(
1188 | |     buffer: &mut [libc::c_char],
1189 | |     arg: &[libc::c_char],
1190 | |     o: Option<&quoting_options>,
...    |
1211 | |     r as usize
1212 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:323:39
    |
323 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1187:1
     |
1187 | / pub fn quotearg_buffer(
1188 | |     buffer: &mut [libc::c_char],
1189 | |     arg: &[libc::c_char],
1190 | |     o: Option<&quoting_options>,
...    |
1211 | |     r as usize
1212 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:325:33
    |
325 | / ...                   (if 1 as libc::c_int != 0 {
326 | | ...                       0 as libc::c_int as libc::c_long
327 | | ...                   } else {
328 | | ...                       s
329 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:326:37
    |
326 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:329:38
    |
329 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:332:25
    |
332 |                         ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from((0 as libc::c_int as libc::c_long) < s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:332:26
    |
332 |                         ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:335:25
    |
335 | /                         (if 1 as libc::c_int != 0 {
336 | |                             0 as libc::c_int as libc::c_long
337 | |                         } else {
338 | |                             s
...   |
341 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
342 | |                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1215:1
     |
1215 | / pub fn quotearg_alloc(
1216 | |     arg: &str,
1217 | |     o: &quoting_options,
1218 | | ) -> *mut libc::c_char {
...    |
1222 | |     unsafe { quotearg_alloc_mem(c_string.as_ptr(), argsize, size_ptr, o) } // Call the unsafe function
1223 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:335:25
    |
335 | /                         (if 1 as libc::c_int != 0 {
336 | |                             0 as libc::c_int as libc::c_long
337 | |                         } else {
338 | |                             s
...   |
341 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
342 | |                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1215:1
     |
1215 | / pub fn quotearg_alloc(
1216 | |     arg: &str,
1217 | |     o: &quoting_options,
1218 | | ) -> *mut libc::c_char {
...    |
1222 | |     unsafe { quotearg_alloc_mem(c_string.as_ptr(), argsize, size_ptr, o) } // Call the unsafe function
1223 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:335:25
    |
335 | /                         (if 1 as libc::c_int != 0 {
336 | |                             0 as libc::c_int as libc::c_long
337 | |                         } else {
338 | |                             s
339 | |                         }) + -(1 as libc::c_int) as idx_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:336:29
    |
336 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:339:30
    |
339 |                         }) + -(1 as libc::c_int) as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:341:47
    |
341 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:342:47
    |
342 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
   --> src/xmalloc.rs:344:25
    |
344 |                         -(1 as libc::c_int) as idx_t / -s
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer division
   --> src/xmalloc.rs:344:25
    |
344 |                         -(1 as libc::c_int) as idx_t / -s
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:344:25
    |
344 |                         -(1 as libc::c_int) as idx_t / -s
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1226:1
     |
1226 | / pub unsafe extern "C" fn quotearg_alloc_mem(
1227 | |     mut arg: *const libc::c_char,
1228 | |     mut argsize: size_t,
1229 | |     mut size: *mut size_t,
...    |
1272 | |     return buf;
1273 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:344:25
    |
344 |                         -(1 as libc::c_int) as idx_t / -s
    |                         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1226:1
     |
1226 | / pub unsafe extern "C" fn quotearg_alloc_mem(
1227 | |     mut arg: *const libc::c_char,
1228 | |     mut argsize: size_t,
1229 | |     mut size: *mut size_t,
...    |
1272 | |     return buf;
1273 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:344:56
    |
344 |                         -(1 as libc::c_int) as idx_t / -s
    |                                                        ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:345:27
    |
345 |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:345:27
    |
345 |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:345:27
    |
345 |                     }) <= -(1 as libc::c_int) as libc::c_long - n) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:348:28
    |
348 |                   if (if (if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
349 | |                     0 as libc::c_int as libc::c_long
350 | |                 } else {
351 | |                     (if 1 as libc::c_int != 0 {
...   |
355 | |                     }) + 0 as libc::c_int as idx_t
356 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:348:28
    |
348 |                   if (if (if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
349 | |                     0 as libc::c_int as libc::c_long
350 | |                 } else {
351 | |                     (if 1 as libc::c_int != 0 {
...   |
355 | |                     }) + 0 as libc::c_int as idx_t
356 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:348:29
    |
348 |                   if (if (if ((if 1 as libc::c_int != 0 {
    |  _____________________________^
349 | |                     0 as libc::c_int as libc::c_long
350 | |                 } else {
351 | |                     (if 1 as libc::c_int != 0 {
...   |
355 | |                     }) + 0 as libc::c_int as idx_t
356 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |__________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:349:21
    |
349 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:351:21
    |
351 | /                     (if 1 as libc::c_int != 0 {
352 | |                         0 as libc::c_int as libc::c_long
353 | |                     } else {
354 | |                         s
355 | |                     }) + 0 as libc::c_int as idx_t
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:352:25
    |
352 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:355:26
    |
355 |                     }) + 0 as libc::c_int as idx_t
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a static
    --> src/quotearg.rs:1274:1
     |
1274 | static mut slot0: [libc::c_char; 256] = [0; 256];
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a static
    --> src/quotearg.rs:1275:1
     |
1275 | static mut nslots: libc::c_int = 1 as libc::c_int;
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:356:22
    |
356 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:356:58
    |
356 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:358:22
    |
358 |                       !(((((if 1 as libc::c_int != 0 {
    |  ______________________^
359 | |                         0 as libc::c_int as libc::c_long
360 | |                     } else {
361 | |                         (if 1 as libc::c_int != 0 {
...   |
371 | |                         * 2 as libc::c_int as libc::c_long
372 | |                         + 1 as libc::c_int as libc::c_long)
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a static
    --> src/quotearg.rs:1276:1
     |
1276 | / static mut slotvec0: slotvec = unsafe {
1277 | |     {
1278 | |         let mut init = slotvec {
1279 | |             size: ::core::mem::size_of::<[libc::c_char; 256]>() as libc::c_ulong,
...    |
1283 | |     }
1284 | | };
     | |__^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:358:22
    |
358 |                       !(((((if 1 as libc::c_int != 0 {
    |  ______________________^
359 | |                         0 as libc::c_int as libc::c_long
360 | |                     } else {
361 | |                         (if 1 as libc::c_int != 0 {
...   |
371 | |                         * 2 as libc::c_int as libc::c_long
372 | |                         + 1 as libc::c_int as libc::c_long)
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:358:26
    |
358 |                       !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
359 | |                         0 as libc::c_int as libc::c_long
360 | |                     } else {
361 | |                         (if 1 as libc::c_int != 0 {
...   |
365 | |                         }) + 0 as libc::c_int as idx_t
366 | |                     }) + 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a static
    --> src/quotearg.rs:1285:1
     |
1285 | / static mut slotvec: *mut slotvec = unsafe {
1286 | |     &slotvec0 as *const slotvec as *mut slotvec
1287 | | };
     | |__^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:359:25
    |
359 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:361:25
    |
361 | /                         (if 1 as libc::c_int != 0 {
362 | |                             0 as libc::c_int as libc::c_long
363 | |                         } else {
364 | |                             s
365 | |                         }) + 0 as libc::c_int as idx_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:362:29
    |
362 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:365:30
    |
365 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1289:1
     |
1289 | / pub fn quotearg_free() {
1290 | |     unsafe {
1291 | |         let sv = &mut *slotvec;
1292 | |         for i in 1..nslots {
...    |
1311 | |     }
1312 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:366:26
    |
366 |                     }) + 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1289:1
     |
1289 | / pub fn quotearg_free() {
1290 | |     unsafe {
1291 | |         let sv = &mut *slotvec;
1292 | |         for i in 1..nslots {
...    |
1311 | |     }
1312 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:368:43
    |
368 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:369:43
    |
369 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:370:27
    |
370 |                         - 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:371:27
    |
371 |                         * 2 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:372:27
    |
372 |                         + 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:374:21
    |
374 | /                     (if 1 as libc::c_int != 0 {
375 | |                         0 as libc::c_int as libc::c_long
376 | |                     } else {
377 | |                         (if 1 as libc::c_int != 0 {
...   |
381 | |                         }) + 0 as libc::c_int as idx_t
382 | |                     }) + 0 as libc::c_int as libc::c_long
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:374:21
    |
374 | /                     (if 1 as libc::c_int != 0 {
375 | |                         0 as libc::c_int as libc::c_long
376 | |                     } else {
377 | |                         (if 1 as libc::c_int != 0 {
...   |
381 | |                         }) + 0 as libc::c_int as idx_t
382 | |                     }) + 0 as libc::c_int as libc::c_long
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:374:21
    |
374 | /                     (if 1 as libc::c_int != 0 {
375 | |                         0 as libc::c_int as libc::c_long
376 | |                     } else {
377 | |                         (if 1 as libc::c_int != 0 {
...   |
381 | |                         }) + 0 as libc::c_int as idx_t
382 | |                     }) + 0 as libc::c_int as libc::c_long
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:375:25
    |
375 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:377:25
    |
377 | /                         (if 1 as libc::c_int != 0 {
378 | |                             0 as libc::c_int as libc::c_long
379 | |                         } else {
380 | |                             s
381 | |                         }) + 0 as libc::c_int as idx_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a function
    --> src/quotearg.rs:1314:1
     |
1314 | / unsafe extern "C" fn quotearg_n_options(
1315 | |     mut n: libc::c_int,
1316 | |     mut arg: *const libc::c_char,
1317 | |     mut argsize: size_t,
...    |
1391 | |     return val;
1392 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:378:29
    |
378 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:381:30
    |
381 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:382:26
    |
382 |                     }) + 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:383:22
    |
383 |                 }) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:385:21
    |
385 | /                     (((if 1 as libc::c_int != 0 {
386 | |                         0 as libc::c_int as libc::c_long
387 | |                     } else {
388 | |                         s
...   |
425 | |                             }) - 1 as libc::c_int as libc::c_long
426 | |                         })) as libc::c_int
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
385 ~                     i32::from(((if 1 as libc::c_int != 0 {
386 +                         0 as libc::c_int as libc::c_long
387 +                     } else {
388 +                         s
389 +                     }) + 0 as libc::c_int as idx_t)
390 +                         < -(if ((if 1 as libc::c_int != 0 {
391 +                             0 as libc::c_int as libc::c_long
392 +                         } else {
393 +                             (if 1 as libc::c_int != 0 {
394 +                                 0 as libc::c_int as libc::c_long
395 +                             } else {
396 +                                 s
397 +                             }) + 0 as libc::c_int as idx_t
398 +                         }) - 1 as libc::c_int as libc::c_long)
399 +                             < 0 as libc::c_int as libc::c_long
400 +                         {
401 +                             ((((if 1 as libc::c_int != 0 {
402 +                                 0 as libc::c_int as libc::c_long
403 +                             } else {
404 +                                 (if 1 as libc::c_int != 0 {
405 +                                     0 as libc::c_int as libc::c_long
406 +                                 } else {
407 +                                     s
408 +                                 }) + 0 as libc::c_int as idx_t
409 +                             }) + 1 as libc::c_int as libc::c_long)
410 +                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
411 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
412 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
413 +                                 - 1 as libc::c_int as libc::c_long)
414 +                                 * 2 as libc::c_int as libc::c_long
415 +                                 + 1 as libc::c_int as libc::c_long
416 +                         } else {
417 +                             (if 1 as libc::c_int != 0 {
418 +                                 0 as libc::c_int as libc::c_long
419 +                             } else {
420 +                                 (if 1 as libc::c_int != 0 {
421 +                                     0 as libc::c_int as libc::c_long
422 +                                 } else {
423 +                                     s
424 +                                 }) + 0 as libc::c_int as idx_t
425 +                             }) - 1 as libc::c_int as libc::c_long
426 +                         }))
    |

warning: arithmetic detected
   --> src/xmalloc.rs:385:22
    |
385 |                       (((if 1 as libc::c_int != 0 {
    |  ______________________^
386 | |                         0 as libc::c_int as libc::c_long
387 | |                     } else {
388 | |                         s
389 | |                     }) + 0 as libc::c_int as idx_t)
    | |___________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:385:22
    |
385 |                       (((if 1 as libc::c_int != 0 {
    |  ______________________^
386 | |                         0 as libc::c_int as libc::c_long
387 | |                     } else {
388 | |                         s
389 | |                     }) + 0 as libc::c_int as idx_t)
    | |___________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:385:23
    |
385 |                       (((if 1 as libc::c_int != 0 {
    |  _______________________^
386 | |                         0 as libc::c_int as libc::c_long
387 | |                     } else {
388 | |                         s
389 | |                     }) + 0 as libc::c_int as idx_t)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:386:25
    |
386 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:389:26
    |
389 |                     }) + 0 as libc::c_int as idx_t)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:390:27
    |
390 |                           < -(if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
391 | |                             0 as libc::c_int as libc::c_long
392 | |                         } else {
393 | |                             (if 1 as libc::c_int != 0 {
...   |
425 | |                             }) - 1 as libc::c_int as libc::c_long
426 | |                         })) as libc::c_int
    | |__________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:390:27
    |
390 |                           < -(if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
391 | |                             0 as libc::c_int as libc::c_long
392 | |                         } else {
393 | |                             (if 1 as libc::c_int != 0 {
...   |
425 | |                             }) - 1 as libc::c_int as libc::c_long
426 | |                         })) as libc::c_int
    | |__________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:390:33
    |
390 |                           < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________________^
391 | |                             0 as libc::c_int as libc::c_long
392 | |                         } else {
393 | |                             (if 1 as libc::c_int != 0 {
...   |
397 | |                             }) + 0 as libc::c_int as idx_t
398 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:391:29
    |
391 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:393:29
    |
393 | / ...                   (if 1 as libc::c_int != 0 {
394 | | ...                       0 as libc::c_int as libc::c_long
395 | | ...                   } else {
396 | | ...                       s
397 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:394:33
    |
394 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:397:34
    |
397 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:398:30
    |
398 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:399:31
    |
399 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:401:32
    |
401 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
402 | | ...                       0 as libc::c_int as libc::c_long
403 | | ...                   } else {
404 | | ...                       (if 1 as libc::c_int != 0 {
...   |
408 | | ...                       }) + 0 as libc::c_int as idx_t
409 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:402:33
    |
402 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:404:33
    |
404 | / ...                   (if 1 as libc::c_int != 0 {
405 | | ...                       0 as libc::c_int as libc::c_long
406 | | ...                   } else {
407 | | ...                       s
408 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:405:37
    |
405 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:408:38
    |
408 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:409:34
    |
409 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:411:51
    |
411 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:412:51
    |
412 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:413:35
    |
413 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:414:35
    |
414 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1394:1
     |
1394 | / pub unsafe extern "C" fn quotearg_n(
1395 | |     mut n: libc::c_int,
1396 | |     mut arg: *const libc::c_char,
1397 | | ) -> *mut libc::c_char {
...    |
1403 | |     );
1404 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:415:35
    |
415 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1394:1
     |
1394 | / pub unsafe extern "C" fn quotearg_n(
1395 | |     mut n: libc::c_int,
1396 | |     mut arg: *const libc::c_char,
1397 | | ) -> *mut libc::c_char {
...    |
1403 | |     );
1404 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:417:29
    |
417 | / ...                   (if 1 as libc::c_int != 0 {
418 | | ...                       0 as libc::c_int as libc::c_long
419 | | ...                   } else {
420 | | ...                       (if 1 as libc::c_int != 0 {
...   |
424 | | ...                       }) + 0 as libc::c_int as idx_t
425 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:418:33
    |
418 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:420:33
    |
420 | / ...                   (if 1 as libc::c_int != 0 {
421 | | ...                       0 as libc::c_int as libc::c_long
422 | | ...                   } else {
423 | | ...                       s
424 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:421:37
    |
421 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:424:38
    |
424 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1406:1
     |
1406 | / pub unsafe extern "C" fn quotearg_n_mem(
1407 | |     mut n: libc::c_int,
1408 | |     mut arg: *const libc::c_char,
1409 | |     mut argsize: size_t,
1410 | | ) -> *mut libc::c_char {
1411 | |     return quotearg_n_options(n, arg, argsize, &mut default_quoting_options);
1412 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:425:34
    |
425 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1406:1
     |
1406 | / pub unsafe extern "C" fn quotearg_n_mem(
1407 | |     mut n: libc::c_int,
1408 | |     mut arg: *const libc::c_char,
1409 | |     mut argsize: size_t,
1410 | | ) -> *mut libc::c_char {
1411 | |     return quotearg_n_options(n, arg, argsize, &mut default_quoting_options);
1412 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:428:21
    |
428 | /                     ((0 as libc::c_int as libc::c_long)
429 | |                         < (if 1 as libc::c_int != 0 {
430 | |                             0 as libc::c_int as libc::c_long
431 | |                         } else {
432 | |                             s
433 | |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |______________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
428 ~                     i32::from((0 as libc::c_int as libc::c_long)
429 +                         < (if 1 as libc::c_int != 0 {
430 +                             0 as libc::c_int as libc::c_long
431 +                         } else {
432 +                             s
433 +                         }) + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:428:22
    |
428 |                     ((0 as libc::c_int as libc::c_long)
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:429:27
    |
429 |                           < (if 1 as libc::c_int != 0 {
    |  ___________________________^
430 | |                             0 as libc::c_int as libc::c_long
431 | |                         } else {
432 | |                             s
433 | |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:429:27
    |
429 |                           < (if 1 as libc::c_int != 0 {
    |  ___________________________^
430 | |                             0 as libc::c_int as libc::c_long
431 | |                         } else {
432 | |                             s
433 | |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1414:1
     |
1414 | / pub fn quotearg(arg: &str) -> String {
1415 | |     unsafe {
1416 | |         let quoted_arg = quotearg_n(0, CString::new(arg).expect("CString::new failed").as_ptr());
1417 | |         CString::from_raw(quoted_arg).into_string().expect("Failed to convert CString to String")
1418 | |     }
1419 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:429:27
    |
429 |                           < (if 1 as libc::c_int != 0 {
    |  ___________________________^
430 | |                             0 as libc::c_int as libc::c_long
431 | |                         } else {
432 | |                             s
433 | |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:430:29
    |
430 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1414:1
     |
1414 | / pub fn quotearg(arg: &str) -> String {
1415 | |     unsafe {
1416 | |         let quoted_arg = quotearg_n(0, CString::new(arg).expect("CString::new failed").as_ptr());
1417 | |         CString::from_raw(quoted_arg).into_string().expect("Failed to convert CString to String")
1418 | |     }
1419 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:433:30
    |
433 |                         }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:434:33
    |
434 |                 }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:434:33
    |
434 |                 }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                 ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:434:33
    |
434 |                 }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                 ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:436:24
    |
436 |                       if ((if 1 as libc::c_int != 0 {
    |  ________________________^
437 | |                         0 as libc::c_int as libc::c_long
438 | |                     } else {
439 | |                         n
440 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1422:1
     |
1422 | / pub fn quotearg_mem(arg: &str) -> String {
1423 | |     let argsize = arg.len() as u64;
1424 | |     let c_string = CString::new(arg).expect("CString::new failed");
1425 | |     let result_ptr;
...    |
1429 | |     unsafe { CString::from_raw(result_ptr).into_string().expect("Failed to convert to String") }
1430 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1422:1
     |
1422 | / pub fn quotearg_mem(arg: &str) -> String {
1423 | |     let argsize = arg.len() as u64;
1424 | |     let c_string = CString::new(arg).expect("CString::new failed");
1425 | |     let result_ptr;
...    |
1429 | |     unsafe { CString::from_raw(result_ptr).into_string().expect("Failed to convert to String") }
1430 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:436:24
    |
436 |                       if ((if 1 as libc::c_int != 0 {
    |  ________________________^
437 | |                         0 as libc::c_int as libc::c_long
438 | |                     } else {
439 | |                         n
440 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:436:25
    |
436 |                       if ((if 1 as libc::c_int != 0 {
    |  _________________________^
437 | |                         0 as libc::c_int as libc::c_long
438 | |                     } else {
439 | |                         n
440 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:437:25
    |
437 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:440:26
    |
440 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:441:27
    |
441 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:443:25
    |
443 | /                         ((0 as libc::c_int as libc::c_long)
444 | |                             < n + 0 as libc::c_int as idx_t) as libc::c_int
    | |___________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
443 ~                         i32::from((0 as libc::c_int as libc::c_long)
444 +                             < n + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:443:26
    |
443 |                         ((0 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:444:31
    |
444 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1433:1
     |
1433 | / pub fn quotearg_n_style(
1434 | |     n: i32,
1435 | |     s: quoting_style,
1436 | |     arg: &CStr,
...    |
1441 | |     }
1442 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1433:1
     |
1433 | / pub fn quotearg_n_style(
1434 | |     n: i32,
1435 | |     s: quoting_style,
1436 | |     arg: &CStr,
...    |
1441 | |     }
1442 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:444:31
    |
444 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:444:35
    |
444 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:446:25
    |
446 | /                         ((0 as libc::c_int as libc::c_long) < n
447 | |                             && (-(1 as libc::c_int) as libc::c_long
448 | |                                 - 0 as libc::c_int as idx_t)
449 | |                                 < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |______________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
446 ~                         i32::from((0 as libc::c_int as libc::c_long) < n
447 +                             && (-(1 as libc::c_int) as libc::c_long
448 +                                 - 0 as libc::c_int as idx_t)
449 +                                 < n - 1 as libc::c_int as libc::c_long)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:446:26
    |
446 |                         ((0 as libc::c_int as libc::c_long) < n
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:447:32
    |
447 |   ...                   && (-(1 as libc::c_int) as libc::c_long
    |  __________________________^
448 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1445:1
     |
1445 | / pub fn quotearg_n_style_mem(
1446 | |     n: i32,
1447 | |     s: quoting_style,
1448 | |     arg: &CStr,
...    |
1452 | |     unsafe { quotearg_n_options(n, arg.as_ptr(), argsize, &o) }
1453 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:447:32
    |
447 |   ...                   && (-(1 as libc::c_int) as libc::c_long
    |  __________________________^
448 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1445:1
     |
1445 | / pub fn quotearg_n_style_mem(
1446 | |     n: i32,
1447 | |     s: quoting_style,
1448 | |     arg: &CStr,
...    |
1452 | |     unsafe { quotearg_n_options(n, arg.as_ptr(), argsize, &o) }
1453 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:447:33
    |
447 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:448:35
    |
448 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:449:35
    |
449 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:449:35
    |
449 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1456:1
     |
1456 | / pub fn quotearg_style(
1457 | |     s: quoting_style,
1458 | |     arg: &CStr,
1459 | | ) -> CString {
1460 | |     let result_ptr = quotearg_n_style(0, s, arg);
1461 | |     unsafe { CString::from_raw(result_ptr) }
1462 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:449:39
    |
449 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1456:1
     |
1456 | / pub fn quotearg_style(
1457 | |     s: quoting_style,
1458 | |     arg: &CStr,
1459 | | ) -> CString {
1460 | |     let result_ptr = quotearg_n_style(0, s, arg);
1461 | |     unsafe { CString::from_raw(result_ptr) }
1462 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:452:21
    |
452 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(0 as libc::c_int as idx_t / s < n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:452:22
    |
452 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:452:22
    |
452 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xmalloc.rs:452:22
    |
452 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a function
    --> src/quotearg.rs:1465:1
     |
1465 | / pub fn quotearg_style_mem(
1466 | |     s: quoting_style,
1467 | |     arg: &CStr,
1468 | | ) -> CString {
1469 | |     let result_ptr = quotearg_n_style_mem(0, s, arg);
1470 | |     unsafe { CString::from_raw(result_ptr) }
1471 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1465:1
     |
1465 | / pub fn quotearg_style_mem(
1466 | |     s: quoting_style,
1467 | |     arg: &CStr,
1468 | | ) -> CString {
1469 | |     let result_ptr = quotearg_n_style_mem(0, s, arg);
1470 | |     unsafe { CString::from_raw(result_ptr) }
1471 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:452:22
    |
452 |                     (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:456:21
    |
456 |             if s == 0 as libc::c_int as libc::c_long {
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:459:24
    |
459 |                 if n < 0 as libc::c_int as libc::c_long {
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:460:32
    |
460 |                       if (if (if ((if 1 as libc::c_int != 0 {
    |  ________________________________^
461 | |                         0 as libc::c_int as libc::c_long
462 | |                     } else {
463 | |                         (if 1 as libc::c_int != 0 {
...   |
467 | |                         }) + 0 as libc::c_int as idx_t
468 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:460:32
    |
460 |                       if (if (if ((if 1 as libc::c_int != 0 {
    |  ________________________________^
461 | |                         0 as libc::c_int as libc::c_long
462 | |                     } else {
463 | |                         (if 1 as libc::c_int != 0 {
...   |
467 | |                         }) + 0 as libc::c_int as idx_t
468 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1474:1
     |
1474 | / pub unsafe extern "C" fn quotearg_char_mem(
1475 | |     mut arg: *const libc::c_char,
1476 | |     mut argsize: size_t,
1477 | |     mut ch: libc::c_char,
...    |
1488 | |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
1489 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:460:33
    |
460 |                       if (if (if ((if 1 as libc::c_int != 0 {
    |  _________________________________^
461 | |                         0 as libc::c_int as libc::c_long
462 | |                     } else {
463 | |                         (if 1 as libc::c_int != 0 {
...   |
467 | |                         }) + 0 as libc::c_int as idx_t
468 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:461:25
    |
461 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1474:1
     |
1474 | / pub unsafe extern "C" fn quotearg_char_mem(
1475 | |     mut arg: *const libc::c_char,
1476 | |     mut argsize: size_t,
1477 | |     mut ch: libc::c_char,
...    |
1488 | |     return quotearg_n_options(0 as libc::c_int, arg, argsize, &mut options);
1489 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:463:25
    |
463 | /                         (if 1 as libc::c_int != 0 {
464 | |                             0 as libc::c_int as libc::c_long
465 | |                         } else {
466 | |                             n
467 | |                         }) + 0 as libc::c_int as idx_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:464:29
    |
464 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:467:30
    |
467 |                         }) + 0 as libc::c_int as idx_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:468:26
    |
468 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:469:27
    |
469 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1491:1
     |
1491 | / pub fn quotearg_char(arg: &CStr, ch: char) -> CString {
1492 | |     let ch_as_c_char = ch as libc::c_char;
1493 | |     let result_ptr = unsafe {
1494 | |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
1495 | |     };
1496 | |     unsafe { CStr::from_ptr(result_ptr).to_owned() }
1497 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:471:26
    |
471 |                           !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
472 | |                             0 as libc::c_int as libc::c_long
473 | |                         } else {
474 | |                             (if 1 as libc::c_int != 0 {
...   |
484 | |                             * 2 as libc::c_int as libc::c_long
485 | |                             + 1 as libc::c_int as libc::c_long)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1491:1
     |
1491 | / pub fn quotearg_char(arg: &CStr, ch: char) -> CString {
1492 | |     let ch_as_c_char = ch as libc::c_char;
1493 | |     let result_ptr = unsafe {
1494 | |         quotearg_char_mem(arg.as_ptr(), 18446744073709551615 as libc::c_ulong, ch_as_c_char)
1495 | |     };
1496 | |     unsafe { CStr::from_ptr(result_ptr).to_owned() }
1497 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:471:26
    |
471 |                           !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
472 | |                             0 as libc::c_int as libc::c_long
473 | |                         } else {
474 | |                             (if 1 as libc::c_int != 0 {
...   |
484 | |                             * 2 as libc::c_int as libc::c_long
485 | |                             + 1 as libc::c_int as libc::c_long)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:471:30
    |
471 |                           !(((((if 1 as libc::c_int != 0 {
    |  ______________________________^
472 | |                             0 as libc::c_int as libc::c_long
473 | |                         } else {
474 | |                             (if 1 as libc::c_int != 0 {
...   |
478 | |                             }) + 0 as libc::c_int as idx_t
479 | |                         }) + 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:472:29
    |
472 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:474:29
    |
474 | / ...                   (if 1 as libc::c_int != 0 {
475 | | ...                       0 as libc::c_int as libc::c_long
476 | | ...                   } else {
477 | | ...                       n
478 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:475:33
    |
475 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:478:34
    |
478 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1500:1
     |
1500 | / pub fn quotearg_colon(arg: &CStr) -> CString {
1501 | |     quotearg_char(arg, ':' as char)
1502 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:479:30
    |
479 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1500:1
     |
1500 | / pub fn quotearg_colon(arg: &CStr) -> CString {
1501 | |     quotearg_char(arg, ':' as char)
1502 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:481:47
    |
481 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:482:47
    |
482 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:483:31
    |
483 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:484:31
    |
484 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1505:1
     |
1505 | / pub fn quotearg_colon_mem(arg: &str) -> CString {
1506 | |     let argsize = arg.len() as size_t;
1507 | |     let result_ptr = unsafe {
1508 | |         quotearg_char_mem(arg.as_ptr() as *const libc::c_char, argsize, ':' as i32 as libc::c_char)
1509 | |     };
1510 | |     unsafe { CString::from_raw(result_ptr) }
1511 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1505:1
     |
1505 | / pub fn quotearg_colon_mem(arg: &str) -> CString {
1506 | |     let argsize = arg.len() as size_t;
1507 | |     let result_ptr = unsafe {
1508 | |         quotearg_char_mem(arg.as_ptr() as *const libc::c_char, argsize, ':' as i32 as libc::c_char)
1509 | |     };
1510 | |     unsafe { CString::from_raw(result_ptr) }
1511 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:485:31
    |
485 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:487:25
    |
487 | /                         (if 1 as libc::c_int != 0 {
488 | |                             0 as libc::c_int as libc::c_long
489 | |                         } else {
490 | |                             (if 1 as libc::c_int != 0 {
...   |
494 | |                             }) + 0 as libc::c_int as idx_t
495 | |                         }) + 0 as libc::c_int as libc::c_long
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:487:25
    |
487 | /                         (if 1 as libc::c_int != 0 {
488 | |                             0 as libc::c_int as libc::c_long
489 | |                         } else {
490 | |                             (if 1 as libc::c_int != 0 {
...   |
494 | |                             }) + 0 as libc::c_int as idx_t
495 | |                         }) + 0 as libc::c_int as libc::c_long
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:487:25
    |
487 | /                         (if 1 as libc::c_int != 0 {
488 | |                             0 as libc::c_int as libc::c_long
489 | |                         } else {
490 | |                             (if 1 as libc::c_int != 0 {
...   |
494 | |                             }) + 0 as libc::c_int as idx_t
495 | |                         }) + 0 as libc::c_int as libc::c_long
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:488:29
    |
488 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:490:29
    |
490 | / ...                   (if 1 as libc::c_int != 0 {
491 | | ...                       0 as libc::c_int as libc::c_long
492 | | ...                   } else {
493 | | ...                       n
494 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:491:33
    |
491 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1514:1
     |
1514 | / pub fn quotearg_n_style_colon(
1515 | |     n: i32,
1516 | |     s: quoting_style,
1517 | |     arg: &CStr,
...    |
1537 | |     }
1538 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:494:34
    |
494 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1514:1
     |
1514 | / pub fn quotearg_n_style_colon(
1515 | |     n: i32,
1516 | |     s: quoting_style,
1517 | |     arg: &CStr,
...    |
1537 | |     }
1538 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:495:30
    |
495 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:496:26
    |
496 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:498:25
    |
498 | /                         (((if 1 as libc::c_int != 0 {
499 | |                             0 as libc::c_int as libc::c_long
500 | |                         } else {
501 | |                             n
...   |
538 | |                                 }) - 1 as libc::c_int as libc::c_long
539 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
498 ~                         i32::from(((if 1 as libc::c_int != 0 {
499 +                             0 as libc::c_int as libc::c_long
500 +                         } else {
501 +                             n
502 +                         }) + 0 as libc::c_int as idx_t)
503 +                             < -(if ((if 1 as libc::c_int != 0 {
504 +                                 0 as libc::c_int as libc::c_long
505 +                             } else {
506 +                                 (if 1 as libc::c_int != 0 {
507 +                                     0 as libc::c_int as libc::c_long
508 +                                 } else {
509 +                                     n
510 +                                 }) + 0 as libc::c_int as idx_t
511 +                             }) - 1 as libc::c_int as libc::c_long)
512 +                                 < 0 as libc::c_int as libc::c_long
513 +                             {
514 +                                 ((((if 1 as libc::c_int != 0 {
515 +                                     0 as libc::c_int as libc::c_long
516 +                                 } else {
517 +                                     (if 1 as libc::c_int != 0 {
518 +                                         0 as libc::c_int as libc::c_long
519 +                                     } else {
520 +                                         n
521 +                                     }) + 0 as libc::c_int as idx_t
522 +                                 }) + 1 as libc::c_int as libc::c_long)
523 +                                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
524 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
525 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
526 +                                     - 1 as libc::c_int as libc::c_long)
527 +                                     * 2 as libc::c_int as libc::c_long
528 +                                     + 1 as libc::c_int as libc::c_long
529 +                             } else {
530 +                                 (if 1 as libc::c_int != 0 {
531 +                                     0 as libc::c_int as libc::c_long
532 +                                 } else {
533 +                                     (if 1 as libc::c_int != 0 {
534 +                                         0 as libc::c_int as libc::c_long
535 +                                     } else {
536 +                                         n
537 +                                     }) + 0 as libc::c_int as idx_t
538 +                                 }) - 1 as libc::c_int as libc::c_long
539 +                             }))
    |

warning: arithmetic detected
   --> src/xmalloc.rs:498:26
    |
498 |                           (((if 1 as libc::c_int != 0 {
    |  __________________________^
499 | |                             0 as libc::c_int as libc::c_long
500 | |                         } else {
501 | |                             n
502 | |                         }) + 0 as libc::c_int as idx_t)
    | |_______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:498:26
    |
498 |                           (((if 1 as libc::c_int != 0 {
    |  __________________________^
499 | |                             0 as libc::c_int as libc::c_long
500 | |                         } else {
501 | |                             n
502 | |                         }) + 0 as libc::c_int as idx_t)
    | |_______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:498:27
    |
498 |                           (((if 1 as libc::c_int != 0 {
    |  ___________________________^
499 | |                             0 as libc::c_int as libc::c_long
500 | |                         } else {
501 | |                             n
502 | |                         }) + 0 as libc::c_int as idx_t)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:499:29
    |
499 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:502:30
    |
502 |                         }) + 0 as libc::c_int as idx_t)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:503:31
    |
503 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
504 | | ...                       0 as libc::c_int as libc::c_long
505 | | ...                   } else {
506 | | ...                       (if 1 as libc::c_int != 0 {
...   |
538 | | ...                       }) - 1 as libc::c_int as libc::c_long
539 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1541:1
     |
1541 | / pub unsafe extern "C" fn quotearg_n_custom(
1542 | |     mut n: libc::c_int,
1543 | |     mut left_quote: *const libc::c_char,
1544 | |     mut right_quote: *const libc::c_char,
...    |
1553 | |     );
1554 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:503:31
    |
503 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
504 | | ...                       0 as libc::c_int as libc::c_long
505 | | ...                   } else {
506 | | ...                       (if 1 as libc::c_int != 0 {
...   |
538 | | ...                       }) - 1 as libc::c_int as libc::c_long
539 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1541:1
     |
1541 | / pub unsafe extern "C" fn quotearg_n_custom(
1542 | |     mut n: libc::c_int,
1543 | |     mut left_quote: *const libc::c_char,
1544 | |     mut right_quote: *const libc::c_char,
...    |
1553 | |     );
1554 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:503:37
    |
503 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
504 | | ...                       0 as libc::c_int as libc::c_long
505 | | ...                   } else {
506 | | ...                       (if 1 as libc::c_int != 0 {
...   |
510 | | ...                       }) + 0 as libc::c_int as idx_t
511 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:504:33
    |
504 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:506:33
    |
506 | / ...                   (if 1 as libc::c_int != 0 {
507 | | ...                       0 as libc::c_int as libc::c_long
508 | | ...                   } else {
509 | | ...                       n
510 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:507:37
    |
507 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1556:1
     |
1556 | / pub unsafe extern "C" fn quotearg_n_custom_mem(
1557 | |     mut n: libc::c_int,
1558 | |     mut left_quote: *const libc::c_char,
1559 | |     mut right_quote: *const libc::c_char,
...    |
1565 | |     return quotearg_n_options(n, arg, argsize, &mut o);
1566 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:510:38
    |
510 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1556:1
     |
1556 | / pub unsafe extern "C" fn quotearg_n_custom_mem(
1557 | |     mut n: libc::c_int,
1558 | |     mut left_quote: *const libc::c_char,
1559 | |     mut right_quote: *const libc::c_char,
...    |
1565 | |     return quotearg_n_options(n, arg, argsize, &mut o);
1566 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:511:34
    |
511 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:512:35
    |
512 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:514:36
    |
514 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
515 | | ...                       0 as libc::c_int as libc::c_long
516 | | ...                   } else {
517 | | ...                       (if 1 as libc::c_int != 0 {
...   |
521 | | ...                       }) + 0 as libc::c_int as idx_t
522 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:515:37
    |
515 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:517:37
    |
517 | / ...                   (if 1 as libc::c_int != 0 {
518 | | ...                       0 as libc::c_int as libc::c_long
519 | | ...                   } else {
520 | | ...                       n
521 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:518:41
    |
518 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1568:1
     |
1568 | / pub fn quotearg_custom(
1569 | |     left_quote: &str,
1570 | |     right_quote: &str,
1571 | |     arg: &str,
...    |
1584 | |     }
1585 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:521:42
    |
521 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1568:1
     |
1568 | / pub fn quotearg_custom(
1569 | |     left_quote: &str,
1570 | |     right_quote: &str,
1571 | |     arg: &str,
...    |
1584 | |     }
1585 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:522:38
    |
522 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:524:55
    |
524 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:525:55
    |
525 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:526:39
    |
526 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:527:39
    |
527 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:528:39
    |
528 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:530:33
    |
530 | / ...                   (if 1 as libc::c_int != 0 {
531 | | ...                       0 as libc::c_int as libc::c_long
532 | | ...                   } else {
533 | | ...                       (if 1 as libc::c_int != 0 {
...   |
537 | | ...                       }) + 0 as libc::c_int as idx_t
538 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:531:37
    |
531 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:533:37
    |
533 | / ...                   (if 1 as libc::c_int != 0 {
534 | | ...                       0 as libc::c_int as libc::c_long
535 | | ...                   } else {
536 | | ...                       n
537 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a function
    --> src/quotearg.rs:1588:1
     |
1588 | / pub fn quotearg_custom_mem(
1589 | |     left_quote: &str,
1590 | |     right_quote: &str,
1591 | |     arg: &str,
...    |
1609 | |     unsafe { std::ffi::CString::from_raw(result_ptr).into_string().unwrap() }
1610 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:534:41
    |
534 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1588:1
     |
1588 | / pub fn quotearg_custom_mem(
1589 | |     left_quote: &str,
1590 | |     right_quote: &str,
1591 | |     arg: &str,
...    |
1609 | |     unsafe { std::ffi::CString::from_raw(result_ptr).into_string().unwrap() }
1610 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:537:42
    |
537 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:538:38
    |
538 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:541:25
    |
541 | /                         ((0 as libc::c_int as libc::c_long)
542 | |                             < (if 1 as libc::c_int != 0 {
543 | |                                 0 as libc::c_int as libc::c_long
544 | |                             } else {
545 | |                                 n
546 | |                             }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |__________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
541 ~                         i32::from((0 as libc::c_int as libc::c_long)
542 +                             < (if 1 as libc::c_int != 0 {
543 +                                 0 as libc::c_int as libc::c_long
544 +                             } else {
545 +                                 n
546 +                             }) + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:541:26
    |
541 |                         ((0 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:542:31
    |
542 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
543 | | ...                       0 as libc::c_int as libc::c_long
544 | | ...                   } else {
545 | | ...                       n
546 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:542:31
    |
542 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
543 | | ...                       0 as libc::c_int as libc::c_long
544 | | ...                   } else {
545 | | ...                       n
546 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:542:31
    |
542 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
543 | | ...                       0 as libc::c_int as libc::c_long
544 | | ...                   } else {
545 | | ...                       n
546 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:543:33
    |
543 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:546:34
    |
546 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:547:37
    |
547 |                     }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:547:37
    |
547 |                     }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:547:37
    |
547 |                     }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:549:28
    |
549 |                           if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
550 | |                             0 as libc::c_int as libc::c_long
551 | |                         } else {
552 | |                             s
553 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a static
    --> src/quotearg.rs:1613:1
     |
1613 | / pub static mut quote_quoting_options: quoting_options = {
1614 | |     let mut init = quoting_options {
1615 | |         style: locale_quoting_style,
1616 | |         flags: 0 as libc::c_int,
...    |
1621 | |     init
1622 | | };
     | |__^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:549:28
    |
549 |                           if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
550 | |                             0 as libc::c_int as libc::c_long
551 | |                         } else {
552 | |                             s
553 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:549:29
    |
549 |                           if ((if 1 as libc::c_int != 0 {
    |  _____________________________^
550 | |                             0 as libc::c_int as libc::c_long
551 | |                         } else {
552 | |                             s
553 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:550:29
    |
550 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:553:30
    |
553 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:554:31
    |
554 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1624:1
     |
1624 | / pub unsafe extern "C" fn quote_n_mem(
1625 | |     mut n: libc::c_int,
1626 | |     mut arg: *const libc::c_char,
1627 | |     mut argsize: size_t,
1628 | | ) -> *const libc::c_char {
1629 | |     return quotearg_n_options(n, arg, argsize, &mut quote_quoting_options);
1630 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:556:29
    |
556 | / ...                   ((0 as libc::c_int as libc::c_long)
557 | | ...                       < s + 0 as libc::c_int as idx_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
556 ~                             i32::from((0 as libc::c_int as libc::c_long)
557 +                                 < s + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:556:30
    |
556 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1624:1
     |
1624 | / pub unsafe extern "C" fn quote_n_mem(
1625 | |     mut n: libc::c_int,
1626 | |     mut arg: *const libc::c_char,
1627 | |     mut argsize: size_t,
1628 | | ) -> *const libc::c_char {
1629 | |     return quotearg_n_options(n, arg, argsize, &mut quote_quoting_options);
1630 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: arithmetic detected
   --> src/xmalloc.rs:557:35
    |
557 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:557:35
    |
557 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:557:39
    |
557 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/quotearg.rs:1632:1
     |
1632 | / pub fn quote_mem(arg: &CStr) -> CString {
1633 | |     let argsize = arg.to_bytes().len() as u64;
1634 | |     let quoted_ptr: *const c_char = unsafe { quote_n_mem(0, arg.as_ptr(), argsize) };
1635 | |     unsafe { CString::from_raw(quoted_ptr as *mut c_char) }
1636 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:559:29
    |
559 | / ...                   ((-(1 as libc::c_int) as libc::c_long
560 | | ...                       - 0 as libc::c_int as idx_t)
561 | | ...                       < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
559 ~                             i32::from((-(1 as libc::c_int) as libc::c_long
560 +                                 - 0 as libc::c_int as idx_t)
561 +                                 < s - 1 as libc::c_int as libc::c_long)
    |

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1632:1
     |
1632 | / pub fn quote_mem(arg: &CStr) -> CString {
1633 | |     let argsize = arg.to_bytes().len() as u64;
1634 | |     let quoted_ptr: *const c_char = unsafe { quote_n_mem(0, arg.as_ptr(), argsize) };
1635 | |     unsafe { CString::from_raw(quoted_ptr as *mut c_char) }
1636 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: arithmetic detected
   --> src/xmalloc.rs:559:30
    |
559 |   ...                   ((-(1 as libc::c_int) as libc::c_long
    |  ________________________^
560 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:559:30
    |
559 |   ...                   ((-(1 as libc::c_int) as libc::c_long
    |  ________________________^
560 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:559:31
    |
559 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:560:35
    |
560 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:561:35
    |
561 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
    --> src/quotearg.rs:1639:1
     |
1639 | / pub fn quote_n(n: i32, arg: &str) -> *const libc::c_char {
1640 | |     let c_string = CString::new(arg).unwrap();
1641 | |     unsafe { quote_n_mem(n, c_string.as_ptr(), u64::MAX) }
1642 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:561:35
    |
561 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1639:1
     |
1639 | / pub fn quote_n(n: i32, arg: &str) -> *const libc::c_char {
1640 | |     let c_string = CString::new(arg).unwrap();
1641 | |     unsafe { quote_n_mem(n, c_string.as_ptr(), u64::MAX) }
1642 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:561:39
    |
561 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:564:25
    |
564 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(0 as libc::c_int as idx_t / n < s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:564:26
    |
564 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:564:26
    |
564 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xmalloc.rs:564:26
    |
564 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a function
    --> src/quotearg.rs:1645:1
     |
1645 | / pub unsafe extern "C" fn quote(mut arg: *const libc::c_char) -> *const libc::c_char {
1646 | |     let arg_str = unsafe { CStr::from_ptr(arg).to_string_lossy().into_owned() };
1647 | | return quote_n(0, &arg_str);
1648 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
    --> src/quotearg.rs:1645:1
     |
1645 | / pub unsafe extern "C" fn quote(mut arg: *const libc::c_char) -> *const libc::c_char {
1646 | |     let arg_str = unsafe { CStr::from_ptr(arg).to_string_lossy().into_owned() };
1647 | | return quote_n(0, &arg_str);
1648 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:564:26
    |
564 |                         (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:567:21
    |
567 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(-(1 as libc::c_int) as idx_t / s < n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:567:22
    |
567 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:567:22
    |
567 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a module
  --> lib.rs:33:1
   |
33 | pub mod setlocale_null;
   | ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer division
   --> src/xmalloc.rs:567:22
    |
567 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a type alias
  --> src/setlocale_null.rs:13:1
   |
13 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:567:22
    |
567 |                     (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/setlocale_null.rs:15:1
   |
15 | / pub fn setlocale_null_r(
16 | |     category: libc::c_int,
17 | |     buf: &mut Vec<u8>,
18 | | ) -> libc::c_int {
...  |
24 | |     }
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: borrow as raw pointer
   --> src/xmalloc.rs:573:10
    |
573 |         *(&mut nbytes as *mut idx_t) = fresh8;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(nbytes)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: borrow as raw pointer
   --> src/xmalloc.rs:577:10
    |
577 |         *(&mut nbytes as *mut idx_t) = fresh10;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(nbytes)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: missing `#[inline]` for a function
  --> src/setlocale_null.rs:15:1
   |
15 | / pub fn setlocale_null_r(
16 | |     category: libc::c_int,
17 | |     buf: &mut Vec<u8>,
18 | | ) -> libc::c_int {
...  |
24 | |     }
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:578:9
    |
578 |         fresh11 as libc::c_int
    |         ^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(fresh11)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:581:12
    |
581 |         if (9223372036854775807 as libc::c_long as libc::c_ulong)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i64` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:584:13
    |
584 |             9223372036854775807 as libc::c_long as libc::c_ulong
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:589:9
    |
589 | /         (if nbytes < DEFAULT_MXFAST_0 as libc::c_int as libc::c_long {
590 | |             DEFAULT_MXFAST_0 as libc::c_int
591 | |         } else {
592 | |             0 as libc::c_int
593 | |         }) as libc::c_ulong
    | |___________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a function
  --> src/setlocale_null.rs:28:1
   |
28 | / pub fn setlocale_null(category: libc::c_int) -> Option<String> {
29 | |     let result = unsafe { setlocale_null_unlocked(category) };
30 | |     if result.is_null() {
31 | |         None
...  |
34 | |     }
35 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:589:22
    |
589 |         (if nbytes < DEFAULT_MXFAST_0 as libc::c_int as libc::c_long {
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(DEFAULT_MXFAST_0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u32` to `i32` may wrap around the value
   --> src/xmalloc.rs:589:22
    |
589 |         (if nbytes < DEFAULT_MXFAST_0 as libc::c_int as libc::c_long {
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing `#[inline]` for a function
  --> src/setlocale_null.rs:28:1
   |
28 | / pub fn setlocale_null(category: libc::c_int) -> Option<String> {
29 | |     let result = unsafe { setlocale_null_unlocked(category) };
30 | |     if result.is_null() {
31 | |         None
...  |
34 | |     }
35 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `u32` to `i32` may wrap around the value
   --> src/xmalloc.rs:590:13
    |
590 |             DEFAULT_MXFAST_0 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: arithmetic detected
   --> src/xmalloc.rs:596:13
    |
596 |         n = adjusted_nbytes / s;
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:596:13
    |
596 |         n = adjusted_nbytes / s;
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xmalloc.rs:596:13
    |
596 |         n = adjusted_nbytes / s;
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: arithmetic detected
   --> src/xmalloc.rs:597:18
    |
597 |         nbytes = adjusted_nbytes - adjusted_nbytes % s;
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a module
  --> lib.rs:34:1
   |
34 | pub mod setlocale_null_unlocked;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:597:18
    |
597 |         nbytes = adjusted_nbytes - adjusted_nbytes % s;
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a type alias
  --> src/setlocale_null_unlocked.rs:16:1
   |
16 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: you are using modulo operator on types that might have different signs
   --> src/xmalloc.rs:597:36
    |
597 |         nbytes = adjusted_nbytes - adjusted_nbytes % s;
    |                                    ^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::modulo-arithmetic` implied by `-W clippy::restriction`
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:600:15
    |
600 |         *pn = 0 as libc::c_int as idx_t;
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:602:8
    |
602 |     if n - n0 < n_incr_min
    |        ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a function
  --> src/setlocale_null_unlocked.rs:18:1
   |
18 | / pub unsafe extern "C" fn setlocale_null_unlocked(
19 | |     mut category: libc::c_int,
20 | | ) -> *const libc::c_char {
21 | |     let mut result: *const libc::c_char = setlocale(category, 0 as *const libc::c_char);
22 | |     return result;
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
  --> src/setlocale_null_unlocked.rs:18:1
   |
18 | / pub unsafe extern "C" fn setlocale_null_unlocked(
19 | |     mut category: libc::c_int,
20 | | ) -> *const libc::c_char {
21 | |     let mut result: *const libc::c_char = setlocale(category, 0 as *const libc::c_char);
22 | |     return result;
23 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:602:8
    |
602 |     if n - n0 < n_incr_min
    |        ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: borrow as raw pointer
   --> src/xmalloc.rs:605:14
    |
605 |             *(&mut n as *mut idx_t) = fresh12;
    |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:606:13
    |
606 |             fresh13 as libc::c_int != 0
    |             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(fresh13)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:607:20
    |
607 |                 || 0 as libc::c_int as libc::c_long <= n_max && n_max < n
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/setlocale_null_unlocked.rs:25:1
   |
25 | / pub fn setlocale_null_r_unlocked(
26 | |     category: libc::c_int,
27 | |     buf: &mut Vec<u8>,
28 | | ) -> libc::c_int {
...  |
55 | |     }
56 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:608:24
    |
608 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
  --> src/setlocale_null_unlocked.rs:25:1
   |
25 | / pub fn setlocale_null_r_unlocked(
26 | |     category: libc::c_int,
27 | |     buf: &mut Vec<u8>,
28 | | ) -> libc::c_int {
...  |
55 | |     }
56 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:608:54
    |
608 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:608:54
    |
608 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                                                      ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:608:54
    |
608 |                 || (if (0 as libc::c_int as idx_t) < -(1 as libc::c_int) as idx_t
    |                                                      ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:609:24
    |
609 |                       && ((if 1 as libc::c_int != 0 {
    |  ________________________^
610 | |                         0 as libc::c_int as libc::c_long
611 | |                     } else {
612 | |                         n
613 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:609:24
    |
609 |                       && ((if 1 as libc::c_int != 0 {
    |  ________________________^
610 | |                         0 as libc::c_int as libc::c_long
611 | |                     } else {
612 | |                         n
613 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:609:25
    |
609 |                       && ((if 1 as libc::c_int != 0 {
    |  _________________________^
610 | |                         0 as libc::c_int as libc::c_long
611 | |                     } else {
612 | |                         n
613 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:610:25
    |
610 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:613:26
    |
613 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:614:27
    |
614 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:615:24
    |
615 |                       && ((if 1 as libc::c_int != 0 {
    |  ________________________^
616 | |                         0 as libc::c_int as libc::c_long
617 | |                     } else {
618 | |                         s
619 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:615:24
    |
615 |                       && ((if 1 as libc::c_int != 0 {
    |  ________________________^
616 | |                         0 as libc::c_int as libc::c_long
617 | |                     } else {
618 | |                         s
619 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:615:25
    |
615 |                       && ((if 1 as libc::c_int != 0 {
    |  _________________________^
616 | |                         0 as libc::c_int as libc::c_long
617 | |                     } else {
618 | |                         s
619 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:616:25
    |
616 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:619:26
    |
619 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:620:27
    |
620 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:621:32
    |
621 |                     && (if s < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:622:32
    |
622 |                         if n < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:623:32
    |
623 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
624 | | ...                       0 as libc::c_int as libc::c_long
625 | | ...                   } else {
626 | | ...                       (if 1 as libc::c_int != 0 {
...   |
630 | | ...                       }) + s
631 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:623:32
    |
623 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
624 | | ...                       0 as libc::c_int as libc::c_long
625 | | ...                   } else {
626 | | ...                       (if 1 as libc::c_int != 0 {
...   |
630 | | ...                       }) + s
631 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:623:33
    |
623 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
624 | | ...                       0 as libc::c_int as libc::c_long
625 | | ...                   } else {
626 | | ...                       (if 1 as libc::c_int != 0 {
...   |
630 | | ...                       }) + s
631 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:624:33
    |
624 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:626:33
    |
626 | / ...                   (if 1 as libc::c_int != 0 {
627 | | ...                       0 as libc::c_int as libc::c_long
628 | | ...                   } else {
629 | | ...                       -(1 as libc::c_int) as idx_t
630 | | ...                   }) + s
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a module
  --> lib.rs:35:1
   |
35 | pub mod version;
   | ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:627:37
    |
627 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:629:37
    |
629 | ...                   -(1 as libc::c_int) as idx_t
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a static
 --> src/version.rs:3:1
  |
3 | / pub static mut Version: *const libc::c_char = b"9.5.42-bbc97\0" as *const u8
4 | |     as *const libc::c_char;
  | |___________________________^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:631:34
    |
631 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a module
  --> lib.rs:36:1
   |
36 | pub mod version_etc;
   | ^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:632:35
    |
632 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/version_etc.rs:16:1
   |
16 | pub type __builtin_va_list = __va_list;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:634:33
    |
634 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(n < -(1 as libc::c_int) as idx_t / s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct
  --> src/version_etc.rs:19:1
   |
19 | / pub struct __va_list {
20 | |     pub __stack: *mut libc::c_void,
21 | |     pub __gr_top: *mut libc::c_void,
22 | |     pub __vr_top: *mut libc::c_void,
23 | |     pub __gr_offs: libc::c_int,
24 | |     pub __vr_offs: libc::c_int,
25 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:634:38
    |
634 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:634:38
    |
634 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/version_etc.rs:20:5
   |
20 |     pub __stack: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer division
   --> src/xmalloc.rs:634:38
    |
634 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: missing documentation for a struct field
  --> src/version_etc.rs:21:5
   |
21 |     pub __gr_top: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:634:38
    |
634 | ...                   (n < -(1 as libc::c_int) as idx_t / s) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:22:5
   |
22 |     pub __vr_top: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:636:33
    |
636 | / ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
637 | | ...                       0 as libc::c_int as libc::c_long
638 | | ...                   } else {
639 | | ...                       s
...   |
702 | | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
703 | | ...                       as libc::c_int
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
636 ~                                 i32::from((if (if (if ((if 1 as libc::c_int != 0 {
637 +                                     0 as libc::c_int as libc::c_long
638 +                                 } else {
639 +                                     s
640 +                                 }) - 1 as libc::c_int as libc::c_long)
641 +                                     < 0 as libc::c_int as libc::c_long
642 +                                 {
643 +                                     !(((((if 1 as libc::c_int != 0 {
644 +                                         0 as libc::c_int as libc::c_long
645 +                                     } else {
646 +                                         s
647 +                                     }) + 1 as libc::c_int as libc::c_long)
648 +                                         << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
649 +                                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
650 +                                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
651 +                                         - 1 as libc::c_int as libc::c_long)
652 +                                         * 2 as libc::c_int as libc::c_long
653 +                                         + 1 as libc::c_int as libc::c_long)
654 +                                 } else {
655 +                                     (if 1 as libc::c_int != 0 {
656 +                                         0 as libc::c_int as libc::c_long
657 +                                     } else {
658 +                                         s
659 +                                     }) + 0 as libc::c_int as libc::c_long
660 +                                 }) < 0 as libc::c_int as libc::c_long
661 +                                 {
662 +                                     (s
663 +                                         < -(if ((if 1 as libc::c_int != 0 {
664 +                                             0 as libc::c_int as libc::c_long
665 +                                         } else {
666 +                                             s
667 +                                         }) - 1 as libc::c_int as libc::c_long)
668 +                                             < 0 as libc::c_int as libc::c_long
669 +                                         {
670 +                                             ((((if 1 as libc::c_int != 0 {
671 +                                                 0 as libc::c_int as libc::c_long
672 +                                             } else {
673 +                                                 s
674 +                                             }) + 1 as libc::c_int as libc::c_long)
675 +                                                 << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
676 +                                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
677 +                                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
678 +                                                 - 1 as libc::c_int as libc::c_long)
679 +                                                 * 2 as libc::c_int as libc::c_long
680 +                                                 + 1 as libc::c_int as libc::c_long
681 +                                         } else {
682 +                                             (if 1 as libc::c_int != 0 {
683 +                                                 0 as libc::c_int as libc::c_long
684 +                                             } else {
685 +                                                 s
686 +                                             }) - 1 as libc::c_int as libc::c_long
687 +                                         })) as libc::c_int
688 +                                 } else {
689 +                                     ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
690 +                                 }) != 0
691 +                                 {
692 +                                     (if 1 as libc::c_int != 0 {
693 +                                         0 as libc::c_int as libc::c_long
694 +                                     } else {
695 +                                         s
696 +                                     }) + -(1 as libc::c_int) as idx_t
697 +                                         >> (::core::mem::size_of::<idx_t>() as libc::c_ulong)
698 +                                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
699 +                                             .wrapping_sub(1 as libc::c_int as libc::c_ulong)
700 +                                 } else {
701 +                                     -(1 as libc::c_int) as idx_t / -s
702 +                                 }) <= -(1 as libc::c_int) as libc::c_long - n)
    |

warning: missing documentation for a struct field
  --> src/version_etc.rs:23:5
   |
23 |     pub __gr_offs: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/version_etc.rs:24:5
   |
24 |     pub __vr_offs: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:636:34
    |
636 |   ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ________________________^
637 | | ...                       0 as libc::c_int as libc::c_long
638 | | ...                   } else {
639 | | ...                       s
...   |
701 | | ...                       -(1 as libc::c_int) as idx_t / -s
702 | | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a type alias
  --> src/version_etc.rs:26:1
   |
26 | pub type va_list = __builtin_va_list;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:636:46
    |
636 |   ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ____________________________________^
637 | | ...                       0 as libc::c_int as libc::c_long
638 | | ...                   } else {
639 | | ...                       s
640 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:636:46
    |
636 |   ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ____________________________________^
637 | | ...                       0 as libc::c_int as libc::c_long
638 | | ...                   } else {
639 | | ...                       s
640 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a type alias
  --> src/version_etc.rs:27:1
   |
27 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:636:47
    |
636 |   ...                   ((if (if (if ((if 1 as libc::c_int != 0 {
    |  _____________________________________^
637 | | ...                       0 as libc::c_int as libc::c_long
638 | | ...                   } else {
639 | | ...                       s
640 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a type alias
  --> src/version_etc.rs:28:1
   |
28 | pub type __off_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:637:37
    |
637 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/version_etc.rs:29:1
   |
29 | pub type __off64_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:640:38
    |
640 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct
  --> src/version_etc.rs:32:1
   |
32 | / pub struct _IO_FILE {
33 | |     pub _flags: libc::c_int,
34 | |     pub _IO_read_ptr: *mut libc::c_char,
35 | |     pub _IO_read_end: *mut libc::c_char,
...  |
61 | |     pub _unused2: [libc::c_char; 20],
62 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:641:39
    |
641 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:33:5
   |
33 |     pub _flags: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:643:38
    |
643 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
644 | | ...                       0 as libc::c_int as libc::c_long
645 | | ...                   } else {
646 | | ...                       s
...   |
652 | | ...                       * 2 as libc::c_int as libc::c_long
653 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/version_etc.rs:34:5
   |
34 |     pub _IO_read_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:643:38
    |
643 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
644 | | ...                       0 as libc::c_int as libc::c_long
645 | | ...                   } else {
646 | | ...                       s
...   |
652 | | ...                       * 2 as libc::c_int as libc::c_long
653 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/version_etc.rs:35:5
   |
35 |     pub _IO_read_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:643:42
    |
643 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ____________________________^
644 | | ...                       0 as libc::c_int as libc::c_long
645 | | ...                   } else {
646 | | ...                       s
647 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/version_etc.rs:36:5
   |
36 |     pub _IO_read_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/version_etc.rs:37:5
   |
37 |     pub _IO_write_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:644:41
    |
644 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:38:5
   |
38 |     pub _IO_write_ptr: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:647:42
    |
647 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:39:5
   |
39 |     pub _IO_write_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:649:59
    |
649 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/version_etc.rs:40:5
   |
40 |     pub _IO_buf_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:650:59
    |
650 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:651:43
    |
651 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:41:5
   |
41 |     pub _IO_buf_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:652:43
    |
652 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:42:5
   |
42 |     pub _IO_save_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:653:43
    |
653 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:43:5
   |
43 |     pub _IO_backup_base: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/version_etc.rs:44:5
   |
44 |     pub _IO_save_end: *mut libc::c_char,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:655:37
    |
655 | / ...                   (if 1 as libc::c_int != 0 {
656 | | ...                       0 as libc::c_int as libc::c_long
657 | | ...                   } else {
658 | | ...                       s
659 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:655:37
    |
655 | / ...                   (if 1 as libc::c_int != 0 {
656 | | ...                       0 as libc::c_int as libc::c_long
657 | | ...                   } else {
658 | | ...                       s
659 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/version_etc.rs:45:5
   |
45 |     pub _markers: *mut _IO_marker,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/version_etc.rs:46:5
   |
46 |     pub _chain: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:655:37
    |
655 | / ...                   (if 1 as libc::c_int != 0 {
656 | | ...                       0 as libc::c_int as libc::c_long
657 | | ...                   } else {
658 | | ...                       s
659 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/version_etc.rs:47:5
   |
47 |     pub _fileno: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:656:41
    |
656 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:48:5
   |
48 |     pub _flags2: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:659:42
    |
659 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:49:5
   |
49 |     pub _old_offset: __off_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:660:38
    |
660 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:50:5
   |
50 |     pub _cur_column: libc::c_ushort,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:662:37
    |
662 | / ...                   (s
663 | | ...                       < -(if ((if 1 as libc::c_int != 0 {
664 | | ...                           0 as libc::c_int as libc::c_long
665 | | ...                       } else {
...   |
686 | | ...                           }) - 1 as libc::c_int as libc::c_long
687 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
662 ~                                     i32::from(s
663 +                                         < -(if ((if 1 as libc::c_int != 0 {
664 +                                             0 as libc::c_int as libc::c_long
665 +                                         } else {
666 +                                             s
667 +                                         }) - 1 as libc::c_int as libc::c_long)
668 +                                             < 0 as libc::c_int as libc::c_long
669 +                                         {
670 +                                             ((((if 1 as libc::c_int != 0 {
671 +                                                 0 as libc::c_int as libc::c_long
672 +                                             } else {
673 +                                                 s
674 +                                             }) + 1 as libc::c_int as libc::c_long)
675 +                                                 << (::core::mem::size_of::<idx_t>() as libc::c_ulong)
676 +                                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
677 +                                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
678 +                                                 - 1 as libc::c_int as libc::c_long)
679 +                                                 * 2 as libc::c_int as libc::c_long
680 +                                                 + 1 as libc::c_int as libc::c_long
681 +                                         } else {
682 +                                             (if 1 as libc::c_int != 0 {
683 +                                                 0 as libc::c_int as libc::c_long
684 +                                             } else {
685 +                                                 s
686 +                                             }) - 1 as libc::c_int as libc::c_long
687 +                                         }))
    |

warning: missing documentation for a struct field
  --> src/version_etc.rs:51:5
   |
51 |     pub _vtable_offset: libc::c_schar,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:663:43
    |
663 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
664 | | ...                       0 as libc::c_int as libc::c_long
665 | | ...                   } else {
666 | | ...                       s
...   |
686 | | ...                       }) - 1 as libc::c_int as libc::c_long
687 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a struct field
  --> src/version_etc.rs:52:5
   |
52 |     pub _shortbuf: [libc::c_char; 1],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:663:43
    |
663 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
664 | | ...                       0 as libc::c_int as libc::c_long
665 | | ...                   } else {
666 | | ...                       s
...   |
686 | | ...                       }) - 1 as libc::c_int as libc::c_long
687 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a struct field
  --> src/version_etc.rs:53:5
   |
53 |     pub _lock: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:663:49
    |
663 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
664 | | ...                       0 as libc::c_int as libc::c_long
665 | | ...                   } else {
666 | | ...                       s
667 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/version_etc.rs:54:5
   |
54 |     pub _offset: __off64_t,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:664:45
    |
664 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:55:5
   |
55 |     pub _codecvt: *mut _IO_codecvt,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:667:46
    |
667 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:668:47
    |
668 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:56:5
   |
56 |     pub _wide_data: *mut _IO_wide_data,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
  --> src/version_etc.rs:57:5
   |
57 |     pub _freeres_list: *mut _IO_FILE,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:670:48
    |
670 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
671 | | ...                       0 as libc::c_int as libc::c_long
672 | | ...                   } else {
673 | | ...                       s
674 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
  --> src/version_etc.rs:58:5
   |
58 |     pub _freeres_buf: *mut libc::c_void,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:671:49
    |
671 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:59:5
   |
59 |     pub __pad5: size_t,
   |     ^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:674:50
    |
674 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a struct field
  --> src/version_etc.rs:60:5
   |
60 |     pub _mode: libc::c_int,
   |     ^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:676:67
    |
676 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
  --> src/version_etc.rs:61:5
   |
61 |     pub _unused2: [libc::c_char; 20],
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:677:67
    |
677 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:678:51
    |
678 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:679:51
    |
679 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/version_etc.rs:63:1
   |
63 | pub type _IO_lock_t = ();
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:680:51
    |
680 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/version_etc.rs:64:1
   |
64 | pub type FILE = _IO_FILE;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:682:45
    |
682 | / ...                   (if 1 as libc::c_int != 0 {
683 | | ...                       0 as libc::c_int as libc::c_long
684 | | ...                   } else {
685 | | ...                       s
686 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a constant
  --> src/version_etc.rs:65:1
   |
65 | pub const COPYRIGHT_YEAR: C2RustUnnamed = 2024;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:683:49
    |
683 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/version_etc.rs:66:1
   |
66 | pub type C2RustUnnamed = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:686:50
    |
686 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:689:37
    |
689 | ...                   ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from((0 as libc::c_int as libc::c_long) < s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:689:38
    |
689 | ...                   ((0 as libc::c_int as libc::c_long) < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
   --> src/version_etc.rs:68:1
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
245 | |
246 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:692:37
    |
692 | / ...                   (if 1 as libc::c_int != 0 {
693 | | ...                       0 as libc::c_int as libc::c_long
694 | | ...                   } else {
695 | | ...                       s
...   |
698 | | ...                           .wrapping_mul(8 as libc::c_int as libc::c_ulong)
699 | | ...                           .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing `#[inline]` for a function
   --> src/version_etc.rs:68:1
    |
68  | / pub unsafe extern "C" fn version_etc_arn(
69  | |     mut stream: *mut FILE,
70  | |     mut command_name: *const libc::c_char,
71  | |     mut package: *const libc::c_char,
...   |
245 | |
246 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:692:37
    |
692 | / ...                   (if 1 as libc::c_int != 0 {
693 | | ...                       0 as libc::c_int as libc::c_long
694 | | ...                   } else {
695 | | ...                       s
...   |
698 | | ...                           .wrapping_mul(8 as libc::c_int as libc::c_ulong)
699 | | ...                           .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:692:37
    |
692 | / ...                   (if 1 as libc::c_int != 0 {
693 | | ...                       0 as libc::c_int as libc::c_long
694 | | ...                   } else {
695 | | ...                       s
696 | | ...                   }) + -(1 as libc::c_int) as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:693:41
    |
693 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:696:42
    |
696 | ...                   }) + -(1 as libc::c_int) as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:698:59
    |
698 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:699:59
    |
699 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
   --> src/xmalloc.rs:701:37
    |
701 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer division
   --> src/xmalloc.rs:701:37
    |
701 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:701:37
    |
701 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: integer arithmetic detected
   --> src/xmalloc.rs:701:37
    |
701 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:701:68
    |
701 | ...                   -(1 as libc::c_int) as idx_t / -s
    |                                                      ^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:702:39
    |
702 | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:702:39
    |
702 | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:702:39
    |
702 | ...                   }) <= -(1 as libc::c_int) as libc::c_long - n)
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:706:40
    |
706 |   ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________________^
707 | | ...                       0 as libc::c_int as libc::c_long
708 | | ...                   } else {
709 | | ...                       (if 1 as libc::c_int != 0 {
...   |
713 | | ...                       }) + 0 as libc::c_int as idx_t
714 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:706:40
    |
706 |   ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________________^
707 | | ...                       0 as libc::c_int as libc::c_long
708 | | ...                   } else {
709 | | ...                       (if 1 as libc::c_int != 0 {
...   |
713 | | ...                       }) + 0 as libc::c_int as idx_t
714 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:706:41
    |
706 |   ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |  ___________________________________^
707 | | ...                       0 as libc::c_int as libc::c_long
708 | | ...                   } else {
709 | | ...                       (if 1 as libc::c_int != 0 {
...   |
713 | | ...                       }) + 0 as libc::c_int as idx_t
714 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:707:33
    |
707 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:709:33
    |
709 | / ...                   (if 1 as libc::c_int != 0 {
710 | | ...                       0 as libc::c_int as libc::c_long
711 | | ...                   } else {
712 | | ...                       s
713 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:710:37
    |
710 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:713:38
    |
713 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:714:34
    |
714 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:715:35
    |
715 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:717:34
    |
717 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
718 | | ...                       0 as libc::c_int as libc::c_long
719 | | ...                   } else {
720 | | ...                       (if 1 as libc::c_int != 0 {
...   |
730 | | ...                       * 2 as libc::c_int as libc::c_long
731 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:717:34
    |
717 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
718 | | ...                       0 as libc::c_int as libc::c_long
719 | | ...                   } else {
720 | | ...                       (if 1 as libc::c_int != 0 {
...   |
730 | | ...                       * 2 as libc::c_int as libc::c_long
731 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:717:38
    |
717 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ____________________________^
718 | | ...                       0 as libc::c_int as libc::c_long
719 | | ...                   } else {
720 | | ...                       (if 1 as libc::c_int != 0 {
...   |
724 | | ...                       }) + 0 as libc::c_int as idx_t
725 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:718:37
    |
718 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:720:37
    |
720 | / ...                   (if 1 as libc::c_int != 0 {
721 | | ...                       0 as libc::c_int as libc::c_long
722 | | ...                   } else {
723 | | ...                       s
724 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:721:41
    |
721 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:724:42
    |
724 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:725:38
    |
725 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:727:55
    |
727 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a function
   --> src/version_etc.rs:248:1
    |
248 | / pub unsafe extern "C" fn version_etc_ar(
249 | |     mut stream: *mut FILE,
250 | |     mut command_name: *const libc::c_char,
251 | |     mut package: *const libc::c_char,
...   |
261 | |     version_etc_arn(stream, command_name, package, version, authors, n_authors);
262 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:728:55
    |
728 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `#[inline]` for a function
   --> src/version_etc.rs:248:1
    |
248 | / pub unsafe extern "C" fn version_etc_ar(
249 | |     mut stream: *mut FILE,
250 | |     mut command_name: *const libc::c_char,
251 | |     mut package: *const libc::c_char,
...   |
261 | |     version_etc_arn(stream, command_name, package, version, authors, n_authors);
262 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:729:39
    |
729 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:730:39
    |
730 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:731:39
    |
731 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:733:33
    |
733 | / ...                   (if 1 as libc::c_int != 0 {
734 | | ...                       0 as libc::c_int as libc::c_long
735 | | ...                   } else {
736 | | ...                       (if 1 as libc::c_int != 0 {
...   |
740 | | ...                       }) + 0 as libc::c_int as idx_t
741 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:733:33
    |
733 | / ...                   (if 1 as libc::c_int != 0 {
734 | | ...                       0 as libc::c_int as libc::c_long
735 | | ...                   } else {
736 | | ...                       (if 1 as libc::c_int != 0 {
...   |
740 | | ...                       }) + 0 as libc::c_int as idx_t
741 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:733:33
    |
733 | / ...                   (if 1 as libc::c_int != 0 {
734 | | ...                       0 as libc::c_int as libc::c_long
735 | | ...                   } else {
736 | | ...                       (if 1 as libc::c_int != 0 {
...   |
740 | | ...                       }) + 0 as libc::c_int as idx_t
741 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:734:37
    |
734 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:736:37
    |
736 | / ...                   (if 1 as libc::c_int != 0 {
737 | | ...                       0 as libc::c_int as libc::c_long
738 | | ...                   } else {
739 | | ...                       s
740 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a function
   --> src/version_etc.rs:264:1
    |
264 | / pub unsafe extern "C" fn version_etc_va(
265 | |     mut stream: *mut FILE,
266 | |     mut command_name: *const libc::c_char,
267 | |     mut package: *const libc::c_char,
...   |
290 | |     );
291 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:737:41
    |
737 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
   --> src/version_etc.rs:264:1
    |
264 | / pub unsafe extern "C" fn version_etc_va(
265 | |     mut stream: *mut FILE,
266 | |     mut command_name: *const libc::c_char,
267 | |     mut package: *const libc::c_char,
...   |
290 | |     );
291 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:740:42
    |
740 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:741:38
    |
741 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:742:34
    |
742 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:744:33
    |
744 | / ...                   (((if 1 as libc::c_int != 0 {
745 | | ...                       0 as libc::c_int as libc::c_long
746 | | ...                   } else {
747 | | ...                       s
...   |
784 | | ...                           }) - 1 as libc::c_int as libc::c_long
785 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
744 ~                                 i32::from(((if 1 as libc::c_int != 0 {
745 +                                     0 as libc::c_int as libc::c_long
746 +                                 } else {
747 +                                     s
748 +                                 }) + 0 as libc::c_int as idx_t)
749 +                                     < -(if ((if 1 as libc::c_int != 0 {
750 +                                         0 as libc::c_int as libc::c_long
751 +                                     } else {
752 +                                         (if 1 as libc::c_int != 0 {
753 +                                             0 as libc::c_int as libc::c_long
754 +                                         } else {
755 +                                             s
756 +                                         }) + 0 as libc::c_int as idx_t
757 +                                     }) - 1 as libc::c_int as libc::c_long)
758 +                                         < 0 as libc::c_int as libc::c_long
759 +                                     {
760 +                                         ((((if 1 as libc::c_int != 0 {
761 +                                             0 as libc::c_int as libc::c_long
762 +                                         } else {
763 +                                             (if 1 as libc::c_int != 0 {
764 +                                                 0 as libc::c_int as libc::c_long
765 +                                             } else {
766 +                                                 s
767 +                                             }) + 0 as libc::c_int as idx_t
768 +                                         }) + 1 as libc::c_int as libc::c_long)
769 +                                             << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
770 +                                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
771 +                                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
772 +                                             - 1 as libc::c_int as libc::c_long)
773 +                                             * 2 as libc::c_int as libc::c_long
774 +                                             + 1 as libc::c_int as libc::c_long
775 +                                     } else {
776 +                                         (if 1 as libc::c_int != 0 {
777 +                                             0 as libc::c_int as libc::c_long
778 +                                         } else {
779 +                                             (if 1 as libc::c_int != 0 {
780 +                                                 0 as libc::c_int as libc::c_long
781 +                                             } else {
782 +                                                 s
783 +                                             }) + 0 as libc::c_int as idx_t
784 +                                         }) - 1 as libc::c_int as libc::c_long
785 +                                     }))
    |

warning: arithmetic detected
   --> src/xmalloc.rs:744:34
    |
744 |   ...                   (((if 1 as libc::c_int != 0 {
    |  ________________________^
745 | | ...                       0 as libc::c_int as libc::c_long
746 | | ...                   } else {
747 | | ...                       s
748 | | ...                   }) + 0 as libc::c_int as idx_t)
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:744:34
    |
744 |   ...                   (((if 1 as libc::c_int != 0 {
    |  ________________________^
745 | | ...                       0 as libc::c_int as libc::c_long
746 | | ...                   } else {
747 | | ...                       s
748 | | ...                   }) + 0 as libc::c_int as idx_t)
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:744:35
    |
744 |   ...                   (((if 1 as libc::c_int != 0 {
    |  _________________________^
745 | | ...                       0 as libc::c_int as libc::c_long
746 | | ...                   } else {
747 | | ...                       s
748 | | ...                   }) + 0 as libc::c_int as idx_t)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:745:37
    |
745 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:748:38
    |
748 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:749:39
    |
749 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
750 | | ...                       0 as libc::c_int as libc::c_long
751 | | ...                   } else {
752 | | ...                       (if 1 as libc::c_int != 0 {
...   |
784 | | ...                       }) - 1 as libc::c_int as libc::c_long
785 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:749:39
    |
749 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
750 | | ...                       0 as libc::c_int as libc::c_long
751 | | ...                   } else {
752 | | ...                       (if 1 as libc::c_int != 0 {
...   |
784 | | ...                       }) - 1 as libc::c_int as libc::c_long
785 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:749:45
    |
749 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
750 | | ...                       0 as libc::c_int as libc::c_long
751 | | ...                   } else {
752 | | ...                       (if 1 as libc::c_int != 0 {
...   |
756 | | ...                       }) + 0 as libc::c_int as idx_t
757 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:750:41
    |
750 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
   --> src/version_etc.rs:293:1
    |
293 | / pub unsafe extern "C" fn version_etc(
294 | |     mut stream: *mut FILE,
295 | |     mut command_name: *const libc::c_char,
296 | |     mut package: *const libc::c_char,
...   |
302 | |     version_etc_va(stream, command_name, package, version, authors.as_va_list());
303 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/version_etc.rs:293:1
    |
293 | / pub unsafe extern "C" fn version_etc(
294 | |     mut stream: *mut FILE,
295 | |     mut command_name: *const libc::c_char,
296 | |     mut package: *const libc::c_char,
...   |
302 | |     version_etc_va(stream, command_name, package, version, authors.as_va_list());
303 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:752:41
    |
752 | / ...                   (if 1 as libc::c_int != 0 {
753 | | ...                       0 as libc::c_int as libc::c_long
754 | | ...                   } else {
755 | | ...                       s
756 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:753:45
    |
753 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
   --> src/version_etc.rs:305:1
    |
305 | / pub fn emit_bug_reporting_address() {
306 | |     println!();
307 | |     let report_bugs = unsafe {
308 | |         gettext(b"Report bugs to: bug-coreutils@gnu.org\0".as_ptr() as *const libc::c_char)
...   |
319 | |     println!("{}", unsafe { std::ffi::CStr::from_ptr(help_page).to_string_lossy() });
320 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:756:46
    |
756 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
   --> src/version_etc.rs:305:1
    |
305 | / pub fn emit_bug_reporting_address() {
306 | |     println!();
307 | |     let report_bugs = unsafe {
308 | |         gettext(b"Report bugs to: bug-coreutils@gnu.org\0".as_ptr() as *const libc::c_char)
...   |
319 | |     println!("{}", unsafe { std::ffi::CStr::from_ptr(help_page).to_string_lossy() });
320 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:757:42
    |
757 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:758:43
    |
758 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:760:44
    |
760 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
761 | | ...                       0 as libc::c_int as libc::c_long
762 | | ...                   } else {
763 | | ...                       (if 1 as libc::c_int != 0 {
...   |
767 | | ...                       }) + 0 as libc::c_int as idx_t
768 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:761:45
    |
761 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:763:45
    |
763 | / ...                   (if 1 as libc::c_int != 0 {
764 | | ...                       0 as libc::c_int as libc::c_long
765 | | ...                   } else {
766 | | ...                       s
767 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:764:49
    |
764 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:767:50
    |
767 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:768:46
    |
768 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:770:63
    |
770 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:771:63
    |
771 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:772:47
    |
772 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:773:47
    |
773 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:774:47
    |
774 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a module
  --> lib.rs:37:1
   |
37 | pub mod version_etc_fsf;
   | ^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:776:41
    |
776 | / ...                   (if 1 as libc::c_int != 0 {
777 | | ...                       0 as libc::c_int as libc::c_long
778 | | ...                   } else {
779 | | ...                       (if 1 as libc::c_int != 0 {
...   |
783 | | ...                       }) + 0 as libc::c_int as idx_t
784 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a static
 --> src/version_etc_fsf.rs:3:1
  |
3 | / pub static mut version_etc_copyright: [libc::c_char; 47] = unsafe {
4 | |     *::core::mem::transmute::<
5 | |         &[u8; 47],
6 | |         &[libc::c_char; 47],
7 | |     >(b"Copyright %s %d Free Software Foundation, Inc.\0")
8 | | };
  | |__^
  |
  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:777:45
    |
777 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:779:45
    |
779 | / ...                   (if 1 as libc::c_int != 0 {
780 | | ...                       0 as libc::c_int as libc::c_long
781 | | ...                   } else {
782 | | ...                       s
783 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a module
  --> lib.rs:38:1
   |
38 | pub mod xalloc_die;
   | ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:780:49
    |
780 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:783:50
    |
783 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/xalloc_die.rs:16:1
   |
16 | / pub fn xalloc_die() {
17 | |     unsafe {
18 | |         if 0 != 0 {
19 | |             error(
...  |
52 | |     std::process::abort();
53 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:784:46
    |
784 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
  --> src/xalloc_die.rs:16:1
   |
16 | / pub fn xalloc_die() {
17 | |     unsafe {
18 | |         if 0 != 0 {
19 | |             error(
...  |
52 | |     std::process::abort();
53 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:787:33
    |
787 | / ...                   ((0 as libc::c_int as libc::c_long)
788 | | ...                       < (if 1 as libc::c_int != 0 {
789 | | ...                           0 as libc::c_int as libc::c_long
790 | | ...                       } else {
791 | | ...                           s
792 | | ...                       }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
787 ~                                 i32::from((0 as libc::c_int as libc::c_long)
788 +                                     < (if 1 as libc::c_int != 0 {
789 +                                         0 as libc::c_int as libc::c_long
790 +                                     } else {
791 +                                         s
792 +                                     }) + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:787:34
    |
787 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:788:39
    |
788 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
789 | | ...                       0 as libc::c_int as libc::c_long
790 | | ...                   } else {
791 | | ...                       s
792 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:788:39
    |
788 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
789 | | ...                       0 as libc::c_int as libc::c_long
790 | | ...                   } else {
791 | | ...                       s
792 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:788:39
    |
788 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
789 | | ...                       0 as libc::c_int as libc::c_long
790 | | ...                   } else {
791 | | ...                       s
792 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:789:41
    |
789 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:792:42
    |
792 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:793:45
    |
793 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:793:45
    |
793 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:793:45
    |
793 | ...                   }) != 0 && s == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:795:36
    |
795 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
796 | | ...                       0 as libc::c_int as libc::c_long
797 | | ...                   } else {
798 | | ...                       n
799 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:795:36
    |
795 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
796 | | ...                       0 as libc::c_int as libc::c_long
797 | | ...                   } else {
798 | | ...                       n
799 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:795:37
    |
795 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
796 | | ...                       0 as libc::c_int as libc::c_long
797 | | ...                   } else {
798 | | ...                       n
799 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:796:37
    |
796 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:799:38
    |
799 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:800:39
    |
800 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:802:37
    |
802 | / ...                   ((0 as libc::c_int as libc::c_long)
803 | | ...                       < n + 0 as libc::c_int as idx_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
802 ~                                     i32::from((0 as libc::c_int as libc::c_long)
803 +                                         < n + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:802:38
    |
802 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a module
  --> lib.rs:39:1
   |
39 | pub mod xdectoimax;
   | ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:803:43
    |
803 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: missing documentation for a type alias
  --> src/xdectoimax.rs:19:1
   |
19 | pub type __intmax_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: integer arithmetic detected
   --> src/xmalloc.rs:803:43
    |
803 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a type alias
  --> src/xdectoimax.rs:20:1
   |
20 | pub type intmax_t = __intmax_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:803:47
    |
803 | ...                   < n + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
  --> src/xdectoimax.rs:21:1
   |
21 | pub const LONGINT_OK: strtol_error = 0;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:805:37
    |
805 | / ...                   ((0 as libc::c_int as libc::c_long) < n
806 | | ...                       && (-(1 as libc::c_int) as libc::c_long
807 | | ...                           - 0 as libc::c_int as idx_t)
808 | | ...                           < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |____________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
805 ~                                     i32::from((0 as libc::c_int as libc::c_long) < n
806 +                                         && (-(1 as libc::c_int) as libc::c_long
807 +                                             - 0 as libc::c_int as idx_t)
808 +                                             < n - 1 as libc::c_int as libc::c_long)
    |

warning: missing documentation for a type alias
  --> src/xdectoimax.rs:22:1
   |
22 | pub type strtol_error = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:805:38
    |
805 | ...                   ((0 as libc::c_int as libc::c_long) < n
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
  --> src/xdectoimax.rs:23:1
   |
23 | pub const LONGINT_INVALID: strtol_error = 4;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:806:44
    |
806 |   ...                   && (-(1 as libc::c_int) as libc::c_long
    |  __________________________^
807 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:806:44
    |
806 |   ...                   && (-(1 as libc::c_int) as libc::c_long
    |  __________________________^
807 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a constant
  --> src/xdectoimax.rs:24:1
   |
24 | pub const LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW: strtol_error = 3;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xdectoimax.rs:25:1
   |
25 | pub const LONGINT_INVALID_SUFFIX_CHAR: strtol_error = 2;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:806:45
    |
806 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:807:47
    |
807 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
  --> src/xdectoimax.rs:26:1
   |
26 | pub const LONGINT_OVERFLOW: strtol_error = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:808:47
    |
808 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:808:47
    |
808 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
   --> src/xdectoimax.rs:28:1
    |
28  | / pub unsafe extern "C" fn xnumtoimax(
29  | |     mut n_str: *const libc::c_char,
30  | |     mut base: libc::c_int,
31  | |     mut min: intmax_t,
...   |
127 | |     return tnum;
128 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:808:51
    |
808 | ...                   < n - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
   --> src/xdectoimax.rs:28:1
    |
28  | / pub unsafe extern "C" fn xnumtoimax(
29  | |     mut n_str: *const libc::c_char,
30  | |     mut base: libc::c_int,
31  | |     mut min: intmax_t,
...   |
127 | |     return tnum;
128 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:811:33
    |
811 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(0 as libc::c_int as idx_t / s < n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:811:34
    |
811 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:811:34
    |
811 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xmalloc.rs:811:34
    |
811 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:811:34
    |
811 | ...                   (0 as libc::c_int as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:815:33
    |
815 |                         if s == 0 as libc::c_int as libc::c_long {
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:818:36
    |
818 | ...                   if n < 0 as libc::c_int as libc::c_long {
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:819:44
    |
819 |   ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________________^
820 | | ...                       0 as libc::c_int as libc::c_long
821 | | ...                   } else {
822 | | ...                       (if 1 as libc::c_int != 0 {
...   |
826 | | ...                       }) + 0 as libc::c_int as idx_t
827 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:819:44
    |
819 |   ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________________^
820 | | ...                       0 as libc::c_int as libc::c_long
821 | | ...                   } else {
822 | | ...                       (if 1 as libc::c_int != 0 {
...   |
826 | | ...                       }) + 0 as libc::c_int as idx_t
827 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:819:45
    |
819 |   ...                   if (if (if ((if 1 as libc::c_int != 0 {
    |  ___________________________________^
820 | | ...                       0 as libc::c_int as libc::c_long
821 | | ...                   } else {
822 | | ...                       (if 1 as libc::c_int != 0 {
...   |
826 | | ...                       }) + 0 as libc::c_int as idx_t
827 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:820:37
    |
820 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:822:37
    |
822 | / ...                   (if 1 as libc::c_int != 0 {
823 | | ...                       0 as libc::c_int as libc::c_long
824 | | ...                   } else {
825 | | ...                       n
826 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:823:41
    |
823 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:826:42
    |
826 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:827:38
    |
827 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:828:39
    |
828 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:830:38
    |
830 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
831 | | ...                       0 as libc::c_int as libc::c_long
832 | | ...                   } else {
833 | | ...                       (if 1 as libc::c_int != 0 {
...   |
843 | | ...                       * 2 as libc::c_int as libc::c_long
844 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:830:38
    |
830 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
831 | | ...                       0 as libc::c_int as libc::c_long
832 | | ...                   } else {
833 | | ...                       (if 1 as libc::c_int != 0 {
...   |
843 | | ...                       * 2 as libc::c_int as libc::c_long
844 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:830:42
    |
830 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ____________________________^
831 | | ...                       0 as libc::c_int as libc::c_long
832 | | ...                   } else {
833 | | ...                       (if 1 as libc::c_int != 0 {
...   |
837 | | ...                       }) + 0 as libc::c_int as idx_t
838 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:831:41
    |
831 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:833:41
    |
833 | / ...                   (if 1 as libc::c_int != 0 {
834 | | ...                       0 as libc::c_int as libc::c_long
835 | | ...                   } else {
836 | | ...                       n
837 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:834:45
    |
834 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:837:46
    |
837 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:838:42
    |
838 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:840:59
    |
840 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:841:59
    |
841 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:842:43
    |
842 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:843:43
    |
843 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:844:43
    |
844 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:846:37
    |
846 | / ...                   (if 1 as libc::c_int != 0 {
847 | | ...                       0 as libc::c_int as libc::c_long
848 | | ...                   } else {
849 | | ...                       (if 1 as libc::c_int != 0 {
...   |
853 | | ...                       }) + 0 as libc::c_int as idx_t
854 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:846:37
    |
846 | / ...                   (if 1 as libc::c_int != 0 {
847 | | ...                       0 as libc::c_int as libc::c_long
848 | | ...                   } else {
849 | | ...                       (if 1 as libc::c_int != 0 {
...   |
853 | | ...                       }) + 0 as libc::c_int as idx_t
854 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:846:37
    |
846 | / ...                   (if 1 as libc::c_int != 0 {
847 | | ...                       0 as libc::c_int as libc::c_long
848 | | ...                   } else {
849 | | ...                       (if 1 as libc::c_int != 0 {
...   |
853 | | ...                       }) + 0 as libc::c_int as idx_t
854 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:847:41
    |
847 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:849:41
    |
849 | / ...                   (if 1 as libc::c_int != 0 {
850 | | ...                       0 as libc::c_int as libc::c_long
851 | | ...                   } else {
852 | | ...                       n
853 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:850:45
    |
850 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:853:46
    |
853 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:854:42
    |
854 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:855:38
    |
855 | ...                   }) < 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:857:37
    |
857 | / ...                   (((if 1 as libc::c_int != 0 {
858 | | ...                       0 as libc::c_int as libc::c_long
859 | | ...                   } else {
860 | | ...                       n
...   |
897 | | ...                           }) - 1 as libc::c_int as libc::c_long
898 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
857 ~                                     i32::from(((if 1 as libc::c_int != 0 {
858 +                                         0 as libc::c_int as libc::c_long
859 +                                     } else {
860 +                                         n
861 +                                     }) + 0 as libc::c_int as idx_t)
862 +                                         < -(if ((if 1 as libc::c_int != 0 {
863 +                                             0 as libc::c_int as libc::c_long
864 +                                         } else {
865 +                                             (if 1 as libc::c_int != 0 {
866 +                                                 0 as libc::c_int as libc::c_long
867 +                                             } else {
868 +                                                 n
869 +                                             }) + 0 as libc::c_int as idx_t
870 +                                         }) - 1 as libc::c_int as libc::c_long)
871 +                                             < 0 as libc::c_int as libc::c_long
872 +                                         {
873 +                                             ((((if 1 as libc::c_int != 0 {
874 +                                                 0 as libc::c_int as libc::c_long
875 +                                             } else {
876 +                                                 (if 1 as libc::c_int != 0 {
877 +                                                     0 as libc::c_int as libc::c_long
878 +                                                 } else {
879 +                                                     n
880 +                                                 }) + 0 as libc::c_int as idx_t
881 +                                             }) + 1 as libc::c_int as libc::c_long)
882 +                                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
883 +                                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
884 +                                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
885 +                                                 - 1 as libc::c_int as libc::c_long)
886 +                                                 * 2 as libc::c_int as libc::c_long
887 +                                                 + 1 as libc::c_int as libc::c_long
888 +                                         } else {
889 +                                             (if 1 as libc::c_int != 0 {
890 +                                                 0 as libc::c_int as libc::c_long
891 +                                             } else {
892 +                                                 (if 1 as libc::c_int != 0 {
893 +                                                     0 as libc::c_int as libc::c_long
894 +                                                 } else {
895 +                                                     n
896 +                                                 }) + 0 as libc::c_int as idx_t
897 +                                             }) - 1 as libc::c_int as libc::c_long
898 +                                         }))
    |

warning: arithmetic detected
   --> src/xmalloc.rs:857:38
    |
857 |   ...                   (((if 1 as libc::c_int != 0 {
    |  ________________________^
858 | | ...                       0 as libc::c_int as libc::c_long
859 | | ...                   } else {
860 | | ...                       n
861 | | ...                   }) + 0 as libc::c_int as idx_t)
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:857:38
    |
857 |   ...                   (((if 1 as libc::c_int != 0 {
    |  ________________________^
858 | | ...                       0 as libc::c_int as libc::c_long
859 | | ...                   } else {
860 | | ...                       n
861 | | ...                   }) + 0 as libc::c_int as idx_t)
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:857:39
    |
857 |   ...                   (((if 1 as libc::c_int != 0 {
    |  _________________________^
858 | | ...                       0 as libc::c_int as libc::c_long
859 | | ...                   } else {
860 | | ...                       n
861 | | ...                   }) + 0 as libc::c_int as idx_t)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:858:41
    |
858 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:861:42
    |
861 | ...                   }) + 0 as libc::c_int as idx_t)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:862:43
    |
862 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
863 | | ...                       0 as libc::c_int as libc::c_long
864 | | ...                   } else {
865 | | ...                       (if 1 as libc::c_int != 0 {
...   |
897 | | ...                       }) - 1 as libc::c_int as libc::c_long
898 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:862:43
    |
862 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
863 | | ...                       0 as libc::c_int as libc::c_long
864 | | ...                   } else {
865 | | ...                       (if 1 as libc::c_int != 0 {
...   |
897 | | ...                       }) - 1 as libc::c_int as libc::c_long
898 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:862:49
    |
862 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
863 | | ...                       0 as libc::c_int as libc::c_long
864 | | ...                   } else {
865 | | ...                       (if 1 as libc::c_int != 0 {
...   |
869 | | ...                       }) + 0 as libc::c_int as idx_t
870 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:863:45
    |
863 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:865:45
    |
865 | / ...                   (if 1 as libc::c_int != 0 {
866 | | ...                       0 as libc::c_int as libc::c_long
867 | | ...                   } else {
868 | | ...                       n
869 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:866:49
    |
866 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:869:50
    |
869 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:870:46
    |
870 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
   --> src/xdectoimax.rs:130:1
    |
130 | / pub unsafe extern "C" fn xdectoimax(
131 | |     mut n_str: *const libc::c_char,
132 | |     mut min: intmax_t,
133 | |     mut max: intmax_t,
...   |
138 | |     return xnumtoimax(n_str, 10 as libc::c_int, min, max, suffixes, err, err_exit);
139 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:871:47
    |
871 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `#[inline]` for a function
   --> src/xdectoimax.rs:130:1
    |
130 | / pub unsafe extern "C" fn xdectoimax(
131 | |     mut n_str: *const libc::c_char,
132 | |     mut min: intmax_t,
133 | |     mut max: intmax_t,
...   |
138 | |     return xnumtoimax(n_str, 10 as libc::c_int, min, max, suffixes, err, err_exit);
139 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:873:48
    |
873 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
874 | | ...                       0 as libc::c_int as libc::c_long
875 | | ...                   } else {
876 | | ...                       (if 1 as libc::c_int != 0 {
...   |
880 | | ...                       }) + 0 as libc::c_int as idx_t
881 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:874:49
    |
874 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a module
  --> lib.rs:40:1
   |
40 | pub mod xmalloc;
   | ^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:876:49
    |
876 | / ...                   (if 1 as libc::c_int != 0 {
877 | | ...                       0 as libc::c_int as libc::c_long
878 | | ...                   } else {
879 | | ...                       n
880 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:877:53
    |
877 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:880:54
    |
880 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:881:50
    |
881 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:883:67
    |
883 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xmalloc.rs:884:67
    |
884 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a type alias
  --> src/xmalloc.rs:42:1
   |
42 | pub type ptrdiff_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:885:51
    |
885 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/xmalloc.rs:43:1
   |
43 | pub type size_t = libc::c_ulong;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:886:51
    |
886 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a type alias
  --> src/xmalloc.rs:44:1
   |
44 | pub type idx_t = ptrdiff_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:887:51
    |
887 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
  --> src/xmalloc.rs:45:1
   |
45 | pub const DEFAULT_MXFAST: C2RustUnnamed = 128;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:889:45
    |
889 | / ...                   (if 1 as libc::c_int != 0 {
890 | | ...                       0 as libc::c_int as libc::c_long
891 | | ...                   } else {
892 | | ...                       (if 1 as libc::c_int != 0 {
...   |
896 | | ...                       }) + 0 as libc::c_int as idx_t
897 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a type alias
  --> src/xmalloc.rs:46:1
   |
46 | pub type C2RustUnnamed = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:890:49
    |
890 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a constant
  --> src/xmalloc.rs:47:1
   |
47 | pub const DEFAULT_MXFAST_0: C2RustUnnamed_0 = 128;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:892:49
    |
892 | / ...                   (if 1 as libc::c_int != 0 {
893 | | ...                       0 as libc::c_int as libc::c_long
894 | | ...                   } else {
895 | | ...                       n
896 | | ...                   }) + 0 as libc::c_int as idx_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a type alias
  --> src/xmalloc.rs:48:1
   |
48 | pub type C2RustUnnamed_0 = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:893:53
    |
893 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:896:54
    |
896 | ...                   }) + 0 as libc::c_int as idx_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/xmalloc.rs:50:1
   |
50 | / unsafe extern "C" fn irealloc(
51 | |     mut p: *mut libc::c_void,
52 | |     mut s: idx_t,
53 | | ) -> *mut libc::c_void {
...  |
59 | |     };
60 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:897:50
    |
897 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:900:37
    |
900 | / ...                   ((0 as libc::c_int as libc::c_long)
901 | | ...                       < (if 1 as libc::c_int != 0 {
902 | | ...                           0 as libc::c_int as libc::c_long
903 | | ...                       } else {
904 | | ...                           n
905 | | ...                       }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
900 ~                                     i32::from((0 as libc::c_int as libc::c_long)
901 +                                         < (if 1 as libc::c_int != 0 {
902 +                                             0 as libc::c_int as libc::c_long
903 +                                         } else {
904 +                                             n
905 +                                         }) + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:900:38
    |
900 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:901:43
    |
901 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
902 | | ...                       0 as libc::c_int as libc::c_long
903 | | ...                   } else {
904 | | ...                       n
905 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:901:43
    |
901 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
902 | | ...                       0 as libc::c_int as libc::c_long
903 | | ...                   } else {
904 | | ...                       n
905 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:901:43
    |
901 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
902 | | ...                       0 as libc::c_int as libc::c_long
903 | | ...                   } else {
904 | | ...                       n
905 | | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a function
  --> src/xmalloc.rs:62:1
   |
62 | / unsafe extern "C" fn icalloc(mut n: idx_t, mut s: idx_t) -> *mut libc::c_void {
63 | |     if (18446744073709551615 as libc::c_ulong) < n as libc::c_ulong {
64 | |         if s != 0 as libc::c_int as libc::c_long {
65 | |             return _gl_alloc_nomem();
...  |
75 | |     return calloc(n as libc::c_ulong, s as libc::c_ulong);
76 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:902:45
    |
902 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:905:46
    |
905 | ...                   }) + 0 as libc::c_int as idx_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:906:49
    |
906 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:906:49
    |
906 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:906:49
    |
906 | ...                   }) != 0 && n == -(1 as libc::c_int) as libc::c_long
    |                                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xmalloc.rs:908:40
    |
908 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
909 | | ...                       0 as libc::c_int as libc::c_long
910 | | ...                   } else {
911 | | ...                       s
912 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:908:40
    |
908 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
909 | | ...                       0 as libc::c_int as libc::c_long
910 | | ...                   } else {
911 | | ...                       s
912 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xmalloc.rs:908:41
    |
908 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
909 | | ...                       0 as libc::c_int as libc::c_long
910 | | ...                   } else {
911 | | ...                       s
912 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:909:41
    |
909 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:912:42
    |
912 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:913:43
    |
913 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:915:41
    |
915 | / ...                   ((0 as libc::c_int as libc::c_long)
916 | | ...                       < s + 0 as libc::c_int as idx_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
915 ~                                         i32::from((0 as libc::c_int as libc::c_long)
916 +                                             < s + 0 as libc::c_int as idx_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:915:42
    |
915 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:916:47
    |
916 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:916:47
    |
916 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: missing documentation for a function
  --> src/xmalloc.rs:78:1
   |
78 | / fn ireallocarray(n: usize, s: usize) -> *mut libc::c_void {
79 | |     if n <= usize::MAX && s <= usize::MAX {
80 | |         let mut nx = n;
81 | |         let mut sx = s;
...  |
90 | |     }
91 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:916:51
    |
916 | ...                   < s + 0 as libc::c_int as idx_t) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:918:41
    |
918 | / ...                   ((-(1 as libc::c_int) as libc::c_long
919 | | ...                       - 0 as libc::c_int as idx_t)
920 | | ...                       < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
918 ~                                         i32::from((-(1 as libc::c_int) as libc::c_long
919 +                                             - 0 as libc::c_int as idx_t)
920 +                                             < s - 1 as libc::c_int as libc::c_long)
    |

warning: arithmetic detected
   --> src/xmalloc.rs:918:42
    |
918 |   ...                   ((-(1 as libc::c_int) as libc::c_long
    |  ________________________^
919 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:918:42
    |
918 |   ...                   ((-(1 as libc::c_int) as libc::c_long
    |  ________________________^
919 | | ...                       - 0 as libc::c_int as idx_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:918:43
    |
918 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:919:47
    |
919 | ...                   - 0 as libc::c_int as idx_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:920:47
    |
920 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:920:47
    |
920 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:920:51
    |
920 | ...                   < s - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
  --> src/xmalloc.rs:95:1
   |
95 | / unsafe extern "C" fn _gl_alloc_nomem() -> *mut libc::c_void {
96 | |     *__errno_location() = 12 as libc::c_int;
97 | |     return 0 as *mut libc::c_void;
98 | | }
   | |_^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:923:37
    |
923 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(0 as libc::c_int as idx_t / n < s)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:923:38
    |
923 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:923:38
    |
923 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xmalloc.rs:923:38
    |
923 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:923:38
    |
923 | ...                   (0 as libc::c_int as idx_t / n < s) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
   --> src/xmalloc.rs:100:1
    |
100 | / fn imalloc(s: usize) -> *mut libc::c_void {
101 | |     if s <= usize::MAX {
102 | |         let layout = std::alloc::Layout::from_size_align(s, 1).unwrap();
103 | |         let ptr = unsafe { std::alloc::alloc(layout) };
...   |
111 | |     }
112 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:926:33
    |
926 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(-(1 as libc::c_int) as idx_t / s < n)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xmalloc.rs:926:34
    |
926 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:926:34
    |
926 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xmalloc.rs:926:34
    |
926 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xmalloc.rs:926:34
    |
926 | ...                   (-(1 as libc::c_int) as idx_t / s < n) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: borrow as raw pointer
   --> src/xmalloc.rs:932:22
    |
932 |                     *(&mut nbytes as *mut idx_t) = fresh18;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(nbytes)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: borrow as raw pointer
   --> src/xmalloc.rs:936:22
    |
936 |                     *(&mut nbytes as *mut idx_t) = fresh20;
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(nbytes)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xmalloc.rs:937:21
    |
937 |                     fresh21 as libc::c_int
    |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(fresh21)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: `as` casting between raw pointers without changing its mutability
   --> src/xmalloc.rs:943:19
    |
943 |     pa = xrealloc(pa as *mut libc::c_void, nbytes as usize);
    |                   ^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `pa.cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/xmalloc.rs:943:44
    |
943 |     pa = xrealloc(pa as *mut libc::c_void, nbytes as usize);
    |                                            ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
   --> src/xmalloc.rs:943:44
    |
943 |     pa = xrealloc(pa as *mut libc::c_void, nbytes as usize);
    |                                            ^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `return` statement
   --> src/xmalloc.rs:950:5
    |
950 |     Vec::with_capacity(size)
    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Vec::with_capacity(size)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing documentation for a function
   --> src/xmalloc.rs:114:1
    |
114 | / fn check_nonnull(p: *mut libc::c_void) -> *mut libc::c_void {
115 | |     if p.is_null() {
116 | |         unsafe { xalloc_die() };
117 | |     }
118 | |     p
119 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: arithmetic detected
   --> src/xmalloc.rs:949:16
    |
949 |     let size = s * std::mem::size_of::<u8>();
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:949:16
    |
949 |     let size = s * std::mem::size_of::<u8>();
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: used import from `std` instead of `core`
   --> src/xmalloc.rs:949:20
    |
949 |     let size = s * std::mem::size_of::<u8>();
    |                    ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a function
   --> src/xmalloc.rs:122:1
    |
122 | / pub unsafe extern "C" fn xmalloc(mut s: size_t) -> *mut libc::c_void {
123 | |     return check_nonnull(malloc(s));
124 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: docs for function which may panic missing `# Panics` section
   --> src/xmalloc.rs:954:1
    |
954 | / pub fn xizalloc(s: idx_t) -> Vec<u8> {
955 | |     let layout = Layout::from_size_align(s as usize, 1).expect("Invalid layout");
956 | |     let ptr = unsafe { alloc::alloc(layout) };
957 | |     if ptr.is_null() {
...   |
961 | |     vec
962 | | }
    | |_^
    |
note: first possible panic found here
   --> src/xmalloc.rs:958:9
    |
958 |         panic!("Memory allocation failed");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:122:1
    |
122 | / pub unsafe extern "C" fn xmalloc(mut s: size_t) -> *mut libc::c_void {
123 | |     return check_nonnull(malloc(s));
124 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing `return` statement
   --> src/xmalloc.rs:961:5
    |
961 |     vec
    |     ^^^ help: add `return` as shown: `return vec`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: returning the result of a `let` binding from a block
   --> src/xmalloc.rs:961:5
    |
960 |     let vec = unsafe { Vec::from_raw_parts(ptr, s as usize, s as usize) };
    |     ---------------------------------------------------------------------- unnecessary `let` binding
961 |     vec
    |     ^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
960 ~     
961 ~     unsafe { Vec::from_raw_parts(ptr, s as usize, s as usize) }
    |

warning: used `expect()` on `a Result` value
   --> src/xmalloc.rs:955:18
    |
955 |     let layout = Layout::from_size_align(s as usize, 1).expect("Invalid layout");
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this value is an `Err`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/xmalloc.rs:955:42
    |
955 |     let layout = Layout::from_size_align(s as usize, 1).expect("Invalid layout");
    |                                          ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
   --> src/xmalloc.rs:955:42
    |
955 |     let layout = Layout::from_size_align(s as usize, 1).expect("Invalid layout");
    |                                          ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a function
   --> src/xmalloc.rs:126:1
    |
126 | / pub unsafe extern "C" fn ximalloc(mut s: idx_t) -> *mut libc::c_void {
127 | |     let allocated_memory = imalloc(s.try_into().unwrap());
128 | | return check_nonnull(allocated_memory);
129 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/xmalloc.rs:956:15
    |
956 |     let ptr = unsafe { alloc::alloc(layout) };
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:126:1
    |
126 | / pub unsafe extern "C" fn ximalloc(mut s: idx_t) -> *mut libc::c_void {
127 | |     let allocated_memory = imalloc(s.try_into().unwrap());
128 | | return check_nonnull(allocated_memory);
129 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: only a `panic!` in `if`-then statement
   --> src/xmalloc.rs:957:5
    |
957 | /     if ptr.is_null() {
958 | |         panic!("Memory allocation failed");
959 | |     }
    | |_____^ help: try: `assert!(!ptr.is_null(), "Memory allocation failed");`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_assert

warning: `panic` should not be present in production code
   --> src/xmalloc.rs:958:9
    |
958 |         panic!("Memory allocation failed");
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#panic

warning: unsafe block missing a safety comment
   --> src/xmalloc.rs:960:15
    |
960 |     let vec = unsafe { Vec::from_raw_parts(ptr, s as usize, s as usize) };
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/xmalloc.rs:960:49
    |
960 |     let vec = unsafe { Vec::from_raw_parts(ptr, s as usize, s as usize) };
    |                                                 ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: missing documentation for a function
   --> src/xmalloc.rs:131:1
    |
131 | / pub unsafe extern "C" fn xcharalloc(mut n: size_t) -> *mut libc::c_char {
132 | |     return (if ::core::mem::size_of::<libc::c_char>() as libc::c_ulong
133 | |         == 1 as libc::c_int as libc::c_ulong
134 | |     {
...   |
138 | |     }) as *mut libc::c_char;
139 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i64` to `usize` may lose the sign of the value
   --> src/xmalloc.rs:960:49
    |
960 |     let vec = unsafe { Vec::from_raw_parts(ptr, s as usize, s as usize) };
    |                                                 ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:131:1
    |
131 | / pub unsafe extern "C" fn xcharalloc(mut n: size_t) -> *mut libc::c_char {
132 | |     return (if ::core::mem::size_of::<libc::c_char>() as libc::c_ulong
133 | |         == 1 as libc::c_int as libc::c_ulong
134 | |     {
...   |
138 | |     }) as *mut libc::c_char;
139 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: casting `i64` to `usize` may truncate the value on targets with 32-bit wide pointers
   --> src/xmalloc.rs:960:61
    |
960 |     let vec = unsafe { Vec::from_raw_parts(ptr, s as usize, s as usize) };
    |                                                             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i64` to `usize` may lose the sign of the value
   --> src/xmalloc.rs:960:61
    |
960 |     let vec = unsafe { Vec::from_raw_parts(ptr, s as usize, s as usize) };
    |                                                             ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing `return` statement
   --> src/xmalloc.rs:969:5
    |
969 |     Box::into_raw(boxed_slice) as *mut libc::c_void
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Box::into_raw(boxed_slice) as *mut libc::c_void`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used `expect()` on `an Option` value
   --> src/xmalloc.rs:966:22
    |
966 |     let total_size = n.checked_mul(s).expect("Overflow in multiplication");
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this value is an `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: `as` casting between raw pointers without changing its mutability
   --> src/xmalloc.rs:969:5
    |
969 |     Box::into_raw(boxed_slice) as *mut libc::c_void
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `Box::into_raw(boxed_slice).cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a function
   --> src/xmalloc.rs:141:1
    |
141 | / pub fn xrealloc(p: *mut libc::c_void, s: usize) -> *mut libc::c_void {
142 | |     if p.is_null() && s == 0 {
143 | |         return std::ptr::null_mut();
144 | |     }
...   |
157 | |     ptr as *mut libc::c_void
158 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
   --> src/xmalloc.rs:976:5
    |
976 |     Box::into_raw(allocation) as *mut libc::c_void
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return Box::into_raw(allocation) as *mut libc::c_void`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:141:1
    |
141 | / pub fn xrealloc(p: *mut libc::c_void, s: usize) -> *mut libc::c_void {
142 | |     if p.is_null() && s == 0 {
143 | |         return std::ptr::null_mut();
144 | |     }
...   |
157 | |     ptr as *mut libc::c_void
158 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: used `expect()` on `an Option` value
   --> src/xmalloc.rs:974:22
    |
974 |     let total_size = n.checked_mul(s).expect("Overflow in allocation size");
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if this value is an `None`, it will panic
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: `as` casting between raw pointers without changing its mutability
   --> src/xmalloc.rs:976:5
    |
976 |     Box::into_raw(allocation) as *mut libc::c_void
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `Box::into_raw(allocation).cast::<libc::c_void>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing `return` statement
   --> src/xmalloc.rs:983:5
    |
983 |     result
    |     ^^^^^^ help: add `return` as shown: `return result`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/xmalloc.rs:990:5
    |
990 |     result
    |     ^^^^^^ help: add `return` as shown: `return result`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `return` statement
   --> src/xmalloc.rs:998:5
    |
998 |     result
    |     ^^^^^^ help: add `return` as shown: `return result`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: arithmetic detected
   --> src/xmalloc.rs:995:30
    |
995 |     let mut result = vec![0; p.len() + 1];
    |                              ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xmalloc.rs:995:30
    |
995 |     let mut result = vec![0; p.len() + 1];
    |                              ^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: slicing may panic
   --> src/xmalloc.rs:996:5
    |
996 |     result[..p.len()].copy_from_slice(p);
    |     ^^^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(..n)`or `.get_mut(..n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: indexing may panic
   --> src/xmalloc.rs:997:5
    |
997 |     result[p.len()] = 0; // Null-terminate the string
    |     ^^^^^^^^^^^^^^^
    |
    = help: consider using `.get(n)` or `.get_mut(n)` instead
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#indexing_slicing

warning: missing documentation for a function
   --> src/xmalloc.rs:161:1
    |
161 | / pub fn xirealloc(p: &mut Vec<u8>, s: usize) -> Option<Vec<u8>> {
162 | |     let mut new_vec = Vec::with_capacity(s);
163 | |     let len = p.len();
164 | |     new_vec.extend_from_slice(p);
165 | |     new_vec.resize(s, 0);
166 | |     Some(new_vec)
167 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `return` statement
    --> src/xmalloc.rs:1007:5
     |
1007 |     String::from_utf8(vec).expect("Failed to convert to String")
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return String::from_utf8(vec).expect("Failed to convert to String")`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:161:1
    |
161 | / pub fn xirealloc(p: &mut Vec<u8>, s: usize) -> Option<Vec<u8>> {
162 | |     let mut new_vec = Vec::with_capacity(s);
163 | |     let len = p.len();
164 | |     new_vec.extend_from_slice(p);
165 | |     new_vec.resize(s, 0);
166 | |     Some(new_vec)
167 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: arithmetic detected
    --> src/xmalloc.rs:1004:38
     |
1004 |     let mut vec = Vec::with_capacity(length + 1);
     |                                      ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/xmalloc.rs:1004:38
     |
1004 |     let mut vec = Vec::with_capacity(length + 1);
     |                                      ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: used `expect()` on `a Result` value
    --> src/xmalloc.rs:1007:5
     |
1007 |     String::from_utf8(vec).expect("Failed to convert to String")
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if this value is an `Err`, it will panic
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: missing documentation for a function
   --> src/xmalloc.rs:170:1
    |
170 | / pub unsafe extern "C" fn xreallocarray(
171 | |     mut p: *mut libc::c_void,
172 | |     mut n: size_t,
173 | |     mut s: size_t,
...   |
179 | |     return r;
180 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:170:1
    |
170 | / pub unsafe extern "C" fn xreallocarray(
171 | |     mut p: *mut libc::c_void,
172 | |     mut n: size_t,
173 | |     mut s: size_t,
...   |
179 | |     return r;
180 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: the function has a cognitive complexity of (65/25)
  --> src/xstrtoimax.rs:41:22
   |
41 | unsafe extern "C" fn bkm_scale(
   |                      ^^^^^^^^^
   |
   = help: you could split it up into multiple smaller functions
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: this function has too many lines (343/100)
   --> src/xstrtoimax.rs:41:1
    |
41  | / unsafe extern "C" fn bkm_scale(
42  | |     mut x: *mut intmax_t,
43  | |     mut scale_factor: libc::c_int,
44  | | ) -> strtol_error {
...   |
387 | |     return LONGINT_OK;
388 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: missing documentation for a function
   --> src/xmalloc.rs:182:1
    |
182 | / pub fn xireallocarray(n: usize, s: usize) -> Option<Vec<u8>> {
183 | |     let total_size = n.checked_mul(s)?;
184 | |     let mut vec = Vec::with_capacity(total_size);
185 | |     // Assuming that the original function's purpose is to reallocate an array,
186 | |     // we can return the vector as a byte array.
187 | |     Some(vec)
188 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
   --> src/xstrtoimax.rs:387:5
    |
387 |     return LONGINT_OK;
    |     ^^^^^^^^^^^^^^^^^^ help: remove `return`: `LONGINT_OK`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:182:1
    |
182 | / pub fn xireallocarray(n: usize, s: usize) -> Option<Vec<u8>> {
183 | |     let total_size = n.checked_mul(s)?;
184 | |     let mut vec = Vec::with_capacity(total_size);
185 | |     // Assuming that the original function's purpose is to reallocate an array,
186 | |     // we can return the vector as a byte array.
187 | |     Some(vec)
188 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:46:12
   |
46 |     if if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t
   |            ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:46:46
   |
46 |     if if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t
   |                                              ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:47:17
   |
47 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { *x })
   |                 ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/xmalloc.rs:191:1
    |
191 | / pub unsafe extern "C" fn xnmalloc(mut n: size_t, mut s: size_t) -> *mut libc::c_void {
192 | |     return xreallocarray(0 as *mut libc::c_void, n, s);
193 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:47:37
   |
47 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { *x })
   |                                     ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:191:1
    |
191 | / pub unsafe extern "C" fn xnmalloc(mut n: size_t, mut s: size_t) -> *mut libc::c_void {
192 | |     return xreallocarray(0 as *mut libc::c_void, n, s);
193 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:47:41
   |
47 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { *x })
   |                                         ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:48:15
   |
48 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |               ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:48:51
   |
48 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |                                                   ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:49:17
   |
49 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
   |                 ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/xmalloc.rs:195:1
    |
195 | / pub fn xinmalloc(n: idx_t, s: idx_t) -> Vec<u8> {
196 | |     let size = n.checked_mul(s).expect("Overflow in allocation size");
197 | |     Vec::with_capacity(size as usize)
198 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:49:37
   |
49 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
   |                                     ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:195:1
    |
195 | / pub fn xinmalloc(n: idx_t, s: idx_t) -> Vec<u8> {
196 | |     let size = n.checked_mul(s).expect("Overflow in allocation size");
197 | |     Vec::with_capacity(size as usize)
198 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:49:41
   |
49 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
   |                                         ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:50:15
   |
50 |             - 1 as libc::c_int) < 0 as libc::c_int
   |               ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:50:35
   |
50 |             - 1 as libc::c_int) < 0 as libc::c_int
   |                                   ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:51:31
   |
51 |         && (if scale_factor < 0 as libc::c_int {
   |                               ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:52:21
   |
52 |             if *x < 0 as libc::c_int as libc::c_long {
   |                     ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/xmalloc.rs:201:1
    |
201 | / pub fn x2realloc(
202 | |     p: &[u8],
203 | |     ps: &mut usize,
204 | | ) -> Vec<u8> {
...   |
209 | |     new_vec
210 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:53:25
   |
53 |                 if ((if 1 as libc::c_int != 0 {
   |                         ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:201:1
    |
201 | / pub fn x2realloc(
202 | |     p: &[u8],
203 | |     ps: &mut usize,
204 | | ) -> Vec<u8> {
...   |
209 | |     new_vec
210 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:53:45
   |
53 |                 if ((if 1 as libc::c_int != 0 {
   |                                             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:54:21
   |
54 |                     0 as libc::c_int as libc::c_long
   |                     ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:56:25
   |
56 |                     (if 1 as libc::c_int != 0 {
   |                         ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:56:45
   |
56 |                     (if 1 as libc::c_int != 0 {
   |                                             ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:57:25
   |
57 |                         0 as libc::c_int as libc::c_long
   |                         ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/xmalloc.rs:213:1
    |
213 | / pub unsafe extern "C" fn x2nrealloc(
214 | |     mut p: *mut libc::c_void,
215 | |     mut pn: *mut size_t,
216 | |     mut s: size_t,
...   |
238 | |     return p;
239 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:59:27
   |
59 |                         -(1 as libc::c_int) as intmax_t
   |                           ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:213:1
    |
213 | / pub unsafe extern "C" fn x2nrealloc(
214 | |     mut p: *mut libc::c_void,
215 | |     mut pn: *mut size_t,
216 | |     mut s: size_t,
...   |
238 | |     return p;
239 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:61:22
   |
61 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |                      ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:61:58
   |
61 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |                                                          ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:63:29
   |
63 |                     (*x < -(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
   |                             ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:66:39
   |
66 |                     ((if (if (if ((if 1 as libc::c_int != 0 {
   |                                       ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:66:59
   |
66 |                     ((if (if (if ((if 1 as libc::c_int != 0 {
   |                                                           ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:67:25
   |
67 |                         0 as libc::c_int
   |                         ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:70:26
   |
70 |                     }) - 1 as libc::c_int) < 0 as libc::c_int
   |                          ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:70:46
   |
70 |                     }) - 1 as libc::c_int) < 0 as libc::c_int
   |                                              ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:72:34
   |
72 |                         !(((((if 1 as libc::c_int != 0 {
   |                                  ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:72:54
   |
72 |                         !(((((if 1 as libc::c_int != 0 {
   |                                                      ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:73:29
   |
73 | ...                   0 as libc::c_int
   |                       ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:76:30
   |
76 |                         }) + 1 as libc::c_int)
   |                              ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/xmalloc.rs:241:1
    |
241 | / pub unsafe extern "C" fn xpalloc(
242 | |     mut pa: *mut libc::c_void,
243 | |     mut pn: *mut idx_t,
244 | |     mut n_incr_min: idx_t,
...   |
945 | |     return pa;
946 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:80:31
   |
80 | ...                   - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int)
   |                         ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:80:51
   |
80 | ...                   - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int)
   |                                             ^ help: consider adding suffix: `2_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:241:1
    |
241 | / pub unsafe extern "C" fn xpalloc(
242 | |     mut pa: *mut libc::c_void,
243 | |     mut pn: *mut idx_t,
244 | |     mut n_incr_min: idx_t,
...   |
945 | |     return pa;
946 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:80:70
   |
80 | ...                   - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int)
   |                                                                ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:82:29
   |
82 |                         (if 1 as libc::c_int != 0 {
   |                             ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:82:49
   |
82 |                         (if 1 as libc::c_int != 0 {
   |                                                 ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:83:29
   |
83 | ...                   0 as libc::c_int
   |                       ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:86:30
   |
86 |                         }) + 0 as libc::c_int
   |                              ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:87:26
   |
87 |                     }) < 0 as libc::c_int
   |                          ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:90:41
   |
90 | ...                   < -(if ((if 1 as libc::c_int != 0 {
   |                                   ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:90:61
   |
90 | ...                   < -(if ((if 1 as libc::c_int != 0 {
   |                                                       ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:91:33
   |
91 | ...                   0 as libc::c_int
   |                       ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:94:34
   |
94 | ...                   }) - 1 as libc::c_int) < 0 as libc::c_int
   |                            ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:94:54
   |
94 | ...                   }) - 1 as libc::c_int) < 0 as libc::c_int
   |                                                ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:96:40
   |
96 | ...                   ((((if 1 as libc::c_int != 0 {
   |                              ^ help: consider adding suffix: `1_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:96:60
   |
96 | ...                   ((((if 1 as libc::c_int != 0 {
   |                                                  ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
  --> src/xstrtoimax.rs:97:37
   |
97 | ...                   0 as libc::c_int
   |                       ^ help: consider adding suffix: `0_i32`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:100:38
    |
100 | ...                   }) + 1 as libc::c_int)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:104:39
    |
104 | ...                   - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:104:59
    |
104 | ...                   - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int
    |                                             ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:104:78
    |
104 | ...                   - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int
    |                                                                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:106:37
    |
106 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:106:57
    |
106 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:107:37
    |
107 | ...                   0 as libc::c_int
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:110:38
    |
110 | ...                   }) - 1 as libc::c_int
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:113:27
    |
113 |                         ((0 as libc::c_int) < scale_factor) as libc::c_int
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:114:27
    |
114 |                     }) != 0
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:116:29
    |
116 |                         (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:116:49
    |
116 |                         (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:117:29
    |
117 | ...                   0 as libc::c_int
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:120:48
    |
120 |                         }) as libc::c_long + -(1 as libc::c_int) as intmax_t
    |                                                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:125:27
    |
125 |                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:126:29
    |
126 |                     }) <= -(1 as libc::c_int) as libc::c_long - *x) as libc::c_int
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:129:33
    |
129 |                 if (if (if ((if 1 as libc::c_int != 0 {
    |                                 ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:129:53
    |
129 |                 if (if (if ((if 1 as libc::c_int != 0 {
    |                                                     ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:130:21
    |
130 |                     0 as libc::c_int as libc::c_long
    |                     ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:132:25
    |
132 |                     (if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:132:45
    |
132 |                     (if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
    |                                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:132:49
    |
132 |                     (if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:133:43
    |
133 |                         as libc::c_long + 0 as libc::c_int as intmax_t
    |                                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:134:22
    |
134 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:134:58
    |
134 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:136:30
    |
136 |                     !(((((if 1 as libc::c_int != 0 {
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:136:50
    |
136 |                     !(((((if 1 as libc::c_int != 0 {
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:137:25
    |
137 |                         0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:139:29
    |
139 |                         (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:139:49
    |
139 |                         (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:140:29
    |
140 | ...                   0 as libc::c_int
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:143:46
    |
143 |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:144:26
    |
144 |                     }) + 1 as libc::c_int as libc::c_long)
    |                          ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:148:27
    |
148 |                         - 1 as libc::c_int as libc::c_long)
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:149:27
    |
149 |                         * 2 as libc::c_int as libc::c_long
    |                           ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:150:27
    |
150 |                         + 1 as libc::c_int as libc::c_long)
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:152:25
    |
152 |                     (if 1 as libc::c_int != 0 {
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:152:45
    |
152 |                     (if 1 as libc::c_int != 0 {
    |                                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:153:25
    |
153 |                         0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:155:29
    |
155 |                         (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:155:49
    |
155 |                         (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:156:29
    |
156 | ...                   0 as libc::c_int
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:159:46
    |
159 |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:160:26
    |
160 |                     }) + 0 as libc::c_int as libc::c_long
    |                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:161:22
    |
161 |                 }) < 0 as libc::c_int as libc::c_long
    |                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:163:27
    |
163 |                     (((if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:163:47
    |
163 |                     (((if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:164:25
    |
164 |                         0 as libc::c_int
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:167:42
    |
167 |                     }) as libc::c_long + 0 as libc::c_int as intmax_t)
    |                                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:168:37
    |
168 |                         < -(if ((if 1 as libc::c_int != 0 {
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:168:57
    |
168 |                         < -(if ((if 1 as libc::c_int != 0 {
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:169:29
    |
169 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:171:33
    |
171 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:171:53
    |
171 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:172:33
    |
172 | ...                   0 as libc::c_int
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:175:50
    |
175 | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:176:30
    |
176 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:177:31
    |
177 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:179:36
    |
179 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:179:56
    |
179 | ...                   ((((if 1 as libc::c_int != 0 {
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:180:33
    |
180 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:182:37
    |
182 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:182:57
    |
182 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:183:37
    |
183 | ...                   0 as libc::c_int
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:186:54
    |
186 | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:187:34
    |
187 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:191:35
    |
191 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:192:35
    |
192 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:193:35
    |
193 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:195:33
    |
195 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:195:53
    |
195 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:196:33
    |
196 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:198:37
    |
198 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:198:57
    |
198 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:199:37
    |
199 | ...                   0 as libc::c_int
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:202:54
    |
202 | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:203:34
    |
203 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:206:23
    |
206 |                     ((0 as libc::c_int as libc::c_long)
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:207:31
    |
207 |                         < (if 1 as libc::c_int != 0 {
    |                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:207:51
    |
207 |                         < (if 1 as libc::c_int != 0 {
    |                                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:208:29
    |
208 | ...                   0 as libc::c_int
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:211:46
    |
211 |                         }) as libc::c_long + 0 as libc::c_int as intmax_t) as libc::c_int
    |                                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:212:23
    |
212 |                 }) != 0 && scale_factor == -(1 as libc::c_int)
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:212:46
    |
212 |                 }) != 0 && scale_factor == -(1 as libc::c_int)
    |                                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:214:29
    |
214 |                     if ((if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:214:49
    |
214 |                     if ((if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:215:25
    |
215 |                         0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:218:26
    |
218 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:219:27
    |
219 |                         < 0 as libc::c_int as libc::c_long
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:221:27
    |
221 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:222:36
    |
222 | ...                   < *x + 0 as libc::c_int as intmax_t) as libc::c_int
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:224:27
    |
224 |                         ((0 as libc::c_int as libc::c_long) < *x
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:225:35
    |
225 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:226:35
    |
226 | ...                   - 0 as libc::c_int as intmax_t)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:227:40
    |
227 | ...                   < *x - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:230:23
    |
230 |                     ((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:235:32
    |
235 |             if scale_factor == 0 as libc::c_int {
    |                                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:236:17
    |
236 |                 0 as libc::c_int
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:238:25
    |
238 |                 if *x < 0 as libc::c_int as libc::c_long {
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:239:37
    |
239 |                     if (if (if ((if 1 as libc::c_int != 0 {
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:239:57
    |
239 |                     if (if (if ((if 1 as libc::c_int != 0 {
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:240:25
    |
240 |                         0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:242:29
    |
242 |                         (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:242:49
    |
242 |                         (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:243:29
    |
243 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:246:30
    |
246 |                         }) + 0 as libc::c_int as intmax_t
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:247:26
    |
247 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:248:27
    |
248 |                         < 0 as libc::c_int as libc::c_long
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:250:34
    |
250 |                         !(((((if 1 as libc::c_int != 0 {
    |                                  ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:250:54
    |
250 |                         !(((((if 1 as libc::c_int != 0 {
    |                                                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:251:29
    |
251 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:253:33
    |
253 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:253:53
    |
253 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:254:33
    |
254 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:257:34
    |
257 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:258:30
    |
258 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:262:31
    |
262 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:263:31
    |
263 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:264:31
    |
264 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:266:29
    |
266 |                         (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:266:49
    |
266 |                         (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:267:29
    |
267 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:269:33
    |
269 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:269:53
    |
269 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:270:33
    |
270 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:273:34
    |
273 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:274:30
    |
274 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:275:26
    |
275 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:277:31
    |
277 |                         (((if 1 as libc::c_int != 0 {
    |                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:277:51
    |
277 |                         (((if 1 as libc::c_int != 0 {
    |                                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:278:29
    |
278 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:281:30
    |
281 |                         }) + 0 as libc::c_int as intmax_t)
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:282:41
    |
282 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:282:61
    |
282 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:283:33
    |
283 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:285:37
    |
285 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:285:57
    |
285 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:286:37
    |
286 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:289:38
    |
289 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:290:34
    |
290 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:291:35
    |
291 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:293:40
    |
293 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:293:60
    |
293 | ...                   ((((if 1 as libc::c_int != 0 {
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:294:37
    |
294 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:296:41
    |
296 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:296:61
    |
296 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:297:41
    |
297 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:300:42
    |
300 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:301:38
    |
301 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:305:39
    |
305 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:306:39
    |
306 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:307:39
    |
307 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:309:37
    |
309 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:309:57
    |
309 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:310:37
    |
310 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:312:41
    |
312 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:312:61
    |
312 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:313:41
    |
313 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:316:42
    |
316 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:317:38
    |
317 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:320:27
    |
320 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:321:35
    |
321 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:321:55
    |
321 | ...                   < (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:322:33
    |
322 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:325:34
    |
325 | ...                   }) + 0 as libc::c_int as intmax_t) as libc::c_int
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:326:27
    |
326 |                     }) != 0 && *x == -(1 as libc::c_int) as libc::c_long
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:326:40
    |
326 |                     }) != 0 && *x == -(1 as libc::c_int) as libc::c_long
    |                                        ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:328:33
    |
328 |                         if ((if 1 as libc::c_int != 0 {
    |                                 ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:328:53
    |
328 |                         if ((if 1 as libc::c_int != 0 {
    |                                                     ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:329:29
    |
329 | ...                   0 as libc::c_int
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:332:30
    |
332 |                         }) - 1 as libc::c_int) < 0 as libc::c_int
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:332:50
    |
332 |                         }) - 1 as libc::c_int) < 0 as libc::c_int
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:334:31
    |
334 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:336:39
    |
336 | ...                   + 0 as libc::c_int as intmax_t) as libc::c_int
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:338:33
    |
338 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:339:35
    |
339 | ...                   - 0 as libc::c_int as intmax_t)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:340:51
    |
340 | ...                   < (scale_factor - 1 as libc::c_int) as libc::c_long)
    |                                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:344:26
    |
344 |                         (0 as libc::c_int as intmax_t / *x
    |                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:348:25
    |
348 |                     ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:352:15
    |
352 |         }) != 0
    |               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:356:9
    |
356 |         1 as libc::c_int
    |         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:361:10
    |
361 |     } != 0
    |          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:363:22
    |
363 |         *x = if *x < 0 as libc::c_int as libc::c_long {
    |                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:364:18
    |
364 |             !if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:364:52
    |
364 |             !if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                                    ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:365:19
    |
365 |                 -(1 as libc::c_int) as intmax_t
    |                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:367:20
    |
367 |                 (((1 as libc::c_int as intmax_t)
    |                    ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:371:23
    |
371 |                     - 1 as libc::c_int as libc::c_long)
    |                       ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:372:23
    |
372 |                     * 2 as libc::c_int as libc::c_long + 1 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:372:58
    |
372 |                     * 2 as libc::c_int as libc::c_long + 1 as libc::c_int as libc::c_long
    |                                                          ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:374:20
    |
374 |         } else if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:374:54
    |
374 |         } else if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                                      ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:375:15
    |
375 |             -(1 as libc::c_int) as intmax_t
    |               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:377:16
    |
377 |             (((1 as libc::c_int as intmax_t)
    |                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:381:19
    |
381 |                 - 1 as libc::c_int as libc::c_long) * 2 as libc::c_int as libc::c_long
    |                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:381:55
    |
381 |                 - 1 as libc::c_int as libc::c_long) * 2 as libc::c_int as libc::c_long
    |                                                       ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:382:19
    |
382 |                 + 1 as libc::c_int as libc::c_long
    |                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:46:11
   |
46 |     if if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t
   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:46:44
   |
46 |     if if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t
   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
  --> src/xstrtoimax.rs:46:44
   |
46 |     if if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t
   |                                            ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/xstrtoimax.rs:46:44
   |
46 |     if if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t
   |                                            ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
  --> src/xstrtoimax.rs:47:12
   |
47 |           && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { *x })
   |  ____________^
48 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   | |_______________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/xstrtoimax.rs:47:12
   |
47 |           && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { *x })
   |  ____________^
48 | |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   | |_______________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
  --> src/xstrtoimax.rs:47:13
   |
47 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { *x })
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:47:41
   |
47 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int as libc::c_long } else { *x })
   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:48:15
   |
48 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:48:51
   |
48 |             - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
  --> src/xstrtoimax.rs:49:12
   |
49 |           && ((if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
   |  ____________^
50 | |             - 1 as libc::c_int) < 0 as libc::c_int
   | |_______________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/xstrtoimax.rs:49:12
   |
49 |           && ((if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
   |  ____________^
50 | |             - 1 as libc::c_int) < 0 as libc::c_int
   | |_______________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
  --> src/xstrtoimax.rs:49:13
   |
49 |         && ((if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:52:21
   |
52 |             if *x < 0 as libc::c_int as libc::c_long {
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
  --> src/xstrtoimax.rs:53:20
   |
53 |                   if ((if 1 as libc::c_int != 0 {
   |  ____________________^
54 | |                     0 as libc::c_int as libc::c_long
55 | |                 } else {
56 | |                     (if 1 as libc::c_int != 0 {
...  |
60 | |                     }) + scale_factor as libc::c_long
61 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   | |______________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/xstrtoimax.rs:53:20
   |
53 |                   if ((if 1 as libc::c_int != 0 {
   |  ____________________^
54 | |                     0 as libc::c_int as libc::c_long
55 | |                 } else {
56 | |                     (if 1 as libc::c_int != 0 {
...  |
60 | |                     }) + scale_factor as libc::c_long
61 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   | |______________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
  --> src/xstrtoimax.rs:53:21
   |
53 |                   if ((if 1 as libc::c_int != 0 {
   |  _____________________^
54 | |                     0 as libc::c_int as libc::c_long
55 | |                 } else {
56 | |                     (if 1 as libc::c_int != 0 {
...  |
60 | |                     }) + scale_factor as libc::c_long
61 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   | |__________________^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:54:21
   |
54 |                     0 as libc::c_int as libc::c_long
   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
  --> src/xstrtoimax.rs:56:21
   |
56 | /                     (if 1 as libc::c_int != 0 {
57 | |                         0 as libc::c_int as libc::c_long
58 | |                     } else {
59 | |                         -(1 as libc::c_int) as intmax_t
60 | |                     }) + scale_factor as libc::c_long
   | |______________________^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:57:25
   |
57 |                         0 as libc::c_int as libc::c_long
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:59:25
   |
59 |                         -(1 as libc::c_int) as intmax_t
   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:60:26
   |
60 |                     }) + scale_factor as libc::c_long
   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(scale_factor)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:61:22
   |
61 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:61:58
   |
61 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
  --> src/xstrtoimax.rs:63:21
   |
63 | /                     (*x < -(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
64 | |                         as libc::c_int
   | |______________________________________^ help: try: `i32::from(*x < -(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
  --> src/xstrtoimax.rs:63:27
   |
63 |                     (*x < -(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/xstrtoimax.rs:63:27
   |
63 |                     (*x < -(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
  --> src/xstrtoimax.rs:63:27
   |
63 |                     (*x < -(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: division of integers may cause loss of precision. consider using floats
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:63:27
   |
63 |                     (*x < -(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
  --> src/xstrtoimax.rs:63:61
   |
63 |                     (*x < -(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
   |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(scale_factor)`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:66:21
    |
66  | /                     ((if (if (if ((if 1 as libc::c_int != 0 {
67  | |                         0 as libc::c_int
68  | |                     } else {
69  | |                         scale_factor
...   |
125 | |                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
126 | |                     }) <= -(1 as libc::c_int) as libc::c_long - *x) as libc::c_int
    | |__________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
66  ~                     i32::from((if (if (if ((if 1 as libc::c_int != 0 {
67  +                         0 as libc::c_int
68  +                     } else {
69  +                         scale_factor
70  +                     }) - 1 as libc::c_int) < 0 as libc::c_int
71  +                     {
72  +                         !(((((if 1 as libc::c_int != 0 {
73  +                             0 as libc::c_int
74  +                         } else {
75  +                             scale_factor
76  +                         }) + 1 as libc::c_int)
77  +                             << (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
78  +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
79  +                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
80  +                             - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int)
81  +                     } else {
82  +                         (if 1 as libc::c_int != 0 {
83  +                             0 as libc::c_int
84  +                         } else {
85  +                             scale_factor
86  +                         }) + 0 as libc::c_int
87  +                     }) < 0 as libc::c_int
88  +                     {
89  +                         (scale_factor
90  +                             < -(if ((if 1 as libc::c_int != 0 {
91  +                                 0 as libc::c_int
92  +                             } else {
93  +                                 scale_factor
94  +                             }) - 1 as libc::c_int) < 0 as libc::c_int
95  +                             {
96  +                                 ((((if 1 as libc::c_int != 0 {
97  +                                     0 as libc::c_int
98  +                                 } else {
99  +                                     scale_factor
100 +                                 }) + 1 as libc::c_int)
101 +                                     << (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
102 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
103 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
104 +                                     - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int
105 +                             } else {
106 +                                 (if 1 as libc::c_int != 0 {
107 +                                     0 as libc::c_int
108 +                                 } else {
109 +                                     scale_factor
110 +                                 }) - 1 as libc::c_int
111 +                             })) as libc::c_int
112 +                     } else {
113 +                         ((0 as libc::c_int) < scale_factor) as libc::c_int
114 +                     }) != 0
115 +                     {
116 +                         (if 1 as libc::c_int != 0 {
117 +                             0 as libc::c_int
118 +                         } else {
119 +                             scale_factor
120 +                         }) as libc::c_long + -(1 as libc::c_int) as intmax_t
121 +                             >> (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
122 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
123 +                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
124 +                     } else {
125 +                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
126 +                     }) <= -(1 as libc::c_int) as libc::c_long - *x)
    |

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:66:22
    |
66  |                       ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ______________________^
67  | |                         0 as libc::c_int
68  | |                     } else {
69  | |                         scale_factor
...   |
125 | |                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
126 | |                     }) <= -(1 as libc::c_int) as libc::c_long - *x) as libc::c_int
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: arithmetic detected
  --> src/xstrtoimax.rs:66:34
   |
66 |                       ((if (if (if ((if 1 as libc::c_int != 0 {
   |  __________________________________^
67 | |                         0 as libc::c_int
68 | |                     } else {
69 | |                         scale_factor
70 | |                     }) - 1 as libc::c_int) < 0 as libc::c_int
   | |__________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/xstrtoimax.rs:66:34
   |
66 |                       ((if (if (if ((if 1 as libc::c_int != 0 {
   |  __________________________________^
67 | |                         0 as libc::c_int
68 | |                     } else {
69 | |                         scale_factor
70 | |                     }) - 1 as libc::c_int) < 0 as libc::c_int
   | |__________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
  --> src/xstrtoimax.rs:66:35
   |
66 |                       ((if (if (if ((if 1 as libc::c_int != 0 {
   |  ___________________________________^
67 | |                         0 as libc::c_int
68 | |                     } else {
69 | |                         scale_factor
70 | |                     }) - 1 as libc::c_int) < 0 as libc::c_int
   | |______________________^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: arithmetic detected
  --> src/xstrtoimax.rs:72:26
   |
72 |                           !(((((if 1 as libc::c_int != 0 {
   |  __________________________^
73 | |                             0 as libc::c_int
74 | |                         } else {
75 | |                             scale_factor
...  |
79 | |                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
80 | |                             - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int)
   | |______________________________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/xstrtoimax.rs:72:26
   |
72 |                           !(((((if 1 as libc::c_int != 0 {
   |  __________________________^
73 | |                             0 as libc::c_int
74 | |                         } else {
75 | |                             scale_factor
...  |
79 | |                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
80 | |                             - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int)
   | |______________________________________________________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
  --> src/xstrtoimax.rs:72:30
   |
72 |                           !(((((if 1 as libc::c_int != 0 {
   |  ______________________________^
73 | |                             0 as libc::c_int
74 | |                         } else {
75 | |                             scale_factor
76 | |                         }) + 1 as libc::c_int)
   | |__________________________^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/xstrtoimax.rs:78:47
   |
78 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
  --> src/xstrtoimax.rs:79:47
   |
79 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
  --> src/xstrtoimax.rs:82:25
   |
82 | /                         (if 1 as libc::c_int != 0 {
83 | |                             0 as libc::c_int
84 | |                         } else {
85 | |                             scale_factor
86 | |                         }) + 0 as libc::c_int
   | |_____________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
  --> src/xstrtoimax.rs:82:25
   |
82 | /                         (if 1 as libc::c_int != 0 {
83 | |                             0 as libc::c_int
84 | |                         } else {
85 | |                             scale_factor
86 | |                         }) + 0 as libc::c_int
   | |_____________________________________________^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
  --> src/xstrtoimax.rs:82:25
   |
82 | /                         (if 1 as libc::c_int != 0 {
83 | |                             0 as libc::c_int
84 | |                         } else {
85 | |                             scale_factor
86 | |                         }) + 0 as libc::c_int
   | |__________________________^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:89:25
    |
89  | /                         (scale_factor
90  | |                             < -(if ((if 1 as libc::c_int != 0 {
91  | |                                 0 as libc::c_int
92  | |                             } else {
...   |
110 | |                                 }) - 1 as libc::c_int
111 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
89  ~                         i32::from(scale_factor
90  +                             < -(if ((if 1 as libc::c_int != 0 {
91  +                                 0 as libc::c_int
92  +                             } else {
93  +                                 scale_factor
94  +                             }) - 1 as libc::c_int) < 0 as libc::c_int
95  +                             {
96  +                                 ((((if 1 as libc::c_int != 0 {
97  +                                     0 as libc::c_int
98  +                                 } else {
99  +                                     scale_factor
100 +                                 }) + 1 as libc::c_int)
101 +                                     << (::core::mem::size_of::<libc::c_int>() as libc::c_ulong)
102 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
103 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
104 +                                     - 1 as libc::c_int) * 2 as libc::c_int + 1 as libc::c_int
105 +                             } else {
106 +                                 (if 1 as libc::c_int != 0 {
107 +                                     0 as libc::c_int
108 +                                 } else {
109 +                                     scale_factor
110 +                                 }) - 1 as libc::c_int
111 +                             }))
    |

warning: arithmetic detected
   --> src/xstrtoimax.rs:90:31
    |
90  |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
91  | | ...                       0 as libc::c_int
92  | | ...                   } else {
93  | | ...                       scale_factor
...   |
110 | | ...                       }) - 1 as libc::c_int
111 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:90:31
    |
90  |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
91  | | ...                       0 as libc::c_int
92  | | ...                   } else {
93  | | ...                       scale_factor
...   |
110 | | ...                       }) - 1 as libc::c_int
111 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
  --> src/xstrtoimax.rs:90:37
   |
90 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
   |  _______________________________^
91 | | ...                       0 as libc::c_int
92 | | ...                   } else {
93 | | ...                       scale_factor
94 | | ...                   }) - 1 as libc::c_int) < 0 as libc::c_int
   | |________________________^
   |
   = help: change to `==` and swap the blocks of the `if`/`else`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:96:36
    |
96  |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
97  | | ...                       0 as libc::c_int
98  | | ...                   } else {
99  | | ...                       scale_factor
100 | | ...                   }) + 1 as libc::c_int)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:102:55
    |
102 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:103:55
    |
103 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:106:33
    |
106 | / ...                   (if 1 as libc::c_int != 0 {
107 | | ...                       0 as libc::c_int
108 | | ...                   } else {
109 | | ...                       scale_factor
110 | | ...                   }) - 1 as libc::c_int
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:113:25
    |
113 |                         ((0 as libc::c_int) < scale_factor) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from((0 as libc::c_int) < scale_factor)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:116:25
    |
116 | /                         (if 1 as libc::c_int != 0 {
117 | |                             0 as libc::c_int
118 | |                         } else {
119 | |                             scale_factor
...   |
122 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
123 | |                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:116:25
    |
116 | /                         (if 1 as libc::c_int != 0 {
117 | |                             0 as libc::c_int
118 | |                         } else {
119 | |                             scale_factor
...   |
122 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
123 | |                                 .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:116:25
    |
116 | /                         (if 1 as libc::c_int != 0 {
117 | |                             0 as libc::c_int
118 | |                         } else {
119 | |                             scale_factor
120 | |                         }) as libc::c_long + -(1 as libc::c_int) as intmax_t
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
116 ~                         i64::from((if 1 as libc::c_int != 0 {
117 +                             0 as libc::c_int
118 +                         } else {
119 +                             scale_factor
120 ~                         })) + -(1 as libc::c_int) as intmax_t
    |

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:116:25
    |
116 | /                         (if 1 as libc::c_int != 0 {
117 | |                             0 as libc::c_int
118 | |                         } else {
119 | |                             scale_factor
120 | |                         }) as libc::c_long + -(1 as libc::c_int) as intmax_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:120:46
    |
120 |                         }) as libc::c_long + -(1 as libc::c_int) as intmax_t
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:122:47
    |
122 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:123:47
    |
123 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
   --> src/xstrtoimax.rs:125:25
    |
125 |                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:125:25
    |
125 |                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xstrtoimax.rs:125:25
    |
125 |                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:125:25
    |
125 |                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:125:59
    |
125 |                         -(1 as libc::c_int) as intmax_t / -scale_factor as libc::c_long
    |                                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-scale_factor)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:126:27
    |
126 |                     }) <= -(1 as libc::c_int) as libc::c_long - *x) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:126:27
    |
126 |                     }) <= -(1 as libc::c_int) as libc::c_long - *x) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:126:27
    |
126 |                     }) <= -(1 as libc::c_int) as libc::c_long - *x) as libc::c_int
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:129:28
    |
129 |                   if (if (if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
130 | |                     0 as libc::c_int as libc::c_long
131 | |                 } else {
132 | |                     (if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
133 | |                         as libc::c_long + 0 as libc::c_int as intmax_t
134 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:129:28
    |
129 |                   if (if (if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
130 | |                     0 as libc::c_int as libc::c_long
131 | |                 } else {
132 | |                     (if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
133 | |                         as libc::c_long + 0 as libc::c_int as intmax_t
134 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:129:29
    |
129 |                   if (if (if ((if 1 as libc::c_int != 0 {
    |  _____________________________^
130 | |                     0 as libc::c_int as libc::c_long
131 | |                 } else {
132 | |                     (if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
133 | |                         as libc::c_long + 0 as libc::c_int as intmax_t
134 | |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |__________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:130:21
    |
130 |                     0 as libc::c_int as libc::c_long
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:132:21
    |
132 | /                     (if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
133 | |                         as libc::c_long + 0 as libc::c_int as intmax_t
    | |_______________________________________^ help: try: `i64::from((if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor }))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:132:21
    |
132 |                     (if 1 as libc::c_int != 0 { 0 as libc::c_int } else { scale_factor })
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:133:43
    |
133 |                         as libc::c_long + 0 as libc::c_int as intmax_t
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:134:22
    |
134 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:134:58
    |
134 |                 }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:136:22
    |
136 |                       !(((((if 1 as libc::c_int != 0 {
    |  ______________________^
137 | |                         0 as libc::c_int as libc::c_long
138 | |                     } else {
139 | |                         (if 1 as libc::c_int != 0 {
...   |
149 | |                         * 2 as libc::c_int as libc::c_long
150 | |                         + 1 as libc::c_int as libc::c_long)
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:136:22
    |
136 |                       !(((((if 1 as libc::c_int != 0 {
    |  ______________________^
137 | |                         0 as libc::c_int as libc::c_long
138 | |                     } else {
139 | |                         (if 1 as libc::c_int != 0 {
...   |
149 | |                         * 2 as libc::c_int as libc::c_long
150 | |                         + 1 as libc::c_int as libc::c_long)
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:136:26
    |
136 |                       !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
137 | |                         0 as libc::c_int as libc::c_long
138 | |                     } else {
139 | |                         (if 1 as libc::c_int != 0 {
...   |
143 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
144 | |                     }) + 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:137:25
    |
137 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:139:25
    |
139 | /                         (if 1 as libc::c_int != 0 {
140 | |                             0 as libc::c_int
141 | |                         } else {
142 | |                             scale_factor
143 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
139 ~                         i64::from((if 1 as libc::c_int != 0 {
140 +                             0 as libc::c_int
141 +                         } else {
142 +                             scale_factor
143 ~                         })) + 0 as libc::c_int as intmax_t
    |

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:139:25
    |
139 | /                         (if 1 as libc::c_int != 0 {
140 | |                             0 as libc::c_int
141 | |                         } else {
142 | |                             scale_factor
143 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:143:46
    |
143 |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:144:26
    |
144 |                     }) + 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:146:43
    |
146 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:147:43
    |
147 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:148:27
    |
148 |                         - 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:149:27
    |
149 |                         * 2 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:150:27
    |
150 |                         + 1 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:152:21
    |
152 | /                     (if 1 as libc::c_int != 0 {
153 | |                         0 as libc::c_int as libc::c_long
154 | |                     } else {
155 | |                         (if 1 as libc::c_int != 0 {
...   |
159 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
160 | |                     }) + 0 as libc::c_int as libc::c_long
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:152:21
    |
152 | /                     (if 1 as libc::c_int != 0 {
153 | |                         0 as libc::c_int as libc::c_long
154 | |                     } else {
155 | |                         (if 1 as libc::c_int != 0 {
...   |
159 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
160 | |                     }) + 0 as libc::c_int as libc::c_long
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:152:21
    |
152 | /                     (if 1 as libc::c_int != 0 {
153 | |                         0 as libc::c_int as libc::c_long
154 | |                     } else {
155 | |                         (if 1 as libc::c_int != 0 {
...   |
159 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
160 | |                     }) + 0 as libc::c_int as libc::c_long
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:153:25
    |
153 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:155:25
    |
155 | /                         (if 1 as libc::c_int != 0 {
156 | |                             0 as libc::c_int
157 | |                         } else {
158 | |                             scale_factor
159 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
155 ~                         i64::from((if 1 as libc::c_int != 0 {
156 +                             0 as libc::c_int
157 +                         } else {
158 +                             scale_factor
159 ~                         })) + 0 as libc::c_int as intmax_t
    |

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:155:25
    |
155 | /                         (if 1 as libc::c_int != 0 {
156 | |                             0 as libc::c_int
157 | |                         } else {
158 | |                             scale_factor
159 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:159:46
    |
159 |                         }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:160:26
    |
160 |                     }) + 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:161:22
    |
161 |                 }) < 0 as libc::c_int as libc::c_long
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:163:21
    |
163 | /                     (((if 1 as libc::c_int != 0 {
164 | |                         0 as libc::c_int
165 | |                     } else {
166 | |                         scale_factor
...   |
203 | |                             }) - 1 as libc::c_int as libc::c_long
204 | |                         })) as libc::c_int
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
163 ~                     i32::from(((if 1 as libc::c_int != 0 {
164 +                         0 as libc::c_int
165 +                     } else {
166 +                         scale_factor
167 +                     }) as libc::c_long + 0 as libc::c_int as intmax_t)
168 +                         < -(if ((if 1 as libc::c_int != 0 {
169 +                             0 as libc::c_int as libc::c_long
170 +                         } else {
171 +                             (if 1 as libc::c_int != 0 {
172 +                                 0 as libc::c_int
173 +                             } else {
174 +                                 scale_factor
175 +                             }) as libc::c_long + 0 as libc::c_int as intmax_t
176 +                         }) - 1 as libc::c_int as libc::c_long)
177 +                             < 0 as libc::c_int as libc::c_long
178 +                         {
179 +                             ((((if 1 as libc::c_int != 0 {
180 +                                 0 as libc::c_int as libc::c_long
181 +                             } else {
182 +                                 (if 1 as libc::c_int != 0 {
183 +                                     0 as libc::c_int
184 +                                 } else {
185 +                                     scale_factor
186 +                                 }) as libc::c_long + 0 as libc::c_int as intmax_t
187 +                             }) + 1 as libc::c_int as libc::c_long)
188 +                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
189 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
190 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
191 +                                 - 1 as libc::c_int as libc::c_long)
192 +                                 * 2 as libc::c_int as libc::c_long
193 +                                 + 1 as libc::c_int as libc::c_long
194 +                         } else {
195 +                             (if 1 as libc::c_int != 0 {
196 +                                 0 as libc::c_int as libc::c_long
197 +                             } else {
198 +                                 (if 1 as libc::c_int != 0 {
199 +                                     0 as libc::c_int
200 +                                 } else {
201 +                                     scale_factor
202 +                                 }) as libc::c_long + 0 as libc::c_int as intmax_t
203 +                             }) - 1 as libc::c_int as libc::c_long
204 +                         }))
    |

warning: arithmetic detected
   --> src/xstrtoimax.rs:163:22
    |
163 |                       (((if 1 as libc::c_int != 0 {
    |  ______________________^
164 | |                         0 as libc::c_int
165 | |                     } else {
166 | |                         scale_factor
167 | |                     }) as libc::c_long + 0 as libc::c_int as intmax_t)
    | |______________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:163:22
    |
163 |                       (((if 1 as libc::c_int != 0 {
    |  ______________________^
164 | |                         0 as libc::c_int
165 | |                     } else {
166 | |                         scale_factor
167 | |                     }) as libc::c_long + 0 as libc::c_int as intmax_t)
    | |______________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:163:23
    |
163 |                       (((if 1 as libc::c_int != 0 {
    |  _______________________^
164 | |                         0 as libc::c_int
165 | |                     } else {
166 | |                         scale_factor
167 | |                     }) as libc::c_long + 0 as libc::c_int as intmax_t)
    | |______________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
163 ~                     ((i64::from((if 1 as libc::c_int != 0 {
164 +                         0 as libc::c_int
165 +                     } else {
166 +                         scale_factor
167 ~                     })) + 0 as libc::c_int as intmax_t)
    |

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:163:23
    |
163 |                       (((if 1 as libc::c_int != 0 {
    |  _______________________^
164 | |                         0 as libc::c_int
165 | |                     } else {
166 | |                         scale_factor
167 | |                     }) as libc::c_long + 0 as libc::c_int as intmax_t)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:167:42
    |
167 |                     }) as libc::c_long + 0 as libc::c_int as intmax_t)
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:168:27
    |
168 |                           < -(if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
169 | |                             0 as libc::c_int as libc::c_long
170 | |                         } else {
171 | |                             (if 1 as libc::c_int != 0 {
...   |
203 | |                             }) - 1 as libc::c_int as libc::c_long
204 | |                         })) as libc::c_int
    | |__________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:168:27
    |
168 |                           < -(if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
169 | |                             0 as libc::c_int as libc::c_long
170 | |                         } else {
171 | |                             (if 1 as libc::c_int != 0 {
...   |
203 | |                             }) - 1 as libc::c_int as libc::c_long
204 | |                         })) as libc::c_int
    | |__________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:168:33
    |
168 |                           < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________________^
169 | |                             0 as libc::c_int as libc::c_long
170 | |                         } else {
171 | |                             (if 1 as libc::c_int != 0 {
...   |
175 | |                             }) as libc::c_long + 0 as libc::c_int as intmax_t
176 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:169:29
    |
169 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:171:29
    |
171 | / ...                   (if 1 as libc::c_int != 0 {
172 | | ...                       0 as libc::c_int
173 | | ...                   } else {
174 | | ...                       scale_factor
175 | | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
171 ~                             i64::from((if 1 as libc::c_int != 0 {
172 +                                 0 as libc::c_int
173 +                             } else {
174 +                                 scale_factor
175 ~                             })) + 0 as libc::c_int as intmax_t
    |

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:171:29
    |
171 | / ...                   (if 1 as libc::c_int != 0 {
172 | | ...                       0 as libc::c_int
173 | | ...                   } else {
174 | | ...                       scale_factor
175 | | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:175:50
    |
175 | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:176:30
    |
176 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:177:31
    |
177 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:179:32
    |
179 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
180 | | ...                       0 as libc::c_int as libc::c_long
181 | | ...                   } else {
182 | | ...                       (if 1 as libc::c_int != 0 {
...   |
186 | | ...                       }) as libc::c_long + 0 as libc::c_int as intmax_t
187 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:180:33
    |
180 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:182:33
    |
182 | / ...                   (if 1 as libc::c_int != 0 {
183 | | ...                       0 as libc::c_int
184 | | ...                   } else {
185 | | ...                       scale_factor
186 | | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
182 ~                                 i64::from((if 1 as libc::c_int != 0 {
183 +                                     0 as libc::c_int
184 +                                 } else {
185 +                                     scale_factor
186 ~                                 })) + 0 as libc::c_int as intmax_t
    |

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:182:33
    |
182 | / ...                   (if 1 as libc::c_int != 0 {
183 | | ...                       0 as libc::c_int
184 | | ...                   } else {
185 | | ...                       scale_factor
186 | | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:186:54
    |
186 | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:187:34
    |
187 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:189:51
    |
189 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:190:51
    |
190 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:191:35
    |
191 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:192:35
    |
192 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:193:35
    |
193 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:195:29
    |
195 | / ...                   (if 1 as libc::c_int != 0 {
196 | | ...                       0 as libc::c_int as libc::c_long
197 | | ...                   } else {
198 | | ...                       (if 1 as libc::c_int != 0 {
...   |
202 | | ...                       }) as libc::c_long + 0 as libc::c_int as intmax_t
203 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:196:33
    |
196 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:198:33
    |
198 | / ...                   (if 1 as libc::c_int != 0 {
199 | | ...                       0 as libc::c_int
200 | | ...                   } else {
201 | | ...                       scale_factor
202 | | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
198 ~                                 i64::from((if 1 as libc::c_int != 0 {
199 +                                     0 as libc::c_int
200 +                                 } else {
201 +                                     scale_factor
202 ~                                 })) + 0 as libc::c_int as intmax_t
    |

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:198:33
    |
198 | / ...                   (if 1 as libc::c_int != 0 {
199 | | ...                       0 as libc::c_int
200 | | ...                   } else {
201 | | ...                       scale_factor
202 | | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:202:54
    |
202 | ...                   }) as libc::c_long + 0 as libc::c_int as intmax_t
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:203:34
    |
203 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:206:21
    |
206 | /                     ((0 as libc::c_int as libc::c_long)
207 | |                         < (if 1 as libc::c_int != 0 {
208 | |                             0 as libc::c_int
209 | |                         } else {
210 | |                             scale_factor
211 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t) as libc::c_int
    | |_________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
206 ~                     i32::from((0 as libc::c_int as libc::c_long)
207 +                         < (if 1 as libc::c_int != 0 {
208 +                             0 as libc::c_int
209 +                         } else {
210 +                             scale_factor
211 +                         }) as libc::c_long + 0 as libc::c_int as intmax_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:206:22
    |
206 |                     ((0 as libc::c_int as libc::c_long)
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:207:27
    |
207 |                           < (if 1 as libc::c_int != 0 {
    |  ___________________________^
208 | |                             0 as libc::c_int
209 | |                         } else {
210 | |                             scale_factor
211 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:207:27
    |
207 |                           < (if 1 as libc::c_int != 0 {
    |  ___________________________^
208 | |                             0 as libc::c_int
209 | |                         } else {
210 | |                             scale_factor
211 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t) as libc::c_int
    | |_________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:207:27
    |
207 |                           < (if 1 as libc::c_int != 0 {
    |  ___________________________^
208 | |                             0 as libc::c_int
209 | |                         } else {
210 | |                             scale_factor
211 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t) as libc::c_int
    | |__________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
207 ~                         < i64::from((if 1 as libc::c_int != 0 {
208 +                             0 as libc::c_int
209 +                         } else {
210 +                             scale_factor
211 ~                         })) + 0 as libc::c_int as intmax_t) as libc::c_int
    |

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:207:27
    |
207 |                           < (if 1 as libc::c_int != 0 {
    |  ___________________________^
208 | |                             0 as libc::c_int
209 | |                         } else {
210 | |                             scale_factor
211 | |                         }) as libc::c_long + 0 as libc::c_int as intmax_t) as libc::c_int
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:211:46
    |
211 |                         }) as libc::c_long + 0 as libc::c_int as intmax_t) as libc::c_int
    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:212:44
    |
212 |                 }) != 0 && scale_factor == -(1 as libc::c_int)
    |                                            ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:212:44
    |
212 |                 }) != 0 && scale_factor == -(1 as libc::c_int)
    |                                            ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xstrtoimax.rs:214:24
    |
214 |                       if ((if 1 as libc::c_int != 0 {
    |  ________________________^
215 | |                         0 as libc::c_int as libc::c_long
216 | |                     } else {
217 | |                         *x
218 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:214:24
    |
214 |                       if ((if 1 as libc::c_int != 0 {
    |  ________________________^
215 | |                         0 as libc::c_int as libc::c_long
216 | |                     } else {
217 | |                         *x
218 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:214:25
    |
214 |                       if ((if 1 as libc::c_int != 0 {
    |  _________________________^
215 | |                         0 as libc::c_int as libc::c_long
216 | |                     } else {
217 | |                         *x
218 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:215:25
    |
215 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:218:26
    |
218 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:219:27
    |
219 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:221:25
    |
221 | /                         ((0 as libc::c_int as libc::c_long)
222 | |                             < *x + 0 as libc::c_int as intmax_t) as libc::c_int
    | |_______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
221 ~                         i32::from((0 as libc::c_int as libc::c_long)
222 +                             < *x + 0 as libc::c_int as intmax_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:221:26
    |
221 |                         ((0 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:222:31
    |
222 | ...                   < *x + 0 as libc::c_int as intmax_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:222:31
    |
222 | ...                   < *x + 0 as libc::c_int as intmax_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:222:36
    |
222 | ...                   < *x + 0 as libc::c_int as intmax_t) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:224:25
    |
224 | /                         ((0 as libc::c_int as libc::c_long) < *x
225 | |                             && (-(1 as libc::c_int) as libc::c_long
226 | |                                 - 0 as libc::c_int as intmax_t)
227 | |                                 < *x - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |_______________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
224 ~                         i32::from((0 as libc::c_int as libc::c_long) < *x
225 +                             && (-(1 as libc::c_int) as libc::c_long
226 +                                 - 0 as libc::c_int as intmax_t)
227 +                                 < *x - 1 as libc::c_int as libc::c_long)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:224:26
    |
224 |                         ((0 as libc::c_int as libc::c_long) < *x
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:225:32
    |
225 |   ...                   && (-(1 as libc::c_int) as libc::c_long
    |  __________________________^
226 | | ...                       - 0 as libc::c_int as intmax_t)
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:225:32
    |
225 |   ...                   && (-(1 as libc::c_int) as libc::c_long
    |  __________________________^
226 | | ...                       - 0 as libc::c_int as intmax_t)
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:225:33
    |
225 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:226:35
    |
226 | ...                   - 0 as libc::c_int as intmax_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:227:35
    |
227 | ...                   < *x - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:227:35
    |
227 | ...                   < *x - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:227:40
    |
227 | ...                   < *x - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:230:21
    |
230 | /                     ((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)
231 | |                         as libc::c_int
    | |______________________________________^ help: try: `i32::from((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:230:22
    |
230 |                     ((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:230:22
    |
230 |                     ((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xstrtoimax.rs:230:22
    |
230 |                     ((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:230:23
    |
230 |                     ((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:230:54
    |
230 |                     ((0 as libc::c_int as intmax_t / scale_factor as libc::c_long) < *x)
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(scale_factor)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:238:25
    |
238 |                 if *x < 0 as libc::c_int as libc::c_long {
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:239:32
    |
239 |                       if (if (if ((if 1 as libc::c_int != 0 {
    |  ________________________________^
240 | |                         0 as libc::c_int as libc::c_long
241 | |                     } else {
242 | |                         (if 1 as libc::c_int != 0 {
...   |
246 | |                         }) + 0 as libc::c_int as intmax_t
247 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:239:32
    |
239 |                       if (if (if ((if 1 as libc::c_int != 0 {
    |  ________________________________^
240 | |                         0 as libc::c_int as libc::c_long
241 | |                     } else {
242 | |                         (if 1 as libc::c_int != 0 {
...   |
246 | |                         }) + 0 as libc::c_int as intmax_t
247 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:239:33
    |
239 |                       if (if (if ((if 1 as libc::c_int != 0 {
    |  _________________________________^
240 | |                         0 as libc::c_int as libc::c_long
241 | |                     } else {
242 | |                         (if 1 as libc::c_int != 0 {
...   |
246 | |                         }) + 0 as libc::c_int as intmax_t
247 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:240:25
    |
240 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:242:25
    |
242 | /                         (if 1 as libc::c_int != 0 {
243 | |                             0 as libc::c_int as libc::c_long
244 | |                         } else {
245 | |                             *x
246 | |                         }) + 0 as libc::c_int as intmax_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:243:29
    |
243 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:246:30
    |
246 |                         }) + 0 as libc::c_int as intmax_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:247:26
    |
247 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:248:27
    |
248 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:250:26
    |
250 |                           !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
251 | |                             0 as libc::c_int as libc::c_long
252 | |                         } else {
253 | |                             (if 1 as libc::c_int != 0 {
...   |
263 | |                             * 2 as libc::c_int as libc::c_long
264 | |                             + 1 as libc::c_int as libc::c_long)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:250:26
    |
250 |                           !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
251 | |                             0 as libc::c_int as libc::c_long
252 | |                         } else {
253 | |                             (if 1 as libc::c_int != 0 {
...   |
263 | |                             * 2 as libc::c_int as libc::c_long
264 | |                             + 1 as libc::c_int as libc::c_long)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:250:30
    |
250 |                           !(((((if 1 as libc::c_int != 0 {
    |  ______________________________^
251 | |                             0 as libc::c_int as libc::c_long
252 | |                         } else {
253 | |                             (if 1 as libc::c_int != 0 {
...   |
257 | |                             }) + 0 as libc::c_int as intmax_t
258 | |                         }) + 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:251:29
    |
251 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:253:29
    |
253 | / ...                   (if 1 as libc::c_int != 0 {
254 | | ...                       0 as libc::c_int as libc::c_long
255 | | ...                   } else {
256 | | ...                       *x
257 | | ...                   }) + 0 as libc::c_int as intmax_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:254:33
    |
254 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:257:34
    |
257 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:258:30
    |
258 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:260:47
    |
260 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:261:47
    |
261 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:262:31
    |
262 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:263:31
    |
263 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:264:31
    |
264 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:266:25
    |
266 | /                         (if 1 as libc::c_int != 0 {
267 | |                             0 as libc::c_int as libc::c_long
268 | |                         } else {
269 | |                             (if 1 as libc::c_int != 0 {
...   |
273 | |                             }) + 0 as libc::c_int as intmax_t
274 | |                         }) + 0 as libc::c_int as libc::c_long
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:266:25
    |
266 | /                         (if 1 as libc::c_int != 0 {
267 | |                             0 as libc::c_int as libc::c_long
268 | |                         } else {
269 | |                             (if 1 as libc::c_int != 0 {
...   |
273 | |                             }) + 0 as libc::c_int as intmax_t
274 | |                         }) + 0 as libc::c_int as libc::c_long
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:266:25
    |
266 | /                         (if 1 as libc::c_int != 0 {
267 | |                             0 as libc::c_int as libc::c_long
268 | |                         } else {
269 | |                             (if 1 as libc::c_int != 0 {
...   |
273 | |                             }) + 0 as libc::c_int as intmax_t
274 | |                         }) + 0 as libc::c_int as libc::c_long
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:267:29
    |
267 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:269:29
    |
269 | / ...                   (if 1 as libc::c_int != 0 {
270 | | ...                       0 as libc::c_int as libc::c_long
271 | | ...                   } else {
272 | | ...                       *x
273 | | ...                   }) + 0 as libc::c_int as intmax_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:270:33
    |
270 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:273:34
    |
273 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:274:30
    |
274 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:275:26
    |
275 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:277:25
    |
277 | /                         (((if 1 as libc::c_int != 0 {
278 | |                             0 as libc::c_int as libc::c_long
279 | |                         } else {
280 | |                             *x
...   |
317 | |                                 }) - 1 as libc::c_int as libc::c_long
318 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
277 ~                         i32::from(((if 1 as libc::c_int != 0 {
278 +                             0 as libc::c_int as libc::c_long
279 +                         } else {
280 +                             *x
281 +                         }) + 0 as libc::c_int as intmax_t)
282 +                             < -(if ((if 1 as libc::c_int != 0 {
283 +                                 0 as libc::c_int as libc::c_long
284 +                             } else {
285 +                                 (if 1 as libc::c_int != 0 {
286 +                                     0 as libc::c_int as libc::c_long
287 +                                 } else {
288 +                                     *x
289 +                                 }) + 0 as libc::c_int as intmax_t
290 +                             }) - 1 as libc::c_int as libc::c_long)
291 +                                 < 0 as libc::c_int as libc::c_long
292 +                             {
293 +                                 ((((if 1 as libc::c_int != 0 {
294 +                                     0 as libc::c_int as libc::c_long
295 +                                 } else {
296 +                                     (if 1 as libc::c_int != 0 {
297 +                                         0 as libc::c_int as libc::c_long
298 +                                     } else {
299 +                                         *x
300 +                                     }) + 0 as libc::c_int as intmax_t
301 +                                 }) + 1 as libc::c_int as libc::c_long)
302 +                                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
303 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
304 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
305 +                                     - 1 as libc::c_int as libc::c_long)
306 +                                     * 2 as libc::c_int as libc::c_long
307 +                                     + 1 as libc::c_int as libc::c_long
308 +                             } else {
309 +                                 (if 1 as libc::c_int != 0 {
310 +                                     0 as libc::c_int as libc::c_long
311 +                                 } else {
312 +                                     (if 1 as libc::c_int != 0 {
313 +                                         0 as libc::c_int as libc::c_long
314 +                                     } else {
315 +                                         *x
316 +                                     }) + 0 as libc::c_int as intmax_t
317 +                                 }) - 1 as libc::c_int as libc::c_long
318 +                             }))
    |

warning: arithmetic detected
   --> src/xstrtoimax.rs:277:26
    |
277 |                           (((if 1 as libc::c_int != 0 {
    |  __________________________^
278 | |                             0 as libc::c_int as libc::c_long
279 | |                         } else {
280 | |                             *x
281 | |                         }) + 0 as libc::c_int as intmax_t)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:277:26
    |
277 |                           (((if 1 as libc::c_int != 0 {
    |  __________________________^
278 | |                             0 as libc::c_int as libc::c_long
279 | |                         } else {
280 | |                             *x
281 | |                         }) + 0 as libc::c_int as intmax_t)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:277:27
    |
277 |                           (((if 1 as libc::c_int != 0 {
    |  ___________________________^
278 | |                             0 as libc::c_int as libc::c_long
279 | |                         } else {
280 | |                             *x
281 | |                         }) + 0 as libc::c_int as intmax_t)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:278:29
    |
278 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:281:30
    |
281 |                         }) + 0 as libc::c_int as intmax_t)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:282:31
    |
282 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
283 | | ...                       0 as libc::c_int as libc::c_long
284 | | ...                   } else {
285 | | ...                       (if 1 as libc::c_int != 0 {
...   |
317 | | ...                       }) - 1 as libc::c_int as libc::c_long
318 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:282:31
    |
282 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
283 | | ...                       0 as libc::c_int as libc::c_long
284 | | ...                   } else {
285 | | ...                       (if 1 as libc::c_int != 0 {
...   |
317 | | ...                       }) - 1 as libc::c_int as libc::c_long
318 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:282:37
    |
282 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
283 | | ...                       0 as libc::c_int as libc::c_long
284 | | ...                   } else {
285 | | ...                       (if 1 as libc::c_int != 0 {
...   |
289 | | ...                       }) + 0 as libc::c_int as intmax_t
290 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:283:33
    |
283 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:285:33
    |
285 | / ...                   (if 1 as libc::c_int != 0 {
286 | | ...                       0 as libc::c_int as libc::c_long
287 | | ...                   } else {
288 | | ...                       *x
289 | | ...                   }) + 0 as libc::c_int as intmax_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:286:37
    |
286 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:289:38
    |
289 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:290:34
    |
290 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:291:35
    |
291 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:293:36
    |
293 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
294 | | ...                       0 as libc::c_int as libc::c_long
295 | | ...                   } else {
296 | | ...                       (if 1 as libc::c_int != 0 {
...   |
300 | | ...                       }) + 0 as libc::c_int as intmax_t
301 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:294:37
    |
294 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:296:37
    |
296 | / ...                   (if 1 as libc::c_int != 0 {
297 | | ...                       0 as libc::c_int as libc::c_long
298 | | ...                   } else {
299 | | ...                       *x
300 | | ...                   }) + 0 as libc::c_int as intmax_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:297:41
    |
297 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:300:42
    |
300 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:301:38
    |
301 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:303:55
    |
303 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:304:55
    |
304 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:305:39
    |
305 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:306:39
    |
306 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:307:39
    |
307 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:309:33
    |
309 | / ...                   (if 1 as libc::c_int != 0 {
310 | | ...                       0 as libc::c_int as libc::c_long
311 | | ...                   } else {
312 | | ...                       (if 1 as libc::c_int != 0 {
...   |
316 | | ...                       }) + 0 as libc::c_int as intmax_t
317 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:310:37
    |
310 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:312:37
    |
312 | / ...                   (if 1 as libc::c_int != 0 {
313 | | ...                       0 as libc::c_int as libc::c_long
314 | | ...                   } else {
315 | | ...                       *x
316 | | ...                   }) + 0 as libc::c_int as intmax_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:313:41
    |
313 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:316:42
    |
316 | ...                   }) + 0 as libc::c_int as intmax_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:317:38
    |
317 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:320:25
    |
320 | /                         ((0 as libc::c_int as libc::c_long)
321 | |                             < (if 1 as libc::c_int != 0 {
322 | |                                 0 as libc::c_int as libc::c_long
323 | |                             } else {
324 | |                                 *x
325 | |                             }) + 0 as libc::c_int as intmax_t) as libc::c_int
    | |_____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
320 ~                         i32::from((0 as libc::c_int as libc::c_long)
321 +                             < (if 1 as libc::c_int != 0 {
322 +                                 0 as libc::c_int as libc::c_long
323 +                             } else {
324 +                                 *x
325 +                             }) + 0 as libc::c_int as intmax_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:320:26
    |
320 |                         ((0 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:321:31
    |
321 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
322 | | ...                       0 as libc::c_int as libc::c_long
323 | | ...                   } else {
324 | | ...                       *x
325 | | ...                   }) + 0 as libc::c_int as intmax_t) as libc::c_int
    | |_______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:321:31
    |
321 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
322 | | ...                       0 as libc::c_int as libc::c_long
323 | | ...                   } else {
324 | | ...                       *x
325 | | ...                   }) + 0 as libc::c_int as intmax_t) as libc::c_int
    | |_______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:321:31
    |
321 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
322 | | ...                       0 as libc::c_int as libc::c_long
323 | | ...                   } else {
324 | | ...                       *x
325 | | ...                   }) + 0 as libc::c_int as intmax_t) as libc::c_int
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:322:33
    |
322 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:325:34
    |
325 | ...                   }) + 0 as libc::c_int as intmax_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:326:38
    |
326 |                     }) != 0 && *x == -(1 as libc::c_int) as libc::c_long
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:326:38
    |
326 |                     }) != 0 && *x == -(1 as libc::c_int) as libc::c_long
    |                                      ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:326:38
    |
326 |                     }) != 0 && *x == -(1 as libc::c_int) as libc::c_long
    |                                      ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xstrtoimax.rs:328:28
    |
328 |                           if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
329 | |                             0 as libc::c_int
330 | |                         } else {
331 | |                             scale_factor
332 | |                         }) - 1 as libc::c_int) < 0 as libc::c_int
    | |______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:328:28
    |
328 |                           if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
329 | |                             0 as libc::c_int
330 | |                         } else {
331 | |                             scale_factor
332 | |                         }) - 1 as libc::c_int) < 0 as libc::c_int
    | |______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/xstrtoimax.rs:328:29
    |
328 |                           if ((if 1 as libc::c_int != 0 {
    |  _____________________________^
329 | |                             0 as libc::c_int
330 | |                         } else {
331 | |                             scale_factor
332 | |                         }) - 1 as libc::c_int) < 0 as libc::c_int
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:334:29
    |
334 | / ...                   ((0 as libc::c_int as libc::c_long)
335 | | ...                       < scale_factor as libc::c_long
336 | | ...                           + 0 as libc::c_int as intmax_t) as libc::c_int
    | |____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
334 ~                             i32::from((0 as libc::c_int as libc::c_long)
335 +                                 < scale_factor as libc::c_long
336 +                                     + 0 as libc::c_int as intmax_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:334:30
    |
334 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:335:35
    |
335 |   ...                   < scale_factor as libc::c_long
    |  _________________________^
336 | | ...                       + 0 as libc::c_int as intmax_t) as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:335:35
    |
335 |   ...                   < scale_factor as libc::c_long
    |  _________________________^
336 | | ...                       + 0 as libc::c_int as intmax_t) as libc::c_int
    | |________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:335:35
    |
335 | ...                   < scale_factor as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(scale_factor)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:336:39
    |
336 | ...                   + 0 as libc::c_int as intmax_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:338:29
    |
338 | / ...                   ((-(1 as libc::c_int) as libc::c_long
339 | | ...                       - 0 as libc::c_int as intmax_t)
340 | | ...                       < (scale_factor - 1 as libc::c_int) as libc::c_long)
341 | | ...                       as libc::c_int
    | |________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
338 ~                             i32::from((-(1 as libc::c_int) as libc::c_long
339 +                                 - 0 as libc::c_int as intmax_t)
340 +                                 < (scale_factor - 1 as libc::c_int) as libc::c_long)
    |

warning: arithmetic detected
   --> src/xstrtoimax.rs:338:30
    |
338 |   ...                   ((-(1 as libc::c_int) as libc::c_long
    |  ________________________^
339 | | ...                       - 0 as libc::c_int as intmax_t)
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:338:30
    |
338 |   ...                   ((-(1 as libc::c_int) as libc::c_long
    |  ________________________^
339 | | ...                       - 0 as libc::c_int as intmax_t)
    | |_________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:338:31
    |
338 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:339:35
    |
339 | ...                   - 0 as libc::c_int as intmax_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:340:35
    |
340 | ...                   < (scale_factor - 1 as libc::c_int) as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(scale_factor - 1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:340:35
    |
340 | ...                   < (scale_factor - 1 as libc::c_int) as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:340:35
    |
340 | ...                   < (scale_factor - 1 as libc::c_int) as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:344:25
    |
344 | /                         (0 as libc::c_int as intmax_t / *x
345 | |                             < scale_factor as libc::c_long) as libc::c_int
    | |__________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
344 ~                         i32::from(0 as libc::c_int as intmax_t / *x
345 +                             < scale_factor as libc::c_long)
    |

warning: arithmetic detected
   --> src/xstrtoimax.rs:344:26
    |
344 |                         (0 as libc::c_int as intmax_t / *x
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:344:26
    |
344 |                         (0 as libc::c_int as intmax_t / *x
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xstrtoimax.rs:344:26
    |
344 |                         (0 as libc::c_int as intmax_t / *x
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:344:26
    |
344 |                         (0 as libc::c_int as intmax_t / *x
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:345:31
    |
345 | ...                   < scale_factor as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(scale_factor)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:348:21
    |
348 | /                     ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
349 | |                         < *x) as libc::c_int
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
348 ~                     i32::from((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
349 +                         < *x)
    |

warning: arithmetic detected
   --> src/xstrtoimax.rs:348:22
    |
348 |                     ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:348:22
    |
348 |                     ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/xstrtoimax.rs:348:22
    |
348 |                     ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:348:23
    |
348 |                     ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:348:57
    |
348 |                     ((-(1 as libc::c_int) as intmax_t / scale_factor as libc::c_long)
    |                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(scale_factor)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: borrow as raw pointer
   --> src/xstrtoimax.rs:355:10
    |
355 |         *(&mut scaled as *mut intmax_t) = fresh4;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(scaled)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: borrow as raw pointer
   --> src/xstrtoimax.rs:359:10
    |
359 |         *(&mut scaled as *mut intmax_t) = fresh6;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(scaled)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/xstrtoimax.rs:360:9
    |
360 |         fresh7 as libc::c_int
    |         ^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(fresh7)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:363:22
    |
363 |         *x = if *x < 0 as libc::c_int as libc::c_long {
    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:364:17
    |
364 |             !if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:364:50
    |
364 |             !if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:364:50
    |
364 |             !if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                                  ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:364:50
    |
364 |             !if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                                  ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:365:17
    |
365 |                 -(1 as libc::c_int) as intmax_t
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:365:17
    |
365 |                 -(1 as libc::c_int) as intmax_t
    |                 ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:365:17
    |
365 |                 -(1 as libc::c_int) as intmax_t
    |                 ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xstrtoimax.rs:367:17
    |
367 | /                 (((1 as libc::c_int as intmax_t)
368 | |                     << (::core::mem::size_of::<intmax_t>() as libc::c_ulong)
369 | |                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
370 | |                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
371 | |                     - 1 as libc::c_int as libc::c_long)
372 | |                     * 2 as libc::c_int as libc::c_long + 1 as libc::c_int as libc::c_long
    | |_________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:367:17
    |
367 | /                 (((1 as libc::c_int as intmax_t)
368 | |                     << (::core::mem::size_of::<intmax_t>() as libc::c_ulong)
369 | |                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
370 | |                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
371 | |                     - 1 as libc::c_int as libc::c_long)
372 | |                     * 2 as libc::c_int as libc::c_long + 1 as libc::c_int as libc::c_long
    | |_________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:367:19
    |
367 |                 (((1 as libc::c_int as intmax_t)
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:369:39
    |
369 |                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:370:39
    |
370 |                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:371:23
    |
371 |                     - 1 as libc::c_int as libc::c_long)
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:372:23
    |
372 |                     * 2 as libc::c_int as libc::c_long + 1 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:372:58
    |
372 |                     * 2 as libc::c_int as libc::c_long + 1 as libc::c_int as libc::c_long
    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:374:19
    |
374 |         } else if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:374:52
    |
374 |         } else if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:374:52
    |
374 |         } else if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                                    ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:374:52
    |
374 |         } else if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                                    ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:375:13
    |
375 |             -(1 as libc::c_int) as intmax_t
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:375:13
    |
375 |             -(1 as libc::c_int) as intmax_t
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:375:13
    |
375 |             -(1 as libc::c_int) as intmax_t
    |             ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xstrtoimax.rs:377:13
    |
377 | /             (((1 as libc::c_int as intmax_t)
378 | |                 << (::core::mem::size_of::<intmax_t>() as libc::c_ulong)
379 | |                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
380 | |                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
381 | |                 - 1 as libc::c_int as libc::c_long) * 2 as libc::c_int as libc::c_long
382 | |                 + 1 as libc::c_int as libc::c_long
    | |__________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:377:13
    |
377 | /             (((1 as libc::c_int as intmax_t)
378 | |                 << (::core::mem::size_of::<intmax_t>() as libc::c_ulong)
379 | |                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
380 | |                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
381 | |                 - 1 as libc::c_int as libc::c_long) * 2 as libc::c_int as libc::c_long
382 | |                 + 1 as libc::c_int as libc::c_long
    | |__________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:377:15
    |
377 |             (((1 as libc::c_int as intmax_t)
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:379:35
    |
379 |                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/xstrtoimax.rs:380:35
    |
380 |                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:381:19
    |
381 |                 - 1 as libc::c_int as libc::c_long) * 2 as libc::c_int as libc::c_long
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:381:55
    |
381 |                 - 1 as libc::c_int as libc::c_long) * 2 as libc::c_int as libc::c_long
    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:382:19
    |
382 |                 + 1 as libc::c_int as libc::c_long
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing `return` statement
   --> src/xstrtoimax.rs:402:5
    |
402 |     err
    |     ^^^ help: add `return` as shown: `return err`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:395:19
    |
395 |     while power > 0 {
    |                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:396:18
    |
396 |         power -= 1;
    |                  ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: arithmetic detected
   --> src/xstrtoimax.rs:396:9
    |
396 |         power -= 1;
    |         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:396:9
    |
396 |         power -= 1;
    |         ^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unsafe block missing a safety comment
   --> src/xstrtoimax.rs:398:9
    |
398 |         unsafe {
    |         ^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe function's docs miss `# Safety` section
   --> src/xstrtoimax.rs:406:1
    |
406 | / pub unsafe extern "C" fn xstrtoimax(
407 | |     mut s: *const libc::c_char,
408 | |     mut ptr: *mut *mut libc::c_char,
409 | |     mut strtol_base: libc::c_int,
...   |
571 | |
572 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc

warning: this function has too many lines (154/100)
   --> src/xstrtoimax.rs:406:1
    |
406 | / pub unsafe extern "C" fn xstrtoimax(
407 | |     mut s: *const libc::c_char,
408 | |     mut ptr: *mut *mut libc::c_char,
409 | |     mut strtol_base: libc::c_int,
...   |
571 | |
572 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: unneeded `return` statement
   --> src/xstrtoimax.rs:570:1
    |
570 | return err;
    | ^^^^^^^^^^^ help: remove `return`: `err`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:417:8
    |
417 |     if 0 as libc::c_int <= strtol_base && strtol_base <= 36 as libc::c_int {} else {
    |        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:417:58
    |
417 |     if 0 as libc::c_int <= strtol_base && strtol_base <= 36 as libc::c_int {} else {
    |                                                          ^^ help: consider adding suffix: `36_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:433:12
    |
433 |         if 0 as libc::c_int <= strtol_base && strtol_base <= 36 as libc::c_int {} else {
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:433:62
    |
433 |         if 0 as libc::c_int <= strtol_base && strtol_base <= 36 as libc::c_int {} else {
    |                                                              ^^ help: consider adding suffix: `36_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:450:27
    |
450 |     *__errno_location() = 0 as libc::c_int;
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:451:9
    |
451 |     if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:451:43
    |
451 |     if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:455:75
    |
455 |             & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
    |                                                                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:466:63
    |
466 |         if !valid_suffixes.is_null() && **p as libc::c_int != 0
    |                                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:469:19
    |
469 |             tmp = 1 as libc::c_int as intmax_t;
    |                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:473:38
    |
473 |     } else if *__errno_location() != 0 as libc::c_int {
    |                                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:474:35
    |
474 |         if *__errno_location() != 34 as libc::c_int {
    |                                   ^^ help: consider adding suffix: `34_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:500:41
    |
500 | ...                   suffixes += 2;
    |                                   ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:504:32
    |
504 |                         base = 1000;
    |                                ^^^^ help: consider adding suffix: `1_000_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/xstrtoimax.rs:505:37
    |
505 |                         suffixes += 1;
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `0 as *mut _` detected
   --> src/xstrtoimax.rs:413:40
    |
413 |     let mut t_ptr: *mut libc::c_char = 0 as *mut libc::c_char;
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `0 as *mut _` detected
   --> src/xstrtoimax.rs:414:41
    |
414 |     let mut p: *mut *mut libc::c_char = 0 as *mut *mut libc::c_char;
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<*mut libc::c_char>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/xstrtoimax.rs:419:13
    |
419 | /             b"0 <= strtol_base && strtol_base <= 36\0" as *const u8
420 | |                 as *const libc::c_char,
    | |______________________________________^ help: try `pointer::cast`, a safer alternative: `(b"0 <= strtol_base && strtol_base <= 36\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/xstrtoimax.rs:421:13
    |
421 |             b"./include/xstrtol.c\0" as *const u8 as *const libc::c_char,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"./include/xstrtol.c\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/xstrtoimax.rs:422:13
    |
422 |             86 as libc::c_int as libc::c_uint,
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: transmute from a reference to a reference
   --> src/xstrtoimax.rs:423:15
    |
423 |               (*::core::mem::transmute::<
    |  _______________^
424 | |                 &[u8; 78],
425 | |                 &[libc::c_char; 78],
426 | |             >(
427 | |                 b"strtol_error xstrtoimax(const char *, char **, int, intmax_t *, const char *)\0",
428 | |             ))
    | |_____________^ help: try: `&*(b"strtol_error xstrtoimax(const char *, char **, int, intmax_t *, const char *)\0" as *const [u8; 78] as *const [i8; 78])`
    |
    = note: `-W clippy::transmute-ptr-to-ptr` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ptr

warning: unnecessary operation
   --> src/xstrtoimax.rs:432:5
    |
432 | /     'c_2247: {
433 | |         if 0 as libc::c_int <= strtol_base && strtol_base <= 36 as libc::c_int {} else {
434 | |             __assert_fail(
435 | |                 b"0 <= strtol_base && strtol_base <= 36\0" as *const u8
...   |
447 | |         }
448 | |     };
    | |______^
    |
    = note: `-W clippy::unnecessary-operation` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation
help: statement can be reduced to
    |
432 ~     if 0 as libc::c_int <= strtol_base && strtol_base <= 36 as libc::c_int {} else {
433 +             __assert_fail(
434 +                 b"0 <= strtol_base && strtol_base <= 36\0" as *const u8
435 +                     as *const libc::c_char,
436 +                 b"./include/xstrtol.c\0" as *const u8 as *const libc::c_char,
437 +                 86 as libc::c_int as libc::c_uint,
438 +                 (*::core::mem::transmute::<
439 +                     &[u8; 78],
440 +                     &[libc::c_char; 78],
441 +                 >(
442 +                     b"strtol_error xstrtoimax(const char *, char **, int, intmax_t *, const char *)\0",
443 +                 ))
444 +                     .as_ptr(),
445 +             );
446 +         };
    |

warning: `as` casting between raw pointers without changing its mutability
   --> src/xstrtoimax.rs:435:17
    |
435 | /                 b"0 <= strtol_base && strtol_base <= 36\0" as *const u8
436 | |                     as *const libc::c_char,
    | |__________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"0 <= strtol_base && strtol_base <= 36\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/xstrtoimax.rs:437:17
    |
437 |                 b"./include/xstrtol.c\0" as *const u8 as *const libc::c_char,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"./include/xstrtol.c\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `i32` to `u32` may lose the sign of the value
   --> src/xstrtoimax.rs:438:17
    |
438 |                 86 as libc::c_int as libc::c_uint,
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: transmute from a reference to a reference
   --> src/xstrtoimax.rs:439:19
    |
439 |                   (*::core::mem::transmute::<
    |  ___________________^
440 | |                     &[u8; 78],
441 | |                     &[libc::c_char; 78],
442 | |                 >(
443 | |                     b"strtol_error xstrtoimax(const char *, char **, int, intmax_t *, const char *)\0",
444 | |                 ))
    | |_________________^ help: try: `&*(b"strtol_error xstrtoimax(const char *, char **, int, intmax_t *, const char *)\0" as *const [u8; 78] as *const [i8; 78])`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ptr

warning: unnecessary boolean `not` operation
   --> src/xstrtoimax.rs:449:9
    |
449 |     p = if !ptr.is_null() { ptr } else { &mut t_ptr };
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: remove the `!` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:451:8
    |
451 |     if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:451:41
    |
451 |     if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/xstrtoimax.rs:451:41
    |
451 |     if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:451:41
    |
451 |     if (0 as libc::c_int as intmax_t) < -(1 as libc::c_int) as intmax_t {
    |                                         ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/xstrtoimax.rs:453:37
    |
453 |         let mut ch: libc::c_uchar = *q as libc::c_uchar;
    |                                     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u16` to `i32` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:454:15
    |
454 |         while *(*__ctype_b_loc()).offset(ch as libc::c_int as isize) as libc::c_int
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*(*__ctype_b_loc()).offset(ch as libc::c_int as isize))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u8` to `i32` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:454:42
    |
454 |         while *(*__ctype_b_loc()).offset(ch as libc::c_int as isize) as libc::c_int
    |                                          ^^^^^^^^^^^^^^^^^ help: try: `i32::from(ch)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u16` to `i32` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:455:15
    |
455 |             & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(_ISspace as libc::c_int as libc::c_ushort)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u16` may truncate the value
   --> src/xstrtoimax.rs:455:15
    |
455 |             & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i32` to `u16` may lose the sign of the value
   --> src/xstrtoimax.rs:455:15
    |
455 |             & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
   --> src/xstrtoimax.rs:455:15
    |
455 |             & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
    |               ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/xstrtoimax.rs:458:18
    |
458 |             ch = *q as libc::c_uchar;
    |                  ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u8` to `i32` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:460:12
    |
460 |         if ch as libc::c_int == '-' as i32 {
    |            ^^^^^^^^^^^^^^^^^ help: try: `i32::from(ch)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:466:41
    |
466 |         if !valid_suffixes.is_null() && **p as libc::c_int != 0
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `i32::from(**p)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i8` to `i32` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:467:41
    |
467 |             && !(strchr(valid_suffixes, **p as libc::c_int)).is_null()
    |                                         ^^^^^^^^^^^^^^^^^^ help: try: `i32::from(**p)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/xstrtoimax.rs:469:19
    |
469 |             tmp = 1 as libc::c_int as intmax_t;
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unsafe block missing a safety comment
   --> src/xstrtoimax.rs:488:30
    |
488 |     let valid_suffixes_str = unsafe { std::ffi::CStr::from_ptr(valid_suffixes).to_string_lossy() };
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
   --> src/xstrtoimax.rs:488:39
    |
488 |     let valid_suffixes_str = unsafe { std::ffi::CStr::from_ptr(valid_suffixes).to_string_lossy() };
    |                                       ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/xstrtoimax.rs:489:37
    |
489 |     if !valid_suffixes_str.contains(**p as u8 as char) {
    |                                     ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/xstrtoimax.rs:494:11
    |
494 |     match **p as u8 {
    |           ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/xstrtoimax.rs:497:23
    |
497 |                 match unsafe { *(*p).offset(1) } as u8 {
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unsafe block missing a safety comment
   --> src/xstrtoimax.rs:497:23
    |
497 |                 match unsafe { *(*p).offset(1) } as u8 {
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/xstrtoimax.rs:499:28
    |
499 |                         if unsafe { *(*p).offset(2) } as u8 == b'B' {
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unsafe block missing a safety comment
   --> src/xstrtoimax.rs:499:28
    |
499 |                         if unsafe { *(*p).offset(2) } as u8 == b'B' {
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: arithmetic detected
   --> src/xstrtoimax.rs:500:29
    |
500 | ...                   suffixes += 2;
    |                       ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:500:29
    |
500 | ...                   suffixes += 2;
    |                       ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/xstrtoimax.rs:505:25
    |
505 |                         suffixes += 1;
    |                         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/xstrtoimax.rs:505:25
    |
505 |                         suffixes += 1;
    |                         ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/xstrtoimax.rs:514:11
    |
514 |     match **p as u8 {
    |           ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: unsafe block missing a safety comment
   --> src/xstrtoimax.rs:564:10
    |
564 |     *p = unsafe { (*p).offset(suffixes as isize) };
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: path statement with no effect
  --> src/c_strcasecmp.rs:30:9
   |
30 |         p1;
   |         ^^^
   |
   = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
  --> src/c_strcasecmp.rs:32:9
   |
32 |         p2;
   |         ^^^

warning: path statement with no effect
   --> src/quotearg.rs:402:25
    |
402 |                         len;
    |                         ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:404:25
    |
404 |                         quote_string;
    |                         ^^^^^^^^^^^^^

warning: path statement with no effect
   --> src/quotearg.rs:440:21
    |
440 |                     len;
    |                     ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:470:21
    |
470 |                     len;
    |                     ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:602:49
    |
602 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:607:49
    |
607 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:612:49
    |
612 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:617:49
    |
617 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:665:49
    |
665 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:670:49
    |
670 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:675:49
    |
675 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:680:49
    |
680 | ...                   len;
    |                       ^^^^

warning: path statement with no effect
   --> src/quotearg.rs:859:37
    |
859 | ...                   m;
    |                       ^^

warning: path statement with no effect
   --> src/quotearg.rs:881:41
    |
881 | ...                   j;
    |                       ^^

warning: path statement with no effect
    --> src/quotearg.rs:1174:21
     |
1174 |                     len;
     |                     ^^^^

warning: path statement with no effect
    --> src/quotearg.rs:1176:21
     |
1176 |                     quote_string;
     |                     ^^^^^^^^^^^^^

warning: getting the inner pointer of a temporary `CString`
    --> src/quotearg.rs:1416:88
     |
1416 |         let quoted_arg = quotearg_n(0, CString::new(arg).expect("CString::new failed").as_ptr());
     |                                        ----------------------------------------------- ^^^^^^ this pointer will be invalid
     |                                        |
     |                                        this `CString` is deallocated at the end of the statement, bind it to a variable to extend its lifetime
     |
     = note: `#[warn(temporary_cstring_as_ptr)]` on by default
     = note: pointers do not have a lifetime; when calling `as_ptr` the `CString` will be deallocated at the end of the statement because nothing is referencing it as far as the type system is concerned
     = help: for more information, see https://doc.rust-lang.org/reference/destructors.html

warning: path statement with no effect
   --> src/version_etc.rs:259:9
    |
259 |         n_authors;
    |         ^^^^^^^^^^

warning: path statement with no effect
   --> src/version_etc.rs:281:9
    |
281 |         n_authors;
    |         ^^^^^^^^^^

warning: missing documentation for a function
   --> src/xmalloc.rs:948:1
    |
948 | / pub fn xzalloc(s: usize) -> Vec<u8> {
949 | |     let size = s * std::mem::size_of::<u8>();
950 | |     Vec::with_capacity(size)
951 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:948:1
    |
948 | / pub fn xzalloc(s: usize) -> Vec<u8> {
949 | |     let size = s * std::mem::size_of::<u8>();
950 | |     Vec::with_capacity(size)
951 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:954:1
    |
954 | / pub fn xizalloc(s: idx_t) -> Vec<u8> {
955 | |     let layout = Layout::from_size_align(s as usize, 1).expect("Invalid layout");
956 | |     let ptr = unsafe { alloc::alloc(layout) };
957 | |     if ptr.is_null() {
...   |
961 | |     vec
962 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:954:1
    |
954 | / pub fn xizalloc(s: idx_t) -> Vec<u8> {
955 | |     let layout = Layout::from_size_align(s as usize, 1).expect("Invalid layout");
956 | |     let ptr = unsafe { alloc::alloc(layout) };
957 | |     if ptr.is_null() {
...   |
961 | |     vec
962 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:965:1
    |
965 | / pub fn xcalloc(n: usize, s: usize) -> *mut libc::c_void {
966 | |     let total_size = n.checked_mul(s).expect("Overflow in multiplication");
967 | |     let vec = vec![0u8; total_size];
968 | |     let boxed_slice = vec.into_boxed_slice();
969 | |     Box::into_raw(boxed_slice) as *mut libc::c_void
970 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:965:1
    |
965 | / pub fn xcalloc(n: usize, s: usize) -> *mut libc::c_void {
966 | |     let total_size = n.checked_mul(s).expect("Overflow in multiplication");
967 | |     let vec = vec![0u8; total_size];
968 | |     let boxed_slice = vec.into_boxed_slice();
969 | |     Box::into_raw(boxed_slice) as *mut libc::c_void
970 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:973:1
    |
973 | / pub fn xicalloc(n: usize, s: usize) -> *mut libc::c_void {
974 | |     let total_size = n.checked_mul(s).expect("Overflow in allocation size");
975 | |     let allocation = vec![0u8; total_size].into_boxed_slice();
976 | |     Box::into_raw(allocation) as *mut libc::c_void
977 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:973:1
    |
973 | / pub fn xicalloc(n: usize, s: usize) -> *mut libc::c_void {
974 | |     let total_size = n.checked_mul(s).expect("Overflow in allocation size");
975 | |     let allocation = vec![0u8; total_size].into_boxed_slice();
976 | |     Box::into_raw(allocation) as *mut libc::c_void
977 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:980:1
    |
980 | / pub fn xmemdup(p: &[u8]) -> Vec<u8> {
981 | |     let mut result = vec![0; p.len()];
982 | |     result.copy_from_slice(p);
983 | |     result
984 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:980:1
    |
980 | / pub fn xmemdup(p: &[u8]) -> Vec<u8> {
981 | |     let mut result = vec![0; p.len()];
982 | |     result.copy_from_slice(p);
983 | |     result
984 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:987:1
    |
987 | / pub fn ximemdup(p: &[u8]) -> Vec<u8> {
988 | |     let mut result = vec![0; p.len()];
989 | |     result.copy_from_slice(p);
990 | |     result
991 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:987:1
    |
987 | / pub fn ximemdup(p: &[u8]) -> Vec<u8> {
988 | |     let mut result = vec![0; p.len()];
989 | |     result.copy_from_slice(p);
990 | |     result
991 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
   --> src/xmalloc.rs:994:1
    |
994 | / pub fn ximemdup0(p: &[u8]) -> Vec<u8> {
995 | |     let mut result = vec![0; p.len() + 1];
996 | |     result[..p.len()].copy_from_slice(p);
997 | |     result[p.len()] = 0; // Null-terminate the string
998 | |     result
999 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xmalloc.rs:994:1
    |
994 | / pub fn ximemdup0(p: &[u8]) -> Vec<u8> {
995 | |     let mut result = vec![0; p.len() + 1];
996 | |     result[..p.len()].copy_from_slice(p);
997 | |     result[p.len()] = 0; // Null-terminate the string
998 | |     result
999 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a function
    --> src/xmalloc.rs:1002:1
     |
1002 | / pub fn xstrdup(string: &str) -> String {
1003 | |     let length = string.len();
1004 | |     let mut vec = Vec::with_capacity(length + 1);
1005 | |     vec.extend_from_slice(string.as_bytes());
1006 | |     vec.push(0); // Null-terminate the string
1007 | |     String::from_utf8(vec).expect("Failed to convert to String")
1008 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
    --> src/xmalloc.rs:1002:1
     |
1002 | / pub fn xstrdup(string: &str) -> String {
1003 | |     let length = string.len();
1004 | |     let mut vec = Vec::with_capacity(length + 1);
1005 | |     vec.extend_from_slice(string.as_bytes());
1006 | |     vec.push(0); // Null-terminate the string
1007 | |     String::from_utf8(vec).expect("Failed to convert to String")
1008 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: missing documentation for a module
  --> lib.rs:41:1
   |
41 | pub mod xstrtoimax;
   | ^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/xstrtoimax.rs:20:1
   |
20 | pub type __intmax_t = libc::c_long;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/xstrtoimax.rs:21:1
   |
21 | pub type intmax_t = __intmax_t;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/xstrtoimax.rs:22:1
   |
22 | pub type strtol_error = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:23:1
   |
23 | pub const LONGINT_INVALID: strtol_error = 4;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:24:1
   |
24 | pub const LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW: strtol_error = 3;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:25:1
   |
25 | pub const LONGINT_INVALID_SUFFIX_CHAR: strtol_error = 2;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:26:1
   |
26 | pub const LONGINT_OVERFLOW: strtol_error = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:27:1
   |
27 | pub const LONGINT_OK: strtol_error = 0;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:28:1
   |
28 | pub const _ISspace: C2RustUnnamed = 8192;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
  --> src/xstrtoimax.rs:29:1
   |
29 | pub type C2RustUnnamed = libc::c_uint;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:30:1
   |
30 | pub const _ISalnum: C2RustUnnamed = 8;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:31:1
   |
31 | pub const _ISpunct: C2RustUnnamed = 4;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:32:1
   |
32 | pub const _IScntrl: C2RustUnnamed = 2;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:33:1
   |
33 | pub const _ISblank: C2RustUnnamed = 1;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:34:1
   |
34 | pub const _ISgraph: C2RustUnnamed = 32768;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:35:1
   |
35 | pub const _ISprint: C2RustUnnamed = 16384;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:36:1
   |
36 | pub const _ISxdigit: C2RustUnnamed = 4096;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:37:1
   |
37 | pub const _ISdigit: C2RustUnnamed = 2048;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:38:1
   |
38 | pub const _ISalpha: C2RustUnnamed = 1024;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:39:1
   |
39 | pub const _ISlower: C2RustUnnamed = 512;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
  --> src/xstrtoimax.rs:40:1
   |
40 | pub const _ISupper: C2RustUnnamed = 256;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a function
   --> src/xstrtoimax.rs:41:1
    |
41  | / unsafe extern "C" fn bkm_scale(
42  | |     mut x: *mut intmax_t,
43  | |     mut scale_factor: libc::c_int,
44  | | ) -> strtol_error {
...   |
387 | |     return LONGINT_OK;
388 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `rust` (lib test) generated 5626 warnings (894 duplicates)
warning: missing documentation for a function
   --> src/xstrtoimax.rs:389:1
    |
389 | / fn bkm_scale_by_power(
390 | |     x: &mut i64, // Assuming intmax_t is equivalent to i64 in Rust
391 | |     base: i32,
392 | |     mut power: i32,
...   |
402 | |     err
403 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a function
   --> src/xstrtoimax.rs:406:1
    |
406 | / pub unsafe extern "C" fn xstrtoimax(
407 | |     mut s: *const libc::c_char,
408 | |     mut ptr: *mut *mut libc::c_char,
409 | |     mut strtol_base: libc::c_int,
...   |
571 | |
572 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing `#[inline]` for a function
   --> src/xstrtoimax.rs:406:1
    |
406 | / pub unsafe extern "C" fn xstrtoimax(
407 | |     mut s: *const libc::c_char,
408 | |     mut ptr: *mut *mut libc::c_char,
409 | |     mut strtol_base: libc::c_int,
...   |
571 | |
572 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_inline_in_public_items

warning: `rust` (lib) generated 6617 warnings (4732 duplicates)
warning: use of `println!`
   --> src/truncate.rs:257:5
    |
257 | /     println!(
258 | |         "{} online help: <{}>",
259 | |         CStr::from_bytes_with_nul(b"GNU coreutils\0").unwrap().to_string_lossy(),
260 | |         help_url.to_string_lossy()
261 | |     );
    | |_____^
    |
    = note: `-W clippy::print-stdout` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/truncate.rs:285:5
    |
285 | /     println!(
286 | |         "Full documentation <{}{}>",
287 | |         help_url.to_string_lossy(),
288 | |         url_program.to_string_lossy()
289 | |     );
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `println!`
   --> src/truncate.rs:297:5
    |
297 | /     println!(
298 | |         "or available locally via: info '(coreutils) {}{}'",
299 | |         unsafe { CStr::from_ptr(node) }.to_string_lossy(),
300 | |         invocation_suffix
301 | |     );
    | |_____^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `print!`
   --> src/truncate.rs:312:5
    |
312 |     print!("{}", message);
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `eprintln!`
   --> src/truncate.rs:393:9
    |
393 | / ...   eprintln!(
394 | | ...       "{}", 
395 | | ...       unsafe { CStr::from_ptr(gettext(format!("Try '{} --help' for more information.\n", unsafe { CStr::from_ptr(program_name).to_str...
396 | | ...   );
    | |_______^
    |
    = note: `-W clippy::print-stderr` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stderr

warning: use of `println!`
   --> src/truncate.rs:398:9
    |
398 | / ...   println!(
399 | | ...       "{}", 
400 | | ...       unsafe { CStr::from_ptr(gettext(format!("Usage: {} OPTION... FILE...\n", unsafe { CStr::from_ptr(program_name).to_string_lossy(...
401 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `print!`
   --> src/truncate.rs:402:9
    |
402 | / ...   print!(
403 | | ...       "{}",
404 | | ...       unsafe { CStr::from_ptr(gettext("Shrink or extend the size of each FILE to the specified size\n\nA FILE argument that does not ...
405 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `print!`
   --> src/truncate.rs:407:9
    |
407 | /         print!(
408 | |             "{}",
409 | |             unsafe { CStr::from_ptr(gettext("  -c, --no-create        do not create any files\n".as_ptr() as *const i8)).to_string_lossy() }
410 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `print!`
   --> src/truncate.rs:411:9
    |
411 | / ...   print!(
412 | | ...       "{}",
413 | | ...       unsafe { CStr::from_ptr(gettext("  -o, --io-blocks        treat SIZE as number of IO blocks instead of bytes\n".as_ptr() as *co...
414 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `print!`
   --> src/truncate.rs:415:9
    |
415 | / ...   print!(
416 | | ...       "{}",
417 | | ...       unsafe { CStr::from_ptr(gettext("  -r, --reference=RFILE  base size on RFILE\n  -s, --size=SIZE        set or adjust the file s...
418 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `print!`
   --> src/truncate.rs:419:9
    |
419 | /         print!(
420 | |             "{}",
421 | |             unsafe { CStr::from_ptr(gettext("      --help        display this help and exit\n".as_ptr() as *const i8)).to_string_lossy() }
422 | |         );
    | |_________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `print!`
   --> src/truncate.rs:423:9
    |
423 | / ...   print!(
424 | | ...       "{}",
425 | | ...       unsafe { CStr::from_ptr(gettext("      --version     output version information and exit\n".as_ptr() as *const i8)).to_string_l...
426 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: use of `print!`
   --> src/truncate.rs:428:9
    |
428 | / ...   print!(
429 | | ...       "{}",
430 | | ...       unsafe { CStr::from_ptr(gettext("\nSIZE may also be prefixed by one of the following modifying characters:\n'+' extend by, '-' ...
431 | | ...   );
    | |_______^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#print_stdout

warning: integer literal has a better hexadecimal representation
   --> src/truncate.rs:118:37
    |
118 | pub const _ISgraph: C2RustUnnamed = 32768;
    |                                     ^^^^^ help: consider: `0x8000`
    |
    = note: `-W clippy::decimal-literal-representation` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: integer literal has a better hexadecimal representation
   --> src/truncate.rs:119:37
    |
119 | pub const _ISprint: C2RustUnnamed = 16384;
    |                                     ^^^^^ help: consider: `0x4000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#decimal_literal_representation

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:229:19
    |
229 |     (sb.st_mode & 0o170000 as libc::c_uint == 0o100000 as libc::c_uint)
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::as-conversions` implied by `-W clippy::restriction`
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/truncate.rs:229:19
    |
229 |     (sb.st_mode & 0o170000 as libc::c_uint == 0o100000 as libc::c_uint)
    |                   ^^^^^^^^ help: consider: `0o170_000`
    |
    = note: `-W clippy::unreadable-literal` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:229:47
    |
229 |     (sb.st_mode & 0o170000 as libc::c_uint == 0o100000 as libc::c_uint)
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/truncate.rs:229:47
    |
229 |     (sb.st_mode & 0o170000 as libc::c_uint == 0o100000 as libc::c_uint)
    |                                               ^^^^^^^^ help: consider: `0o100_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:230:26
    |
230 |         || (sb.st_mode & 0o170000 as libc::c_uint == 0o120000 as libc::c_uint)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/truncate.rs:230:26
    |
230 |         || (sb.st_mode & 0o170000 as libc::c_uint == 0o120000 as libc::c_uint)
    |                          ^^^^^^^^ help: consider: `0o170_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:230:54
    |
230 |         || (sb.st_mode & 0o170000 as libc::c_uint == 0o120000 as libc::c_uint)
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: long literal lacking separators
   --> src/truncate.rs:230:54
    |
230 |         || (sb.st_mode & 0o170000 as libc::c_uint == 0o120000 as libc::c_uint)
    |                                                      ^^^^^^^^ help: consider: `0o120_000`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreadable_literal

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:306:5
    |
306 |     ch as u8
    |     ^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:318:47
    |
318 |     let translated_message = unsafe { gettext(message.as_ptr() as *const libc::c_char) };
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:324:44
    |
324 | static mut ref_file: *const libc::c_char = 0 as *const libc::c_char;
    |                                            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:328:19
    |
328 |             name: b"no-create\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:328:19
    |
328 |             name: b"no-create\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:329:22
    |
329 |             has_arg: 0 as libc::c_int,
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:330:19
    |
330 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:330:19
    |
330 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:331:18
    |
331 |             val: 'c' as i32,
    |                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:337:19
    |
337 |             name: b"io-blocks\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:337:19
    |
337 |             name: b"io-blocks\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:338:22
    |
338 |             has_arg: 0 as libc::c_int,
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:339:19
    |
339 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:339:19
    |
339 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:340:18
    |
340 |             val: 'o' as i32,
    |                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:346:19
    |
346 |             name: b"reference\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:346:19
    |
346 |             name: b"reference\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:347:22
    |
347 |             has_arg: 1 as libc::c_int,
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:348:19
    |
348 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:348:19
    |
348 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:349:18
    |
349 |             val: 'r' as i32,
    |                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:355:19
    |
355 |             name: b"size\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:355:19
    |
355 |             name: b"size\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:356:22
    |
356 |             has_arg: 1 as libc::c_int,
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:357:19
    |
357 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:357:19
    |
357 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:358:18
    |
358 |             val: 's' as i32,
    |                  ^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:364:19
    |
364 |             name: b"help\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:364:19
    |
364 |             name: b"help\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:365:22
    |
365 |             has_arg: 0 as libc::c_int,
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:366:19
    |
366 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:366:19
    |
366 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:367:18
    |
367 |             val: GETOPT_HELP_CHAR as libc::c_int,
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:373:19
    |
373 |             name: b"version\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:373:19
    |
373 |             name: b"version\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:374:22
    |
374 |             has_arg: 0 as libc::c_int,
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:375:19
    |
375 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:375:19
    |
375 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:376:18
    |
376 |             val: GETOPT_VERSION_CHAR as libc::c_int,
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:382:19
    |
382 |             name: 0 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:383:22
    |
383 |             has_arg: 0 as libc::c_int,
    |                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:384:19
    |
384 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:384:19
    |
384 |             flag: 0 as *const libc::c_int as *mut libc::c_int,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:385:18
    |
385 |             val: 0 as libc::c_int,
    |                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:395:45
    |
395 | ...xt(format!("Try '{} --help' for more information.\n", unsafe { CStr::from_ptr(program_name).to_string_lossy() }).as_ptr() as *const i8))....
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:400:45
    |
400 | ...ttext(format!("Usage: {} OPTION... FILE...\n", unsafe { CStr::from_ptr(program_name).to_string_lossy() }).as_ptr() as *const i8)).to_s...
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:404:45
    |
404 | ...xt("Shrink or extend the size of each FILE to the specified size\n\nA FILE argument that does not exist is created.\n\nIf a FILE is larger than the specified size, the extra data is lost.\nIf a FILE is shorter, it is extended and the sparse extended part (hole)\nreads as zero bytes.\n".as_ptr() as *const i8))....
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:409:45
    |
409 |             unsafe { CStr::from_ptr(gettext("  -c, --no-create        do not create any files\n".as_ptr() as *const i8)).to_string_lossy() }
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:413:45
    |
413 | ...rom_ptr(gettext("  -o, --io-blocks        treat SIZE as number of IO blocks instead of bytes\n".as_ptr() as *const i8)).to_string_loss...
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:417:45
    |
417 | ...xt("  -r, --reference=RFILE  base size on RFILE\n  -s, --size=SIZE        set or adjust the file size by SIZE bytes\n".as_ptr() as *const i8))....
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:421:45
    |
421 |             unsafe { CStr::from_ptr(gettext("      --help        display this help and exit\n".as_ptr() as *const i8)).to_string_lossy() }
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:425:45
    |
425 | ...   unsafe { CStr::from_ptr(gettext("      --version     output version information and exit\n".as_ptr() as *const i8)).to_string_lossy...
    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:430:45
    |
430 | ...xt("\nSIZE may also be prefixed by one of the following modifying characters:\n'+' extend by, '-' reduce by, '<' at most, '>' at least,\n'/' round down to multiple of, '%' round up to multiple of.\n".as_ptr() as *const i8))....
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: binding's name is too similar to existing binding
   --> src/truncate.rs:441:9
    |
441 |     mut rsize: off_t,
    |         ^^^^^
    |
    = note: `-W clippy::similar-names` implied by `-W clippy::pedantic`
note: existing binding defined here
   --> src/truncate.rs:440:9
    |
440 |     mut ssize: off_t,
    |         ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: binding's name is too similar to existing binding
   --> src/truncate.rs:462:13
    |
462 |     let mut nsize: off_t = 0;
    |             ^^^^^
    |
note: existing binding defined here
   --> src/truncate.rs:440:9
    |
440 |     mut ssize: off_t,
    |         ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: binding's name is too similar to existing binding
   --> src/truncate.rs:886:17
    |
886 |         let mut fsize: i64 = 0;
    |                 ^^^^^
    |
note: existing binding defined here
   --> src/truncate.rs:440:9
    |
440 |     mut ssize: off_t,
    |         ^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:463:9
    |
463 |     if (block_mode as libc::c_int != 0
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:464:12
    |
464 |         || rel_mode as libc::c_uint != 0 && rsize < 0 as libc::c_int as libc::c_long)
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:464:53
    |
464 |         || rel_mode as libc::c_uint != 0 && rsize < 0 as libc::c_int as libc::c_long)
    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:464:53
    |
464 |         || rel_mode as libc::c_uint != 0 && rsize < 0 as libc::c_int as libc::c_long)
    |                                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:465:34
    |
465 |         && fstat(fd, &mut sb) != 0 as libc::c_int
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:469:17
    |
469 |                 0 as libc::c_int,
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:471:25
    |
471 |                 gettext(b"cannot fstat %s\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:471:25
    |
471 |                 gettext(b"cannot fstat %s\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:474:16
    |
474 |             if 0 as libc::c_int != 0 as libc::c_int {
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:474:36
    |
474 |             if 0 as libc::c_int != 0 as libc::c_int {
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:479:48
    |
479 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:483:29
    |
483 |                     gettext(b"cannot fstat %s\0" as *const u8 as *const libc::c_char),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:483:29
    |
483 |                     gettext(b"cannot fstat %s\0" as *const u8 as *const libc::c_char),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:486:35
    |
486 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:492:48
    |
492 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:496:29
    |
496 |                     gettext(b"cannot fstat %s\0" as *const u8 as *const libc::c_char),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:496:29
    |
496 |                     gettext(b"cannot fstat %s\0" as *const u8 as *const libc::c_char),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:499:35
    |
499 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:505:16
    |
505 |         return 0 as libc::c_int != 0;
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:508:38
    |
508 |           let mut blksize: ptrdiff_t = (if (0 as libc::c_int) < sb.st_blksize
    |  ______________________________________^
509 | |             && sb.st_blksize as libc::c_ulong
510 | |                 <= (-(1 as libc::c_int) as size_t)
511 | |                     .wrapping_div(8 as libc::c_int as libc::c_ulong)
...   |
516 | |             512 as libc::c_int
517 | |         }) as ptrdiff_t;
    | |_______________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:508:43
    |
508 |         let mut blksize: ptrdiff_t = (if (0 as libc::c_int) < sb.st_blksize
    |                                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:509:16
    |
509 |             && sb.st_blksize as libc::c_ulong
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:510:21
    |
510 |                 <= (-(1 as libc::c_int) as size_t)
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:510:23
    |
510 |                 <= (-(1 as libc::c_int) as size_t)
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:511:35
    |
511 |                     .wrapping_div(8 as libc::c_int as libc::c_ulong)
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:511:35
    |
511 |                     .wrapping_div(8 as libc::c_int as libc::c_ulong)
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:512:35
    |
512 |                     .wrapping_add(1 as libc::c_int as libc::c_ulong)
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:512:35
    |
512 |                     .wrapping_add(1 as libc::c_int as libc::c_ulong)
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:516:13
    |
516 |             512 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:519:16
    |
519 |         if if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:519:16
    |
519 |         if if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:519:45
    |
519 |         if if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:519:47
    |
519 |         if if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t
    |                                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:520:21
    |
520 |             && ((if 1 as libc::c_int != 0 {
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:521:17
    |
521 |                 0 as libc::c_int as libc::c_long
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:521:17
    |
521 |                 0 as libc::c_int as libc::c_long
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:524:18
    |
524 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:524:18
    |
524 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:524:54
    |
524 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:524:54
    |
524 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:525:21
    |
525 |             && ((if 1 as libc::c_int != 0 {
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:526:17
    |
526 |                 0 as libc::c_int as libc::c_long
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:526:17
    |
526 |                 0 as libc::c_int as libc::c_long
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:529:18
    |
529 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:529:18
    |
529 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:529:54
    |
529 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:529:54
    |
529 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                      ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/truncate.rs:722:20
    |
722 |               } else {
    |  ____________________^
723 | |                 if blksize == 0 as libc::c_int as libc::c_long {
724 | |                     0 as libc::c_int
725 | |                 } else {
...   |
836 | |                 }
837 | |             }) != 0
    | |_____________^
    |
    = note: `-W clippy::collapsible-else-if` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
722 ~             } else if blksize == 0 as libc::c_int as libc::c_long {
723 +                 0 as libc::c_int
724 +             } else {
725 +                 if ssize < 0 as libc::c_int as libc::c_long {
726 +                     if (if (if ((if 1 as libc::c_int != 0 {
727 +                         0 as libc::c_int as libc::c_long
728 +                     } else {
729 +                         (if 1 as libc::c_int != 0 {
730 +                             0 as libc::c_int as libc::c_long
731 +                         } else {
732 +                             ssize
733 +                         }) + 0 as libc::c_int as off_t
734 +                     }) - 1 as libc::c_int as libc::c_long)
735 +                         < 0 as libc::c_int as libc::c_long
736 +                     {
737 +                         !(((((if 1 as libc::c_int != 0 {
738 +                             0 as libc::c_int as libc::c_long
739 +                         } else {
740 +                             (if 1 as libc::c_int != 0 {
741 +                                 0 as libc::c_int as libc::c_long
742 +                             } else {
743 +                                 ssize
744 +                             }) + 0 as libc::c_int as off_t
745 +                         }) + 1 as libc::c_int as libc::c_long)
746 +                             << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
747 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
748 +                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
749 +                             - 1 as libc::c_int as libc::c_long)
750 +                             * 2 as libc::c_int as libc::c_long
751 +                             + 1 as libc::c_int as libc::c_long)
752 +                     } else {
753 +                         (if 1 as libc::c_int != 0 {
754 +                             0 as libc::c_int as libc::c_long
755 +                         } else {
756 +                             (if 1 as libc::c_int != 0 {
757 +                                 0 as libc::c_int as libc::c_long
758 +                             } else {
759 +                                 ssize
760 +                             }) + 0 as libc::c_int as off_t
761 +                         }) + 0 as libc::c_int as libc::c_long
762 +                     }) < 0 as libc::c_int as libc::c_long
763 +                     {
764 +                         (((if 1 as libc::c_int != 0 {
765 +                             0 as libc::c_int as libc::c_long
766 +                         } else {
767 +                             ssize
768 +                         }) + 0 as libc::c_int as off_t)
769 +                             < -(if ((if 1 as libc::c_int != 0 {
770 +                                 0 as libc::c_int as libc::c_long
771 +                             } else {
772 +                                 (if 1 as libc::c_int != 0 {
773 +                                     0 as libc::c_int as libc::c_long
774 +                                 } else {
775 +                                     ssize
776 +                                 }) + 0 as libc::c_int as off_t
777 +                             }) - 1 as libc::c_int as libc::c_long)
778 +                                 < 0 as libc::c_int as libc::c_long
779 +                             {
780 +                                 ((((if 1 as libc::c_int != 0 {
781 +                                     0 as libc::c_int as libc::c_long
782 +                                 } else {
783 +                                     (if 1 as libc::c_int != 0 {
784 +                                         0 as libc::c_int as libc::c_long
785 +                                     } else {
786 +                                         ssize
787 +                                     }) + 0 as libc::c_int as off_t
788 +                                 }) + 1 as libc::c_int as libc::c_long)
789 +                                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
790 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
791 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
792 +                                     - 1 as libc::c_int as libc::c_long)
793 +                                     * 2 as libc::c_int as libc::c_long
794 +                                     + 1 as libc::c_int as libc::c_long
795 +                             } else {
796 +                                 (if 1 as libc::c_int != 0 {
797 +                                     0 as libc::c_int as libc::c_long
798 +                                 } else {
799 +                                     (if 1 as libc::c_int != 0 {
800 +                                         0 as libc::c_int as libc::c_long
801 +                                     } else {
802 +                                         ssize
803 +                                     }) + 0 as libc::c_int as off_t
804 +                                 }) - 1 as libc::c_int as libc::c_long
805 +                             })) as libc::c_int
806 +                     } else {
807 +                         ((0 as libc::c_int as libc::c_long)
808 +                             < (if 1 as libc::c_int != 0 {
809 +                                 0 as libc::c_int as libc::c_long
810 +                             } else {
811 +                                 ssize
812 +                             }) + 0 as libc::c_int as off_t) as libc::c_int
813 +                     }) != 0 && ssize == -(1 as libc::c_int) as libc::c_long
814 +                     {
815 +                         if ((if 1 as libc::c_int != 0 {
816 +                             0 as libc::c_int as libc::c_long
817 +                         } else {
818 +                             blksize
819 +                         }) - 1 as libc::c_int as libc::c_long)
820 +                             < 0 as libc::c_int as libc::c_long
821 +                         {
822 +                             ((0 as libc::c_int as libc::c_long)
823 +                                 < blksize + 0 as libc::c_int as off_t) as libc::c_int
824 +                         } else {
825 +                             ((-(1 as libc::c_int) as libc::c_long
826 +                                 - 0 as libc::c_int as off_t)
827 +                                 < blksize - 1 as libc::c_int as libc::c_long) as libc::c_int
828 +                         }
829 +                     } else {
830 +                         (0 as libc::c_int as off_t / ssize < blksize) as libc::c_int
831 +                     }
832 +                 } else {
833 +                     (-(1 as libc::c_int) as off_t / blksize < ssize) as libc::c_int
834 +                 }
835 ~             }) != 0
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:530:30
    |
530 |             && (if blksize < 0 as libc::c_int as libc::c_long {
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:530:30
    |
530 |             && (if blksize < 0 as libc::c_int as libc::c_long {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/truncate.rs:613:24
    |
613 |                   } else {
    |  ________________________^
614 | |                     if (if (if ((if 1 as libc::c_int != 0 {
615 | |                         0 as libc::c_int as libc::c_long
616 | |                     } else {
...   |
720 | |                     }
721 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
613 ~                 } else if (if (if ((if 1 as libc::c_int != 0 {
614 +                     0 as libc::c_int as libc::c_long
615 +                 } else {
616 +                     (if 1 as libc::c_int != 0 {
617 +                         0 as libc::c_int as libc::c_long
618 +                     } else {
619 +                         blksize
620 +                     }) + 0 as libc::c_int as off_t
621 +                 }) - 1 as libc::c_int as libc::c_long)
622 +                     < 0 as libc::c_int as libc::c_long
623 +                 {
624 +                     !(((((if 1 as libc::c_int != 0 {
625 +                         0 as libc::c_int as libc::c_long
626 +                     } else {
627 +                         (if 1 as libc::c_int != 0 {
628 +                             0 as libc::c_int as libc::c_long
629 +                         } else {
630 +                             blksize
631 +                         }) + 0 as libc::c_int as off_t
632 +                     }) + 1 as libc::c_int as libc::c_long)
633 +                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
634 +                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
635 +                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
636 +                         - 1 as libc::c_int as libc::c_long)
637 +                         * 2 as libc::c_int as libc::c_long
638 +                         + 1 as libc::c_int as libc::c_long)
639 +                 } else {
640 +                     (if 1 as libc::c_int != 0 {
641 +                         0 as libc::c_int as libc::c_long
642 +                     } else {
643 +                         (if 1 as libc::c_int != 0 {
644 +                             0 as libc::c_int as libc::c_long
645 +                         } else {
646 +                             blksize
647 +                         }) + 0 as libc::c_int as off_t
648 +                     }) + 0 as libc::c_int as libc::c_long
649 +                 }) < 0 as libc::c_int as libc::c_long
650 +                 {
651 +                     (((if 1 as libc::c_int != 0 {
652 +                         0 as libc::c_int as libc::c_long
653 +                     } else {
654 +                         blksize
655 +                     }) + 0 as libc::c_int as off_t)
656 +                         < -(if ((if 1 as libc::c_int != 0 {
657 +                             0 as libc::c_int as libc::c_long
658 +                         } else {
659 +                             (if 1 as libc::c_int != 0 {
660 +                                 0 as libc::c_int as libc::c_long
661 +                             } else {
662 +                                 blksize
663 +                             }) + 0 as libc::c_int as off_t
664 +                         }) - 1 as libc::c_int as libc::c_long)
665 +                             < 0 as libc::c_int as libc::c_long
666 +                         {
667 +                             ((((if 1 as libc::c_int != 0 {
668 +                                 0 as libc::c_int as libc::c_long
669 +                             } else {
670 +                                 (if 1 as libc::c_int != 0 {
671 +                                     0 as libc::c_int as libc::c_long
672 +                                 } else {
673 +                                     blksize
674 +                                 }) + 0 as libc::c_int as off_t
675 +                             }) + 1 as libc::c_int as libc::c_long)
676 +                                 << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
677 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
678 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
679 +                                 - 1 as libc::c_int as libc::c_long)
680 +                                 * 2 as libc::c_int as libc::c_long
681 +                                 + 1 as libc::c_int as libc::c_long
682 +                         } else {
683 +                             (if 1 as libc::c_int != 0 {
684 +                                 0 as libc::c_int as libc::c_long
685 +                             } else {
686 +                                 (if 1 as libc::c_int != 0 {
687 +                                     0 as libc::c_int as libc::c_long
688 +                                 } else {
689 +                                     blksize
690 +                                 }) + 0 as libc::c_int as off_t
691 +                             }) - 1 as libc::c_int as libc::c_long
692 +                         })) as libc::c_int
693 +                 } else {
694 +                     ((0 as libc::c_int as libc::c_long)
695 +                         < (if 1 as libc::c_int != 0 {
696 +                             0 as libc::c_int as libc::c_long
697 +                         } else {
698 +                             blksize
699 +                         }) + 0 as libc::c_int as off_t) as libc::c_int
700 +                 }) != 0 && blksize == -(1 as libc::c_int) as libc::c_long
701 +                 {
702 +                     if ((if 1 as libc::c_int != 0 {
703 +                         0 as libc::c_int as libc::c_long
704 +                     } else {
705 +                         ssize
706 +                     }) - 1 as libc::c_int as libc::c_long)
707 +                         < 0 as libc::c_int as libc::c_long
708 +                     {
709 +                         ((0 as libc::c_int as libc::c_long)
710 +                             < ssize + 0 as libc::c_int as off_t) as libc::c_int
711 +                     } else {
712 +                         ((0 as libc::c_int as libc::c_long) < ssize
713 +                             && (-(1 as libc::c_int) as libc::c_long
714 +                                 - 0 as libc::c_int as off_t)
715 +                                 < ssize - 1 as libc::c_int as libc::c_long) as libc::c_int
716 +                     }
717 +                 } else {
718 +                     (0 as libc::c_int as off_t / blksize < ssize) as libc::c_int
719 +                 }
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:531:28
    |
531 |                 if ssize < 0 as libc::c_int as libc::c_long {
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:531:28
    |
531 |                 if ssize < 0 as libc::c_int as libc::c_long {
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:532:29
    |
532 |                     if ((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:533:25
    |
533 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:533:25
    |
533 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:535:29
    |
535 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:536:29
    |
536 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:536:29
    |
536 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:538:29
    |
538 | ...                   -(1 as libc::c_int) as off_t
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:538:31
    |
538 | ...                   -(1 as libc::c_int) as off_t
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:540:26
    |
540 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:540:26
    |
540 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:541:27
    |
541 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:541:27
    |
541 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:543:25
    |
543 |                         (ssize < -(1 as libc::c_int) as off_t / blksize) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:543:34
    |
543 |                         (ssize < -(1 as libc::c_int) as off_t / blksize) as libc::c_int
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:543:36
    |
543 |                         (ssize < -(1 as libc::c_int) as off_t / blksize) as libc::c_int
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:545:25
    |
545 | /                         ((if (if (if ((if 1 as libc::c_int != 0 {
546 | |                             0 as libc::c_int as libc::c_long
547 | |                         } else {
548 | |                             blksize
...   |
610 | |                             -(1 as libc::c_int) as off_t / -blksize
611 | |                         }) <= -(1 as libc::c_int) as libc::c_long - ssize) as libc::c_int
    | |_________________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:545:43
    |
545 |                         ((if (if (if ((if 1 as libc::c_int != 0 {
    |                                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:546:29
    |
546 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:546:29
    |
546 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:549:30
    |
549 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:549:30
    |
549 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:550:31
    |
550 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:550:31
    |
550 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:552:38
    |
552 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:553:33
    |
553 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:553:33
    |
553 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:556:34
    |
556 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:556:34
    |
556 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:557:37
    |
557 | ...                   << (::core::mem::size_of::<ptrdiff_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:558:51
    |
558 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:558:51
    |
558 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:559:51
    |
559 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:559:51
    |
559 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:560:35
    |
560 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:560:35
    |
560 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:561:35
    |
561 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:561:35
    |
561 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:562:35
    |
562 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:562:35
    |
562 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:564:33
    |
564 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:565:33
    |
565 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:565:33
    |
565 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:568:34
    |
568 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:568:34
    |
568 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:569:30
    |
569 |                         }) < 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:569:30
    |
569 |                         }) < 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:571:29
    |
571 | / ...                   (blksize
572 | | ...                       < -(if ((if 1 as libc::c_int != 0 {
573 | | ...                           0 as libc::c_int as libc::c_long
574 | | ...                       } else {
...   |
595 | | ...                           }) - 1 as libc::c_int as libc::c_long
596 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:572:45
    |
572 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:573:37
    |
573 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:573:37
    |
573 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:576:38
    |
576 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:576:38
    |
576 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:577:39
    |
577 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:577:39
    |
577 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:579:44
    |
579 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:580:41
    |
580 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:580:41
    |
580 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:583:42
    |
583 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:583:42
    |
583 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:584:45
    |
584 | ...                   << (::core::mem::size_of::<ptrdiff_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:585:59
    |
585 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:585:59
    |
585 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:586:59
    |
586 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:586:59
    |
586 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:587:43
    |
587 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:587:43
    |
587 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:588:43
    |
588 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:588:43
    |
588 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:589:43
    |
589 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:589:43
    |
589 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:591:41
    |
591 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:592:41
    |
592 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:592:41
    |
592 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:595:42
    |
595 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:595:42
    |
595 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:598:29
    |
598 | ...                   ((0 as libc::c_int as libc::c_long) < blksize) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:598:31
    |
598 | ...                   ((0 as libc::c_int as libc::c_long) < blksize) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:598:31
    |
598 | ...                   ((0 as libc::c_int as libc::c_long) < blksize) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: operator precedence can trip the unwary
   --> src/truncate.rs:601:29
    |
601 | / ...                   (if 1 as libc::c_int != 0 {
602 | | ...                       0 as libc::c_int as libc::c_long
603 | | ...                   } else {
604 | | ...                       blksize
...   |
607 | | ...                           .wrapping_mul(8 as libc::c_int as libc::c_ulong)
608 | | ...                           .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |______________________________________________________________________________^
    |
    = note: `-W clippy::precedence` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence
help: consider parenthesizing your expression
    |
601 ~                             ((if 1 as libc::c_int != 0 {
602 +                                 0 as libc::c_int as libc::c_long
603 +                             } else {
604 +                                 blksize
605 +                             }) + -(1 as libc::c_int) as off_t) >> (::core::mem::size_of::<ptrdiff_t>() as libc::c_ulong)
606 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
607 +                                     .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:601:33
    |
601 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:602:33
    |
602 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:602:33
    |
602 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:605:34
    |
605 | ...                   }) + -(1 as libc::c_int) as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:605:36
    |
605 | ...                   }) + -(1 as libc::c_int) as off_t
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:606:37
    |
606 | ...                   >> (::core::mem::size_of::<ptrdiff_t>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:607:51
    |
607 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:607:51
    |
607 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:608:51
    |
608 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:608:51
    |
608 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:610:29
    |
610 | ...                   -(1 as libc::c_int) as off_t / -blksize
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:610:31
    |
610 | ...                   -(1 as libc::c_int) as off_t / -blksize
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:611:31
    |
611 |                         }) <= -(1 as libc::c_int) as libc::c_long - ssize) as libc::c_int
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:611:33
    |
611 |                         }) <= -(1 as libc::c_int) as libc::c_long - ssize) as libc::c_int
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:614:37
    |
614 |                     if (if (if ((if 1 as libc::c_int != 0 {
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:615:25
    |
615 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:615:25
    |
615 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:617:29
    |
617 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:618:29
    |
618 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:618:29
    |
618 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:621:30
    |
621 |                         }) + 0 as libc::c_int as off_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:621:30
    |
621 |                         }) + 0 as libc::c_int as off_t
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:622:26
    |
622 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:622:26
    |
622 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:623:27
    |
623 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:623:27
    |
623 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:625:34
    |
625 |                         !(((((if 1 as libc::c_int != 0 {
    |                                  ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:626:29
    |
626 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:626:29
    |
626 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:628:33
    |
628 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:629:33
    |
629 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:629:33
    |
629 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:632:34
    |
632 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:632:34
    |
632 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:633:30
    |
633 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:633:30
    |
633 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:634:33
    |
634 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:635:47
    |
635 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:635:47
    |
635 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:636:47
    |
636 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:636:47
    |
636 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:637:31
    |
637 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:637:31
    |
637 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:638:31
    |
638 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:638:31
    |
638 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:639:31
    |
639 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:639:31
    |
639 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:641:29
    |
641 |                         (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:642:29
    |
642 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:642:29
    |
642 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:644:33
    |
644 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:645:33
    |
645 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:645:33
    |
645 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:648:34
    |
648 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:648:34
    |
648 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:649:30
    |
649 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:649:30
    |
649 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:650:26
    |
650 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:650:26
    |
650 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:652:25
    |
652 | /                         (((if 1 as libc::c_int != 0 {
653 | |                             0 as libc::c_int as libc::c_long
654 | |                         } else {
655 | |                             blksize
...   |
692 | |                                 }) - 1 as libc::c_int as libc::c_long
693 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:652:31
    |
652 |                         (((if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:653:29
    |
653 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:653:29
    |
653 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:656:30
    |
656 |                         }) + 0 as libc::c_int as off_t)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:656:30
    |
656 |                         }) + 0 as libc::c_int as off_t)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:657:41
    |
657 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:658:33
    |
658 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:658:33
    |
658 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:660:37
    |
660 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:661:37
    |
661 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:661:37
    |
661 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:664:38
    |
664 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:664:38
    |
664 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:665:34
    |
665 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:665:34
    |
665 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:666:35
    |
666 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:666:35
    |
666 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:668:40
    |
668 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:669:37
    |
669 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:669:37
    |
669 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:671:41
    |
671 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:672:41
    |
672 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:672:41
    |
672 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:675:42
    |
675 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:675:42
    |
675 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:676:38
    |
676 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:676:38
    |
676 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:677:41
    |
677 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:678:55
    |
678 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:678:55
    |
678 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:679:55
    |
679 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:679:55
    |
679 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:680:39
    |
680 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:680:39
    |
680 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:681:39
    |
681 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:681:39
    |
681 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:682:39
    |
682 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:682:39
    |
682 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:684:37
    |
684 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:685:37
    |
685 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:685:37
    |
685 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:687:41
    |
687 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:688:41
    |
688 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:688:41
    |
688 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:691:42
    |
691 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:691:42
    |
691 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:692:38
    |
692 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:692:38
    |
692 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:695:25
    |
695 | /                         ((0 as libc::c_int as libc::c_long)
696 | |                             < (if 1 as libc::c_int != 0 {
697 | |                                 0 as libc::c_int as libc::c_long
698 | |                             } else {
699 | |                                 blksize
700 | |                             }) + 0 as libc::c_int as off_t) as libc::c_int
    | |__________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:695:27
    |
695 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:695:27
    |
695 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:696:35
    |
696 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:697:33
    |
697 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:697:33
    |
697 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:700:34
    |
700 | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:700:34
    |
700 | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:701:43
    |
701 |                     }) != 0 && blksize == -(1 as libc::c_int) as libc::c_long
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:701:45
    |
701 |                     }) != 0 && blksize == -(1 as libc::c_int) as libc::c_long
    |                                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:703:33
    |
703 |                         if ((if 1 as libc::c_int != 0 {
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:704:29
    |
704 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:704:29
    |
704 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:707:30
    |
707 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:707:30
    |
707 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:708:31
    |
708 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:708:31
    |
708 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:710:29
    |
710 | / ...                   ((0 as libc::c_int as libc::c_long)
711 | | ...                       < ssize + 0 as libc::c_int as off_t) as libc::c_int
    | |_____________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:710:31
    |
710 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:710:31
    |
710 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:711:43
    |
711 | ...                   < ssize + 0 as libc::c_int as off_t) as libc::c_int
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:711:43
    |
711 | ...                   < ssize + 0 as libc::c_int as off_t) as libc::c_int
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:713:29
    |
713 | / ...                   ((0 as libc::c_int as libc::c_long) < ssize
714 | | ...                       && (-(1 as libc::c_int) as libc::c_long
715 | | ...                           - 0 as libc::c_int as off_t)
716 | | ...                           < ssize - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |________________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:713:31
    |
713 | ...                   ((0 as libc::c_int as libc::c_long) < ssize
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:713:31
    |
713 | ...                   ((0 as libc::c_int as libc::c_long) < ssize
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:714:37
    |
714 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:714:39
    |
714 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:715:39
    |
715 | ...                   - 0 as libc::c_int as off_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:715:39
    |
715 | ...                   - 0 as libc::c_int as off_t)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:716:47
    |
716 | ...                   < ssize - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:716:47
    |
716 | ...                   < ssize - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:719:25
    |
719 |                         (0 as libc::c_int as off_t / blksize < ssize) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:719:26
    |
719 |                         (0 as libc::c_int as off_t / blksize < ssize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:719:26
    |
719 |                         (0 as libc::c_int as off_t / blksize < ssize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: this `else { if .. }` block can be collapsed
   --> src/truncate.rs:725:24
    |
725 |                   } else {
    |  ________________________^
726 | |                     if ssize < 0 as libc::c_int as libc::c_long {
727 | |                         if (if (if ((if 1 as libc::c_int != 0 {
728 | |                             0 as libc::c_int as libc::c_long
...   |
835 | |                     }
836 | |                 }
    | |_________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if
help: collapse nested if block
    |
725 ~                 } else if ssize < 0 as libc::c_int as libc::c_long {
726 +                     if (if (if ((if 1 as libc::c_int != 0 {
727 +                         0 as libc::c_int as libc::c_long
728 +                     } else {
729 +                         (if 1 as libc::c_int != 0 {
730 +                             0 as libc::c_int as libc::c_long
731 +                         } else {
732 +                             ssize
733 +                         }) + 0 as libc::c_int as off_t
734 +                     }) - 1 as libc::c_int as libc::c_long)
735 +                         < 0 as libc::c_int as libc::c_long
736 +                     {
737 +                         !(((((if 1 as libc::c_int != 0 {
738 +                             0 as libc::c_int as libc::c_long
739 +                         } else {
740 +                             (if 1 as libc::c_int != 0 {
741 +                                 0 as libc::c_int as libc::c_long
742 +                             } else {
743 +                                 ssize
744 +                             }) + 0 as libc::c_int as off_t
745 +                         }) + 1 as libc::c_int as libc::c_long)
746 +                             << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
747 +                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
748 +                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
749 +                             - 1 as libc::c_int as libc::c_long)
750 +                             * 2 as libc::c_int as libc::c_long
751 +                             + 1 as libc::c_int as libc::c_long)
752 +                     } else {
753 +                         (if 1 as libc::c_int != 0 {
754 +                             0 as libc::c_int as libc::c_long
755 +                         } else {
756 +                             (if 1 as libc::c_int != 0 {
757 +                                 0 as libc::c_int as libc::c_long
758 +                             } else {
759 +                                 ssize
760 +                             }) + 0 as libc::c_int as off_t
761 +                         }) + 0 as libc::c_int as libc::c_long
762 +                     }) < 0 as libc::c_int as libc::c_long
763 +                     {
764 +                         (((if 1 as libc::c_int != 0 {
765 +                             0 as libc::c_int as libc::c_long
766 +                         } else {
767 +                             ssize
768 +                         }) + 0 as libc::c_int as off_t)
769 +                             < -(if ((if 1 as libc::c_int != 0 {
770 +                                 0 as libc::c_int as libc::c_long
771 +                             } else {
772 +                                 (if 1 as libc::c_int != 0 {
773 +                                     0 as libc::c_int as libc::c_long
774 +                                 } else {
775 +                                     ssize
776 +                                 }) + 0 as libc::c_int as off_t
777 +                             }) - 1 as libc::c_int as libc::c_long)
778 +                                 < 0 as libc::c_int as libc::c_long
779 +                             {
780 +                                 ((((if 1 as libc::c_int != 0 {
781 +                                     0 as libc::c_int as libc::c_long
782 +                                 } else {
783 +                                     (if 1 as libc::c_int != 0 {
784 +                                         0 as libc::c_int as libc::c_long
785 +                                     } else {
786 +                                         ssize
787 +                                     }) + 0 as libc::c_int as off_t
788 +                                 }) + 1 as libc::c_int as libc::c_long)
789 +                                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
790 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
791 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
792 +                                     - 1 as libc::c_int as libc::c_long)
793 +                                     * 2 as libc::c_int as libc::c_long
794 +                                     + 1 as libc::c_int as libc::c_long
795 +                             } else {
796 +                                 (if 1 as libc::c_int != 0 {
797 +                                     0 as libc::c_int as libc::c_long
798 +                                 } else {
799 +                                     (if 1 as libc::c_int != 0 {
800 +                                         0 as libc::c_int as libc::c_long
801 +                                     } else {
802 +                                         ssize
803 +                                     }) + 0 as libc::c_int as off_t
804 +                                 }) - 1 as libc::c_int as libc::c_long
805 +                             })) as libc::c_int
806 +                     } else {
807 +                         ((0 as libc::c_int as libc::c_long)
808 +                             < (if 1 as libc::c_int != 0 {
809 +                                 0 as libc::c_int as libc::c_long
810 +                             } else {
811 +                                 ssize
812 +                             }) + 0 as libc::c_int as off_t) as libc::c_int
813 +                     }) != 0 && ssize == -(1 as libc::c_int) as libc::c_long
814 +                     {
815 +                         if ((if 1 as libc::c_int != 0 {
816 +                             0 as libc::c_int as libc::c_long
817 +                         } else {
818 +                             blksize
819 +                         }) - 1 as libc::c_int as libc::c_long)
820 +                             < 0 as libc::c_int as libc::c_long
821 +                         {
822 +                             ((0 as libc::c_int as libc::c_long)
823 +                                 < blksize + 0 as libc::c_int as off_t) as libc::c_int
824 +                         } else {
825 +                             ((-(1 as libc::c_int) as libc::c_long
826 +                                 - 0 as libc::c_int as off_t)
827 +                                 < blksize - 1 as libc::c_int as libc::c_long) as libc::c_int
828 +                         }
829 +                     } else {
830 +                         (0 as libc::c_int as off_t / ssize < blksize) as libc::c_int
831 +                     }
832 +                 } else {
833 +                     (-(1 as libc::c_int) as off_t / blksize < ssize) as libc::c_int
834 +                 }
    |

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:723:31
    |
723 |                 if blksize == 0 as libc::c_int as libc::c_long {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:723:31
    |
723 |                 if blksize == 0 as libc::c_int as libc::c_long {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:724:21
    |
724 |                     0 as libc::c_int
    |                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:726:32
    |
726 |                     if ssize < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:726:32
    |
726 |                     if ssize < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:727:41
    |
727 |                         if (if (if ((if 1 as libc::c_int != 0 {
    |                                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:728:29
    |
728 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:728:29
    |
728 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:730:33
    |
730 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:731:33
    |
731 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:731:33
    |
731 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:734:34
    |
734 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:734:34
    |
734 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:735:30
    |
735 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:735:30
    |
735 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:736:31
    |
736 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:736:31
    |
736 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:738:38
    |
738 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:739:33
    |
739 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:739:33
    |
739 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:741:37
    |
741 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:742:37
    |
742 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:742:37
    |
742 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:745:38
    |
745 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:745:38
    |
745 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:746:34
    |
746 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:746:34
    |
746 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:747:37
    |
747 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:748:51
    |
748 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:748:51
    |
748 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:749:51
    |
749 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:749:51
    |
749 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:750:35
    |
750 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:750:35
    |
750 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:751:35
    |
751 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:751:35
    |
751 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:752:35
    |
752 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:752:35
    |
752 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:754:33
    |
754 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:755:33
    |
755 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:755:33
    |
755 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:757:37
    |
757 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:758:37
    |
758 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:758:37
    |
758 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:761:38
    |
761 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:761:38
    |
761 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:762:34
    |
762 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:762:34
    |
762 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:763:30
    |
763 |                         }) < 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:763:30
    |
763 |                         }) < 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:765:29
    |
765 | / ...                   (((if 1 as libc::c_int != 0 {
766 | | ...                       0 as libc::c_int as libc::c_long
767 | | ...                   } else {
768 | | ...                       ssize
...   |
805 | | ...                           }) - 1 as libc::c_int as libc::c_long
806 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:765:35
    |
765 | ...                   (((if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:766:33
    |
766 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:766:33
    |
766 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:769:34
    |
769 | ...                   }) + 0 as libc::c_int as off_t)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:769:34
    |
769 | ...                   }) + 0 as libc::c_int as off_t)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:770:45
    |
770 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:771:37
    |
771 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:771:37
    |
771 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:773:41
    |
773 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:774:41
    |
774 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:774:41
    |
774 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:777:42
    |
777 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:777:42
    |
777 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:778:38
    |
778 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:778:38
    |
778 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:779:39
    |
779 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:779:39
    |
779 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:781:44
    |
781 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:782:41
    |
782 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:782:41
    |
782 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:784:45
    |
784 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:785:45
    |
785 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:785:45
    |
785 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:788:46
    |
788 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:788:46
    |
788 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:789:42
    |
789 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:789:42
    |
789 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:790:45
    |
790 | ...                   << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:791:59
    |
791 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:791:59
    |
791 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:792:59
    |
792 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:792:59
    |
792 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:793:43
    |
793 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:793:43
    |
793 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:794:43
    |
794 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:794:43
    |
794 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:795:43
    |
795 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:795:43
    |
795 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:797:41
    |
797 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:798:41
    |
798 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:798:41
    |
798 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:800:45
    |
800 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:801:45
    |
801 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:801:45
    |
801 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:804:46
    |
804 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:804:46
    |
804 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:805:42
    |
805 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:805:42
    |
805 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:808:29
    |
808 | / ...                   ((0 as libc::c_int as libc::c_long)
809 | | ...                       < (if 1 as libc::c_int != 0 {
810 | | ...                           0 as libc::c_int as libc::c_long
811 | | ...                       } else {
812 | | ...                           ssize
813 | | ...                       }) + 0 as libc::c_int as off_t) as libc::c_int
    | |________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:808:31
    |
808 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:808:31
    |
808 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:809:39
    |
809 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:810:37
    |
810 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:810:37
    |
810 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:813:38
    |
813 | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:813:38
    |
813 | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:814:45
    |
814 |                         }) != 0 && ssize == -(1 as libc::c_int) as libc::c_long
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:814:47
    |
814 |                         }) != 0 && ssize == -(1 as libc::c_int) as libc::c_long
    |                                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:816:37
    |
816 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:817:33
    |
817 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:817:33
    |
817 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:820:34
    |
820 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:820:34
    |
820 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:821:35
    |
821 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:821:35
    |
821 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:823:33
    |
823 | / ...                   ((0 as libc::c_int as libc::c_long)
824 | | ...                       < blksize + 0 as libc::c_int as off_t) as libc::c_int
    | |_______________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:823:35
    |
823 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:823:35
    |
823 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:824:49
    |
824 | ...                   < blksize + 0 as libc::c_int as off_t) as libc::c_int
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:824:49
    |
824 | ...                   < blksize + 0 as libc::c_int as off_t) as libc::c_int
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:826:33
    |
826 | / ...                   ((-(1 as libc::c_int) as libc::c_long
827 | | ...                       - 0 as libc::c_int as off_t)
828 | | ...                       < blksize - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |______________________________________________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:826:35
    |
826 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:826:37
    |
826 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:827:39
    |
827 | ...                   - 0 as libc::c_int as off_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:827:39
    |
827 | ...                   - 0 as libc::c_int as off_t)
    |                         ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:828:49
    |
828 | ...                   < blksize - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:828:49
    |
828 | ...                   < blksize - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:831:29
    |
831 | ...                   (0 as libc::c_int as off_t / ssize < blksize) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:831:30
    |
831 | ...                   (0 as libc::c_int as off_t / ssize < blksize) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:831:30
    |
831 | ...                   (0 as libc::c_int as off_t / ssize < blksize) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:834:25
    |
834 |                         (-(1 as libc::c_int) as off_t / blksize < ssize) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:834:26
    |
834 |                         (-(1 as libc::c_int) as off_t / blksize < ssize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:834:28
    |
834 |                         (-(1 as libc::c_int) as off_t / blksize < ssize) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:840:15
    |
840 |             *(&mut ssize as *mut off_t) = fresh4;
    |               ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:841:13
    |
841 |             1 as libc::c_int
    |             ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:844:15
    |
844 |             *(&mut ssize as *mut off_t) = fresh6;
    |               ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:845:13
    |
845 |             fresh7 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:852:17
    |
852 |         gettext(b"overflow in %jd * %td byte blocks for file %s\0" as *const u8 as *const libc::c_char),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:852:17
    |
852 |         gettext(b"overflow in %jd * %td byte blocks for file %s\0" as *const u8 as *const libc::c_char),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:863:17
    |
863 |         gettext(b"overflow in %jd * %td byte blocks for file %s\0" as *const u8 as *const libc::c_char),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:863:17
    |
863 |         gettext(b"overflow in %jd * %td byte blocks for file %s\0" as *const u8 as *const libc::c_char),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:874:17
    |
874 |         gettext(b"overflow in %jd * %td byte blocks for file %s\0" as *const u8 as *const libc::c_char),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:874:17
    |
874 |         gettext(b"overflow in %jd * %td byte blocks for file %s\0" as *const u8 as *const libc::c_char),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:885:8
    |
885 |     if rel_mode as u64 != 0 {
    |        ^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:895:21
    |
895 |             gettext(b"%s has unusable, apparently negative size\0" as *const u8 as *const libc::c_char),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:895:21
    |
895 |             gettext(b"%s has unusable, apparently negative size\0" as *const u8 as *const libc::c_char),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:906:21
    |
906 |             gettext(b"cannot get the size of %s\0" as *const u8 as *const libc::c_char),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:906:21
    |
906 |             gettext(b"cannot get the size of %s\0" as *const u8 as *const libc::c_char),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:931:21
    |
931 |             gettext(b"overflow extending size of file %s\0" as *const u8 as *const libc::c_char),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:931:21
    |
931 |             gettext(b"overflow extending size of file %s\0" as *const u8 as *const libc::c_char),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:934:16
    |
934 |         return false as i32 != 0;
    |                ^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:941:16
    |
941 |     if nsize < 0 as libc::c_int as libc::c_long {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:941:16
    |
941 |     if nsize < 0 as libc::c_int as libc::c_long {
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:942:17
    |
942 |         nsize = 0 as libc::c_int as off_t;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:942:17
    |
942 |         nsize = 0 as libc::c_int as off_t;
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:944:32
    |
944 |     if ftruncate(fd, nsize) != 0 as libc::c_int {
    |                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:947:17
    |
947 |                 0 as libc::c_int,
    |                 ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:950:21
    |
950 | /                     b"failed to truncate %s at %jd bytes\0" as *const u8
951 | |                         as *const libc::c_char,
    | |______________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:950:21
    |
950 |                     b"failed to truncate %s at %jd bytes\0" as *const u8
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:956:16
    |
956 |             if 0 as libc::c_int != 0 as libc::c_int {
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:956:36
    |
956 |             if 0 as libc::c_int != 0 as libc::c_int {
    |                                    ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:961:48
    |
961 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:966:25
    |
966 | /                         b"failed to truncate %s at %jd bytes\0" as *const u8
967 | |                             as *const libc::c_char,
    | |__________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:966:25
    |
966 |                         b"failed to truncate %s at %jd bytes\0" as *const u8
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:972:35
    |
972 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:978:48
    |
978 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
    |                                                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:983:25
    |
983 | /                         b"failed to truncate %s at %jd bytes\0" as *const u8
984 | |                             as *const libc::c_char,
    | |__________________________________________________^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:983:25
    |
983 |                         b"failed to truncate %s at %jd bytes\0" as *const u8
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:989:35
    |
989 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:995:16
    |
995 |         return 0 as libc::c_int != 0;
    |                ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
   --> src/truncate.rs:997:12
    |
997 |     return 1 as libc::c_int != 0;
    |            ^^^^^^^^^^^^^^^^
    |
    = help: consider using a safe wrapper for this conversion
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: binding's name is too similar to existing binding
    --> src/truncate.rs:1001:9
     |
1001 |     mut argv: *mut *mut libc::c_char,
     |         ^^^^
     |
note: existing binding defined here
    --> src/truncate.rs:1000:9
     |
1000 |     mut argc: libc::c_int,
     |         ^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: binding's name is too similar to existing binding
    --> src/truncate.rs:1005:13
     |
1005 |     let mut rsize: off_t = -(1 as libc::c_int) as off_t;
     |             ^^^^^
     |
note: existing binding defined here
    --> src/truncate.rs:1004:13
     |
1004 |     let mut size: off_t = 0 as libc::c_int as off_t;
     |             ^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1003:30
     |
1003 |     let mut got_size: bool = 0 as libc::c_int != 0;
     |                              ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1004:27
     |
1004 |     let mut size: off_t = 0 as libc::c_int as off_t;
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1004:27
     |
1004 |     let mut size: off_t = 0 as libc::c_int as off_t;
     |                           ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1005:28
     |
1005 |     let mut rsize: off_t = -(1 as libc::c_int) as off_t;
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1005:30
     |
1005 |     let mut rsize: off_t = -(1 as libc::c_int) as off_t;
     |                              ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1008:35
     |
1008 |     set_program_name(*argv.offset(0 as libc::c_int as isize));
     |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1008:35
     |
1008 |     set_program_name(*argv.offset(0 as libc::c_int as isize));
     |                                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1009:15
     |
1009 |     setlocale(6 as libc::c_int, b"\0" as *const u8 as *const libc::c_char);
     |               ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1009:33
     |
1009 |     setlocale(6 as libc::c_int, b"\0" as *const u8 as *const libc::c_char);
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1009:33
     |
1009 |     setlocale(6 as libc::c_int, b"\0" as *const u8 as *const libc::c_char);
     |                                 ^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1011:9
     |
1011 |         b"coreutils\0" as *const u8 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1011:9
     |
1011 |         b"coreutils\0" as *const u8 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1012:9
     |
1012 |         b"/usr/local/share/locale\0" as *const u8 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1012:9
     |
1012 |         b"/usr/local/share/locale\0" as *const u8 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1014:16
     |
1014 |     textdomain(b"coreutils\0" as *const u8 as *const libc::c_char);
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1014:16
     |
1014 |     textdomain(b"coreutils\0" as *const u8 as *const libc::c_char);
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1015:17
     |
1015 |     atexit(Some(close_stdout as unsafe extern "C" fn() -> ()));
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1020:13
     |
1020 |             b"cor:s:\0" as *const u8 as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1020:13
     |
1020 |             b"cor:s:\0" as *const u8 as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1022:13
     |
1022 |             0 as *mut libc::c_int,
     |             ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1024:21
     |
1024 |         if !(c != -(1 as libc::c_int)) {
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1029:29
     |
1029 |                 no_create = 1 as libc::c_int != 0;
     |                             ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1032:30
     |
1032 |                 block_mode = 1 as libc::c_int != 0;
     |                              ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1038:23
     |
1038 |                   while *(*__ctype_b_loc())
     |  _______________________^
1039 | |                     .offset(to_uchar(*optarg) as libc::c_int as isize) as libc::c_int
     | |_____________________________________________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1039:29
     |
1039 |                     .offset(to_uchar(*optarg) as libc::c_int as isize) as libc::c_int
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1039:29
     |
1039 |                     .offset(to_uchar(*optarg) as libc::c_int as isize) as libc::c_int
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1040:23
     |
1040 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1040:23
     |
1040 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1040:23
     |
1040 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1045:23
     |
1045 |                 match *optarg as libc::c_int {
     |                       ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1068:23
     |
1068 |                   while *(*__ctype_b_loc())
     |  _______________________^
1069 | |                     .offset(to_uchar(*optarg) as libc::c_int as isize) as libc::c_int
     | |_____________________________________________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1069:29
     |
1069 |                     .offset(to_uchar(*optarg) as libc::c_int as isize) as libc::c_int
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1069:29
     |
1069 |                     .offset(to_uchar(*optarg) as libc::c_int as isize) as libc::c_int
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1070:23
     |
1070 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1070:23
     |
1070 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1070:23
     |
1070 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1075:20
     |
1075 |                 if *optarg as libc::c_int == '+' as i32
     |                    ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1075:46
     |
1075 |                 if *optarg as libc::c_int == '+' as i32
     |                                              ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1076:24
     |
1076 |                     || *optarg as libc::c_int == '-' as i32
     |                        ^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1076:50
     |
1076 |                     || *optarg as libc::c_int == '-' as i32
     |                                                  ^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1078:24
     |
1078 |                     if rel_mode as u64 != 0 {
     |                        ^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1081:33
     |
1081 | ...                   0 as libc::c_int,
     |                       ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1082:33
     |
1082 | ...                   0 as libc::c_int,
     |                       ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1084:37
     |
1084 | / ...                   b"multiple relative modifiers specified\0" as *const u8
1085 | | ...                       as *const libc::c_char,
     | |________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1084:37
     |
1084 | ...                   b"multiple relative modifiers specified\0" as *const u8
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1088:32
     |
1088 | ...                   if 0 as libc::c_int != 0 as libc::c_int {
     |                          ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1088:52
     |
1088 | ...                   if 0 as libc::c_int != 0 as libc::c_int {
     |                                              ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1093:64
     |
1093 | ...                   let __errstatus: libc::c_int = 0 as libc::c_int;
     |                                                      ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1096:37
     |
1096 | ...                   0 as libc::c_int,
     |                       ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1098:41
     |
1098 | / ...                   b"multiple relative modifiers specified\0" as *const u8
1099 | | ...                       as *const libc::c_char,
     | |________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1098:41
     |
1098 | ...                   b"multiple relative modifiers specified\0" as *const u8
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1102:51
     |
1102 | ...                   if __errstatus != 0 as libc::c_int {
     |                                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1108:64
     |
1108 | ...                   let __errstatus: libc::c_int = 0 as libc::c_int;
     |                                                      ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1111:37
     |
1111 | ...                   0 as libc::c_int,
     |                       ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1113:41
     |
1113 | / ...                   b"multiple relative modifiers specified\0" as *const u8
1114 | | ...                       as *const libc::c_char,
     | |________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1113:41
     |
1113 | ...                   b"multiple relative modifiers specified\0" as *const u8
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1117:51
     |
1117 | ...                   if __errstatus != 0 as libc::c_int {
     |                                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1129:26
     |
1129 |                     !if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1129:26
     |
1129 |                     !if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                          ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1129:55
     |
1129 |                     !if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1129:57
     |
1129 |                     !if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                                                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1130:25
     |
1130 |                         -(1 as libc::c_int) as off_t
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1130:27
     |
1130 |                         -(1 as libc::c_int) as off_t
     |                           ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1132:28
     |
1132 |                         (((1 as libc::c_int as off_t)
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1132:28
     |
1132 |                         (((1 as libc::c_int as off_t)
     |                            ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1133:33
     |
1133 | ...                   << (::core::mem::size_of::<off_t>() as libc::c_ulong)
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1134:47
     |
1134 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1134:47
     |
1134 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
     |                                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1135:47
     |
1135 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1135:47
     |
1135 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
     |                                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1136:31
     |
1136 | ...                   - 1 as libc::c_int as libc::c_long)
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1136:31
     |
1136 | ...                   - 1 as libc::c_int as libc::c_long)
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1137:31
     |
1137 | ...                   * 2 as libc::c_int as libc::c_long
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1137:31
     |
1137 | ...                   * 2 as libc::c_int as libc::c_long
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1138:31
     |
1138 | ...                   + 1 as libc::c_int as libc::c_long
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1138:31
     |
1138 | ...                   + 1 as libc::c_int as libc::c_long
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1140:25
     |
1140 |                     if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1140:25
     |
1140 |                     if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1140:54
     |
1140 |                     if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1140:56
     |
1140 |                     if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                                                        ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1141:25
     |
1141 |                         -(1 as libc::c_int) as off_t
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1141:27
     |
1141 |                         -(1 as libc::c_int) as off_t
     |                           ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1143:28
     |
1143 |                         (((1 as libc::c_int as off_t)
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1143:28
     |
1143 |                         (((1 as libc::c_int as off_t)
     |                            ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1144:33
     |
1144 | ...                   << (::core::mem::size_of::<off_t>() as libc::c_ulong)
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1145:47
     |
1145 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1145:47
     |
1145 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
     |                                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1146:47
     |
1146 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1146:47
     |
1146 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
     |                                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1147:31
     |
1147 | ...                   - 1 as libc::c_int as libc::c_long)
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1147:31
     |
1147 | ...                   - 1 as libc::c_int as libc::c_long)
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1148:31
     |
1148 | ...                   * 2 as libc::c_int as libc::c_long
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1148:31
     |
1148 | ...                   * 2 as libc::c_int as libc::c_long
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1149:31
     |
1149 | ...                   + 1 as libc::c_int as libc::c_long
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1149:31
     |
1149 | ...                   + 1 as libc::c_int as libc::c_long
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1151:21
     |
1151 |                     b"EgGkKmMPQRtTYZ0\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1151:21
     |
1151 |                     b"EgGkKmMPQRtTYZ0\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1152:29
     |
1152 |                     gettext(b"Invalid number\0" as *const u8 as *const libc::c_char),
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1152:29
     |
1152 |                     gettext(b"Invalid number\0" as *const u8 as *const libc::c_char),
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1153:21
     |
1153 |                     0 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1160:21
     |
1160 |             gettext(b"division by zero\0".as_ptr() as *const libc::c_char),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1170:21
     |
1170 |             gettext(b"division by zero\0".as_ptr() as *const libc::c_char),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1180:21
     |
1180 |             gettext(b"division by zero\0".as_ptr() as *const libc::c_char),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1213:24
     |
1213 |     argv = argv.offset(optind as isize);
     |                        ^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1218:17
     |
1218 |                 0 as libc::c_int,
     |                 ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1219:17
     |
1219 |                 0 as libc::c_int,
     |                 ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1221:21
     |
1221 | /                     b"you must specify either %s or %s\0" as *const u8
1222 | |                         as *const libc::c_char,
     | |______________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1221:21
     |
1221 |                     b"you must specify either %s or %s\0" as *const u8
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1225:21
     |
1225 |                     0 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1226:21
     |
1226 |                     b"--size\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1226:21
     |
1226 |                     b"--size\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1229:21
     |
1229 |                     1 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1230:21
     |
1230 |                     b"--reference\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1230:21
     |
1230 |                     b"--reference\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1233:16
     |
1233 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1233:36
     |
1233 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                                    ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1238:48
     |
1238 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                                                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1241:21
     |
1241 |                     0 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1243:25
     |
1243 | /                         b"you must specify either %s or %s\0" as *const u8
1244 | |                             as *const libc::c_char,
     | |__________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1243:25
     |
1243 |                         b"you must specify either %s or %s\0" as *const u8
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1247:25
     |
1247 |                         0 as libc::c_int,
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1248:25
     |
1248 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1248:25
     |
1248 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1251:25
     |
1251 |                         1 as libc::c_int,
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1252:25
     |
1252 |                         b"--reference\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1252:25
     |
1252 |                         b"--reference\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1255:35
     |
1255 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1261:48
     |
1261 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                                                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1264:21
     |
1264 |                     0 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1266:25
     |
1266 | /                         b"you must specify either %s or %s\0" as *const u8
1267 | |                             as *const libc::c_char,
     | |__________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1266:25
     |
1266 |                         b"you must specify either %s or %s\0" as *const u8
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1270:25
     |
1270 |                         0 as libc::c_int,
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1271:25
     |
1271 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1271:25
     |
1271 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1274:25
     |
1274 |                         1 as libc::c_int,
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1275:25
     |
1275 |                         b"--reference\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1275:25
     |
1275 |                         b"--reference\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1278:35
     |
1278 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1286:31
     |
1286 |     if !ref_file.is_null() && got_size as libc::c_int != 0 && rel_mode as u64 == 0 {
     |                               ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1286:63
     |
1286 |     if !ref_file.is_null() && got_size as libc::c_int != 0 && rel_mode as u64 == 0 {
     |                                                               ^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1289:17
     |
1289 |                 0 as libc::c_int,
     |                 ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1290:17
     |
1290 |                 0 as libc::c_int,
     |                 ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1292:21
     |
1292 | /                     b"you must specify a relative %s with %s\0" as *const u8
1293 | |                         as *const libc::c_char,
     | |______________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1292:21
     |
1292 |                     b"you must specify a relative %s with %s\0" as *const u8
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1296:21
     |
1296 |                     0 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1297:21
     |
1297 |                     b"--size\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1297:21
     |
1297 |                     b"--size\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1300:21
     |
1300 |                     1 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1301:21
     |
1301 |                     b"--reference\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1301:21
     |
1301 |                     b"--reference\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1304:16
     |
1304 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1304:36
     |
1304 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                                    ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1309:48
     |
1309 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                                                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1312:21
     |
1312 |                     0 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1314:25
     |
1314 | /                         b"you must specify a relative %s with %s\0" as *const u8
1315 | |                             as *const libc::c_char,
     | |__________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1314:25
     |
1314 |                         b"you must specify a relative %s with %s\0" as *const u8
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1318:25
     |
1318 |                         0 as libc::c_int,
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1319:25
     |
1319 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1319:25
     |
1319 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1322:25
     |
1322 |                         1 as libc::c_int,
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1323:25
     |
1323 |                         b"--reference\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1323:25
     |
1323 |                         b"--reference\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1326:35
     |
1326 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1332:48
     |
1332 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                                                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1335:21
     |
1335 |                     0 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1337:25
     |
1337 | /                         b"you must specify a relative %s with %s\0" as *const u8
1338 | |                             as *const libc::c_char,
     | |__________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1337:25
     |
1337 |                         b"you must specify a relative %s with %s\0" as *const u8
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1341:25
     |
1341 |                         0 as libc::c_int,
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1342:25
     |
1342 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1342:25
     |
1342 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1345:25
     |
1345 |                         1 as libc::c_int,
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1346:25
     |
1346 |                         b"--reference\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1346:25
     |
1346 |                         b"--reference\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1349:35
     |
1349 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1357:8
     |
1357 |     if block_mode as libc::c_int != 0 && !got_size {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1360:17
     |
1360 |                 0 as libc::c_int,
     |                 ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1361:17
     |
1361 |                 0 as libc::c_int,
     |                 ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1363:21
     |
1363 | /                     b"%s was specified but %s was not\0" as *const u8
1364 | |                         as *const libc::c_char,
     | |______________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1363:21
     |
1363 |                     b"%s was specified but %s was not\0" as *const u8
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1367:21
     |
1367 |                     0 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1368:21
     |
1368 |                     b"--io-blocks\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1368:21
     |
1368 |                     b"--io-blocks\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1371:21
     |
1371 |                     1 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1372:21
     |
1372 |                     b"--size\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1372:21
     |
1372 |                     b"--size\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1375:16
     |
1375 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1375:36
     |
1375 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                                    ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1380:48
     |
1380 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                                                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1383:21
     |
1383 |                     0 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1385:25
     |
1385 | /                         b"%s was specified but %s was not\0" as *const u8
1386 | |                             as *const libc::c_char,
     | |__________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1385:25
     |
1385 |                         b"%s was specified but %s was not\0" as *const u8
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1389:25
     |
1389 |                         0 as libc::c_int,
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1390:25
     |
1390 |                         b"--io-blocks\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1390:25
     |
1390 |                         b"--io-blocks\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1393:25
     |
1393 |                         1 as libc::c_int,
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1394:25
     |
1394 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1394:25
     |
1394 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1397:35
     |
1397 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1403:48
     |
1403 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                                                ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1406:21
     |
1406 |                     0 as libc::c_int,
     |                     ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1408:25
     |
1408 | /                         b"%s was specified but %s was not\0" as *const u8
1409 | |                             as *const libc::c_char,
     | |__________________________________________________^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1408:25
     |
1408 |                         b"%s was specified but %s was not\0" as *const u8
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1412:25
     |
1412 |                         0 as libc::c_int,
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1413:25
     |
1413 |                         b"--io-blocks\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1413:25
     |
1413 |                         b"--io-blocks\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1416:25
     |
1416 |                         1 as libc::c_int,
     |                         ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1417:25
     |
1417 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1417:25
     |
1417 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1420:35
     |
1420 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1430:33
     |
1430 |     error(errstatus, 0, gettext(b"missing file operand\0".as_ptr() as *const libc::c_char));
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1445:21
     |
1445 |             gettext(b"cannot stat %s\0" as *const u8 as *const libc::c_char),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1445:21
     |
1445 |             gettext(b"cannot stat %s\0" as *const u8 as *const libc::c_char),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1452:21
     |
1452 |         file_size = metadata.len() as i64;
     |                     ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1473:21
     |
1473 |             gettext(b"cannot get the size of %s\0" as *const u8 as *const libc::c_char),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1473:21
     |
1473 |             gettext(b"cannot get the size of %s\0" as *const u8 as *const libc::c_char),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1499:41
     |
1499 |             let error_message = gettext(b"cannot open %s for writing\0" as *const u8 as *const libc::c_char);
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1499:41
     |
1499 |             let error_message = gettext(b"cannot open %s for writing\0" as *const u8 as *const libc::c_char);
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1506:41
     |
1506 |             let error_message = gettext(b"failed to close %s\0" as *const u8 as *const libc::c_char);
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1506:41
     |
1506 |             let error_message = gettext(b"failed to close %s\0" as *const u8 as *const libc::c_char);
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: binding's name is too similar to existing binding
    --> src/truncate.rs:1521:9
     |
1521 |     let argc = args.len() as libc::c_int;
     |         ^^^^
     |
note: existing binding defined here
    --> src/truncate.rs:1517:9
     |
1517 |     let args: Vec<CString> = ::std::env::args()
     |         ^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: binding's name is too similar to existing binding
    --> src/truncate.rs:1522:9
     |
1522 |     let argv: Vec<*mut libc::c_char> = args.iter()
     |         ^^^^
     |
note: existing binding defined here
    --> src/truncate.rs:1517:9
     |
1517 |     let args: Vec<CString> = ::std::env::args()
     |         ^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#similar_names

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1521:16
     |
1521 |     let argc = args.len() as libc::c_int;
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1523:21
     |
1523 |         .map(|cstr| cstr.as_ptr() as *mut libc::c_char)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1527:40
     |
1527 |     let status = unsafe { main_0(argc, argv.as_ptr() as *mut *mut libc::c_char) };
     |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: using a potentially dangerous silent `as` conversion
    --> src/truncate.rs:1528:26
     |
1528 |     ::std::process::exit(status as i32);
     |                          ^^^^^^^^^^^^^
     |
     = help: consider using a safe wrapper for this conversion
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions

warning: unreachable statement
   --> src/truncate.rs:870:5
    |
868 |     unreachable!();
    |     -------------- any code following this expression is unreachable
869 |     
870 |     let __errstatus: i32 = 0;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement
    |
    = note: `#[warn(unreachable_code)]` on by default

warning: unreachable statement
   --> src/truncate.rs:881:1
    |
857 |     unreachable!();
    |     -------------- any code following this expression is unreachable
...
881 | return false;
    | ^^^^^^^^^^^^^ unreachable statement

warning: unused variable: `fname`
    --> src/truncate.rs:1487:9
     |
1487 | let mut fname: *const libc::c_char = std::ptr::null();
     |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_fname`
     |
     = note: `#[warn(unused_variables)]` on by default

warning: unnecessary `unsafe` block
   --> src/truncate.rs:395:96
    |
395 | ...   unsafe { CStr::from_ptr(gettext(format!("Try '{} --help' for more information.\n", unsafe { CStr::from_ptr(program_name).to_string_...
    |       ------ because it's nested under this `unsafe` block                               ^^^^^^ unnecessary `unsafe` block
    |
    = note: `#[warn(unused_unsafe)]` on by default

warning: unnecessary `unsafe` block
   --> src/truncate.rs:400:86
    |
400 | ...   unsafe { CStr::from_ptr(gettext(format!("Usage: {} OPTION... FILE...\n", unsafe { CStr::from_ptr(program_name).to_string_lossy() })...
    |       ------ because it's nested under this `unsafe` block                     ^^^^^^ unnecessary `unsafe` block

warning: unnecessary `unsafe` block
    --> src/truncate.rs:1438:24
     |
999  | / unsafe fn main_0(
1000 | |     mut argc: libc::c_int,
1001 | |     mut argv: *mut *mut libc::c_char,
1002 | | ) -> libc::c_int {
     | |________________- because it's nested under this `unsafe` fn
...
1438 |       let ref_file_str = unsafe { std::ffi::CStr::from_ptr(ref_file) };
     |                          ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`
     = note: `#[allow(unsafe_op_in_unsafe_fn)]` on by default

warning: unnecessary `unsafe` block
    --> src/truncate.rs:1456:28
     |
999  | / unsafe fn main_0(
1000 | |     mut argc: libc::c_int,
1001 | |     mut argv: *mut *mut libc::c_char,
1002 | | ) -> libc::c_int {
     | |________________- because it's nested under this `unsafe` fn
...
1456 |               let file_end = unsafe { lseek(ref_fd, 0, 2) };
     |                              ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/truncate.rs:1458:13
     |
999  | / unsafe fn main_0(
1000 | |     mut argc: libc::c_int,
1001 | |     mut argv: *mut *mut libc::c_char,
1002 | | ) -> libc::c_int {
     | |________________- because it's nested under this `unsafe` fn
...
1458 |               unsafe { close(ref_fd) };
     |               ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/truncate.rs:1490:23
     |
999  | / unsafe fn main_0(
1000 | |     mut argc: libc::c_int,
1001 | |     mut argv: *mut *mut libc::c_char,
1002 | | ) -> libc::c_int {
     | |________________- because it's nested under this `unsafe` fn
...
1490 |       let fname = match unsafe { *argv } {
     |                         ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/truncate.rs:1498:27
     |
999  | / unsafe fn main_0(
1000 | |     mut argc: libc::c_int,
1001 | |     mut argv: *mut *mut libc::c_char,
1002 | | ) -> libc::c_int {
     | |________________- because it's nested under this `unsafe` fn
...
1498 |           if !(no_create && unsafe { *__errno_location() } == 2) {
     |                             ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/truncate.rs:1500:22
     |
999  | / unsafe fn main_0(
1000 | |     mut argc: libc::c_int,
1001 | |     mut argv: *mut *mut libc::c_char,
1002 | | ) -> libc::c_int {
     | |________________- because it's nested under this `unsafe` fn
...
1500 |               error(0, unsafe { *__errno_location() }, error_message, quotearg_style(shell_escape_always_quoting_style, fname));
     |                        ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: unnecessary `unsafe` block
    --> src/truncate.rs:1507:22
     |
999  | / unsafe fn main_0(
1000 | |     mut argc: libc::c_int,
1001 | |     mut argv: *mut *mut libc::c_char,
1002 | | ) -> libc::c_int {
     | |________________- because it's nested under this `unsafe` fn
...
1507 |               error(0, unsafe { *__errno_location() }, error_message, quotearg_style(shell_escape_always_quoting_style, fname));
     |                        ^^^^^^ unnecessary `unsafe` block
     |
     = note: this `unsafe` block does contain unsafe operations, but those are already allowed in an `unsafe fn`

warning: missing documentation for the crate
    --> src/truncate.rs:1:1
     |
1    | / #![allow(dead_code, mutable_transmutes, non_camel_case_types, non_snake_case, non_upper_case_globals, unused_assignments, unused_mut, unu...
2    | | #![feature(extern_types)]
3    | |
4    | |
...    |
1528 | |     ::std::process::exit(status as i32);
1529 | | }
     | |_^
     |
     = note: `-W clippy::missing-docs-in-private-items` implied by `-W clippy::restriction`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `alloc`
  --> src/truncate.rs:16:5
   |
16 | use std::ffi::CString;
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: `-W clippy::std-instead-of-alloc` implied by `-W clippy::restriction`
   = help: consider importing the item from `alloc`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_alloc

warning: used import from `std` instead of `core`
  --> src/truncate.rs:17:5
   |
17 | use std::ptr;
   |     ^^^^^^^^
   |
   = note: `-W clippy::std-instead-of-core` implied by `-W clippy::restriction`
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
  --> src/truncate.rs:20:5
   |
20 | use std::ffi::CStr;
   |     ^^^^^^^^^^^^^^
   |
   = help: consider importing the item from `core`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: exported structs should not be exhaustive
   --> src/truncate.rs:129:1
    |
129 | / pub struct _IO_FILE {
130 | |     pub _flags: libc::c_int,
131 | |     pub _IO_read_ptr: *mut libc::c_char,
132 | |     pub _IO_read_end: *mut libc::c_char,
...   |
158 | |     pub _unused2: [libc::c_char; 20],
159 | | }
    | |_^
    |
    = note: `-W clippy::exhaustive-structs` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
129 | #[non_exhaustive]
    |

warning: unnecessary structure name repetition
   --> src/truncate.rs:143:22
    |
143 |     pub _chain: *mut _IO_FILE,
    |                      ^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = note: `-W clippy::use-self` implied by `-W clippy::nursery`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: unnecessary structure name repetition
   --> src/truncate.rs:154:29
    |
154 |     pub _freeres_list: *mut _IO_FILE,
    |                             ^^^^^^^^ help: use the applicable keyword: `Self`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#use_self

warning: exported structs should not be exhaustive
   --> src/truncate.rs:166:1
    |
166 | / pub struct timespec {
167 | |     pub tv_sec: __time_t,
168 | |     pub tv_nsec: __syscall_slong_t,
169 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
166 | #[non_exhaustive]
    |

warning: exported structs should not be exhaustive
   --> src/truncate.rs:172:1
    |
172 | / pub struct option {
173 | |     pub name: *const libc::c_char,
174 | |     pub has_arg: libc::c_int,
175 | |     pub flag: *mut libc::c_int,
176 | |     pub val: libc::c_int,
177 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
172 | #[non_exhaustive]
    |

warning: exported structs should not be exhaustive
   --> src/truncate.rs:180:1
    |
180 | / pub struct stat {
181 | |     pub st_dev: __dev_t,
182 | |     pub st_ino: __ino_t,
183 | |     pub st_mode: __mode_t,
...   |
196 | |     pub __glibc_reserved: [libc::c_int; 2],
197 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
180 | #[non_exhaustive]
    |

warning: default numeric fallback might occur
   --> src/truncate.rs:200:51
    |
200 | pub const GETOPT_VERSION_CHAR: C2RustUnnamed_0 = -3;
    |                                                   ^ help: consider adding suffix: `3_i32`
    |
    = note: `-W clippy::default-numeric-fallback` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:201:48
    |
201 | pub const GETOPT_HELP_CHAR: C2RustUnnamed_0 = -2;
    |                                                ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: exported structs should not be exhaustive
   --> src/truncate.rs:204:1
    |
204 | / pub struct infomap {
205 | |     pub program: *const libc::c_char,
206 | |     pub node: *const libc::c_char,
207 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exhaustive_structs
help: try adding #[non_exhaustive]
    |
204 | #[non_exhaustive]
    |

warning: missing `return` statement
   --> src/truncate.rs:229:5
    |
229 | /     (sb.st_mode & 0o170000 as libc::c_uint == 0o100000 as libc::c_uint)
230 | |         || (sb.st_mode & 0o170000 as libc::c_uint == 0o120000 as libc::c_uint)
231 | |         || (sb.st_mode.wrapping_sub(sb.st_mode) != 0 || 0 != 0)
    | |_______________________________________________________________^
    |
    = note: `-W clippy::implicit-return` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return
help: add `return` as shown
    |
229 ~     return (sb.st_mode & 0o170000 as libc::c_uint == 0o100000 as libc::c_uint)
230 +         || (sb.st_mode & 0o170000 as libc::c_uint == 0o120000 as libc::c_uint)
231 +         || (sb.st_mode.wrapping_sub(sb.st_mode) != 0 || 0 != 0)
    |

warning: this could be a `const fn`
   --> src/truncate.rs:228:1
    |
228 | / fn usable_st_size(sb: &stat) -> bool {
229 | |     (sb.st_mode & 0o170000 as libc::c_uint == 0o100000 as libc::c_uint)
230 | |         || (sb.st_mode & 0o170000 as libc::c_uint == 0o120000 as libc::c_uint)
231 | |         || (sb.st_mode.wrapping_sub(sb.st_mode) != 0 || 0 != 0)
232 | | }
    | |_^
    |
    = note: `-W clippy::missing-const-for-fn` implied by `-W clippy::nursery`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: missing documentation for a type alias
   --> src/truncate.rs:100:1
    |
100 | pub type __intmax_t = libc::c_long;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:231:57
    |
231 |         || (sb.st_mode.wrapping_sub(sb.st_mode) != 0 || 0 != 0)
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
   --> src/truncate.rs:101:1
    |
101 | pub type __dev_t = libc::c_ulong;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:231:62
    |
231 |         || (sb.st_mode.wrapping_sub(sb.st_mode) != 0 || 0 != 0)
    |                                                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a type alias
   --> src/truncate.rs:102:1
    |
102 | pub type __uid_t = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: equal expressions as operands to `!=`
   --> src/truncate.rs:231:57
    |
231 |         || (sb.st_mode.wrapping_sub(sb.st_mode) != 0 || 0 != 0)
    |                                                         ^^^^^^
    |
    = note: `-W clippy::eq-op` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: missing documentation for a type alias
   --> src/truncate.rs:103:1
    |
103 | pub type __gid_t = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/truncate.rs:104:1
    |
104 | pub type __ino_t = libc::c_ulong;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/truncate.rs:105:1
    |
105 | pub type __mode_t = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/truncate.rs:106:1
    |
106 | pub type __nlink_t = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/truncate.rs:107:1
    |
107 | pub type __off_t = libc::c_long;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/truncate.rs:108:1
    |
108 | pub type __off64_t = libc::c_long;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/truncate.rs:109:1
    |
109 | pub type __time_t = libc::c_long;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/truncate.rs:110:1
    |
110 | pub type __blksize_t = libc::c_int;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/truncate.rs:111:1
    |
111 | pub type __blkcnt_t = libc::c_long;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/truncate.rs:112:1
    |
112 | pub type __syscall_slong_t = libc::c_long;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/truncate.rs:113:1
    |
113 | pub type C2RustUnnamed = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:114:1
    |
114 | pub const _ISalnum: C2RustUnnamed = 8;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:115:1
    |
115 | pub const _ISpunct: C2RustUnnamed = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:116:1
    |
116 | pub const _IScntrl: C2RustUnnamed = 2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:117:1
    |
117 | pub const _ISblank: C2RustUnnamed = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:118:1
    |
118 | pub const _ISgraph: C2RustUnnamed = 32768;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:119:1
    |
119 | pub const _ISprint: C2RustUnnamed = 16384;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:120:1
    |
120 | pub const _ISspace: C2RustUnnamed = 8192;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:121:1
    |
121 | pub const _ISxdigit: C2RustUnnamed = 4096;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:122:1
    |
122 | pub const _ISdigit: C2RustUnnamed = 2048;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:123:1
    |
123 | pub const _ISalpha: C2RustUnnamed = 1024;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:124:1
    |
124 | pub const _ISlower: C2RustUnnamed = 512;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:125:1
    |
125 | pub const _ISupper: C2RustUnnamed = 256;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a type alias
   --> src/truncate.rs:126:1
    |
126 | pub type size_t = libc::c_ulong;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct
   --> src/truncate.rs:129:1
    |
129 | / pub struct _IO_FILE {
130 | |     pub _flags: libc::c_int,
131 | |     pub _IO_read_ptr: *mut libc::c_char,
132 | |     pub _IO_read_end: *mut libc::c_char,
...   |
158 | |     pub _unused2: [libc::c_char; 20],
159 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:130:5
    |
130 |     pub _flags: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:131:5
    |
131 |     pub _IO_read_ptr: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:132:5
    |
132 |     pub _IO_read_end: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:133:5
    |
133 |     pub _IO_read_base: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:134:5
    |
134 |     pub _IO_write_base: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:135:5
    |
135 |     pub _IO_write_ptr: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:136:5
    |
136 |     pub _IO_write_end: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:137:5
    |
137 |     pub _IO_buf_base: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:138:5
    |
138 |     pub _IO_buf_end: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:139:5
    |
139 |     pub _IO_save_base: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:140:5
    |
140 |     pub _IO_backup_base: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:237:10
    |
237 |         (CStr::from_bytes_with_nul(b"[\0").unwrap(), CStr::from_bytes_with_nul(b"test invocation\0").unwrap()),
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::unwrap-used` implied by `-W clippy::restriction`
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:141:5
    |
141 |     pub _IO_save_end: *mut libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:237:54
    |
237 |         (CStr::from_bytes_with_nul(b"[\0").unwrap(), CStr::from_bytes_with_nul(b"test invocation\0").unwrap()),
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:142:5
    |
142 |     pub _markers: *mut _IO_marker,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:238:10
    |
238 |         (CStr::from_bytes_with_nul(b"coreutils\0").unwrap(), CStr::from_bytes_with_nul(b"Multi-call invocation\0").unwrap()),
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:143:5
    |
143 |     pub _chain: *mut _IO_FILE,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:238:62
    |
238 |         (CStr::from_bytes_with_nul(b"coreutils\0").unwrap(), CStr::from_bytes_with_nul(b"Multi-call invocation\0").unwrap()),
    |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:144:5
    |
144 |     pub _fileno: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:239:10
    |
239 |         (CStr::from_bytes_with_nul(b"sha224sum\0").unwrap(), CStr::from_bytes_with_nul(b"sha2 utilities\0").unwrap()),
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:145:5
    |
145 |     pub _flags2: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:239:62
    |
239 |         (CStr::from_bytes_with_nul(b"sha224sum\0").unwrap(), CStr::from_bytes_with_nul(b"sha2 utilities\0").unwrap()),
    |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:240:10
    |
240 |         (CStr::from_bytes_with_nul(b"sha256sum\0").unwrap(), CStr::from_bytes_with_nul(b"sha2 utilities\0").unwrap()),
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:146:5
    |
146 |     pub _old_offset: __off_t,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:147:5
    |
147 |     pub _cur_column: libc::c_ushort,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:240:62
    |
240 |         (CStr::from_bytes_with_nul(b"sha256sum\0").unwrap(), CStr::from_bytes_with_nul(b"sha2 utilities\0").unwrap()),
    |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:148:5
    |
148 |     pub _vtable_offset: libc::c_schar,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:241:10
    |
241 |         (CStr::from_bytes_with_nul(b"sha384sum\0").unwrap(), CStr::from_bytes_with_nul(b"sha2 utilities\0").unwrap()),
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:149:5
    |
149 |     pub _shortbuf: [libc::c_char; 1],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:241:62
    |
241 |         (CStr::from_bytes_with_nul(b"sha384sum\0").unwrap(), CStr::from_bytes_with_nul(b"sha2 utilities\0").unwrap()),
    |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:150:5
    |
150 |     pub _lock: *mut libc::c_void,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:242:10
    |
242 |         (CStr::from_bytes_with_nul(b"sha512sum\0").unwrap(), CStr::from_bytes_with_nul(b"sha2 utilities\0").unwrap()),
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:151:5
    |
151 |     pub _offset: __off64_t,
    |     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:242:62
    |
242 |         (CStr::from_bytes_with_nul(b"sha512sum\0").unwrap(), CStr::from_bytes_with_nul(b"sha2 utilities\0").unwrap()),
    |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:152:5
    |
152 |     pub _codecvt: *mut _IO_codecvt,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:243:10
    |
243 |         (CStr::from_bytes_with_nul(b"\0").unwrap(), CStr::from_bytes_with_nul(b"\0").unwrap()),
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:153:5
    |
153 |     pub _wide_data: *mut _IO_wide_data,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:243:53
    |
243 |         (CStr::from_bytes_with_nul(b"\0").unwrap(), CStr::from_bytes_with_nul(b"\0").unwrap()),
    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:154:5
    |
154 |     pub _freeres_list: *mut _IO_FILE,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this loop could be written as a `for` loop
   --> src/truncate.rs:249:5
    |
249 |     while let Some(&(prog, ref n)) = map_prog.next() {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `for &(prog, ref n) in map_prog`
    |
    = note: `-W clippy::while-let-on-iterator` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_on_iterator

warning: missing documentation for a struct field
   --> src/truncate.rs:155:5
    |
155 |     pub _freeres_buf: *mut libc::c_void,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:256:20
    |
256 |     let help_url = CStr::from_bytes_with_nul(b"https://www.gnu.org/software/coreutils/\0").unwrap();
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:259:9
    |
259 |         CStr::from_bytes_with_nul(b"GNU coreutils\0").unwrap().to_string_lossy(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a struct field
   --> src/truncate.rs:156:5
    |
156 |     pub __pad5: size_t,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:264:5
    |
264 |     unsafe {
    |     ^^^^^^^^
    |
    = note: `-W clippy::undocumented-unsafe-blocks` implied by `-W clippy::restriction`
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
   --> src/truncate.rs:157:5
    |
157 |     pub _mode: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a struct field
   --> src/truncate.rs:158:5
    |
158 |     pub _unused2: [libc::c_char; 20],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/truncate.rs:265:36
    |
265 |         lc_messages = setlocale(5, std::ptr::null());
    |                                    ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
   --> src/truncate.rs:269:31
    |
269 |         let lc_messages_str = unsafe { CStr::from_ptr(lc_messages) };
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: use of `writeln!(stdout(), ...).unwrap()`
   --> src/truncate.rs:271:13
    |
271 | / ...   writeln!(
272 | | ...       std::io::stdout(),
273 | | ...       "{}",
274 | | ...       CStr::from_bytes_with_nul(b"Report any translation bugs to <https://translationproject.org/team/>\n\0").unwrap().to_string_lossy()
275 | | ...   ).unwrap();
    | |________________^
    |
    = note: `-W clippy::explicit-write` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_write
help: try this
    |
271 ~             println!("{}",
272 ~                 CStr::from_bytes_with_nul(b"Report any translation bugs to <https://translationproject.org/team/>\n\0").unwrap().to_string_lossy());
    |

warning: missing documentation for a type alias
   --> src/truncate.rs:160:1
    |
160 | pub type _IO_lock_t = ();
    | ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:274:17
    |
274 | ...   CStr::from_bytes_with_nul(b"Report any translation bugs to <https://translationproject.org/team/>\n\0").unwrap().to_string_lossy()
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a type alias
   --> src/truncate.rs:161:1
    |
161 | pub type FILE = _IO_FILE;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:280:9
    |
280 |         CStr::from_bytes_with_nul(b"test\0").unwrap()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a type alias
   --> src/truncate.rs:162:1
    |
162 | pub type off_t = __off_t;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:292:9
    |
292 |         CStr::from_bytes_with_nul(b" invocation\0").unwrap().to_string_lossy()
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a type alias
   --> src/truncate.rs:163:1
    |
163 | pub type ptrdiff_t = libc::c_long;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:299:9
    |
299 |         unsafe { CStr::from_ptr(node) }.to_string_lossy(),
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct
   --> src/truncate.rs:166:1
    |
166 | / pub struct timespec {
167 | |     pub tv_sec: __time_t,
168 | |     pub tv_nsec: __syscall_slong_t,
169 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this pattern creates a reference to a reference
   --> src/truncate.rs:249:28
    |
249 |     while let Some(&(prog, ref n)) = map_prog.next() {
    |                            ^^^^^ help: try this: `n`
    |
    = note: `-W clippy::needless-borrow` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow

warning: missing `return` statement
   --> src/truncate.rs:306:5
    |
306 |     ch as u8
    |     ^^^^^^^^ help: add `return` as shown: `return ch as u8`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: this could be a `const fn`
   --> src/truncate.rs:305:1
    |
305 | / fn to_uchar(ch: i8) -> u8 {
306 | |     ch as u8
307 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_const_for_fn

warning: missing documentation for a struct field
   --> src/truncate.rs:167:5
    |
167 |     pub tv_sec: __time_t,
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `i8` to `u8` may lose the sign of the value
   --> src/truncate.rs:306:5
    |
306 |     ch as u8
    |     ^^^^^^^^
    |
    = note: `-W clippy::cast-sign-loss` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: missing documentation for a struct field
   --> src/truncate.rs:168:5
    |
168 |     pub tv_nsec: __syscall_slong_t,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:318:30
    |
318 |     let translated_message = unsafe { gettext(message.as_ptr() as *const libc::c_char) };
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct
   --> src/truncate.rs:172:1
    |
172 | / pub struct option {
173 | |     pub name: *const libc::c_char,
174 | |     pub has_arg: libc::c_int,
175 | |     pub flag: *mut libc::c_int,
176 | |     pub val: libc::c_int,
177 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:318:47
    |
318 |     let translated_message = unsafe { gettext(message.as_ptr() as *const libc::c_char) };
    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `message.as_ptr().cast::<i8>()`
    |
    = note: `-W clippy::ptr-as-ptr` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/truncate.rs:173:5
    |
173 |     pub name: *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: non-binding `let` on a type that implements `Drop`
   --> src/truncate.rs:319:5
    |
319 |     let _ = std::io::stdout().write_all(unsafe { std::ffi::CStr::from_ptr(translated_message).to_bytes() });
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::let-underscore-drop` implied by `-W clippy::pedantic`
    = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_underscore_drop

warning: missing documentation for a struct field
   --> src/truncate.rs:174:5
    |
174 |     pub has_arg: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:319:41
    |
319 |     let _ = std::io::stdout().write_all(unsafe { std::ffi::CStr::from_ptr(translated_message).to_bytes() });
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
   --> src/truncate.rs:175:5
    |
175 |     pub flag: *mut libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used import from `std` instead of `core`
   --> src/truncate.rs:319:50
    |
319 |     let _ = std::io::stdout().write_all(unsafe { std::ffi::CStr::from_ptr(translated_message).to_bytes() });
    |                                                  ^^^^^^^^^^^^^^
    |
    = help: consider importing the item from `core`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: missing documentation for a struct field
   --> src/truncate.rs:176:5
    |
176 |     pub val: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
   --> src/truncate.rs:333:9
    |
327 | /         let mut init = option {
328 | |             name: b"no-create\0" as *const u8 as *const libc::c_char,
329 | |             has_arg: 0 as libc::c_int,
330 | |             flag: 0 as *const libc::c_int as *mut libc::c_int,
331 | |             val: 'c' as i32,
332 | |         };
    | |__________- unnecessary `let` binding
333 |           init
    |           ^^^^
    |
    = note: `-W clippy::let-and-return` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
327 ~         
328 ~         option {
329 +             name: b"no-create\0" as *const u8 as *const libc::c_char,
330 +             has_arg: 0 as libc::c_int,
331 +             flag: 0 as *const libc::c_int as *mut libc::c_int,
332 +             val: 'c' as i32,
333 +         }
    |

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:328:19
    |
328 |             name: b"no-create\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"no-create\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct
   --> src/truncate.rs:180:1
    |
180 | / pub struct stat {
181 | |     pub st_dev: __dev_t,
182 | |     pub st_ino: __ino_t,
183 | |     pub st_mode: __mode_t,
...   |
196 | |     pub __glibc_reserved: [libc::c_int; 2],
197 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
   --> src/truncate.rs:342:9
    |
336 | /         let mut init = option {
337 | |             name: b"io-blocks\0" as *const u8 as *const libc::c_char,
338 | |             has_arg: 0 as libc::c_int,
339 | |             flag: 0 as *const libc::c_int as *mut libc::c_int,
340 | |             val: 'o' as i32,
341 | |         };
    | |__________- unnecessary `let` binding
342 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
336 ~         
337 ~         option {
338 +             name: b"io-blocks\0" as *const u8 as *const libc::c_char,
339 +             has_arg: 0 as libc::c_int,
340 +             flag: 0 as *const libc::c_int as *mut libc::c_int,
341 +             val: 'o' as i32,
342 +         }
    |

warning: missing documentation for a struct field
   --> src/truncate.rs:181:5
    |
181 |     pub st_dev: __dev_t,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:337:19
    |
337 |             name: b"io-blocks\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"io-blocks\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/truncate.rs:182:5
    |
182 |     pub st_ino: __ino_t,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
   --> src/truncate.rs:351:9
    |
345 | /         let mut init = option {
346 | |             name: b"reference\0" as *const u8 as *const libc::c_char,
347 | |             has_arg: 1 as libc::c_int,
348 | |             flag: 0 as *const libc::c_int as *mut libc::c_int,
349 | |             val: 'r' as i32,
350 | |         };
    | |__________- unnecessary `let` binding
351 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
345 ~         
346 ~         option {
347 +             name: b"reference\0" as *const u8 as *const libc::c_char,
348 +             has_arg: 1 as libc::c_int,
349 +             flag: 0 as *const libc::c_int as *mut libc::c_int,
350 +             val: 'r' as i32,
351 +         }
    |

warning: missing documentation for a struct field
   --> src/truncate.rs:183:5
    |
183 |     pub st_mode: __mode_t,
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:346:19
    |
346 |             name: b"reference\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"reference\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/truncate.rs:184:5
    |
184 |     pub st_nlink: __nlink_t,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
   --> src/truncate.rs:360:9
    |
354 | /         let mut init = option {
355 | |             name: b"size\0" as *const u8 as *const libc::c_char,
356 | |             has_arg: 1 as libc::c_int,
357 | |             flag: 0 as *const libc::c_int as *mut libc::c_int,
358 | |             val: 's' as i32,
359 | |         };
    | |__________- unnecessary `let` binding
360 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
354 ~         
355 ~         option {
356 +             name: b"size\0" as *const u8 as *const libc::c_char,
357 +             has_arg: 1 as libc::c_int,
358 +             flag: 0 as *const libc::c_int as *mut libc::c_int,
359 +             val: 's' as i32,
360 +         }
    |

warning: missing documentation for a struct field
   --> src/truncate.rs:185:5
    |
185 |     pub st_uid: __uid_t,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:355:19
    |
355 |             name: b"size\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"size\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/truncate.rs:186:5
    |
186 |     pub st_gid: __gid_t,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
   --> src/truncate.rs:369:9
    |
363 | /         let mut init = option {
364 | |             name: b"help\0" as *const u8 as *const libc::c_char,
365 | |             has_arg: 0 as libc::c_int,
366 | |             flag: 0 as *const libc::c_int as *mut libc::c_int,
367 | |             val: GETOPT_HELP_CHAR as libc::c_int,
368 | |         };
    | |__________- unnecessary `let` binding
369 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
363 ~         
364 ~         option {
365 +             name: b"help\0" as *const u8 as *const libc::c_char,
366 +             has_arg: 0 as libc::c_int,
367 +             flag: 0 as *const libc::c_int as *mut libc::c_int,
368 +             val: GETOPT_HELP_CHAR as libc::c_int,
369 +         }
    |

warning: missing documentation for a struct field
   --> src/truncate.rs:187:5
    |
187 |     pub st_rdev: __dev_t,
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:364:19
    |
364 |             name: b"help\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"help\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/truncate.rs:188:5
    |
188 |     pub __pad1: __dev_t,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
   --> src/truncate.rs:378:9
    |
372 | /         let mut init = option {
373 | |             name: b"version\0" as *const u8 as *const libc::c_char,
374 | |             has_arg: 0 as libc::c_int,
375 | |             flag: 0 as *const libc::c_int as *mut libc::c_int,
376 | |             val: GETOPT_VERSION_CHAR as libc::c_int,
377 | |         };
    | |__________- unnecessary `let` binding
378 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
372 ~         
373 ~         option {
374 +             name: b"version\0" as *const u8 as *const libc::c_char,
375 +             has_arg: 0 as libc::c_int,
376 +             flag: 0 as *const libc::c_int as *mut libc::c_int,
377 +             val: GETOPT_VERSION_CHAR as libc::c_int,
378 +         }
    |

warning: missing documentation for a struct field
   --> src/truncate.rs:189:5
    |
189 |     pub st_size: __off_t,
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:373:19
    |
373 |             name: b"version\0" as *const u8 as *const libc::c_char,
    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"version\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/truncate.rs:190:5
    |
190 |     pub st_blksize: __blksize_t,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: returning the result of a `let` binding from a block
   --> src/truncate.rs:387:9
    |
381 | /         let mut init = option {
382 | |             name: 0 as *const libc::c_char,
383 | |             has_arg: 0 as libc::c_int,
384 | |             flag: 0 as *const libc::c_int as *mut libc::c_int,
385 | |             val: 0 as libc::c_int,
386 | |         };
    | |__________- unnecessary `let` binding
387 |           init
    |           ^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
help: return the expression directly
    |
381 ~         
382 ~         option {
383 +             name: 0 as *const libc::c_char,
384 +             has_arg: 0 as libc::c_int,
385 +             flag: 0 as *const libc::c_int as *mut libc::c_int,
386 +             val: 0 as libc::c_int,
387 +         }
    |

warning: missing documentation for a struct field
   --> src/truncate.rs:191:5
    |
191 |     pub __pad2: libc::c_int,
    |     ^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: docs for function which may panic missing `# Panics` section
   --> src/truncate.rs:391:1
    |
391 | / pub fn usage(status: i32) {
392 | |     if status != 0 {
393 | |         eprintln!(
394 | |             "{}", 
...   |
434 | |     std::process::exit(status);
435 | | }
    | |_^
    |
    = note: `-W clippy::missing-panics-doc` implied by `-W clippy::pedantic`
note: first possible panic found here
   --> src/truncate.rs:432:29
    |
432 |         emit_ancillary_info(CStr::from_bytes_with_nul(b"truncate\0").unwrap());
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_panics_doc

warning: missing documentation for a struct field
   --> src/truncate.rs:192:5
    |
192 |     pub st_blocks: __blkcnt_t,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:392:18
    |
392 |     if status != 0 {
    |                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a struct field
   --> src/truncate.rs:193:5
    |
193 |     pub st_atim: timespec,
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unnecessary `!=` operation
   --> src/truncate.rs:392:5
    |
392 | /     if status != 0 {
393 | |         eprintln!(
394 | |             "{}", 
395 | |             unsafe { CStr::from_ptr(gettext(format!("Try '{} --help' for more information.\n", unsafe { CStr::from_ptr(program_name).to_s...
...   |
432 | |         emit_ancillary_info(CStr::from_bytes_with_nul(b"truncate\0").unwrap());
433 | |     }
    | |_____^
    |
    = note: `-W clippy::if-not-else` implied by `-W clippy::pedantic`
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: missing documentation for a struct field
   --> src/truncate.rs:194:5
    |
194 |     pub st_mtim: timespec,
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:395:13
    |
395 | ...   unsafe { CStr::from_ptr(gettext(format!("Try '{} --help' for more information.\n", unsafe { CStr::from_ptr(program_name).to_string_lossy() }).as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
   --> src/truncate.rs:195:5
    |
195 |     pub st_ctim: timespec,
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:395:45
    |
395 | ...xt(format!("Try '{} --help' for more information.\n", unsafe { CStr::from_ptr(program_name).to_string_lossy() }).as_ptr() as *const i8))....
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `format!("Try '{} --help' for more information.\n", unsafe { CStr::from_ptr(program_name).to_string_lossy() }).as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/truncate.rs:196:5
    |
196 |     pub __glibc_reserved: [libc::c_int; 2],
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:395:96
    |
395 | ...'{} --help' for more information.\n", unsafe { CStr::from_ptr(program_name).to_string_lossy() }).as_ptr() as *const i8)).to_string_los...
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
   --> src/truncate.rs:198:1
    |
198 | pub type intmax_t = __intmax_t;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:400:13
    |
400 | ...   unsafe { CStr::from_ptr(gettext(format!("Usage: {} OPTION... FILE...\n", unsafe { CStr::from_ptr(program_name).to_string_lossy() }).as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
   --> src/truncate.rs:199:1
    |
199 | pub type C2RustUnnamed_0 = libc::c_int;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:200:1
    |
200 | pub const GETOPT_VERSION_CHAR: C2RustUnnamed_0 = -3;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:400:45
    |
400 | ...text(format!("Usage: {} OPTION... FILE...\n", unsafe { CStr::from_ptr(program_name).to_string_lossy() }).as_ptr() as *const i8)).to_st...
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `format!("Usage: {} OPTION... FILE...\n", unsafe { CStr::from_ptr(program_name).to_string_lossy() }).as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/truncate.rs:400:86
    |
400 | ...mat!("Usage: {} OPTION... FILE...\n", unsafe { CStr::from_ptr(program_name).to_string_lossy() }).as_ptr() as *const i8)).to_string_los...
    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/truncate.rs:201:1
    |
201 | pub const GETOPT_HELP_CHAR: C2RustUnnamed_0 = -2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:404:13
    |
404 | ...   unsafe { CStr::from_ptr(gettext("Shrink or extend the size of each FILE to the specified size\n\nA FILE argument that does not exist is created.\n\nIf a FILE is larger than the specified size, the extra data is lost.\nIf a FILE is shorter, it is extended and the sparse extended part (hole)\nreads as zero bytes.\n".as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:404:45
    |
404 | ...xt("Shrink or extend the size of each FILE to the specified size\n\nA FILE argument that does not exist is created.\n\nIf a FILE is larger than the specified size, the extra data is lost.\nIf a FILE is shorter, it is extended and the sparse extended part (hole)\nreads as zero bytes.\n".as_ptr() as *const i8))....
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"Shrink or extend the size of each FILE to the specified size\n\nA FILE argument that does not exist is created.\n\nIf a FILE is larger than the specified size, the extra data is lost.\nIf a FILE is shorter, it is extended and the sparse extended part (hole)\nreads as zero bytes.\n".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct
   --> src/truncate.rs:204:1
    |
204 | / pub struct infomap {
205 | |     pub program: *const libc::c_char,
206 | |     pub node: *const libc::c_char,
207 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:409:13
    |
409 |             unsafe { CStr::from_ptr(gettext("  -c, --no-create        do not create any files\n".as_ptr() as *const i8)).to_string_lossy() }
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:409:45
    |
409 |             unsafe { CStr::from_ptr(gettext("  -c, --no-create        do not create any files\n".as_ptr() as *const i8)).to_string_lossy() }
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"  -c, --no-create        do not create any files\n".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a struct field
   --> src/truncate.rs:205:5
    |
205 |     pub program: *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:413:13
    |
413 | ...   unsafe { CStr::from_ptr(gettext("  -o, --io-blocks        treat SIZE as number of IO blocks instead of bytes\n".as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a struct field
   --> src/truncate.rs:206:5
    |
206 |     pub node: *const libc::c_char,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:413:45
    |
413 | ..._ptr(gettext("  -o, --io-blocks        treat SIZE as number of IO blocks instead of bytes\n".as_ptr() as *const i8)).to_string_lossy() }
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"  -o, --io-blocks        treat SIZE as number of IO blocks instead of bytes\n".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
   --> src/truncate.rs:417:13
    |
417 | ...   unsafe { CStr::from_ptr(gettext("  -r, --reference=RFILE  base size on RFILE\n  -s, --size=SIZE        set or adjust the file size by SIZE bytes\n".as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a type alias
   --> src/truncate.rs:208:1
    |
208 | pub type quoting_style = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:209:1
    |
209 | pub const custom_quoting_style: quoting_style = 10;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:417:45
    |
417 | ...xt("  -r, --reference=RFILE  base size on RFILE\n  -s, --size=SIZE        set or adjust the file size by SIZE bytes\n".as_ptr() as *const i8))....
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"  -r, --reference=RFILE  base size on RFILE\n  -s, --size=SIZE        set or adjust the file size by SIZE bytes\n".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/truncate.rs:210:1
    |
210 | pub const clocale_quoting_style: quoting_style = 9;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:421:13
    |
421 |             unsafe { CStr::from_ptr(gettext("      --help        display this help and exit\n".as_ptr() as *const i8)).to_string_lossy() }
    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/truncate.rs:211:1
    |
211 | pub const locale_quoting_style: quoting_style = 8;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:421:45
    |
421 |             unsafe { CStr::from_ptr(gettext("      --help        display this help and exit\n".as_ptr() as *const i8)).to_string_lossy() }
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"      --help        display this help and exit\n".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/truncate.rs:212:1
    |
212 | pub const escape_quoting_style: quoting_style = 7;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:425:13
    |
425 | ...   unsafe { CStr::from_ptr(gettext("      --version     output version information and exit\n".as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:425:45
    |
425 | ...tr::from_ptr(gettext("      --version     output version information and exit\n".as_ptr() as *const i8)).to_string_lossy() }
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"      --version     output version information and exit\n".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/truncate.rs:213:1
    |
213 | pub const c_maybe_quoting_style: quoting_style = 6;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unsafe block missing a safety comment
   --> src/truncate.rs:430:13
    |
430 | ...   unsafe { CStr::from_ptr(gettext("\nSIZE may also be prefixed by one of the following modifying characters:\n'+' extend by, '-' reduce by, '<' at most, '>' at least,\n'/' round down to multiple of, '%' round up to multiple of.\n".as_ptr() as *const i8)).to_string_lossy() }
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: consider adding a safety comment on the preceding line
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing documentation for a constant
   --> src/truncate.rs:214:1
    |
214 | pub const c_quoting_style: quoting_style = 5;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:215:1
    |
215 | pub const shell_escape_always_quoting_style: quoting_style = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:430:45
    |
430 | ...xt("\nSIZE may also be prefixed by one of the following modifying characters:\n'+' extend by, '-' reduce by, '<' at most, '>' at least,\n'/' round down to multiple of, '%' round up to multiple of.\n".as_ptr() as *const i8))....
    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `"\nSIZE may also be prefixed by one of the following modifying characters:\n'+' extend by, '-' reduce by, '<' at most, '>' at least,\n'/' round down to multiple of, '%' round up to multiple of.\n".as_ptr().cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: missing documentation for a constant
   --> src/truncate.rs:216:1
    |
216 | pub const shell_escape_quoting_style: quoting_style = 3;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: used `unwrap()` on `a Result` value
   --> src/truncate.rs:432:29
    |
432 |         emit_ancillary_info(CStr::from_bytes_with_nul(b"truncate\0").unwrap());
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: missing documentation for a constant
   --> src/truncate.rs:217:1
    |
217 | pub const shell_always_quoting_style: quoting_style = 2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: usage of `process::exit`
   --> src/truncate.rs:434:5
    |
434 |     std::process::exit(status);
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::exit` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exit

warning: missing documentation for a constant
   --> src/truncate.rs:218:1
    |
218 | pub const shell_quoting_style: quoting_style = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: the function has a cognitive complexity of (85/25)
   --> src/truncate.rs:437:22
    |
437 | unsafe extern "C" fn do_ftruncate(
    |                      ^^^^^^^^^^^^
    |
    = note: `-W clippy::cognitive-complexity` implied by `-W clippy::nursery`
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: missing documentation for a constant
   --> src/truncate.rs:219:1
    |
219 | pub const literal_quoting_style: quoting_style = 0;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: this function has too many lines (546/100)
   --> src/truncate.rs:437:1
    |
437 | / unsafe extern "C" fn do_ftruncate(
438 | |     mut fd: libc::c_int,
439 | |     mut fname: *const libc::c_char,
440 | |     mut ssize: off_t,
...   |
997 | |     return 1 as libc::c_int != 0;
998 | | }
    | |_^
    |
    = note: `-W clippy::too-many-lines` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: missing documentation for a type alias
   --> src/truncate.rs:220:1
    |
220 | pub type rel_mode_t = libc::c_uint;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: missing documentation for a constant
   --> src/truncate.rs:221:1
    |
221 | pub const rm_rup: rel_mode_t = 5;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: unneeded `return` statement
   --> src/truncate.rs:997:5
    |
997 |     return 1 as libc::c_int != 0;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `1 as libc::c_int != 0`
    |
    = note: `-W clippy::needless-return` implied by `-W clippy::all`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: missing documentation for a constant
   --> src/truncate.rs:222:1
    |
222 | pub const rm_rdn: rel_mode_t = 4;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:460:28
    |
460 |         __glibc_reserved: [0; 2],
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/truncate.rs:223:1
    |
223 | pub const rm_max: rel_mode_t = 3;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:463:38
    |
463 |     if (block_mode as libc::c_int != 0
    |                                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/truncate.rs:224:1
    |
224 | pub const rm_min: rel_mode_t = 2;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:464:53
    |
464 |         || rel_mode as libc::c_uint != 0 && rsize < 0 as libc::c_int as libc::c_long)
    |                                                     ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/truncate.rs:225:1
    |
225 | pub const rm_rel: rel_mode_t = 1;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:465:34
    |
465 |         && fstat(fd, &mut sb) != 0 as libc::c_int
    |                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a constant
   --> src/truncate.rs:226:1
    |
226 | pub const rm_abs: rel_mode_t = 0;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:467:12
    |
467 |         if 0 != 0 {
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:467:17
    |
467 |         if 0 != 0 {
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/truncate.rs:228:1
    |
228 | / fn usable_st_size(sb: &stat) -> bool {
229 | |     (sb.st_mode & 0o170000 as libc::c_uint == 0o100000 as libc::c_uint)
230 | |         || (sb.st_mode & 0o170000 as libc::c_uint == 0o120000 as libc::c_uint)
231 | |         || (sb.st_mode.wrapping_sub(sb.st_mode) != 0 || 0 != 0)
232 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:474:16
    |
474 |             if 0 as libc::c_int != 0 as libc::c_int {
    |                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:474:36
    |
474 |             if 0 as libc::c_int != 0 as libc::c_int {
    |                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:486:35
    |
486 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:499:35
    |
499 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:505:16
    |
505 |         return 0 as libc::c_int != 0;
    |                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:505:36
    |
505 |         return 0 as libc::c_int != 0;
    |                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/truncate.rs:235:1
    |
235 | / fn emit_ancillary_info(program: &CStr) {
236 | |     let infomap_0: [(&CStr, &CStr); 7] = [
237 | |         (CStr::from_bytes_with_nul(b"[\0").unwrap(), CStr::from_bytes_with_nul(b"test invocation\0").unwrap()),
238 | |         (CStr::from_bytes_with_nul(b"coreutils\0").unwrap(), CStr::from_bytes_with_nul(b"Multi-call invocation\0").unwrap()),
...   |
301 | |     );
302 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:519:16
    |
519 |         if if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t
    |                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:519:47
    |
519 |         if if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t
    |                                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:520:21
    |
520 |             && ((if 1 as libc::c_int != 0 {
    |                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:520:41
    |
520 |             && ((if 1 as libc::c_int != 0 {
    |                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:521:17
    |
521 |                 0 as libc::c_int as libc::c_long
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:524:18
    |
524 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                  ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:524:54
    |
524 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:525:21
    |
525 |             && ((if 1 as libc::c_int != 0 {
    |                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:525:41
    |
525 |             && ((if 1 as libc::c_int != 0 {
    |                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:526:17
    |
526 |                 0 as libc::c_int as libc::c_long
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:529:18
    |
529 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                  ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:529:54
    |
529 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:530:30
    |
530 |             && (if blksize < 0 as libc::c_int as libc::c_long {
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:531:28
    |
531 |                 if ssize < 0 as libc::c_int as libc::c_long {
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:532:29
    |
532 |                     if ((if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:532:49
    |
532 |                     if ((if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:533:25
    |
533 |                         0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:535:29
    |
535 |                         (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:535:49
    |
535 |                         (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:536:29
    |
536 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:538:31
    |
538 | ...                   -(1 as libc::c_int) as off_t
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:540:26
    |
540 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:541:27
    |
541 |                         < 0 as libc::c_int as libc::c_long
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:543:36
    |
543 |                         (ssize < -(1 as libc::c_int) as off_t / blksize) as libc::c_int
    |                                    ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:545:43
    |
545 |                         ((if (if (if ((if 1 as libc::c_int != 0 {
    |                                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:545:63
    |
545 |                         ((if (if (if ((if 1 as libc::c_int != 0 {
    |                                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:546:29
    |
546 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:549:30
    |
549 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/truncate.rs:305:1
    |
305 | / fn to_uchar(ch: i8) -> u8 {
306 | |     ch as u8
307 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:550:31
    |
550 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:552:38
    |
552 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:552:58
    |
552 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:553:33
    |
553 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/truncate.rs:310:1
    |
310 | / fn emit_mandatory_arg_note() {
311 | |     let message = "\nMandatory arguments to long options are mandatory for short options too.\n";
312 | |     print!("{}", message);
313 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:556:34
    |
556 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/truncate.rs:316:1
    |
316 | / fn emit_size_note() {
317 | |     let message = "\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\nUnits are K,M,G,T,P,E,Z,Y,R,Q (powers ...
318 | |     let translated_message = unsafe { gettext(message.as_ptr() as *const libc::c_char) };
319 | |     let _ = std::io::stdout().write_all(unsafe { std::ffi::CStr::from_ptr(translated_message).to_bytes() });
320 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:560:35
    |
560 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:561:35
    |
561 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:562:35
    |
562 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:564:33
    |
564 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:564:53
    |
564 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a static
   --> src/truncate.rs:322:1
    |
322 | static mut no_create: bool = false;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:565:33
    |
565 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a static
   --> src/truncate.rs:323:1
    |
323 | static mut block_mode: bool = false;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:568:34
    |
568 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:569:30
    |
569 |                         }) < 0 as libc::c_int as libc::c_long
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a static
   --> src/truncate.rs:324:1
    |
324 | static mut ref_file: *const libc::c_char = 0 as *const libc::c_char;
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:572:45
    |
572 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a static
   --> src/truncate.rs:325:1
    |
325 | / static mut longopts: [option; 7] = [
326 | |     {
327 | |         let mut init = option {
328 | |             name: b"no-create\0" as *const u8 as *const libc::c_char,
...   |
388 | |     },
389 | | ];
    | |__^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:572:65
    |
572 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:573:37
    |
573 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:576:38
    |
576 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:577:39
    |
577 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:579:44
    |
579 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:579:64
    |
579 | ...                   ((((if 1 as libc::c_int != 0 {
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:580:41
    |
580 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:583:42
    |
583 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:587:43
    |
587 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:588:43
    |
588 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:589:43
    |
589 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:591:41
    |
591 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:591:61
    |
591 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:592:41
    |
592 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:595:42
    |
595 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/truncate.rs:391:1
    |
391 | / pub fn usage(status: i32) {
392 | |     if status != 0 {
393 | |         eprintln!(
394 | |             "{}", 
...   |
434 | |     std::process::exit(status);
435 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:598:31
    |
598 | ...                   ((0 as libc::c_int as libc::c_long) < blksize) as libc::c_int
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:599:31
    |
599 |                         }) != 0
    |                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:601:33
    |
601 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:601:53
    |
601 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:602:33
    |
602 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:605:36
    |
605 | ...                   }) + -(1 as libc::c_int) as off_t
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:610:31
    |
610 | ...                   -(1 as libc::c_int) as off_t / -blksize
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:611:33
    |
611 |                         }) <= -(1 as libc::c_int) as libc::c_long - ssize) as libc::c_int
    |                                 ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:614:37
    |
614 |                     if (if (if ((if 1 as libc::c_int != 0 {
    |                                     ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:614:57
    |
614 |                     if (if (if ((if 1 as libc::c_int != 0 {
    |                                                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:615:25
    |
615 |                         0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:617:29
    |
617 |                         (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:617:49
    |
617 |                         (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:618:29
    |
618 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:621:30
    |
621 |                         }) + 0 as libc::c_int as off_t
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:622:26
    |
622 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:623:27
    |
623 |                         < 0 as libc::c_int as libc::c_long
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:625:34
    |
625 |                         !(((((if 1 as libc::c_int != 0 {
    |                                  ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:625:54
    |
625 |                         !(((((if 1 as libc::c_int != 0 {
    |                                                      ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:626:29
    |
626 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:628:33
    |
628 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:628:53
    |
628 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:629:33
    |
629 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:632:34
    |
632 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:633:30
    |
633 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: missing documentation for a function
   --> src/truncate.rs:437:1
    |
437 | / unsafe extern "C" fn do_ftruncate(
438 | |     mut fd: libc::c_int,
439 | |     mut fname: *const libc::c_char,
440 | |     mut ssize: off_t,
...   |
997 | |     return 1 as libc::c_int != 0;
998 | | }
    | |_^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: default numeric fallback might occur
   --> src/truncate.rs:637:31
    |
637 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:638:31
    |
638 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:639:31
    |
639 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:641:29
    |
641 |                         (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:641:49
    |
641 |                         (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:642:29
    |
642 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:644:33
    |
644 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:644:53
    |
644 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:645:33
    |
645 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:648:34
    |
648 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:649:30
    |
649 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:650:26
    |
650 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:652:31
    |
652 |                         (((if 1 as libc::c_int != 0 {
    |                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:652:51
    |
652 |                         (((if 1 as libc::c_int != 0 {
    |                                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:653:29
    |
653 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:656:30
    |
656 |                         }) + 0 as libc::c_int as off_t)
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:657:41
    |
657 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:657:61
    |
657 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:658:33
    |
658 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:660:37
    |
660 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:660:57
    |
660 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:661:37
    |
661 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:664:38
    |
664 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:665:34
    |
665 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:666:35
    |
666 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:668:40
    |
668 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:668:60
    |
668 | ...                   ((((if 1 as libc::c_int != 0 {
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:669:37
    |
669 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:671:41
    |
671 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:671:61
    |
671 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:672:41
    |
672 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:675:42
    |
675 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:676:38
    |
676 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:680:39
    |
680 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:681:39
    |
681 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:682:39
    |
682 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:684:37
    |
684 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:684:57
    |
684 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:685:37
    |
685 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:687:41
    |
687 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:687:61
    |
687 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:688:41
    |
688 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:691:42
    |
691 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:692:38
    |
692 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:695:27
    |
695 |                         ((0 as libc::c_int as libc::c_long)
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:696:35
    |
696 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:696:55
    |
696 | ...                   < (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:697:33
    |
697 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:700:34
    |
700 | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:701:27
    |
701 |                     }) != 0 && blksize == -(1 as libc::c_int) as libc::c_long
    |                           ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:701:45
    |
701 |                     }) != 0 && blksize == -(1 as libc::c_int) as libc::c_long
    |                                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:703:33
    |
703 |                         if ((if 1 as libc::c_int != 0 {
    |                                 ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:703:53
    |
703 |                         if ((if 1 as libc::c_int != 0 {
    |                                                     ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:704:29
    |
704 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:707:30
    |
707 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:708:31
    |
708 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:710:31
    |
710 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:711:43
    |
711 | ...                   < ssize + 0 as libc::c_int as off_t) as libc::c_int
    |                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:713:31
    |
713 | ...                   ((0 as libc::c_int as libc::c_long) < ssize
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:714:39
    |
714 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:715:39
    |
715 | ...                   - 0 as libc::c_int as off_t)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:716:47
    |
716 | ...                   < ssize - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                                 ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:719:26
    |
719 |                         (0 as libc::c_int as off_t / blksize < ssize) as libc::c_int
    |                          ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:723:31
    |
723 |                 if blksize == 0 as libc::c_int as libc::c_long {
    |                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:724:21
    |
724 |                     0 as libc::c_int
    |                     ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:726:32
    |
726 |                     if ssize < 0 as libc::c_int as libc::c_long {
    |                                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:727:41
    |
727 |                         if (if (if ((if 1 as libc::c_int != 0 {
    |                                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:727:61
    |
727 |                         if (if (if ((if 1 as libc::c_int != 0 {
    |                                                             ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:728:29
    |
728 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:730:33
    |
730 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:730:53
    |
730 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:731:33
    |
731 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:734:34
    |
734 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:735:30
    |
735 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:736:31
    |
736 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:738:38
    |
738 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:738:58
    |
738 | ...                   !(((((if 1 as libc::c_int != 0 {
    |                                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:739:33
    |
739 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:741:37
    |
741 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:741:57
    |
741 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:742:37
    |
742 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:745:38
    |
745 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:746:34
    |
746 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:750:35
    |
750 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:751:35
    |
751 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:752:35
    |
752 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:754:33
    |
754 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:754:53
    |
754 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:755:33
    |
755 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:757:37
    |
757 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:757:57
    |
757 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:758:37
    |
758 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:761:38
    |
761 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:762:34
    |
762 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:763:30
    |
763 |                         }) < 0 as libc::c_int as libc::c_long
    |                              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:765:35
    |
765 | ...                   (((if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:765:55
    |
765 | ...                   (((if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:766:33
    |
766 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:769:34
    |
769 | ...                   }) + 0 as libc::c_int as off_t)
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:770:45
    |
770 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:770:65
    |
770 | ...                   < -(if ((if 1 as libc::c_int != 0 {
    |                                                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:771:37
    |
771 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:773:41
    |
773 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:773:61
    |
773 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:774:41
    |
774 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:777:42
    |
777 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:778:38
    |
778 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:779:39
    |
779 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:781:44
    |
781 | ...                   ((((if 1 as libc::c_int != 0 {
    |                              ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:781:64
    |
781 | ...                   ((((if 1 as libc::c_int != 0 {
    |                                                  ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:782:41
    |
782 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:784:45
    |
784 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:784:65
    |
784 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:785:45
    |
785 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:788:46
    |
788 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:789:42
    |
789 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:793:43
    |
793 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:794:43
    |
794 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `2_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:795:43
    |
795 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:797:41
    |
797 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:797:61
    |
797 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:798:41
    |
798 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:800:45
    |
800 | ...                   (if 1 as libc::c_int != 0 {
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:800:65
    |
800 | ...                   (if 1 as libc::c_int != 0 {
    |                                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:801:45
    |
801 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:804:46
    |
804 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:805:42
    |
805 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:808:31
    |
808 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:809:39
    |
809 | ...                   < (if 1 as libc::c_int != 0 {
    |                             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:809:59
    |
809 | ...                   < (if 1 as libc::c_int != 0 {
    |                                                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:810:37
    |
810 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:813:38
    |
813 | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    |                            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:814:31
    |
814 |                         }) != 0 && ssize == -(1 as libc::c_int) as libc::c_long
    |                               ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:814:47
    |
814 |                         }) != 0 && ssize == -(1 as libc::c_int) as libc::c_long
    |                                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:816:37
    |
816 | ...                   if ((if 1 as libc::c_int != 0 {
    |                               ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:816:57
    |
816 | ...                   if ((if 1 as libc::c_int != 0 {
    |                                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:817:33
    |
817 | ...                   0 as libc::c_int as libc::c_long
    |                       ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:820:34
    |
820 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:821:35
    |
821 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:823:35
    |
823 | ...                   ((0 as libc::c_int as libc::c_long)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:824:49
    |
824 | ...                   < blksize + 0 as libc::c_int as off_t) as libc::c_int
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:826:37
    |
826 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                           ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:827:39
    |
827 | ...                   - 0 as libc::c_int as off_t)
    |                         ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:828:49
    |
828 | ...                   < blksize - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                                   ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:831:30
    |
831 | ...                   (0 as libc::c_int as off_t / ssize < blksize) as libc::c_int
    |                        ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:834:28
    |
834 |                         (-(1 as libc::c_int) as off_t / blksize < ssize) as libc::c_int
    |                            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:837:19
    |
837 |             }) != 0
    |                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:841:13
    |
841 |             1 as libc::c_int
    |             ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:846:14
    |
846 |         } != 0
    |              ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:934:32
    |
934 |         return false as i32 != 0;
    |                                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:941:16
    |
941 |     if nsize < 0 as libc::c_int as libc::c_long {
    |                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:942:17
    |
942 |         nsize = 0 as libc::c_int as off_t;
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:944:32
    |
944 |     if ftruncate(fd, nsize) != 0 as libc::c_int {
    |                                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:945:12
    |
945 |         if 0 != 0 {
    |            ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:945:17
    |
945 |         if 0 != 0 {
    |                 ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:956:16
    |
956 |             if 0 as libc::c_int != 0 as libc::c_int {
    |                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:956:36
    |
956 |             if 0 as libc::c_int != 0 as libc::c_int {
    |                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:972:35
    |
972 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:989:35
    |
989 |                 if __errstatus != 0 as libc::c_int {
    |                                   ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:995:16
    |
995 |         return 0 as libc::c_int != 0;
    |                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:995:36
    |
995 |         return 0 as libc::c_int != 0;
    |                                    ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:997:12
    |
997 |     return 1 as libc::c_int != 0;
    |            ^ help: consider adding suffix: `1_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
   --> src/truncate.rs:997:32
    |
997 |     return 1 as libc::c_int != 0;
    |                                ^ help: consider adding suffix: `0_i32`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:463:9
    |
463 |     if (block_mode as libc::c_int != 0
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(block_mode)`
    |
    = note: `-W clippy::cast-lossless` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:464:53
    |
464 |         || rel_mode as libc::c_uint != 0 && rsize < 0 as libc::c_int as libc::c_long)
    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:467:9
    |
467 | /         if 0 != 0 {
468 | |             error(
469 | |                 0 as libc::c_int,
470 | |                 *__errno_location(),
...   |
503 | |             });
504 | |         };
    | |_________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/truncate.rs:467:12
    |
467 |         if 0 != 0 {
    |            ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:471:25
    |
471 |                 gettext(b"cannot fstat %s\0" as *const u8 as *const libc::c_char),
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"cannot fstat %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/truncate.rs:474:13
    |
474 | /             if 0 as libc::c_int != 0 as libc::c_int {
475 | |                 unreachable!();
476 | |             } else {};
    | |_____________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/truncate.rs:474:16
    |
474 |             if 0 as libc::c_int != 0 as libc::c_int {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: usage of the `unreachable!` macro
   --> src/truncate.rs:475:17
    |
475 |                 unreachable!();
    |                 ^^^^^^^^^^^^^^
    |
    = note: `-W clippy::unreachable` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/truncate.rs:479:17
    |
479 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::no-effect-underscore-binding` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:483:29
    |
483 |                     gettext(b"cannot fstat %s\0" as *const u8 as *const libc::c_char),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"cannot fstat %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/truncate.rs:486:17
    |
486 | /                 if __errstatus != 0 as libc::c_int {
487 | |                     unreachable!();
488 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/truncate.rs:487:21
    |
487 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/truncate.rs:492:17
    |
492 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:496:29
    |
496 |                     gettext(b"cannot fstat %s\0" as *const u8 as *const libc::c_char),
    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"cannot fstat %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/truncate.rs:499:17
    |
499 | /                 if __errstatus != 0 as libc::c_int {
500 | |                     unreachable!();
501 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/truncate.rs:500:21
    |
500 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:508:38
    |
508 |           let mut blksize: ptrdiff_t = (if (0 as libc::c_int) < sb.st_blksize
    |  ______________________________________^
509 | |             && sb.st_blksize as libc::c_ulong
510 | |                 <= (-(1 as libc::c_int) as size_t)
511 | |                     .wrapping_div(8 as libc::c_int as libc::c_ulong)
...   |
516 | |             512 as libc::c_int
517 | |         }) as ptrdiff_t;
    | |_______________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
508 ~         let mut blksize: ptrdiff_t = i64::from((if (0 as libc::c_int) < sb.st_blksize
509 +             && sb.st_blksize as libc::c_ulong
510 +                 <= (-(1 as libc::c_int) as size_t)
511 +                     .wrapping_div(8 as libc::c_int as libc::c_ulong)
512 +                     .wrapping_add(1 as libc::c_int as libc::c_ulong)
513 +         {
514 +             sb.st_blksize
515 +         } else {
516 +             512 as libc::c_int
517 ~         }));
    |

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:509:16
    |
509 |             && sb.st_blksize as libc::c_ulong
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:510:20
    |
510 |                 <= (-(1 as libc::c_int) as size_t)
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
   --> src/truncate.rs:510:21
    |
510 |                 <= (-(1 as libc::c_int) as size_t)
    |                     ^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::arithmetic` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:510:21
    |
510 |                 <= (-(1 as libc::c_int) as size_t)
    |                     ^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::integer-arithmetic` implied by `-W clippy::restriction`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:511:35
    |
511 |                     .wrapping_div(8 as libc::c_int as libc::c_ulong)
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:512:35
    |
512 |                     .wrapping_add(1 as libc::c_int as libc::c_ulong)
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:519:15
    |
519 |         if if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t
    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:519:45
    |
519 |         if if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:519:45
    |
519 |         if if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t
    |                                             ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:519:45
    |
519 |         if if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t
    |                                             ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/truncate.rs:520:16
    |
520 |               && ((if 1 as libc::c_int != 0 {
    |  ________________^
521 | |                 0 as libc::c_int as libc::c_long
522 | |             } else {
523 | |                 ssize
524 | |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |__________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:520:16
    |
520 |               && ((if 1 as libc::c_int != 0 {
    |  ________________^
521 | |                 0 as libc::c_int as libc::c_long
522 | |             } else {
523 | |                 ssize
524 | |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |__________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:520:17
    |
520 |               && ((if 1 as libc::c_int != 0 {
    |  _________________^
521 | |                 0 as libc::c_int as libc::c_long
522 | |             } else {
523 | |                 ssize
524 | |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |______________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:521:17
    |
521 |                 0 as libc::c_int as libc::c_long
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:524:18
    |
524 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:524:54
    |
524 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:525:16
    |
525 |               && ((if 1 as libc::c_int != 0 {
    |  ________________^
526 | |                 0 as libc::c_int as libc::c_long
527 | |             } else {
528 | |                 blksize
529 | |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |__________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:525:16
    |
525 |               && ((if 1 as libc::c_int != 0 {
    |  ________________^
526 | |                 0 as libc::c_int as libc::c_long
527 | |             } else {
528 | |                 blksize
529 | |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |__________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:525:17
    |
525 |               && ((if 1 as libc::c_int != 0 {
    |  _________________^
526 | |                 0 as libc::c_int as libc::c_long
527 | |             } else {
528 | |                 blksize
529 | |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    | |______________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:526:17
    |
526 |                 0 as libc::c_int as libc::c_long
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:529:18
    |
529 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:529:54
    |
529 |             }) - 1 as libc::c_int as libc::c_long) < 0 as libc::c_int as libc::c_long
    |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:530:30
    |
530 |             && (if blksize < 0 as libc::c_int as libc::c_long {
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:531:28
    |
531 |                 if ssize < 0 as libc::c_int as libc::c_long {
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:532:24
    |
532 |                       if ((if 1 as libc::c_int != 0 {
    |  ________________________^
533 | |                         0 as libc::c_int as libc::c_long
534 | |                     } else {
535 | |                         (if 1 as libc::c_int != 0 {
...   |
539 | |                         }) + blksize
540 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:532:24
    |
532 |                       if ((if 1 as libc::c_int != 0 {
    |  ________________________^
533 | |                         0 as libc::c_int as libc::c_long
534 | |                     } else {
535 | |                         (if 1 as libc::c_int != 0 {
...   |
539 | |                         }) + blksize
540 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:532:25
    |
532 |                       if ((if 1 as libc::c_int != 0 {
    |  _________________________^
533 | |                         0 as libc::c_int as libc::c_long
534 | |                     } else {
535 | |                         (if 1 as libc::c_int != 0 {
...   |
539 | |                         }) + blksize
540 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:533:25
    |
533 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:535:25
    |
535 | /                         (if 1 as libc::c_int != 0 {
536 | |                             0 as libc::c_int as libc::c_long
537 | |                         } else {
538 | |                             -(1 as libc::c_int) as off_t
539 | |                         }) + blksize
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:536:29
    |
536 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:538:29
    |
538 | ...                   -(1 as libc::c_int) as off_t
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:540:26
    |
540 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:541:27
    |
541 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:543:25
    |
543 |                         (ssize < -(1 as libc::c_int) as off_t / blksize) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(ssize < -(1 as libc::c_int) as off_t / blksize)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:543:34
    |
543 |                         (ssize < -(1 as libc::c_int) as off_t / blksize) as libc::c_int
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:543:34
    |
543 |                         (ssize < -(1 as libc::c_int) as off_t / blksize) as libc::c_int
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/truncate.rs:543:34
    |
543 |                         (ssize < -(1 as libc::c_int) as off_t / blksize) as libc::c_int
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `-W clippy::integer-division` implied by `-W clippy::restriction`
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:543:34
    |
543 |                         (ssize < -(1 as libc::c_int) as off_t / blksize) as libc::c_int
    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:545:25
    |
545 | /                         ((if (if (if ((if 1 as libc::c_int != 0 {
546 | |                             0 as libc::c_int as libc::c_long
547 | |                         } else {
548 | |                             blksize
...   |
610 | |                             -(1 as libc::c_int) as off_t / -blksize
611 | |                         }) <= -(1 as libc::c_int) as libc::c_long - ssize) as libc::c_int
    | |_________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
545 ~                         i32::from((if (if (if ((if 1 as libc::c_int != 0 {
546 +                             0 as libc::c_int as libc::c_long
547 +                         } else {
548 +                             blksize
549 +                         }) - 1 as libc::c_int as libc::c_long)
550 +                             < 0 as libc::c_int as libc::c_long
551 +                         {
552 +                             !(((((if 1 as libc::c_int != 0 {
553 +                                 0 as libc::c_int as libc::c_long
554 +                             } else {
555 +                                 blksize
556 +                             }) + 1 as libc::c_int as libc::c_long)
557 +                                 << (::core::mem::size_of::<ptrdiff_t>() as libc::c_ulong)
558 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
559 +                                     .wrapping_sub(2 as libc::c_int as libc::c_ulong))
560 +                                 - 1 as libc::c_int as libc::c_long)
561 +                                 * 2 as libc::c_int as libc::c_long
562 +                                 + 1 as libc::c_int as libc::c_long)
563 +                         } else {
564 +                             (if 1 as libc::c_int != 0 {
565 +                                 0 as libc::c_int as libc::c_long
566 +                             } else {
567 +                                 blksize
568 +                             }) + 0 as libc::c_int as libc::c_long
569 +                         }) < 0 as libc::c_int as libc::c_long
570 +                         {
571 +                             (blksize
572 +                                 < -(if ((if 1 as libc::c_int != 0 {
573 +                                     0 as libc::c_int as libc::c_long
574 +                                 } else {
575 +                                     blksize
576 +                                 }) - 1 as libc::c_int as libc::c_long)
577 +                                     < 0 as libc::c_int as libc::c_long
578 +                                 {
579 +                                     ((((if 1 as libc::c_int != 0 {
580 +                                         0 as libc::c_int as libc::c_long
581 +                                     } else {
582 +                                         blksize
583 +                                     }) + 1 as libc::c_int as libc::c_long)
584 +                                         << (::core::mem::size_of::<ptrdiff_t>() as libc::c_ulong)
585 +                                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
586 +                                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
587 +                                         - 1 as libc::c_int as libc::c_long)
588 +                                         * 2 as libc::c_int as libc::c_long
589 +                                         + 1 as libc::c_int as libc::c_long
590 +                                 } else {
591 +                                     (if 1 as libc::c_int != 0 {
592 +                                         0 as libc::c_int as libc::c_long
593 +                                     } else {
594 +                                         blksize
595 +                                     }) - 1 as libc::c_int as libc::c_long
596 +                                 })) as libc::c_int
597 +                         } else {
598 +                             ((0 as libc::c_int as libc::c_long) < blksize) as libc::c_int
599 +                         }) != 0
600 +                         {
601 +                             (if 1 as libc::c_int != 0 {
602 +                                 0 as libc::c_int as libc::c_long
603 +                             } else {
604 +                                 blksize
605 +                             }) + -(1 as libc::c_int) as off_t
606 +                                 >> (::core::mem::size_of::<ptrdiff_t>() as libc::c_ulong)
607 +                                     .wrapping_mul(8 as libc::c_int as libc::c_ulong)
608 +                                     .wrapping_sub(1 as libc::c_int as libc::c_ulong)
609 +                         } else {
610 +                             -(1 as libc::c_int) as off_t / -blksize
611 +                         }) <= -(1 as libc::c_int) as libc::c_long - ssize)
    |

warning: unnecessary `!=` operation
   --> src/truncate.rs:545:26
    |
545 |                           ((if (if (if ((if 1 as libc::c_int != 0 {
    |  __________________________^
546 | |                             0 as libc::c_int as libc::c_long
547 | |                         } else {
548 | |                             blksize
...   |
610 | |                             -(1 as libc::c_int) as off_t / -blksize
611 | |                         }) <= -(1 as libc::c_int) as libc::c_long - ssize) as libc::c_int
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: arithmetic detected
   --> src/truncate.rs:545:38
    |
545 |                           ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ______________________________________^
546 | |                             0 as libc::c_int as libc::c_long
547 | |                         } else {
548 | |                             blksize
549 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:545:38
    |
545 |                           ((if (if (if ((if 1 as libc::c_int != 0 {
    |  ______________________________________^
546 | |                             0 as libc::c_int as libc::c_long
547 | |                         } else {
548 | |                             blksize
549 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:545:39
    |
545 |                           ((if (if (if ((if 1 as libc::c_int != 0 {
    |  _______________________________________^
546 | |                             0 as libc::c_int as libc::c_long
547 | |                         } else {
548 | |                             blksize
549 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:546:29
    |
546 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:549:30
    |
549 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:550:31
    |
550 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:552:30
    |
552 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
553 | | ...                       0 as libc::c_int as libc::c_long
554 | | ...                   } else {
555 | | ...                       blksize
...   |
561 | | ...                       * 2 as libc::c_int as libc::c_long
562 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:552:30
    |
552 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
553 | | ...                       0 as libc::c_int as libc::c_long
554 | | ...                   } else {
555 | | ...                       blksize
...   |
561 | | ...                       * 2 as libc::c_int as libc::c_long
562 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:552:34
    |
552 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ____________________________^
553 | | ...                       0 as libc::c_int as libc::c_long
554 | | ...                   } else {
555 | | ...                       blksize
556 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:553:33
    |
553 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:556:34
    |
556 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:558:51
    |
558 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:559:51
    |
559 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:560:35
    |
560 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:561:35
    |
561 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:562:35
    |
562 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:564:29
    |
564 | / ...                   (if 1 as libc::c_int != 0 {
565 | | ...                       0 as libc::c_int as libc::c_long
566 | | ...                   } else {
567 | | ...                       blksize
568 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:564:29
    |
564 | / ...                   (if 1 as libc::c_int != 0 {
565 | | ...                       0 as libc::c_int as libc::c_long
566 | | ...                   } else {
567 | | ...                       blksize
568 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:564:29
    |
564 | / ...                   (if 1 as libc::c_int != 0 {
565 | | ...                       0 as libc::c_int as libc::c_long
566 | | ...                   } else {
567 | | ...                       blksize
568 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:565:33
    |
565 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:568:34
    |
568 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:569:30
    |
569 |                         }) < 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:571:29
    |
571 | / ...                   (blksize
572 | | ...                       < -(if ((if 1 as libc::c_int != 0 {
573 | | ...                           0 as libc::c_int as libc::c_long
574 | | ...                       } else {
...   |
595 | | ...                           }) - 1 as libc::c_int as libc::c_long
596 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
571 ~                             i32::from(blksize
572 +                                 < -(if ((if 1 as libc::c_int != 0 {
573 +                                     0 as libc::c_int as libc::c_long
574 +                                 } else {
575 +                                     blksize
576 +                                 }) - 1 as libc::c_int as libc::c_long)
577 +                                     < 0 as libc::c_int as libc::c_long
578 +                                 {
579 +                                     ((((if 1 as libc::c_int != 0 {
580 +                                         0 as libc::c_int as libc::c_long
581 +                                     } else {
582 +                                         blksize
583 +                                     }) + 1 as libc::c_int as libc::c_long)
584 +                                         << (::core::mem::size_of::<ptrdiff_t>() as libc::c_ulong)
585 +                                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
586 +                                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
587 +                                         - 1 as libc::c_int as libc::c_long)
588 +                                         * 2 as libc::c_int as libc::c_long
589 +                                         + 1 as libc::c_int as libc::c_long
590 +                                 } else {
591 +                                     (if 1 as libc::c_int != 0 {
592 +                                         0 as libc::c_int as libc::c_long
593 +                                     } else {
594 +                                         blksize
595 +                                     }) - 1 as libc::c_int as libc::c_long
596 +                                 }))
    |

warning: arithmetic detected
   --> src/truncate.rs:572:35
    |
572 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
573 | | ...                       0 as libc::c_int as libc::c_long
574 | | ...                   } else {
575 | | ...                       blksize
...   |
595 | | ...                       }) - 1 as libc::c_int as libc::c_long
596 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:572:35
    |
572 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
573 | | ...                       0 as libc::c_int as libc::c_long
574 | | ...                   } else {
575 | | ...                       blksize
...   |
595 | | ...                       }) - 1 as libc::c_int as libc::c_long
596 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:572:41
    |
572 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
573 | | ...                       0 as libc::c_int as libc::c_long
574 | | ...                   } else {
575 | | ...                       blksize
576 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:573:37
    |
573 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:576:38
    |
576 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:577:39
    |
577 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:579:40
    |
579 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
580 | | ...                       0 as libc::c_int as libc::c_long
581 | | ...                   } else {
582 | | ...                       blksize
583 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:580:41
    |
580 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:583:42
    |
583 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:585:59
    |
585 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:586:59
    |
586 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:587:43
    |
587 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:588:43
    |
588 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:589:43
    |
589 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:591:37
    |
591 | / ...                   (if 1 as libc::c_int != 0 {
592 | | ...                       0 as libc::c_int as libc::c_long
593 | | ...                   } else {
594 | | ...                       blksize
595 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:592:41
    |
592 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:595:42
    |
595 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:598:29
    |
598 | ...                   ((0 as libc::c_int as libc::c_long) < blksize) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from((0 as libc::c_int as libc::c_long) < blksize)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:598:30
    |
598 | ...                   ((0 as libc::c_int as libc::c_long) < blksize) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:601:29
    |
601 | / ...                   (if 1 as libc::c_int != 0 {
602 | | ...                       0 as libc::c_int as libc::c_long
603 | | ...                   } else {
604 | | ...                       blksize
...   |
607 | | ...                           .wrapping_mul(8 as libc::c_int as libc::c_ulong)
608 | | ...                           .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:601:29
    |
601 | / ...                   (if 1 as libc::c_int != 0 {
602 | | ...                       0 as libc::c_int as libc::c_long
603 | | ...                   } else {
604 | | ...                       blksize
...   |
607 | | ...                           .wrapping_mul(8 as libc::c_int as libc::c_ulong)
608 | | ...                           .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    | |______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:601:29
    |
601 | / ...                   (if 1 as libc::c_int != 0 {
602 | | ...                       0 as libc::c_int as libc::c_long
603 | | ...                   } else {
604 | | ...                       blksize
605 | | ...                   }) + -(1 as libc::c_int) as off_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:602:33
    |
602 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:605:34
    |
605 | ...                   }) + -(1 as libc::c_int) as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:607:51
    |
607 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:608:51
    |
608 | ...                   .wrapping_sub(1 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: arithmetic detected
   --> src/truncate.rs:610:29
    |
610 | ...                   -(1 as libc::c_int) as off_t / -blksize
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer division
   --> src/truncate.rs:610:29
    |
610 | ...                   -(1 as libc::c_int) as off_t / -blksize
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:610:29
    |
610 | ...                   -(1 as libc::c_int) as off_t / -blksize
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: integer arithmetic detected
   --> src/truncate.rs:610:29
    |
610 | ...                   -(1 as libc::c_int) as off_t / -blksize
    |                       ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:610:60
    |
610 | ...                   -(1 as libc::c_int) as off_t / -blksize
    |                                                      ^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/truncate.rs:611:31
    |
611 |                         }) <= -(1 as libc::c_int) as libc::c_long - ssize) as libc::c_int
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:611:31
    |
611 |                         }) <= -(1 as libc::c_int) as libc::c_long - ssize) as libc::c_int
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:611:31
    |
611 |                         }) <= -(1 as libc::c_int) as libc::c_long - ssize) as libc::c_int
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:614:32
    |
614 |                       if (if (if ((if 1 as libc::c_int != 0 {
    |  ________________________________^
615 | |                         0 as libc::c_int as libc::c_long
616 | |                     } else {
617 | |                         (if 1 as libc::c_int != 0 {
...   |
621 | |                         }) + 0 as libc::c_int as off_t
622 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:614:32
    |
614 |                       if (if (if ((if 1 as libc::c_int != 0 {
    |  ________________________________^
615 | |                         0 as libc::c_int as libc::c_long
616 | |                     } else {
617 | |                         (if 1 as libc::c_int != 0 {
...   |
621 | |                         }) + 0 as libc::c_int as off_t
622 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |__________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:614:33
    |
614 |                       if (if (if ((if 1 as libc::c_int != 0 {
    |  _________________________________^
615 | |                         0 as libc::c_int as libc::c_long
616 | |                     } else {
617 | |                         (if 1 as libc::c_int != 0 {
...   |
621 | |                         }) + 0 as libc::c_int as off_t
622 | |                     }) - 1 as libc::c_int as libc::c_long)
    | |______________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:615:25
    |
615 |                         0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:617:25
    |
617 | /                         (if 1 as libc::c_int != 0 {
618 | |                             0 as libc::c_int as libc::c_long
619 | |                         } else {
620 | |                             blksize
621 | |                         }) + 0 as libc::c_int as off_t
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:618:29
    |
618 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:621:30
    |
621 |                         }) + 0 as libc::c_int as off_t
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:622:26
    |
622 |                     }) - 1 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:623:27
    |
623 |                         < 0 as libc::c_int as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:625:26
    |
625 |                           !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
626 | |                             0 as libc::c_int as libc::c_long
627 | |                         } else {
628 | |                             (if 1 as libc::c_int != 0 {
...   |
638 | |                             * 2 as libc::c_int as libc::c_long
639 | |                             + 1 as libc::c_int as libc::c_long)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:625:26
    |
625 |                           !(((((if 1 as libc::c_int != 0 {
    |  __________________________^
626 | |                             0 as libc::c_int as libc::c_long
627 | |                         } else {
628 | |                             (if 1 as libc::c_int != 0 {
...   |
638 | |                             * 2 as libc::c_int as libc::c_long
639 | |                             + 1 as libc::c_int as libc::c_long)
    | |_______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:625:30
    |
625 |                           !(((((if 1 as libc::c_int != 0 {
    |  ______________________________^
626 | |                             0 as libc::c_int as libc::c_long
627 | |                         } else {
628 | |                             (if 1 as libc::c_int != 0 {
...   |
632 | |                             }) + 0 as libc::c_int as off_t
633 | |                         }) + 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:626:29
    |
626 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:628:29
    |
628 | / ...                   (if 1 as libc::c_int != 0 {
629 | | ...                       0 as libc::c_int as libc::c_long
630 | | ...                   } else {
631 | | ...                       blksize
632 | | ...                   }) + 0 as libc::c_int as off_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:629:33
    |
629 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:632:34
    |
632 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:633:30
    |
633 |                         }) + 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:635:47
    |
635 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:636:47
    |
636 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:637:31
    |
637 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:638:31
    |
638 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:639:31
    |
639 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:641:25
    |
641 | /                         (if 1 as libc::c_int != 0 {
642 | |                             0 as libc::c_int as libc::c_long
643 | |                         } else {
644 | |                             (if 1 as libc::c_int != 0 {
...   |
648 | |                             }) + 0 as libc::c_int as off_t
649 | |                         }) + 0 as libc::c_int as libc::c_long
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:641:25
    |
641 | /                         (if 1 as libc::c_int != 0 {
642 | |                             0 as libc::c_int as libc::c_long
643 | |                         } else {
644 | |                             (if 1 as libc::c_int != 0 {
...   |
648 | |                             }) + 0 as libc::c_int as off_t
649 | |                         }) + 0 as libc::c_int as libc::c_long
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:641:25
    |
641 | /                         (if 1 as libc::c_int != 0 {
642 | |                             0 as libc::c_int as libc::c_long
643 | |                         } else {
644 | |                             (if 1 as libc::c_int != 0 {
...   |
648 | |                             }) + 0 as libc::c_int as off_t
649 | |                         }) + 0 as libc::c_int as libc::c_long
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:642:29
    |
642 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:644:29
    |
644 | / ...                   (if 1 as libc::c_int != 0 {
645 | | ...                       0 as libc::c_int as libc::c_long
646 | | ...                   } else {
647 | | ...                       blksize
648 | | ...                   }) + 0 as libc::c_int as off_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:645:33
    |
645 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:648:34
    |
648 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:649:30
    |
649 |                         }) + 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:650:26
    |
650 |                     }) < 0 as libc::c_int as libc::c_long
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:652:25
    |
652 | /                         (((if 1 as libc::c_int != 0 {
653 | |                             0 as libc::c_int as libc::c_long
654 | |                         } else {
655 | |                             blksize
...   |
692 | |                                 }) - 1 as libc::c_int as libc::c_long
693 | |                             })) as libc::c_int
    | |______________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
652 ~                         i32::from(((if 1 as libc::c_int != 0 {
653 +                             0 as libc::c_int as libc::c_long
654 +                         } else {
655 +                             blksize
656 +                         }) + 0 as libc::c_int as off_t)
657 +                             < -(if ((if 1 as libc::c_int != 0 {
658 +                                 0 as libc::c_int as libc::c_long
659 +                             } else {
660 +                                 (if 1 as libc::c_int != 0 {
661 +                                     0 as libc::c_int as libc::c_long
662 +                                 } else {
663 +                                     blksize
664 +                                 }) + 0 as libc::c_int as off_t
665 +                             }) - 1 as libc::c_int as libc::c_long)
666 +                                 < 0 as libc::c_int as libc::c_long
667 +                             {
668 +                                 ((((if 1 as libc::c_int != 0 {
669 +                                     0 as libc::c_int as libc::c_long
670 +                                 } else {
671 +                                     (if 1 as libc::c_int != 0 {
672 +                                         0 as libc::c_int as libc::c_long
673 +                                     } else {
674 +                                         blksize
675 +                                     }) + 0 as libc::c_int as off_t
676 +                                 }) + 1 as libc::c_int as libc::c_long)
677 +                                     << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
678 +                                         .wrapping_mul(8 as libc::c_int as libc::c_ulong)
679 +                                         .wrapping_sub(2 as libc::c_int as libc::c_ulong))
680 +                                     - 1 as libc::c_int as libc::c_long)
681 +                                     * 2 as libc::c_int as libc::c_long
682 +                                     + 1 as libc::c_int as libc::c_long
683 +                             } else {
684 +                                 (if 1 as libc::c_int != 0 {
685 +                                     0 as libc::c_int as libc::c_long
686 +                                 } else {
687 +                                     (if 1 as libc::c_int != 0 {
688 +                                         0 as libc::c_int as libc::c_long
689 +                                     } else {
690 +                                         blksize
691 +                                     }) + 0 as libc::c_int as off_t
692 +                                 }) - 1 as libc::c_int as libc::c_long
693 +                             }))
    |

warning: arithmetic detected
   --> src/truncate.rs:652:26
    |
652 |                           (((if 1 as libc::c_int != 0 {
    |  __________________________^
653 | |                             0 as libc::c_int as libc::c_long
654 | |                         } else {
655 | |                             blksize
656 | |                         }) + 0 as libc::c_int as off_t)
    | |_______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:652:26
    |
652 |                           (((if 1 as libc::c_int != 0 {
    |  __________________________^
653 | |                             0 as libc::c_int as libc::c_long
654 | |                         } else {
655 | |                             blksize
656 | |                         }) + 0 as libc::c_int as off_t)
    | |_______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:652:27
    |
652 |                           (((if 1 as libc::c_int != 0 {
    |  ___________________________^
653 | |                             0 as libc::c_int as libc::c_long
654 | |                         } else {
655 | |                             blksize
656 | |                         }) + 0 as libc::c_int as off_t)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:653:29
    |
653 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:656:30
    |
656 |                         }) + 0 as libc::c_int as off_t)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:657:31
    |
657 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
658 | | ...                       0 as libc::c_int as libc::c_long
659 | | ...                   } else {
660 | | ...                       (if 1 as libc::c_int != 0 {
...   |
692 | | ...                       }) - 1 as libc::c_int as libc::c_long
693 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:657:31
    |
657 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
658 | | ...                       0 as libc::c_int as libc::c_long
659 | | ...                   } else {
660 | | ...                       (if 1 as libc::c_int != 0 {
...   |
692 | | ...                       }) - 1 as libc::c_int as libc::c_long
693 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:657:37
    |
657 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
658 | | ...                       0 as libc::c_int as libc::c_long
659 | | ...                   } else {
660 | | ...                       (if 1 as libc::c_int != 0 {
...   |
664 | | ...                       }) + 0 as libc::c_int as off_t
665 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:658:33
    |
658 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:660:33
    |
660 | / ...                   (if 1 as libc::c_int != 0 {
661 | | ...                       0 as libc::c_int as libc::c_long
662 | | ...                   } else {
663 | | ...                       blksize
664 | | ...                   }) + 0 as libc::c_int as off_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:661:37
    |
661 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:664:38
    |
664 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:665:34
    |
665 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:666:35
    |
666 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:668:36
    |
668 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
669 | | ...                       0 as libc::c_int as libc::c_long
670 | | ...                   } else {
671 | | ...                       (if 1 as libc::c_int != 0 {
...   |
675 | | ...                       }) + 0 as libc::c_int as off_t
676 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:669:37
    |
669 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:671:37
    |
671 | / ...                   (if 1 as libc::c_int != 0 {
672 | | ...                       0 as libc::c_int as libc::c_long
673 | | ...                   } else {
674 | | ...                       blksize
675 | | ...                   }) + 0 as libc::c_int as off_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:672:41
    |
672 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:675:42
    |
675 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:676:38
    |
676 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:678:55
    |
678 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:679:55
    |
679 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:680:39
    |
680 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:681:39
    |
681 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:682:39
    |
682 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:684:33
    |
684 | / ...                   (if 1 as libc::c_int != 0 {
685 | | ...                       0 as libc::c_int as libc::c_long
686 | | ...                   } else {
687 | | ...                       (if 1 as libc::c_int != 0 {
...   |
691 | | ...                       }) + 0 as libc::c_int as off_t
692 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:685:37
    |
685 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:687:37
    |
687 | / ...                   (if 1 as libc::c_int != 0 {
688 | | ...                       0 as libc::c_int as libc::c_long
689 | | ...                   } else {
690 | | ...                       blksize
691 | | ...                   }) + 0 as libc::c_int as off_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:688:41
    |
688 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:691:42
    |
691 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:692:38
    |
692 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:695:25
    |
695 | /                         ((0 as libc::c_int as libc::c_long)
696 | |                             < (if 1 as libc::c_int != 0 {
697 | |                                 0 as libc::c_int as libc::c_long
698 | |                             } else {
699 | |                                 blksize
700 | |                             }) + 0 as libc::c_int as off_t) as libc::c_int
    | |__________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
695 ~                         i32::from((0 as libc::c_int as libc::c_long)
696 +                             < (if 1 as libc::c_int != 0 {
697 +                                 0 as libc::c_int as libc::c_long
698 +                             } else {
699 +                                 blksize
700 +                             }) + 0 as libc::c_int as off_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:695:26
    |
695 |                         ((0 as libc::c_int as libc::c_long)
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:696:31
    |
696 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
697 | | ...                       0 as libc::c_int as libc::c_long
698 | | ...                   } else {
699 | | ...                       blksize
700 | | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:696:31
    |
696 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
697 | | ...                       0 as libc::c_int as libc::c_long
698 | | ...                   } else {
699 | | ...                       blksize
700 | | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:696:31
    |
696 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
697 | | ...                       0 as libc::c_int as libc::c_long
698 | | ...                   } else {
699 | | ...                       blksize
700 | | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:697:33
    |
697 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:700:34
    |
700 | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:701:43
    |
701 |                     }) != 0 && blksize == -(1 as libc::c_int) as libc::c_long
    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:701:43
    |
701 |                     }) != 0 && blksize == -(1 as libc::c_int) as libc::c_long
    |                                           ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:701:43
    |
701 |                     }) != 0 && blksize == -(1 as libc::c_int) as libc::c_long
    |                                           ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/truncate.rs:703:28
    |
703 |                           if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
704 | |                             0 as libc::c_int as libc::c_long
705 | |                         } else {
706 | |                             ssize
707 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:703:28
    |
703 |                           if ((if 1 as libc::c_int != 0 {
    |  ____________________________^
704 | |                             0 as libc::c_int as libc::c_long
705 | |                         } else {
706 | |                             ssize
707 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:703:29
    |
703 |                           if ((if 1 as libc::c_int != 0 {
    |  _____________________________^
704 | |                             0 as libc::c_int as libc::c_long
705 | |                         } else {
706 | |                             ssize
707 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:704:29
    |
704 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:707:30
    |
707 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:708:31
    |
708 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:710:29
    |
710 | / ...                   ((0 as libc::c_int as libc::c_long)
711 | | ...                       < ssize + 0 as libc::c_int as off_t) as libc::c_int
    | |_____________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
710 ~                             i32::from((0 as libc::c_int as libc::c_long)
711 +                                 < ssize + 0 as libc::c_int as off_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:710:30
    |
710 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:711:35
    |
711 | ...                   < ssize + 0 as libc::c_int as off_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:711:35
    |
711 | ...                   < ssize + 0 as libc::c_int as off_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:711:43
    |
711 | ...                   < ssize + 0 as libc::c_int as off_t) as libc::c_int
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:713:29
    |
713 | / ...                   ((0 as libc::c_int as libc::c_long) < ssize
714 | | ...                       && (-(1 as libc::c_int) as libc::c_long
715 | | ...                           - 0 as libc::c_int as off_t)
716 | | ...                           < ssize - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |________________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
713 ~                             i32::from((0 as libc::c_int as libc::c_long) < ssize
714 +                                 && (-(1 as libc::c_int) as libc::c_long
715 +                                     - 0 as libc::c_int as off_t)
716 +                                     < ssize - 1 as libc::c_int as libc::c_long)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:713:30
    |
713 | ...                   ((0 as libc::c_int as libc::c_long) < ssize
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:714:36
    |
714 |   ...                   && (-(1 as libc::c_int) as libc::c_long
    |  __________________________^
715 | | ...                       - 0 as libc::c_int as off_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:714:36
    |
714 |   ...                   && (-(1 as libc::c_int) as libc::c_long
    |  __________________________^
715 | | ...                       - 0 as libc::c_int as off_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:714:37
    |
714 | ...                   && (-(1 as libc::c_int) as libc::c_long
    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:715:39
    |
715 | ...                   - 0 as libc::c_int as off_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:716:39
    |
716 | ...                   < ssize - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:716:39
    |
716 | ...                   < ssize - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:716:47
    |
716 | ...                   < ssize - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:719:25
    |
719 |                         (0 as libc::c_int as off_t / blksize < ssize) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(0 as libc::c_int as off_t / blksize < ssize)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:719:26
    |
719 |                         (0 as libc::c_int as off_t / blksize < ssize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:719:26
    |
719 |                         (0 as libc::c_int as off_t / blksize < ssize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/truncate.rs:719:26
    |
719 |                         (0 as libc::c_int as off_t / blksize < ssize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:719:26
    |
719 |                         (0 as libc::c_int as off_t / blksize < ssize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:723:31
    |
723 |                 if blksize == 0 as libc::c_int as libc::c_long {
    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:726:32
    |
726 |                     if ssize < 0 as libc::c_int as libc::c_long {
    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:727:36
    |
727 |                           if (if (if ((if 1 as libc::c_int != 0 {
    |  ____________________________________^
728 | |                             0 as libc::c_int as libc::c_long
729 | |                         } else {
730 | |                             (if 1 as libc::c_int != 0 {
...   |
734 | |                             }) + 0 as libc::c_int as off_t
735 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:727:36
    |
727 |                           if (if (if ((if 1 as libc::c_int != 0 {
    |  ____________________________________^
728 | |                             0 as libc::c_int as libc::c_long
729 | |                         } else {
730 | |                             (if 1 as libc::c_int != 0 {
...   |
734 | |                             }) + 0 as libc::c_int as off_t
735 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |______________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:727:37
    |
727 |                           if (if (if ((if 1 as libc::c_int != 0 {
    |  _____________________________________^
728 | |                             0 as libc::c_int as libc::c_long
729 | |                         } else {
730 | |                             (if 1 as libc::c_int != 0 {
...   |
734 | |                             }) + 0 as libc::c_int as off_t
735 | |                         }) - 1 as libc::c_int as libc::c_long)
    | |__________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:728:29
    |
728 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:730:29
    |
730 | / ...                   (if 1 as libc::c_int != 0 {
731 | | ...                       0 as libc::c_int as libc::c_long
732 | | ...                   } else {
733 | | ...                       ssize
734 | | ...                   }) + 0 as libc::c_int as off_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:731:33
    |
731 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:734:34
    |
734 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:735:30
    |
735 |                         }) - 1 as libc::c_int as libc::c_long)
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:736:31
    |
736 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:738:30
    |
738 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
739 | | ...                       0 as libc::c_int as libc::c_long
740 | | ...                   } else {
741 | | ...                       (if 1 as libc::c_int != 0 {
...   |
751 | | ...                       * 2 as libc::c_int as libc::c_long
752 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:738:30
    |
738 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ________________________^
739 | | ...                       0 as libc::c_int as libc::c_long
740 | | ...                   } else {
741 | | ...                       (if 1 as libc::c_int != 0 {
...   |
751 | | ...                       * 2 as libc::c_int as libc::c_long
752 | | ...                       + 1 as libc::c_int as libc::c_long)
    | |_____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:738:34
    |
738 |   ...                   !(((((if 1 as libc::c_int != 0 {
    |  ____________________________^
739 | | ...                       0 as libc::c_int as libc::c_long
740 | | ...                   } else {
741 | | ...                       (if 1 as libc::c_int != 0 {
...   |
745 | | ...                       }) + 0 as libc::c_int as off_t
746 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:739:33
    |
739 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:741:33
    |
741 | / ...                   (if 1 as libc::c_int != 0 {
742 | | ...                       0 as libc::c_int as libc::c_long
743 | | ...                   } else {
744 | | ...                       ssize
745 | | ...                   }) + 0 as libc::c_int as off_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:742:37
    |
742 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:745:38
    |
745 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:746:34
    |
746 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:748:51
    |
748 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:749:51
    |
749 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:750:35
    |
750 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:751:35
    |
751 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:752:35
    |
752 | ...                   + 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:754:29
    |
754 | / ...                   (if 1 as libc::c_int != 0 {
755 | | ...                       0 as libc::c_int as libc::c_long
756 | | ...                   } else {
757 | | ...                       (if 1 as libc::c_int != 0 {
...   |
761 | | ...                       }) + 0 as libc::c_int as off_t
762 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:754:29
    |
754 | / ...                   (if 1 as libc::c_int != 0 {
755 | | ...                       0 as libc::c_int as libc::c_long
756 | | ...                   } else {
757 | | ...                       (if 1 as libc::c_int != 0 {
...   |
761 | | ...                       }) + 0 as libc::c_int as off_t
762 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |___________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:754:29
    |
754 | / ...                   (if 1 as libc::c_int != 0 {
755 | | ...                       0 as libc::c_int as libc::c_long
756 | | ...                   } else {
757 | | ...                       (if 1 as libc::c_int != 0 {
...   |
761 | | ...                       }) + 0 as libc::c_int as off_t
762 | | ...                   }) + 0 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:755:33
    |
755 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:757:33
    |
757 | / ...                   (if 1 as libc::c_int != 0 {
758 | | ...                       0 as libc::c_int as libc::c_long
759 | | ...                   } else {
760 | | ...                       ssize
761 | | ...                   }) + 0 as libc::c_int as off_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:758:37
    |
758 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:761:38
    |
761 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:762:34
    |
762 | ...                   }) + 0 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:763:30
    |
763 |                         }) < 0 as libc::c_int as libc::c_long
    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:765:29
    |
765 | / ...                   (((if 1 as libc::c_int != 0 {
766 | | ...                       0 as libc::c_int as libc::c_long
767 | | ...                   } else {
768 | | ...                       ssize
...   |
805 | | ...                           }) - 1 as libc::c_int as libc::c_long
806 | | ...                       })) as libc::c_int
    | |____________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
765 ~                             i32::from(((if 1 as libc::c_int != 0 {
766 +                                 0 as libc::c_int as libc::c_long
767 +                             } else {
768 +                                 ssize
769 +                             }) + 0 as libc::c_int as off_t)
770 +                                 < -(if ((if 1 as libc::c_int != 0 {
771 +                                     0 as libc::c_int as libc::c_long
772 +                                 } else {
773 +                                     (if 1 as libc::c_int != 0 {
774 +                                         0 as libc::c_int as libc::c_long
775 +                                     } else {
776 +                                         ssize
777 +                                     }) + 0 as libc::c_int as off_t
778 +                                 }) - 1 as libc::c_int as libc::c_long)
779 +                                     < 0 as libc::c_int as libc::c_long
780 +                                 {
781 +                                     ((((if 1 as libc::c_int != 0 {
782 +                                         0 as libc::c_int as libc::c_long
783 +                                     } else {
784 +                                         (if 1 as libc::c_int != 0 {
785 +                                             0 as libc::c_int as libc::c_long
786 +                                         } else {
787 +                                             ssize
788 +                                         }) + 0 as libc::c_int as off_t
789 +                                     }) + 1 as libc::c_int as libc::c_long)
790 +                                         << (::core::mem::size_of::<libc::c_long>() as libc::c_ulong)
791 +                                             .wrapping_mul(8 as libc::c_int as libc::c_ulong)
792 +                                             .wrapping_sub(2 as libc::c_int as libc::c_ulong))
793 +                                         - 1 as libc::c_int as libc::c_long)
794 +                                         * 2 as libc::c_int as libc::c_long
795 +                                         + 1 as libc::c_int as libc::c_long
796 +                                 } else {
797 +                                     (if 1 as libc::c_int != 0 {
798 +                                         0 as libc::c_int as libc::c_long
799 +                                     } else {
800 +                                         (if 1 as libc::c_int != 0 {
801 +                                             0 as libc::c_int as libc::c_long
802 +                                         } else {
803 +                                             ssize
804 +                                         }) + 0 as libc::c_int as off_t
805 +                                     }) - 1 as libc::c_int as libc::c_long
806 +                                 }))
    |

warning: arithmetic detected
   --> src/truncate.rs:765:30
    |
765 |   ...                   (((if 1 as libc::c_int != 0 {
    |  ________________________^
766 | | ...                       0 as libc::c_int as libc::c_long
767 | | ...                   } else {
768 | | ...                       ssize
769 | | ...                   }) + 0 as libc::c_int as off_t)
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:765:30
    |
765 |   ...                   (((if 1 as libc::c_int != 0 {
    |  ________________________^
766 | | ...                       0 as libc::c_int as libc::c_long
767 | | ...                   } else {
768 | | ...                       ssize
769 | | ...                   }) + 0 as libc::c_int as off_t)
    | |_____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:765:31
    |
765 |   ...                   (((if 1 as libc::c_int != 0 {
    |  _________________________^
766 | | ...                       0 as libc::c_int as libc::c_long
767 | | ...                   } else {
768 | | ...                       ssize
769 | | ...                   }) + 0 as libc::c_int as off_t)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:766:33
    |
766 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:769:34
    |
769 | ...                   }) + 0 as libc::c_int as off_t)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:770:35
    |
770 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
771 | | ...                       0 as libc::c_int as libc::c_long
772 | | ...                   } else {
773 | | ...                       (if 1 as libc::c_int != 0 {
...   |
805 | | ...                       }) - 1 as libc::c_int as libc::c_long
806 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:770:35
    |
770 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _________________________^
771 | | ...                       0 as libc::c_int as libc::c_long
772 | | ...                   } else {
773 | | ...                       (if 1 as libc::c_int != 0 {
...   |
805 | | ...                       }) - 1 as libc::c_int as libc::c_long
806 | | ...                   })) as libc::c_int
    | |________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:770:41
    |
770 |   ...                   < -(if ((if 1 as libc::c_int != 0 {
    |  _______________________________^
771 | | ...                       0 as libc::c_int as libc::c_long
772 | | ...                   } else {
773 | | ...                       (if 1 as libc::c_int != 0 {
...   |
777 | | ...                       }) + 0 as libc::c_int as off_t
778 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:771:37
    |
771 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:773:37
    |
773 | / ...                   (if 1 as libc::c_int != 0 {
774 | | ...                       0 as libc::c_int as libc::c_long
775 | | ...                   } else {
776 | | ...                       ssize
777 | | ...                   }) + 0 as libc::c_int as off_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:774:41
    |
774 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:777:42
    |
777 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:778:38
    |
778 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:779:39
    |
779 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:781:40
    |
781 |   ...                   ((((if 1 as libc::c_int != 0 {
    |  __________________________^
782 | | ...                       0 as libc::c_int as libc::c_long
783 | | ...                   } else {
784 | | ...                       (if 1 as libc::c_int != 0 {
...   |
788 | | ...                       }) + 0 as libc::c_int as off_t
789 | | ...                   }) + 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:782:41
    |
782 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:784:41
    |
784 | / ...                   (if 1 as libc::c_int != 0 {
785 | | ...                       0 as libc::c_int as libc::c_long
786 | | ...                   } else {
787 | | ...                       ssize
788 | | ...                   }) + 0 as libc::c_int as off_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:785:45
    |
785 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:788:46
    |
788 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:789:42
    |
789 | ...                   }) + 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:791:59
    |
791 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
   --> src/truncate.rs:792:59
    |
792 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:793:43
    |
793 | ...                   - 1 as libc::c_int as libc::c_long)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:794:43
    |
794 | ...                   * 2 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:795:43
    |
795 | ...                   + 1 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:797:37
    |
797 | / ...                   (if 1 as libc::c_int != 0 {
798 | | ...                       0 as libc::c_int as libc::c_long
799 | | ...                   } else {
800 | | ...                       (if 1 as libc::c_int != 0 {
...   |
804 | | ...                       }) + 0 as libc::c_int as off_t
805 | | ...                   }) - 1 as libc::c_int as libc::c_long
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:798:41
    |
798 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:800:41
    |
800 | / ...                   (if 1 as libc::c_int != 0 {
801 | | ...                       0 as libc::c_int as libc::c_long
802 | | ...                   } else {
803 | | ...                       ssize
804 | | ...                   }) + 0 as libc::c_int as off_t
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:801:45
    |
801 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:804:46
    |
804 | ...                   }) + 0 as libc::c_int as off_t
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:805:42
    |
805 | ...                   }) - 1 as libc::c_int as libc::c_long
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:808:29
    |
808 | / ...                   ((0 as libc::c_int as libc::c_long)
809 | | ...                       < (if 1 as libc::c_int != 0 {
810 | | ...                           0 as libc::c_int as libc::c_long
811 | | ...                       } else {
812 | | ...                           ssize
813 | | ...                       }) + 0 as libc::c_int as off_t) as libc::c_int
    | |________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
808 ~                             i32::from((0 as libc::c_int as libc::c_long)
809 +                                 < (if 1 as libc::c_int != 0 {
810 +                                     0 as libc::c_int as libc::c_long
811 +                                 } else {
812 +                                     ssize
813 +                                 }) + 0 as libc::c_int as off_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:808:30
    |
808 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:809:35
    |
809 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
810 | | ...                       0 as libc::c_int as libc::c_long
811 | | ...                   } else {
812 | | ...                       ssize
813 | | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:809:35
    |
809 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
810 | | ...                       0 as libc::c_int as libc::c_long
811 | | ...                   } else {
812 | | ...                       ssize
813 | | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    | |____________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:809:35
    |
809 |   ...                   < (if 1 as libc::c_int != 0 {
    |  _________________________^
810 | | ...                       0 as libc::c_int as libc::c_long
811 | | ...                   } else {
812 | | ...                       ssize
813 | | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:810:37
    |
810 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:813:38
    |
813 | ...                   }) + 0 as libc::c_int as off_t) as libc::c_int
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:814:45
    |
814 |                         }) != 0 && ssize == -(1 as libc::c_int) as libc::c_long
    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:814:45
    |
814 |                         }) != 0 && ssize == -(1 as libc::c_int) as libc::c_long
    |                                             ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:814:45
    |
814 |                         }) != 0 && ssize == -(1 as libc::c_int) as libc::c_long
    |                                             ^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
   --> src/truncate.rs:816:32
    |
816 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
817 | | ...                       0 as libc::c_int as libc::c_long
818 | | ...                   } else {
819 | | ...                       blksize
820 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:816:32
    |
816 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  __________________________^
817 | | ...                       0 as libc::c_int as libc::c_long
818 | | ...                   } else {
819 | | ...                       blksize
820 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |____________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
   --> src/truncate.rs:816:33
    |
816 |   ...                   if ((if 1 as libc::c_int != 0 {
    |  ___________________________^
817 | | ...                       0 as libc::c_int as libc::c_long
818 | | ...                   } else {
819 | | ...                       blksize
820 | | ...                   }) - 1 as libc::c_int as libc::c_long)
    | |________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:817:33
    |
817 | ...                   0 as libc::c_int as libc::c_long
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:820:34
    |
820 | ...                   }) - 1 as libc::c_int as libc::c_long)
    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:821:35
    |
821 | ...                   < 0 as libc::c_int as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:823:33
    |
823 | / ...                   ((0 as libc::c_int as libc::c_long)
824 | | ...                       < blksize + 0 as libc::c_int as off_t) as libc::c_int
    | |_______________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
823 ~                                 i32::from((0 as libc::c_int as libc::c_long)
824 +                                     < blksize + 0 as libc::c_int as off_t)
    |

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:823:34
    |
823 | ...                   ((0 as libc::c_int as libc::c_long)
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:824:39
    |
824 | ...                   < blksize + 0 as libc::c_int as off_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:824:39
    |
824 | ...                   < blksize + 0 as libc::c_int as off_t) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:824:49
    |
824 | ...                   < blksize + 0 as libc::c_int as off_t) as libc::c_int
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:826:33
    |
826 | / ...                   ((-(1 as libc::c_int) as libc::c_long
827 | | ...                       - 0 as libc::c_int as off_t)
828 | | ...                       < blksize - 1 as libc::c_int as libc::c_long) as libc::c_int
    | |______________________________________________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
    |
826 ~                                 i32::from((-(1 as libc::c_int) as libc::c_long
827 +                                     - 0 as libc::c_int as off_t)
828 +                                     < blksize - 1 as libc::c_int as libc::c_long)
    |

warning: arithmetic detected
   --> src/truncate.rs:826:34
    |
826 |   ...                   ((-(1 as libc::c_int) as libc::c_long
    |  ________________________^
827 | | ...                       - 0 as libc::c_int as off_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:826:34
    |
826 |   ...                   ((-(1 as libc::c_int) as libc::c_long
    |  ________________________^
827 | | ...                       - 0 as libc::c_int as off_t)
    | |______________________________________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:826:35
    |
826 | ...                   ((-(1 as libc::c_int) as libc::c_long
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:827:39
    |
827 | ...                   - 0 as libc::c_int as off_t)
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:828:39
    |
828 | ...                   < blksize - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:828:39
    |
828 | ...                   < blksize - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:828:49
    |
828 | ...                   < blksize - 1 as libc::c_int as libc::c_long) as libc::c_int
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:831:29
    |
831 | ...                   (0 as libc::c_int as off_t / ssize < blksize) as libc::c_int
    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(0 as libc::c_int as off_t / ssize < blksize)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:831:30
    |
831 | ...                   (0 as libc::c_int as off_t / ssize < blksize) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:831:30
    |
831 | ...                   (0 as libc::c_int as off_t / ssize < blksize) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/truncate.rs:831:30
    |
831 | ...                   (0 as libc::c_int as off_t / ssize < blksize) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:831:30
    |
831 | ...                   (0 as libc::c_int as off_t / ssize < blksize) as libc::c_int
    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:834:25
    |
834 |                         (-(1 as libc::c_int) as off_t / blksize < ssize) as libc::c_int
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(-(1 as libc::c_int) as off_t / blksize < ssize)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
   --> src/truncate.rs:834:26
    |
834 |                         (-(1 as libc::c_int) as off_t / blksize < ssize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:834:26
    |
834 |                         (-(1 as libc::c_int) as off_t / blksize < ssize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: integer division
   --> src/truncate.rs:834:26
    |
834 |                         (-(1 as libc::c_int) as off_t / blksize < ssize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: division of integers may cause loss of precision. consider using floats
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_division

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:834:26
    |
834 |                         (-(1 as libc::c_int) as off_t / blksize < ssize) as libc::c_int
    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: borrow as raw pointer
   --> src/truncate.rs:840:14
    |
840 |             *(&mut ssize as *mut off_t) = fresh4;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(ssize)`
    |
    = note: `-W clippy::borrow-as-ptr` implied by `-W clippy::pedantic`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: borrow as raw pointer
   --> src/truncate.rs:844:14
    |
844 |             *(&mut ssize as *mut off_t) = fresh6;
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::addr_of_mut!(ssize)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrow_as_ptr

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:845:13
    |
845 |             fresh7 as libc::c_int
    |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(fresh7)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: all if blocks contain the same code at the end
   --> src/truncate.rs:879:1
    |
879 | /     unreachable!();
880 | | }
    | |_^
    |
    = note: `-W clippy::branches-sharing-code` implied by `-W clippy::nursery`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#branches_sharing_code
help: consider moving these statements after the if
    |
879 + }
880 + unreachable!();
    |

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:852:17
    |
852 |         gettext(b"overflow in %jd * %td byte blocks for file %s\0" as *const u8 as *const libc::c_char),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"overflow in %jd * %td byte blocks for file %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of the `unreachable!` macro
   --> src/truncate.rs:857:5
    |
857 |     unreachable!();
    |     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/truncate.rs:859:5
    |
859 |     let __errstatus: i32 = 0;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:863:17
    |
863 |         gettext(b"overflow in %jd * %td byte blocks for file %s\0" as *const u8 as *const libc::c_char),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"overflow in %jd * %td byte blocks for file %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of the `unreachable!` macro
   --> src/truncate.rs:868:5
    |
868 |     unreachable!();
    |     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/truncate.rs:870:5
    |
870 |     let __errstatus: i32 = 0;
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `__errstatus` shadows a previous, unrelated binding
   --> src/truncate.rs:870:9
    |
870 |     let __errstatus: i32 = 0;
    |         ^^^^^^^^^^^
    |
    = note: `-W clippy::shadow-unrelated` implied by `-W clippy::restriction`
note: previous binding is here
   --> src/truncate.rs:859:9
    |
859 |     let __errstatus: i32 = 0;
    |         ^^^^^^^^^^^
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:874:17
    |
874 |         gettext(b"overflow in %jd * %td byte blocks for file %s\0" as *const u8 as *const libc::c_char),
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"overflow in %jd * %td byte blocks for file %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of the `unreachable!` macro
   --> src/truncate.rs:879:5
    |
879 |     unreachable!();
    |     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: unnecessary `!=` operation
   --> src/truncate.rs:885:5
    |
885 | /     if rel_mode as u64 != 0 {
886 | |         let mut fsize: i64 = 0;
887 | | if rsize >= 0 {
888 | |     fsize = rsize;
...   |
939 | |         nsize = ssize;
940 | |     }
    | |_____^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: casting `u32` to `u64` may become silently lossy if you later change the type
   --> src/truncate.rs:885:8
    |
885 |     if rel_mode as u64 != 0 {
    |        ^^^^^^^^^^^^^^^ help: try: `u64::from(rel_mode)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:895:21
    |
895 |             gettext(b"%s has unusable, apparently negative size\0" as *const u8 as *const libc::c_char),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"%s has unusable, apparently negative size\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:906:21
    |
906 |             gettext(b"cannot get the size of %s\0" as *const u8 as *const libc::c_char),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"cannot get the size of %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: arithmetic detected
   --> src/truncate.rs:918:13
    |
918 |     nsize = fsize - fsize % ssize;
    |             ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:918:13
    |
918 |     nsize = fsize - fsize % ssize;
    |             ^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: you are using modulo operator on types that might have different signs
   --> src/truncate.rs:918:21
    |
918 |     nsize = fsize - fsize % ssize;
    |                     ^^^^^^^^^^^^^
    |
    = note: `-W clippy::modulo-arithmetic` implied by `-W clippy::restriction`
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic detected
   --> src/truncate.rs:921:22
    |
921 |         let r: i64 = fsize % ssize;
    |                      ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:921:22
    |
921 |         let r: i64 = fsize % ssize;
    |                      ^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: you are using modulo operator on types that might have different signs
   --> src/truncate.rs:921:22
    |
921 |         let r: i64 = fsize % ssize;
    |                      ^^^^^^^^^^^^^
    |
    = note: double check for expected result especially when interoperating with different languages
    = note: or consider using `rem_euclid` or similar function
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#modulo_arithmetic

warning: arithmetic detected
   --> src/truncate.rs:922:40
    |
922 |         ssize = if r == 0 { 0 } else { ssize - r };
    |                                        ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
   --> src/truncate.rs:922:40
    |
922 |         ssize = if r == 0 { 0 } else { ssize - r };
    |                                        ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: binding to `_` prefixed variable with no side-effect
   --> src/truncate.rs:927:9
    |
927 |         let __errstatus: i32 = 0;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:931:21
    |
931 |             gettext(b"overflow extending size of file %s\0" as *const u8 as *const libc::c_char),
    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"overflow extending size of file %s\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
   --> src/truncate.rs:934:16
    |
934 |         return false as i32 != 0;
    |                ^^^^^^^^^^^^ help: try: `i32::from(false)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:941:16
    |
941 |     if nsize < 0 as libc::c_int as libc::c_long {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
   --> src/truncate.rs:942:17
    |
942 |         nsize = 0 as libc::c_int as off_t;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
   --> src/truncate.rs:945:9
    |
945 | /         if 0 != 0 {
946 | |             error(
947 | |                 0 as libc::c_int,
948 | |                 *__errno_location(),
...   |
993 | |             });
994 | |         };
    | |_________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/truncate.rs:945:12
    |
945 |         if 0 != 0 {
    |            ^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:950:21
    |
950 | /                     b"failed to truncate %s at %jd bytes\0" as *const u8
951 | |                         as *const libc::c_char,
    | |______________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"failed to truncate %s at %jd bytes\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/truncate.rs:956:13
    |
956 | /             if 0 as libc::c_int != 0 as libc::c_int {
957 | |                 unreachable!();
958 | |             } else {};
    | |_____________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
   --> src/truncate.rs:956:16
    |
956 |             if 0 as libc::c_int != 0 as libc::c_int {
    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: usage of the `unreachable!` macro
   --> src/truncate.rs:957:17
    |
957 |                 unreachable!();
    |                 ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/truncate.rs:961:17
    |
961 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:966:25
    |
966 | /                         b"failed to truncate %s at %jd bytes\0" as *const u8
967 | |                             as *const libc::c_char,
    | |__________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"failed to truncate %s at %jd bytes\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/truncate.rs:972:17
    |
972 | /                 if __errstatus != 0 as libc::c_int {
973 | |                     unreachable!();
974 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/truncate.rs:973:21
    |
973 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
   --> src/truncate.rs:978:17
    |
978 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
   --> src/truncate.rs:983:25
    |
983 | /                         b"failed to truncate %s at %jd bytes\0" as *const u8
984 | |                             as *const libc::c_char,
    | |__________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"failed to truncate %s at %jd bytes\0" as *const u8).cast::<i8>()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
   --> src/truncate.rs:989:17
    |
989 | /                 if __errstatus != 0 as libc::c_int {
990 | |                     unreachable!();
991 | |                 } else {};
    | |_________________________^
    |
    = help: change to `==` and swap the blocks of the `if`/`else`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
   --> src/truncate.rs:990:21
    |
990 |                     unreachable!();
    |                     ^^^^^^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: this boolean expression can be simplified
    --> src/truncate.rs:1024:12
     |
1024 |         if !(c != -(1 as libc::c_int)) {
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `c == -(1 as libc::c_int)`
     |
     = note: `-W clippy::nonminimal-bool` implied by `-W clippy::all`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool

warning: the function has a cognitive complexity of (49/25)
   --> src/truncate.rs:999:11
    |
999 | unsafe fn main_0(
    |           ^^^^^^
    |
    = help: you could split it up into multiple smaller functions
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cognitive_complexity

warning: this function has too many lines (489/100)
    --> src/truncate.rs:999:1
     |
999  | / unsafe fn main_0(
1000 | |     mut argc: libc::c_int,
1001 | |     mut argv: *mut *mut libc::c_char,
1002 | | ) -> libc::c_int {
...    |
1514 | |
1515 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_lines

warning: unneeded `return` statement
    --> src/truncate.rs:1513:1
     |
1513 | return if errors { 1 } else { 0 };
     | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `if errors { 1 } else { 0 }`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return

warning: default numeric fallback might occur
    --> src/truncate.rs:1024:21
     |
1024 |         if !(c != -(1 as libc::c_int)) {
     |                     ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1028:13
     |
1028 |             99 => {
     |             ^^ help: consider adding suffix: `99_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1029:29
     |
1029 |                 no_create = 1 as libc::c_int != 0;
     |                             ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1029:49
     |
1029 |                 no_create = 1 as libc::c_int != 0;
     |                                                 ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1031:13
     |
1031 |             111 => {
     |             ^^^ help: consider adding suffix: `111_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1032:30
     |
1032 |                 block_mode = 1 as libc::c_int != 0;
     |                              ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1032:50
     |
1032 |                 block_mode = 1 as libc::c_int != 0;
     |                                                  ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1034:13
     |
1034 |             114 => {
     |             ^^^ help: consider adding suffix: `114_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1037:13
     |
1037 |             115 => {
     |             ^^^ help: consider adding suffix: `115_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1040:83
     |
1040 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                                                                                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1046:21
     |
1046 |                     60 => {
     |                     ^^ help: consider adding suffix: `60_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1051:21
     |
1051 |                     62 => {
     |                     ^^ help: consider adding suffix: `62_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1056:21
     |
1056 |                     47 => {
     |                     ^^ help: consider adding suffix: `47_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1061:21
     |
1061 |                     37 => {
     |                     ^^ help: consider adding suffix: `37_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1070:83
     |
1070 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                                                                                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1079:28
     |
1079 |                         if 0 != 0 {
     |                            ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1079:33
     |
1079 |                         if 0 != 0 {
     |                                 ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1088:32
     |
1088 | ...                   if 0 as libc::c_int != 0 as libc::c_int {
     |                          ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1088:52
     |
1088 | ...                   if 0 as libc::c_int != 0 as libc::c_int {
     |                                              ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1102:51
     |
1102 | ...                   if __errstatus != 0 as libc::c_int {
     |                                         ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1117:51
     |
1117 | ...                   if __errstatus != 0 as libc::c_int {
     |                                         ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1156:8
     |
1156 |     if 0 != 0 {
     |        ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1156:13
     |
1156 |     if 0 != 0 {
     |             ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1172:27
     |
1172 |         if __errstatus != 0 {
     |                           ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1182:27
     |
1182 |         if __errstatus != 0 {
     |                           ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1190:14
     |
1190 |             -2 => {
     |              ^ help: consider adding suffix: `2_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1193:14
     |
1193 |             -3 => {
     |              ^ help: consider adding suffix: `3_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1216:12
     |
1216 |         if 0 != 0 {
     |            ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1216:17
     |
1216 |         if 0 != 0 {
     |                 ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1233:16
     |
1233 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1233:36
     |
1233 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                                    ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1255:35
     |
1255 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1278:35
     |
1278 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1286:58
     |
1286 |     if !ref_file.is_null() && got_size as libc::c_int != 0 && rel_mode as u64 == 0 {
     |                                                          ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1287:12
     |
1287 |         if 0 != 0 {
     |            ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1287:17
     |
1287 |         if 0 != 0 {
     |                 ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1304:16
     |
1304 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1304:36
     |
1304 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                                    ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1326:35
     |
1326 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1349:35
     |
1349 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1357:37
     |
1357 |     if block_mode as libc::c_int != 0 && !got_size {
     |                                     ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1358:12
     |
1358 |         if 0 != 0 {
     |            ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1358:17
     |
1358 |         if 0 != 0 {
     |                 ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1375:16
     |
1375 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1375:36
     |
1375 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                                    ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1397:35
     |
1397 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1420:35
     |
1420 |                 if __errstatus != 0 as libc::c_int {
     |                                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1428:15
     |
1428 |     if argc < 1 {
     |               ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1429:21
     |
1429 |     let errstatus = 0;
     |                     ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1431:21
     |
1431 |     if errstatus != 0 {
     |                     ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1455:22
     |
1455 |         if ref_fd >= 0 {
     |                      ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1457:88
     |
1457 |             let saved_errno = std::io::Error::last_os_error().raw_os_error().unwrap_or(0);
     |                                                                                        ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1472:70
     |
1472 |             std::io::Error::last_os_error().raw_os_error().unwrap_or(0),
     |                                                                      ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1485:14
     |
1485 | let oflags = 0o1 | if no_create { 0 } else { 0o100 } | 0o4000;
     |              ^^^ help: consider adding suffix: `0o1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1485:35
     |
1485 | let oflags = 0o1 | if no_create { 0 } else { 0o100 } | 0o4000;
     |                                   ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1485:46
     |
1485 | let oflags = 0o1 | if no_create { 0 } else { 0o100 } | 0o4000;
     |                                              ^^^^^ help: consider adding suffix: `0o100_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1485:56
     |
1485 | let oflags = 0o1 | if no_create { 0 } else { 0o100 } | 0o4000;
     |                                                        ^^^^^^ help: consider adding suffix: `0o4_000_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1497:13
     |
1497 |     if fd < 0 {
     |             ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1498:61
     |
1498 |         if !(no_create && unsafe { *__errno_location() } == 2) {
     |                                                             ^ help: consider adding suffix: `2_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1505:25
     |
1505 |         if close(fd) != 0 {
     |                         ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1513:20
     |
1513 | return if errors { 1 } else { 0 };
     |                    ^ help: consider adding suffix: `1_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: default numeric fallback might occur
    --> src/truncate.rs:1513:31
     |
1513 | return if errors { 1 } else { 0 };
     |                               ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1004:27
     |
1004 |     let mut size: off_t = 0 as libc::c_int as off_t;
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1005:28
     |
1005 |     let mut rsize: off_t = -(1 as libc::c_int) as off_t;
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
    --> src/truncate.rs:1005:28
     |
1005 |     let mut rsize: off_t = -(1 as libc::c_int) as off_t;
     |                            ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1005:28
     |
1005 |     let mut rsize: off_t = -(1 as libc::c_int) as off_t;
     |                            ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1009:33
     |
1009 |     setlocale(6 as libc::c_int, b"\0" as *const u8 as *const libc::c_char);
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1011:9
     |
1011 |         b"coreutils\0" as *const u8 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"coreutils\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1012:9
     |
1012 |         b"/usr/local/share/locale\0" as *const u8 as *const libc::c_char,
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"/usr/local/share/locale\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1014:16
     |
1014 |     textdomain(b"coreutils\0" as *const u8 as *const libc::c_char);
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"coreutils\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1020:13
     |
1020 |             b"cor:s:\0" as *const u8 as *const libc::c_char,
     |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"cor:s:\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `0 as *mut _` detected
    --> src/truncate.rs:1022:13
     |
1022 |             0 as *mut libc::c_int,
     |             ^^^^^^^^^^^^^^^^^^^^^ help: try: `std::ptr::null_mut::<libc::c_int>()`
     |
     = note: `-W clippy::zero-ptr` implied by `-W clippy::all`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_ptr

warning: arithmetic detected
    --> src/truncate.rs:1024:19
     |
1024 |         if !(c != -(1 as libc::c_int)) {
     |                   ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1024:19
     |
1024 |         if !(c != -(1 as libc::c_int)) {
     |                   ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `u16` to `i32` may become silently lossy if you later change the type
    --> src/truncate.rs:1038:23
     |
1038 |                   while *(*__ctype_b_loc())
     |  _______________________^
1039 | |                     .offset(to_uchar(*optarg) as libc::c_int as isize) as libc::c_int
     | |_____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
     |
1038 ~                 while i32::from(*(*__ctype_b_loc())
1039 +                     .offset(to_uchar(*optarg) as libc::c_int as isize))
     |

warning: casting `u8` to `i32` may become silently lossy if you later change the type
    --> src/truncate.rs:1039:29
     |
1039 |                     .offset(to_uchar(*optarg) as libc::c_int as isize) as libc::c_int
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(to_uchar(*optarg))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u16` to `i32` may become silently lossy if you later change the type
    --> src/truncate.rs:1040:23
     |
1040 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(_ISspace as libc::c_int as libc::c_ushort)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u16` may truncate the value
    --> src/truncate.rs:1040:23
     |
1040 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: `-W clippy::cast-possible-truncation` implied by `-W clippy::pedantic`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i32` to `u16` may lose the sign of the value
    --> src/truncate.rs:1040:23
     |
1040 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
    --> src/truncate.rs:1040:23
     |
1040 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: `-W clippy::cast-possible-wrap` implied by `-W clippy::pedantic`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: statement with no effect
    --> src/truncate.rs:1043:21
     |
1043 |                     optarg;
     |                     ^^^^^^^
     |
     = note: `-W clippy::no-effect` implied by `-W clippy::all`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i8` to `i32` may become silently lossy if you later change the type
    --> src/truncate.rs:1045:23
     |
1045 |                 match *optarg as libc::c_int {
     |                       ^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*optarg)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: statement with no effect
    --> src/truncate.rs:1049:25
     |
1049 |                         optarg;
     |                         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/truncate.rs:1054:25
     |
1054 |                         optarg;
     |                         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/truncate.rs:1059:25
     |
1059 |                         optarg;
     |                         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: statement with no effect
    --> src/truncate.rs:1064:25
     |
1064 |                         optarg;
     |                         ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `u16` to `i32` may become silently lossy if you later change the type
    --> src/truncate.rs:1068:23
     |
1068 |                   while *(*__ctype_b_loc())
     |  _______________________^
1069 | |                     .offset(to_uchar(*optarg) as libc::c_int as isize) as libc::c_int
     | |_____________________________________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless
help: try
     |
1068 ~                 while i32::from(*(*__ctype_b_loc())
1069 +                     .offset(to_uchar(*optarg) as libc::c_int as isize))
     |

warning: casting `u8` to `i32` may become silently lossy if you later change the type
    --> src/truncate.rs:1069:29
     |
1069 |                     .offset(to_uchar(*optarg) as libc::c_int as isize) as libc::c_int
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(to_uchar(*optarg))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u16` to `i32` may become silently lossy if you later change the type
    --> src/truncate.rs:1070:23
     |
1070 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(_ISspace as libc::c_int as libc::c_ushort)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u16` may truncate the value
    --> src/truncate.rs:1070:23
     |
1070 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `i32` to `u16` may lose the sign of the value
    --> src/truncate.rs:1070:23
     |
1070 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `u32` to `i32` may wrap around the value
    --> src/truncate.rs:1070:23
     |
1070 |                     & _ISspace as libc::c_int as libc::c_ushort as libc::c_int != 0
     |                       ^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: statement with no effect
    --> src/truncate.rs:1073:21
     |
1073 |                     optarg;
     |                     ^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect

warning: casting `i8` to `i32` may become silently lossy if you later change the type
    --> src/truncate.rs:1075:20
     |
1075 |                 if *optarg as libc::c_int == '+' as i32
     |                    ^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*optarg)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i8` to `i32` may become silently lossy if you later change the type
    --> src/truncate.rs:1076:24
     |
1076 |                     || *optarg as libc::c_int == '-' as i32
     |                        ^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(*optarg)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: missing documentation for a function
    --> src/truncate.rs:999:1
     |
999  | / unsafe fn main_0(
1000 | |     mut argc: libc::c_int,
1001 | |     mut argv: *mut *mut libc::c_char,
1002 | | ) -> libc::c_int {
...    |
1514 | |
1515 | | }
     | |_^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_docs_in_private_items

warning: casting `u32` to `u64` may become silently lossy if you later change the type
    --> src/truncate.rs:1078:24
     |
1078 |                     if rel_mode as u64 != 0 {
     |                        ^^^^^^^^^^^^^^^ help: try: `u64::from(rel_mode)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
    --> src/truncate.rs:1079:25
     |
1079 | /                         if 0 != 0 {
1080 | |                             error(
1081 | |                                 0 as libc::c_int,
1082 | |                                 0 as libc::c_int,
...    |
1121 | |                             });
1122 | |                         };
     | |_________________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
    --> src/truncate.rs:1079:28
     |
1079 |                         if 0 != 0 {
     |                            ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1084:37
     |
1084 | / ...                   b"multiple relative modifiers specified\0" as *const u8
1085 | | ...                       as *const libc::c_char,
     | |________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"multiple relative modifiers specified\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1088:29
     |
1088 | / ...                   if 0 as libc::c_int != 0 as libc::c_int {
1089 | | ...                       unreachable!();
1090 | | ...                   } else {};
     | |_______________________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
    --> src/truncate.rs:1088:32
     |
1088 | ...                   if 0 as libc::c_int != 0 as libc::c_int {
     |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1089:33
     |
1089 | ...                   unreachable!();
     |                       ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
    --> src/truncate.rs:1093:33
     |
1093 | ...                   let __errstatus: libc::c_int = 0 as libc::c_int;
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1098:41
     |
1098 | / ...                   b"multiple relative modifiers specified\0" as *const u8
1099 | | ...                       as *const libc::c_char,
     | |________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"multiple relative modifiers specified\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1102:33
     |
1102 | / ...                   if __errstatus != 0 as libc::c_int {
1103 | | ...                       unreachable!();
1104 | | ...                   } else {};
     | |_______________________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1103:37
     |
1103 | ...                   unreachable!();
     |                       ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
    --> src/truncate.rs:1108:33
     |
1108 | ...                   let __errstatus: libc::c_int = 0 as libc::c_int;
     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1113:41
     |
1113 | / ...                   b"multiple relative modifiers specified\0" as *const u8
1114 | | ...                       as *const libc::c_char,
     | |________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"multiple relative modifiers specified\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1117:33
     |
1117 | / ...                   if __errstatus != 0 as libc::c_int {
1118 | | ...                       unreachable!();
1119 | | ...                   } else {};
     | |_______________________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1118:37
     |
1118 | ...                   unreachable!();
     |                       ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1129:25
     |
1129 |                     !if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1129:55
     |
1129 |                     !if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
    --> src/truncate.rs:1129:55
     |
1129 |                     !if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                                                       ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1129:55
     |
1129 |                     !if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                                                       ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1130:25
     |
1130 |                         -(1 as libc::c_int) as off_t
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
    --> src/truncate.rs:1130:25
     |
1130 |                         -(1 as libc::c_int) as off_t
     |                         ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1130:25
     |
1130 |                         -(1 as libc::c_int) as off_t
     |                         ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
    --> src/truncate.rs:1132:25
     |
1132 | /                         (((1 as libc::c_int as off_t)
1133 | |                             << (::core::mem::size_of::<off_t>() as libc::c_ulong)
1134 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
1135 | |                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
1136 | |                             - 1 as libc::c_int as libc::c_long)
1137 | |                             * 2 as libc::c_int as libc::c_long
1138 | |                             + 1 as libc::c_int as libc::c_long
     | |______________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1132:25
     |
1132 | /                         (((1 as libc::c_int as off_t)
1133 | |                             << (::core::mem::size_of::<off_t>() as libc::c_ulong)
1134 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
1135 | |                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
1136 | |                             - 1 as libc::c_int as libc::c_long)
1137 | |                             * 2 as libc::c_int as libc::c_long
1138 | |                             + 1 as libc::c_int as libc::c_long
     | |______________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1132:27
     |
1132 |                         (((1 as libc::c_int as off_t)
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/truncate.rs:1134:47
     |
1134 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/truncate.rs:1135:47
     |
1135 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1136:31
     |
1136 | ...                   - 1 as libc::c_int as libc::c_long)
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1137:31
     |
1137 | ...                   * 2 as libc::c_int as libc::c_long
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1138:31
     |
1138 | ...                   + 1 as libc::c_int as libc::c_long
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1140:24
     |
1140 |                     if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(0 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1140:54
     |
1140 |                     if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
    --> src/truncate.rs:1140:54
     |
1140 |                     if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                                                      ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1140:54
     |
1140 |                     if (0 as libc::c_int as off_t) < -(1 as libc::c_int) as off_t {
     |                                                      ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1141:25
     |
1141 |                         -(1 as libc::c_int) as off_t
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(-(1 as libc::c_int))`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: arithmetic detected
    --> src/truncate.rs:1141:25
     |
1141 |                         -(1 as libc::c_int) as off_t
     |                         ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1141:25
     |
1141 |                         -(1 as libc::c_int) as off_t
     |                         ^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
    --> src/truncate.rs:1143:25
     |
1143 | /                         (((1 as libc::c_int as off_t)
1144 | |                             << (::core::mem::size_of::<off_t>() as libc::c_ulong)
1145 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
1146 | |                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
1147 | |                             - 1 as libc::c_int as libc::c_long)
1148 | |                             * 2 as libc::c_int as libc::c_long
1149 | |                             + 1 as libc::c_int as libc::c_long
     | |______________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1143:25
     |
1143 | /                         (((1 as libc::c_int as off_t)
1144 | |                             << (::core::mem::size_of::<off_t>() as libc::c_ulong)
1145 | |                                 .wrapping_mul(8 as libc::c_int as libc::c_ulong)
1146 | |                                 .wrapping_sub(2 as libc::c_int as libc::c_ulong))
1147 | |                             - 1 as libc::c_int as libc::c_long)
1148 | |                             * 2 as libc::c_int as libc::c_long
1149 | |                             + 1 as libc::c_int as libc::c_long
     | |______________________________________________________________^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1143:27
     |
1143 |                         (((1 as libc::c_int as off_t)
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/truncate.rs:1145:47
     |
1145 | ...                   .wrapping_mul(8 as libc::c_int as libc::c_ulong)
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `u64` may lose the sign of the value
    --> src/truncate.rs:1146:47
     |
1146 | ...                   .wrapping_sub(2 as libc::c_int as libc::c_ulong))
     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_sign_loss

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1147:31
     |
1147 | ...                   - 1 as libc::c_int as libc::c_long)
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1148:31
     |
1148 | ...                   * 2 as libc::c_int as libc::c_long
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(2 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `i32` to `i64` may become silently lossy if you later change the type
    --> src/truncate.rs:1149:31
     |
1149 | ...                   + 1 as libc::c_int as libc::c_long
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i64::from(1 as libc::c_int)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1151:21
     |
1151 |                     b"EgGkKmMPQRtTYZ0\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"EgGkKmMPQRtTYZ0\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1152:29
     |
1152 |                     gettext(b"Invalid number\0" as *const u8 as *const libc::c_char),
     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"Invalid number\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1156:5
     |
1156 | /     if 0 != 0 {
1157 | |         error(
1158 | |             1,
1159 | |             0,
...    |
1184 | |         }
1185 | |     }
     | |_____^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
    --> src/truncate.rs:1156:8
     |
1156 |     if 0 != 0 {
     |        ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1160:21
     |
1160 |             gettext(b"division by zero\0".as_ptr() as *const libc::c_char),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"division by zero\0".as_ptr().cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1163:13
     |
1163 |             unreachable!();
     |             ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
    --> src/truncate.rs:1166:9
     |
1166 |         let __errstatus: i32 = 1;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1170:21
     |
1170 |             gettext(b"division by zero\0".as_ptr() as *const libc::c_char),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"division by zero\0".as_ptr().cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1173:13
     |
1173 |             unreachable!();
     |             ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
    --> src/truncate.rs:1176:9
     |
1176 |         let __errstatus: i32 = 1;
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `__errstatus` shadows a previous, unrelated binding
    --> src/truncate.rs:1176:13
     |
1176 |         let __errstatus: i32 = 1;
     |             ^^^^^^^^^^^
     |
note: previous binding is here
    --> src/truncate.rs:1166:13
     |
1166 |         let __errstatus: i32 = 1;
     |             ^^^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1180:21
     |
1180 |             gettext(b"division by zero\0".as_ptr() as *const libc::c_char),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"division by zero\0".as_ptr().cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1183:13
     |
1183 |             unreachable!();
     |             ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: used `unwrap()` on `a Result` value
    --> src/truncate.rs:1196:5
     |
1196 |     CString::new("truncate").unwrap().as_ptr(),
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on `a Result` value
    --> src/truncate.rs:1197:5
     |
1197 |     CString::new("GNU coreutils").unwrap().as_ptr(),
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on `a Result` value
    --> src/truncate.rs:1200:9
     |
1200 |         CString::new("Padraig Brady").unwrap().as_ptr(),
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: used `unwrap()` on `a Result` value
    --> src/truncate.rs:1201:9
     |
1201 |         CString::new("Pádraig Brady").unwrap().as_ptr(),
     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: literal non-ASCII character detected
    --> src/truncate.rs:1201:22
     |
1201 |         CString::new("Pádraig Brady").unwrap().as_ptr(),
     |                      ^^^^^^^^^^^^^^^ help: consider replacing the string with: `"P\u{e1}draig Brady"`
     |
     = note: `-W clippy::non-ascii-literal` implied by `-W clippy::restriction`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_ascii_literal

warning: used import from `std` instead of `core`
    --> src/truncate.rs:1203:5
     |
1203 |     std::ptr::null_mut::<libc::c_char>(),
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: usage of `process::exit`
    --> src/truncate.rs:1205:1
     |
1205 | std::process::exit(0);
     | ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exit

warning: arithmetic detected
    --> src/truncate.rs:1214:5
     |
1214 |     argc -= optind;
     |     ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1214:5
     |
1214 |     argc -= optind;
     |     ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unnecessary `!=` operation
    --> src/truncate.rs:1216:9
     |
1216 | /         if 0 != 0 {
1217 | |             error(
1218 | |                 0 as libc::c_int,
1219 | |                 0 as libc::c_int,
...    |
1282 | |             });
1283 | |         };
     | |_________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
    --> src/truncate.rs:1216:12
     |
1216 |         if 0 != 0 {
     |            ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1221:21
     |
1221 | /                     b"you must specify either %s or %s\0" as *const u8
1222 | |                         as *const libc::c_char,
     | |______________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"you must specify either %s or %s\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1226:21
     |
1226 |                     b"--size\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--size\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1230:21
     |
1230 |                     b"--reference\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--reference\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1233:13
     |
1233 | /             if 0 as libc::c_int != 0 as libc::c_int {
1234 | |                 unreachable!();
1235 | |             } else {};
     | |_____________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
    --> src/truncate.rs:1233:16
     |
1233 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1234:17
     |
1234 |                 unreachable!();
     |                 ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
    --> src/truncate.rs:1238:17
     |
1238 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1243:25
     |
1243 | /                         b"you must specify either %s or %s\0" as *const u8
1244 | |                             as *const libc::c_char,
     | |__________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"you must specify either %s or %s\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1248:25
     |
1248 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--size\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1252:25
     |
1252 |                         b"--reference\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--reference\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1255:17
     |
1255 | /                 if __errstatus != 0 as libc::c_int {
1256 | |                     unreachable!();
1257 | |                 } else {};
     | |_________________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1256:21
     |
1256 |                     unreachable!();
     |                     ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
    --> src/truncate.rs:1261:17
     |
1261 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1266:25
     |
1266 | /                         b"you must specify either %s or %s\0" as *const u8
1267 | |                             as *const libc::c_char,
     | |__________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"you must specify either %s or %s\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1271:25
     |
1271 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--size\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1275:25
     |
1275 |                         b"--reference\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--reference\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1278:17
     |
1278 | /                 if __errstatus != 0 as libc::c_int {
1279 | |                     unreachable!();
1280 | |                 } else {};
     | |_________________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1279:21
     |
1279 |                     unreachable!();
     |                     ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
    --> src/truncate.rs:1286:31
     |
1286 |     if !ref_file.is_null() && got_size as libc::c_int != 0 && rel_mode as u64 == 0 {
     |                               ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(got_size)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: casting `u32` to `u64` may become silently lossy if you later change the type
    --> src/truncate.rs:1286:63
     |
1286 |     if !ref_file.is_null() && got_size as libc::c_int != 0 && rel_mode as u64 == 0 {
     |                                                               ^^^^^^^^^^^^^^^ help: try: `u64::from(rel_mode)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
    --> src/truncate.rs:1287:9
     |
1287 | /         if 0 != 0 {
1288 | |             error(
1289 | |                 0 as libc::c_int,
1290 | |                 0 as libc::c_int,
...    |
1353 | |             });
1354 | |         };
     | |_________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
    --> src/truncate.rs:1287:12
     |
1287 |         if 0 != 0 {
     |            ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1292:21
     |
1292 | /                     b"you must specify a relative %s with %s\0" as *const u8
1293 | |                         as *const libc::c_char,
     | |______________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"you must specify a relative %s with %s\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1297:21
     |
1297 |                     b"--size\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--size\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1301:21
     |
1301 |                     b"--reference\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--reference\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1304:13
     |
1304 | /             if 0 as libc::c_int != 0 as libc::c_int {
1305 | |                 unreachable!();
1306 | |             } else {};
     | |_____________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
    --> src/truncate.rs:1304:16
     |
1304 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1305:17
     |
1305 |                 unreachable!();
     |                 ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
    --> src/truncate.rs:1309:17
     |
1309 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1314:25
     |
1314 | /                         b"you must specify a relative %s with %s\0" as *const u8
1315 | |                             as *const libc::c_char,
     | |__________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"you must specify a relative %s with %s\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1319:25
     |
1319 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--size\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1323:25
     |
1323 |                         b"--reference\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--reference\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1326:17
     |
1326 | /                 if __errstatus != 0 as libc::c_int {
1327 | |                     unreachable!();
1328 | |                 } else {};
     | |_________________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1327:21
     |
1327 |                     unreachable!();
     |                     ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
    --> src/truncate.rs:1332:17
     |
1332 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1337:25
     |
1337 | /                         b"you must specify a relative %s with %s\0" as *const u8
1338 | |                             as *const libc::c_char,
     | |__________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"you must specify a relative %s with %s\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1342:25
     |
1342 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--size\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1346:25
     |
1346 |                         b"--reference\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--reference\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1349:17
     |
1349 | /                 if __errstatus != 0 as libc::c_int {
1350 | |                     unreachable!();
1351 | |                 } else {};
     | |_________________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1350:21
     |
1350 |                     unreachable!();
     |                     ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: casting `bool` to `i32` is more cleanly stated with `i32::from(_)`
    --> src/truncate.rs:1357:8
     |
1357 |     if block_mode as libc::c_int != 0 && !got_size {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `i32::from(block_mode)`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_lossless

warning: unnecessary `!=` operation
    --> src/truncate.rs:1358:9
     |
1358 | /         if 0 != 0 {
1359 | |             error(
1360 | |                 0 as libc::c_int,
1361 | |                 0 as libc::c_int,
...    |
1424 | |             });
1425 | |         };
     | |_________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
    --> src/truncate.rs:1358:12
     |
1358 |         if 0 != 0 {
     |            ^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1363:21
     |
1363 | /                     b"%s was specified but %s was not\0" as *const u8
1364 | |                         as *const libc::c_char,
     | |______________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"%s was specified but %s was not\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1368:21
     |
1368 |                     b"--io-blocks\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--io-blocks\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1372:21
     |
1372 |                     b"--size\0" as *const u8 as *const libc::c_char,
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--size\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1375:13
     |
1375 | /             if 0 as libc::c_int != 0 as libc::c_int {
1376 | |                 unreachable!();
1377 | |             } else {};
     | |_____________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: equal expressions as operands to `!=`
    --> src/truncate.rs:1375:16
     |
1375 |             if 0 as libc::c_int != 0 as libc::c_int {
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#eq_op

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1376:17
     |
1376 |                 unreachable!();
     |                 ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
    --> src/truncate.rs:1380:17
     |
1380 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1385:25
     |
1385 | /                         b"%s was specified but %s was not\0" as *const u8
1386 | |                             as *const libc::c_char,
     | |__________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"%s was specified but %s was not\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1390:25
     |
1390 |                         b"--io-blocks\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--io-blocks\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1394:25
     |
1394 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--size\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1397:17
     |
1397 | /                 if __errstatus != 0 as libc::c_int {
1398 | |                     unreachable!();
1399 | |                 } else {};
     | |_________________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1398:21
     |
1398 |                     unreachable!();
     |                     ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: binding to `_` prefixed variable with no side-effect
    --> src/truncate.rs:1403:17
     |
1403 |                 let __errstatus: libc::c_int = 0 as libc::c_int;
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1408:25
     |
1408 | /                         b"%s was specified but %s was not\0" as *const u8
1409 | |                             as *const libc::c_char,
     | |__________________________________________________^ help: try `pointer::cast`, a safer alternative: `(b"%s was specified but %s was not\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1413:25
     |
1413 |                         b"--io-blocks\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--io-blocks\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1417:25
     |
1417 |                         b"--size\0" as *const u8 as *const libc::c_char,
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"--size\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary `!=` operation
    --> src/truncate.rs:1420:17
     |
1420 | /                 if __errstatus != 0 as libc::c_int {
1421 | |                     unreachable!();
1422 | |                 } else {};
     | |_________________________^
     |
     = help: change to `==` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1421:21
     |
1421 |                     unreachable!();
     |                     ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1430:33
     |
1430 |     error(errstatus, 0, gettext(b"missing file operand\0".as_ptr() as *const libc::c_char));
     |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `b"missing file operand\0".as_ptr().cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: usage of the `unreachable!` macro
    --> src/truncate.rs:1432:9
     |
1432 |         unreachable!();
     |         ^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unreachable

warning: unsafe block missing a safety comment
    --> src/truncate.rs:1438:24
     |
1438 |     let ref_file_str = unsafe { std::ffi::CStr::from_ptr(ref_file) };
     |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: used import from `std` instead of `core`
    --> src/truncate.rs:1438:33
     |
1438 |     let ref_file_str = unsafe { std::ffi::CStr::from_ptr(ref_file) };
     |                                 ^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used `unwrap()` on `a Result` value
    --> src/truncate.rs:1439:25
     |
1439 |     let ref_file_path = ref_file_str.to_str().unwrap();
     |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: if you don't want to handle the `Err` case gracefully, consider using `expect()` to provide a better panic message
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unwrap_used

warning: default numeric fallback might occur
    --> src/truncate.rs:1444:40
     |
1444 |             e.raw_os_error().unwrap_or(0),
     |                                        ^ help: consider adding suffix: `0_i32`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#default_numeric_fallback

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1445:21
     |
1445 |             gettext(b"cannot stat %s\0" as *const u8 as *const libc::c_char),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"cannot stat %s\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: casting `u64` to `i64` may wrap around the value
    --> src/truncate.rs:1452:21
     |
1452 |         file_size = metadata.len() as i64;
     |                     ^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: unsafe block missing a safety comment
    --> src/truncate.rs:1456:28
     |
1456 |             let file_end = unsafe { lseek(ref_fd, 0, 2) };
     |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: unsafe block missing a safety comment
    --> src/truncate.rs:1458:13
     |
1458 |             unsafe { close(ref_fd) };
     |             ^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: usage of `process::exit`
    --> src/truncate.rs:1464:17
     |
1464 |                 std::process::exit(saved_errno);
     |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exit

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1473:21
     |
1473 |             gettext(b"cannot get the size of %s\0" as *const u8 as *const libc::c_char),
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"cannot get the size of %s\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unnecessary boolean `not` operation
    --> src/truncate.rs:1478:5
     |
1478 | /     if !got_size {
1479 | |         size = file_size;
1480 | |     } else {
1481 | |         rsize = file_size;
1482 | |     }
     | |_____^
     |
     = help: remove the `!` and swap the blocks of the `if`/`else`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#if_not_else

warning: used import from `std` instead of `core`
    --> src/truncate.rs:1487:38
     |
1487 | let mut fname: *const libc::c_char = std::ptr::null();
     |                                      ^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
    --> src/truncate.rs:1490:23
     |
1490 |     let fname = match unsafe { *argv } {
     |                       ^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `fname` shadows a previous, unrelated binding
    --> src/truncate.rs:1490:9
     |
1490 |     let fname = match unsafe { *argv } {
     |         ^^^^^
     |
note: previous binding is here
    --> src/truncate.rs:1487:5
     |
1487 | let mut fname: *const libc::c_char = std::ptr::null();
     |     ^^^^^^^^^
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#shadow_unrelated

warning: arithmetic detected
    --> src/truncate.rs:1495:50
     |
1495 |     let fd = open(fname, oflags, 0o400 | 0o200 | 0o400 >> 3 | 0o200 >> 3 | 0o400 >> 6 | 0o200 >> 6);
     |                                                  ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1495:50
     |
1495 |     let fd = open(fname, oflags, 0o400 | 0o200 | 0o400 >> 3 | 0o200 >> 3 | 0o400 >> 6 | 0o200 >> 6);
     |                                                  ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
    --> src/truncate.rs:1495:63
     |
1495 |     let fd = open(fname, oflags, 0o400 | 0o200 | 0o400 >> 3 | 0o200 >> 3 | 0o400 >> 6 | 0o200 >> 6);
     |                                                               ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1495:63
     |
1495 |     let fd = open(fname, oflags, 0o400 | 0o200 | 0o400 >> 3 | 0o200 >> 3 | 0o400 >> 6 | 0o200 >> 6);
     |                                                               ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
    --> src/truncate.rs:1495:76
     |
1495 |     let fd = open(fname, oflags, 0o400 | 0o200 | 0o400 >> 3 | 0o200 >> 3 | 0o400 >> 6 | 0o200 >> 6);
     |                                                                            ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1495:76
     |
1495 |     let fd = open(fname, oflags, 0o400 | 0o200 | 0o400 >> 3 | 0o200 >> 3 | 0o400 >> 6 | 0o200 >> 6);
     |                                                                            ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: arithmetic detected
    --> src/truncate.rs:1495:89
     |
1495 |     let fd = open(fname, oflags, 0o400 | 0o200 | 0o400 >> 3 | 0o200 >> 3 | 0o400 >> 6 | 0o200 >> 6);
     |                                                                                         ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#arithmetic

warning: integer arithmetic detected
    --> src/truncate.rs:1495:89
     |
1495 |     let fd = open(fname, oflags, 0o400 | 0o200 | 0o400 >> 3 | 0o200 >> 3 | 0o400 >> 6 | 0o200 >> 6);
     |                                                                                         ^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#integer_arithmetic

warning: unsafe block missing a safety comment
    --> src/truncate.rs:1498:27
     |
1498 |         if !(no_create && unsafe { *__errno_location() } == 2) {
     |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1499:41
     |
1499 |             let error_message = gettext(b"cannot open %s for writing\0" as *const u8 as *const libc::c_char);
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"cannot open %s for writing\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
    --> src/truncate.rs:1500:22
     |
1500 |             error(0, unsafe { *__errno_location() }, error_message, quotearg_style(shell_escape_always_quoting_style, fname));
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: `as` casting between raw pointers without changing its mutability
    --> src/truncate.rs:1506:41
     |
1506 |             let error_message = gettext(b"failed to close %s\0" as *const u8 as *const libc::c_char);
     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `pointer::cast`, a safer alternative: `(b"failed to close %s\0" as *const u8).cast::<i8>()`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_as_ptr

warning: unsafe block missing a safety comment
    --> src/truncate.rs:1507:22
     |
1507 |             error(0, unsafe { *__errno_location() }, error_message, quotearg_style(shell_escape_always_quoting_style, fname));
     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: missing `return` statement
    --> src/truncate.rs:1518:20
     |
1518 |         .map(|arg| CString::new(arg).expect("Failed to convert argument into CString."))
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return CString::new(arg).expect("Failed to convert argument into CString.")`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used `expect()` on `a Result` value
    --> src/truncate.rs:1518:20
     |
1518 |         .map(|arg| CString::new(arg).expect("Failed to convert argument into CString."))
     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = note: `-W clippy::expect-used` implied by `-W clippy::restriction`
     = help: if this value is an `Err`, it will panic
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#expect_used

warning: casting `usize` to `i32` may truncate the value on targets with 64-bit wide pointers
    --> src/truncate.rs:1521:16
     |
1521 |     let argc = args.len() as libc::c_int;
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_truncation

warning: casting `usize` to `i32` may wrap around the value on targets with 32-bit wide pointers
    --> src/truncate.rs:1521:16
     |
1521 |     let argc = args.len() as libc::c_int;
     |                ^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#cast_possible_wrap

warning: missing `return` statement
    --> src/truncate.rs:1523:21
     |
1523 |         .map(|cstr| cstr.as_ptr() as *mut libc::c_char)
     |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: add `return` as shown: `return cstr.as_ptr() as *mut libc::c_char`
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#implicit_return

warning: used import from `std` instead of `core`
    --> src/truncate.rs:1524:16
     |
1524 |         .chain(std::iter::once(std::ptr::null_mut()))
     |                ^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: used import from `std` instead of `core`
    --> src/truncate.rs:1524:32
     |
1524 |         .chain(std::iter::once(std::ptr::null_mut()))
     |                                ^^^^^^^^^^^^^^^^^^
     |
     = help: consider importing the item from `core`
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#std_instead_of_core

warning: unsafe block missing a safety comment
    --> src/truncate.rs:1527:18
     |
1527 |     let status = unsafe { main_0(argc, argv.as_ptr() as *mut *mut libc::c_char) };
     |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: consider adding a safety comment on the preceding line
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks

warning: usage of `process::exit`
    --> src/truncate.rs:1528:5
     |
1528 |     ::std::process::exit(status as i32);
     |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
     |
     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#exit

warning: path statement with no effect
    --> src/truncate.rs:1043:21
     |
1043 |                     optarg;
     |                     ^^^^^^^
     |
     = note: `#[warn(path_statements)]` on by default

warning: path statement with no effect
    --> src/truncate.rs:1049:25
     |
1049 |                         optarg;
     |                         ^^^^^^^

warning: path statement with no effect
    --> src/truncate.rs:1054:25
     |
1054 |                         optarg;
     |                         ^^^^^^^

warning: path statement with no effect
    --> src/truncate.rs:1059:25
     |
1059 |                         optarg;
     |                         ^^^^^^^

warning: path statement with no effect
    --> src/truncate.rs:1064:25
     |
1064 |                         optarg;
     |                         ^^^^^^^

warning: path statement with no effect
    --> src/truncate.rs:1073:21
     |
1073 |                     optarg;
     |                     ^^^^^^^

warning: getting the inner pointer of a temporary `CString`
    --> src/truncate.rs:1196:39
     |
1196 |     CString::new("truncate").unwrap().as_ptr(),
     |     --------------------------------- ^^^^^^ this pointer will be invalid
     |     |
     |     this `CString` is deallocated at the end of the statement, bind it to a variable to extend its lifetime
     |
     = note: `#[warn(temporary_cstring_as_ptr)]` on by default
     = note: pointers do not have a lifetime; when calling `as_ptr` the `CString` will be deallocated at the end of the statement because nothing is referencing it as far as the type system is concerned
     = help: for more information, see https://doc.rust-lang.org/reference/destructors.html

warning: getting the inner pointer of a temporary `CString`
    --> src/truncate.rs:1197:44
     |
1197 |     CString::new("GNU coreutils").unwrap().as_ptr(),
     |     -------------------------------------- ^^^^^^ this pointer will be invalid
     |     |
     |     this `CString` is deallocated at the end of the statement, bind it to a variable to extend its lifetime
     |
     = note: pointers do not have a lifetime; when calling `as_ptr` the `CString` will be deallocated at the end of the statement because nothing is referencing it as far as the type system is concerned
     = help: for more information, see https://doc.rust-lang.org/reference/destructors.html

warning: getting the inner pointer of a temporary `CString`
    --> src/truncate.rs:1200:48
     |
1200 |         CString::new("Padraig Brady").unwrap().as_ptr(),
     |         -------------------------------------- ^^^^^^ this pointer will be invalid
     |         |
     |         this `CString` is deallocated at the end of the statement, bind it to a variable to extend its lifetime
     |
     = note: pointers do not have a lifetime; when calling `as_ptr` the `CString` will be deallocated at the end of the statement because nothing is referencing it as far as the type system is concerned
     = help: for more information, see https://doc.rust-lang.org/reference/destructors.html

warning: getting the inner pointer of a temporary `CString`
    --> src/truncate.rs:1201:48
     |
1201 |         CString::new("Pádraig Brady").unwrap().as_ptr(),
     |         -------------------------------------- ^^^^^^ this pointer will be invalid
     |         |
     |         this `CString` is deallocated at the end of the statement, bind it to a variable to extend its lifetime
     |
     = note: pointers do not have a lifetime; when calling `as_ptr` the `CString` will be deallocated at the end of the statement because nothing is referencing it as far as the type system is concerned
     = help: for more information, see https://doc.rust-lang.org/reference/destructors.html

warning: `rust` (bin "truncate" test) generated 1751 warnings (743 duplicates)
warning: `rust` (bin "truncate") generated 1875 warnings (1007 duplicates)
    Finished dev [unoptimized + debuginfo] target(s) in 18.56s
